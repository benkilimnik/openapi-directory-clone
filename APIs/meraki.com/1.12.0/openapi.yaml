basePath: /api/v1
host: api.meraki.com
info:
  contact:
    x-twitter: meraki
  description: >
    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI
    specification.


    > Date: 04 August, 2021

    >

    > [What's New](https://meraki.io/whats-new/)


    ---


    [API Documentation](https://meraki.io/api)


    [Community Support](https://meraki.io/community)


    [Meraki Homepage](https://www.meraki.com)
  title: Meraki Dashboard API
  version: 1.12.0
  x-apisguru-categories:
    - iot
    - enterprise
  x-logo:
    url: 'https://n140.meraki.com/images/cisco-meraki.png'
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/meraki/openapi/master/openapi/spec2.json
      version: '3.0'
  x-preferred: false
  x-providerName: meraki.com
paths:
  '/devices/{serial}':
    get:
      description: Return a single device
      operationId: getDevice
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a single device
      tags:
        - devices
        - configure
    put:
      consumes:
        - application/json
      description: Update the attributes of a device
      operationId: updateDevice
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              lat: 37.4180951010362
              lng: -122.098531723022
              mac: '00:11:22:33:44:55'
              name: My AP
              serial: Q234-ABCD-5678
              tags:
                - recently-added
            properties:
              address:
                description: The address of a device
                type: string
              floorPlanId:
                description: >-
                  The floor plan to associate to this device. null disassociates
                  the device from the floorplan.
                type: string
              lat:
                description: The latitude of a device
                format: float
                type: number
              lng:
                description: The longitude of a device
                format: float
                type: number
              moveMapMarker:
                description: >-
                  Whether or not to set the latitude and longitude of a device
                  based on the new address. Only applies when lat and lng are
                  not specified.
                type: boolean
              name:
                description: The name of a device
                type: string
              notes:
                description: The notes for the device. String. Limited to 255 characters.
                type: string
              switchProfileId:
                description: >-
                  The ID of a switch profile to bind to the device (for
                  available switch profiles, see the 'Switch Profiles'
                  endpoint). Use null to unbind the switch device from the
                  current profile. For a device to be bindable to a switch
                  profile, it must (1) be a switch, and (2) belong to a network
                  that is bound to a configuration template.
                type: string
              tags:
                description: The list of tags of a device
                items:
                  type: string
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the attributes of a device
      tags:
        - devices
        - configure
  '/devices/{serial}/appliance/dhcp/subnets':
    get:
      description: Return the DHCP subnet information for an appliance
      operationId: getDeviceApplianceDhcpSubnets
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the DHCP subnet information for an appliance
      tags:
        - appliance
        - monitor
        - dhcp
        - subnets
  '/devices/{serial}/appliance/performance':
    get:
      description: >-
        Return the performance score for a single MX. Only primary MX devices
        supported. If no data is available, a 204 error code is returned.
      operationId: getDeviceAppliancePerformance
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the performance score for a single MX
      tags:
        - appliance
        - monitor
        - performance
  '/devices/{serial}/blinkLeds':
    post:
      consumes:
        - application/json
      description: Blink the LEDs on a device
      operationId: blinkDeviceLeds
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              duration: 20
              duty: 50
              period: 160
            properties:
              duration:
                description: >-
                  The duration in seconds. Must be between 5 and 120. Default is
                  20 seconds
                type: integer
              duty:
                description: >-
                  The duty cycle as the percent active. Must be between 10 and
                  90. Default is 50.
                type: integer
              period:
                description: >-
                  The period in milliseconds. Must be between 100 and 1000.
                  Default is 160 milliseconds
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Successful operation
          schema:
            type: object
      summary: Blink the LEDs on a device
      tags:
        - devices
        - liveTools
  '/devices/{serial}/camera/analytics/live':
    get:
      description: Returns live state from camera of analytics zones
      operationId: getDeviceCameraAnalyticsLive
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns live state from camera of analytics zones
      tags:
        - camera
        - monitor
        - analytics
        - live
  '/devices/{serial}/camera/analytics/overview':
    get:
      description: Returns an overview of aggregate analytics data for a timespan
      operationId: getDeviceCameraAnalyticsOverview
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 365 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days. The default
            is 1 hour.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            [optional] The object type for which analytics will be retrieved.
            The default object type is person. The available types are [person,
            vehicle].
          enum:
            - person
            - vehicle
          in: query
          name: objectType
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns an overview of aggregate analytics data for a timespan
      tags:
        - camera
        - monitor
        - analytics
        - overview
  '/devices/{serial}/camera/analytics/recent':
    get:
      description: Returns most recent record for analytics zones
      operationId: getDeviceCameraAnalyticsRecent
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            [optional] The object type for which analytics will be retrieved.
            The default object type is person. The available types are [person,
            vehicle].
          enum:
            - person
            - vehicle
          in: query
          name: objectType
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns most recent record for analytics zones
      tags:
        - camera
        - monitor
        - analytics
        - recent
  '/devices/{serial}/camera/analytics/zones':
    get:
      description: Returns all configured analytic zones for this camera
      operationId: getDeviceCameraAnalyticsZones
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns all configured analytic zones for this camera
      tags:
        - camera
        - monitor
        - analytics
        - zones
  '/devices/{serial}/camera/analytics/zones/{zoneId}/history':
    get:
      description: Return historical records for analytic zones
      operationId: getDeviceCameraAnalyticsZoneHistory
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: zoneId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 365 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 14
            hours after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 14 hours. The
            default is 1 hour.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 60. The default is 60.
          in: query
          name: resolution
          type: integer
        - description: >-
            [optional] The object type for which analytics will be retrieved.
            The default object type is person. The available types are [person,
            vehicle].
          enum:
            - person
            - vehicle
          in: query
          name: objectType
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return historical records for analytic zones
      tags:
        - camera
        - monitor
        - analytics
        - zones
        - history
  '/devices/{serial}/camera/generateSnapshot':
    post:
      consumes:
        - application/json
      description: >-
        Generate a snapshot of what the camera sees at the specified time and
        return a link to that image.
      operationId: generateDeviceCameraSnapshot
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              fullframe:
                description: >-
                  [optional] If set to "true" the snapshot will be taken at full
                  sensor resolution. This will error if used with timestamp.
                type: boolean
              timestamp:
                description: >-
                  [optional] The snapshot will be taken from this time on the
                  camera. The timestamp is expected to be in ISO 8601 format. If
                  no timestamp is specified, we will assume current time.
                format: date-time
                type: string
            type: object
      produces:
        - application/json
      responses:
        '202':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Generate a snapshot of what the camera sees at the specified time and
        return a link to that image.
      tags:
        - camera
        - monitor
  '/devices/{serial}/camera/qualityAndRetention':
    get:
      description: Returns quality and retention settings for the given camera
      operationId: getDeviceCameraQualityAndRetention
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns quality and retention settings for the given camera
      tags:
        - camera
        - configure
        - qualityAndRetention
    put:
      consumes:
        - application/json
      description: Update quality and retention settings for the given camera
      operationId: updateDeviceCameraQualityAndRetention
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              audioRecordingEnabled: false
              motionBasedRetentionEnabled: false
              motionDetectorVersion: 2
              profileId: null
              quality: Standard
              resolution: 720
              restrictedBandwidthModeEnabled: false
            properties:
              audioRecordingEnabled:
                description: >-
                  Boolean indicating if audio recording is enabled(true) or
                  disabled(false) on the camera
                type: boolean
              motionBasedRetentionEnabled:
                description: >-
                  Boolean indicating if motion-based retention is enabled(true)
                  or disabled(false) on the camera.
                type: boolean
              motionDetectorVersion:
                description: >-
                  The version of the motion detector that will be used by the
                  camera. Only applies to Gen 2 cameras. Defaults to v2.
                enum:
                  - 1
                  - 2
                type: integer
              profileId:
                description: >-
                  The ID of a quality and retention profile to assign to the
                  camera. The profile's settings will override all of the
                  per-camera quality and retention settings. If the value of
                  this parameter is null, any existing profile will be
                  unassigned from the camera.
                type: string
              quality:
                description: >-
                  Quality of the camera. Can be one of 'Standard', 'High' or
                  'Enhanced'. Not all qualities are supported by every camera
                  model.
                enum:
                  - Standard
                  - High
                  - Enhanced
                type: string
              resolution:
                description: >-
                  Resolution of the camera. Can be one of '1280x720',
                  '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions
                  are supported by every camera model.
                enum:
                  - 1280x720
                  - 1920x1080
                  - 1080x1080
                  - 2058x2058
                type: string
              restrictedBandwidthModeEnabled:
                description: >-
                  Boolean indicating if restricted bandwidth is enabled(true) or
                  disabled(false) on the camera. This setting does not apply to
                  MV2 cameras.
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update quality and retention settings for the given camera
      tags:
        - camera
        - configure
        - qualityAndRetention
  '/devices/{serial}/camera/sense':
    get:
      description: Returns sense settings for a given camera
      operationId: getDeviceCameraSense
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns sense settings for a given camera
      tags:
        - camera
        - configure
        - sense
    put:
      consumes:
        - application/json
      description: Update sense settings for the given camera
      operationId: updateDeviceCameraSense
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              audioDetection:
                enabled: false
              mqttBrokerId: '1234'
              senseEnabled: true
            properties:
              audioDetection:
                description: The details of the audio detection config.
                properties:
                  enabled:
                    description: >-
                      Boolean indicating if audio detection is enabled(true) or
                      disabled(false) on the camera
                    type: boolean
                type: object
              detectionModelId:
                description: The ID of the object detection model
                type: string
              mqttBrokerId:
                description: >-
                  The ID of the MQTT broker to be enabled on the camera. A value
                  of null will disable MQTT on the camera
                type: string
              senseEnabled:
                description: >-
                  Boolean indicating if sense(license) is enabled(true) or
                  disabled(false) on the camera
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update sense settings for the given camera
      tags:
        - camera
        - configure
        - sense
  '/devices/{serial}/camera/sense/objectDetectionModels':
    get:
      description: Returns the MV Sense object detection model list for the given camera
      operationId: getDeviceCameraSenseObjectDetectionModels
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the MV Sense object detection model list for the given camera
      tags:
        - camera
        - configure
        - sense
        - objectDetectionModels
  '/devices/{serial}/camera/video/settings':
    get:
      description: Returns video settings for the given camera
      operationId: getDeviceCameraVideoSettings
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns video settings for the given camera
      tags:
        - camera
        - configure
        - video
        - settings
    put:
      consumes:
        - application/json
      description: Update video settings for the given camera
      operationId: updateDeviceCameraVideoSettings
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              externalRtspEnabled: true
            properties:
              externalRtspEnabled:
                description: Boolean indicating if external rtsp stream is exposed
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update video settings for the given camera
      tags:
        - camera
        - configure
        - video
        - settings
  '/devices/{serial}/camera/videoLink':
    get:
      description: >-
        Returns video link to the specified camera. If a timestamp is supplied,
        it links to that timestamp.
      operationId: getDeviceCameraVideoLink
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            [optional] The video link will start at this time. The timestamp
            should be a string in ISO8601 format. If no timestamp is specified,
            we will assume current time.
          format: date-time
          in: query
          name: timestamp
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns video link to the specified camera
      tags:
        - camera
        - configure
        - videoLink
  '/devices/{serial}/camera/wirelessProfiles':
    get:
      description: Returns wireless profile assigned to the given camera
      operationId: getDeviceCameraWirelessProfiles
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns wireless profile assigned to the given camera
      tags:
        - camera
        - configure
        - wirelessProfiles
    put:
      consumes:
        - application/json
      description: >-
        Assign wireless profiles to the given camera. Incremental updates are
        not supported, all profile assignment need to be supplied at once.
      operationId: updateDeviceCameraWirelessProfiles
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              ids:
                backup: '1'
                primary: '3'
                secondary: '2'
            properties:
              ids:
                description: The ids of the wireless profile to assign to the given camera
                properties:
                  backup:
                    description: The id of the backup wireless profile
                    type: string
                  primary:
                    description: The id of the primary wireless profile
                    type: string
                  secondary:
                    description: The id of the secondary wireless profile
                    type: string
                type: object
            required:
              - ids
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Assign wireless profiles to the given camera
      tags:
        - camera
        - configure
        - wirelessProfiles
  '/devices/{serial}/cellularGateway/lan':
    get:
      description: Show the LAN Settings of a MG
      operationId: getDeviceCellularGatewayLan
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Show the LAN Settings of a MG
      tags:
        - cellularGateway
        - configure
        - lan
    put:
      consumes:
        - application/json
      description: Update the LAN Settings for a single MG.
      operationId: updateDeviceCellularGatewayLan
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              deviceLanIp: 192.168.0.33
              deviceName: name of the MG
              deviceSubnet: 192.168.0.32/27
              fixedIpAssignments:
                - ip: 192.168.0.10
                  mac: '0b:00:00:00:00:ac'
                  name: server 1
                - ip: 192.168.0.20
                  mac: '0b:00:00:00:00:ab'
                  name: server 2
              reservedIpRanges:
                - comment: A reserved IP range
                  end: 192.168.1.1
                  start: 192.168.1.0
            properties:
              fixedIpAssignments:
                description: list of all fixed IP assignments for a single MG
                items:
                  properties:
                    ip:
                      description: >-
                        The IP address you want to assign to a specific server
                        or device
                      type: string
                    mac:
                      description: >-
                        The MAC address of the server or device that hosts the
                        internal resource that you wish to receive the specified
                        IP address
                      type: string
                    name:
                      description: A descriptive name of the assignment
                      type: string
                  required:
                    - ip
                    - mac
                  type: object
                type: array
              reservedIpRanges:
                description: list of all reserved IP ranges for a single MG
                items:
                  properties:
                    comment:
                      description: Comment explaining the reserved IP range
                      type: string
                    end:
                      description: Ending IP included in the reserved range of IPs
                      type: string
                    start:
                      description: Starting IP included in the reserved range of IPs
                      type: string
                  required:
                    - start
                    - end
                    - comment
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the LAN Settings for a single MG.
      tags:
        - cellularGateway
        - configure
        - lan
  '/devices/{serial}/cellularGateway/portForwardingRules':
    get:
      description: Returns the port forwarding rules for a single MG.
      operationId: getDeviceCellularGatewayPortForwardingRules
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the port forwarding rules for a single MG.
      tags:
        - cellularGateway
        - configure
        - portForwardingRules
    put:
      consumes:
        - application/json
      description: Updates the port forwarding rules for a single MG.
      operationId: updateDeviceCellularGatewayPortForwardingRules
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - access: any
                  lanIp: 172.31.128.5
                  localPort: '4'
                  name: test
                  protocol: tcp
                  publicPort: 11-12
                  uplink: both
                - access: restricted
                  allowedIps:
                    - 10.10.10.10
                    - 10.10.10.11
                  lanIp: 172.31.128.5
                  localPort: '5'
                  name: test 2
                  protocol: tcp
                  publicPort: '99'
                  uplink: both
            properties:
              rules:
                description: An array of port forwarding params
                items:
                  properties:
                    access:
                      description: >-
                        `any` or `restricted`. Specify the right to make inbound
                        connections on the specified ports or port ranges. If
                        `restricted`, a list of allowed IPs is mandatory.
                      type: string
                    allowedIps:
                      description: >-
                        An array of ranges of WAN IP addresses that are allowed
                        to make inbound connections on the specified ports or
                        port ranges.
                      items:
                        type: string
                      type: array
                    lanIp:
                      description: >-
                        The IP address of the server or device that hosts the
                        internal resource that you wish to make available on the
                        WAN
                      type: string
                    localPort:
                      description: >-
                        A port or port ranges that will receive the forwarded
                        traffic from the WAN
                      type: string
                    name:
                      description: A descriptive name for the rule
                      type: string
                    protocol:
                      description: TCP or UDP
                      type: string
                    publicPort:
                      description: >-
                        A port or port ranges that will be forwarded to the host
                        on the LAN
                      type: string
                  required:
                    - lanIp
                    - publicPort
                    - localPort
                    - protocol
                    - access
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates the port forwarding rules for a single MG.
      tags:
        - cellularGateway
        - configure
        - portForwardingRules
  '/devices/{serial}/clients':
    get:
      description: >-
        List the clients of a device, up to a maximum of a month ago. The usage
        of each client is returned in kilobytes. If the device is a switch, the
        switchport is returned; otherwise the switchport field is null.
      operationId: getDeviceClients
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 31 days. The default is 1
            day.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'List the clients of a device, up to a maximum of a month ago'
      tags:
        - devices
        - monitor
        - clients
  '/devices/{serial}/lldpCdp':
    get:
      description: List LLDP and CDP information for a device
      operationId: getDeviceLldpCdp
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List LLDP and CDP information for a device
      tags:
        - devices
        - monitor
        - lldpCdp
  '/devices/{serial}/lossAndLatencyHistory':
    get:
      description: >-
        Get the uplink loss percentage and latency in milliseconds, and goodput
        in kilobits per second for a wired network device.
      operationId: getDeviceLossAndLatencyHistory
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 365 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 60, 600, 3600, 86400. The default is 60.
          in: query
          name: resolution
          type: integer
        - description: >-
            The WAN uplink used to obtain the requested stats. Valid uplinks are
            wan1, wan2, cellular. The default is wan1.
          enum:
            - wan1
            - wan2
            - cellular
          in: query
          name: uplink
          type: string
        - description: >-
            The destination IP used to obtain the requested stats. This is
            required.
          in: query
          name: ip
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Get the uplink loss percentage and latency in milliseconds, and goodput
        in kilobits per second for a wired network device.
      tags:
        - devices
        - monitor
        - lossAndLatencyHistory
  '/devices/{serial}/managementInterface':
    get:
      description: Return the management interface settings for a device
      operationId: getDeviceManagementInterface
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the management interface settings for a device
      tags:
        - devices
        - configure
        - managementInterface
    put:
      consumes:
        - application/json
      description: Update the management interface settings for a device
      operationId: updateDeviceManagementInterface
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              wan1:
                staticDns:
                  - 1.2.3.2
                  - 1.2.3.3
                staticGatewayIp: 1.2.3.1
                staticIp: 1.2.3.4
                staticSubnetMask: 255.255.255.0
                usingStaticIp: true
                vlan: 7
                wanEnabled: not configured
              wan2:
                usingStaticIp: false
                vlan: 2
                wanEnabled: enabled
            properties:
              wan1:
                description: WAN 1 settings
                properties:
                  staticDns:
                    description: Up to two DNS IPs.
                    items:
                      type: string
                    type: array
                  staticGatewayIp:
                    description: The IP of the gateway on the WAN.
                    type: string
                  staticIp:
                    description: The IP the device should use on the WAN.
                    type: string
                  staticSubnetMask:
                    description: The subnet mask for the WAN.
                    type: string
                  usingStaticIp:
                    description: >-
                      Configure the interface to have static IP settings or use
                      DHCP.
                    type: boolean
                  vlan:
                    description: >-
                      The VLAN that management traffic should be tagged with.
                      Applies whether usingStaticIp is true or false.
                    type: integer
                  wanEnabled:
                    description: >-
                      Enable or disable the interface (only for MX devices).
                      Valid values are 'enabled', 'disabled', and 'not
                      configured'.
                    enum:
                      - enabled
                      - disabled
                      - not configured
                    type: string
                type: object
              wan2:
                description: WAN 2 settings (only for MX devices)
                properties:
                  staticDns:
                    description: Up to two DNS IPs.
                    items:
                      type: string
                    type: array
                  staticGatewayIp:
                    description: The IP of the gateway on the WAN.
                    type: string
                  staticIp:
                    description: The IP the device should use on the WAN.
                    type: string
                  staticSubnetMask:
                    description: The subnet mask for the WAN.
                    type: string
                  usingStaticIp:
                    description: >-
                      Configure the interface to have static IP settings or use
                      DHCP.
                    type: boolean
                  vlan:
                    description: >-
                      The VLAN that management traffic should be tagged with.
                      Applies whether usingStaticIp is true or false.
                    type: integer
                  wanEnabled:
                    description: >-
                      Enable or disable the interface (only for MX devices).
                      Valid values are 'enabled', 'disabled', and 'not
                      configured'.
                    enum:
                      - enabled
                      - disabled
                      - not configured
                    type: string
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the management interface settings for a device
      tags:
        - devices
        - configure
        - managementInterface
  '/devices/{serial}/reboot':
    post:
      description: Reboot a device
      operationId: rebootDevice
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: Successful operation
          schema:
            type: object
      summary: Reboot a device
      tags:
        - devices
        - liveTools
  '/devices/{serial}/switch/ports':
    get:
      description: List the switch ports for a switch
      operationId: getDeviceSwitchPorts
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the switch ports for a switch
      tags:
        - switch
        - configure
        - ports
  '/devices/{serial}/switch/ports/cycle':
    post:
      consumes:
        - application/json
      description: Cycle a set of switch ports
      operationId: cycleDeviceSwitchPorts
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              ports:
                - '1'
                - 2-5
                - 1_MA-MOD-8X10G_1
                - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
            properties:
              ports:
                description: >-
                  List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1,
                  1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]
                items:
                  type: string
                type: array
            required:
              - ports
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Cycle a set of switch ports
      tags:
        - switch
        - liveTools
        - ports
  '/devices/{serial}/switch/ports/statuses':
    get:
      description: Return the status for all the ports of a switch
      operationId: getDeviceSwitchPortsStatuses
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 31 days. The default is 1
            day.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the status for all the ports of a switch
      tags:
        - switch
        - monitor
        - ports
        - statuses
  '/devices/{serial}/switch/ports/statuses/packets':
    get:
      description: Return the packet counters for all the ports of a switch
      operationId: getDeviceSwitchPortsStatusesPackets
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 1 day from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 1 day. The default is 1 day.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the packet counters for all the ports of a switch
      tags:
        - switch
        - monitor
        - ports
        - statuses
        - packets
  '/devices/{serial}/switch/ports/{portId}':
    get:
      description: Return a switch port
      operationId: getDeviceSwitchPort
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: portId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a switch port
      tags:
        - switch
        - configure
        - ports
    put:
      consumes:
        - application/json
      description: Update a switch port
      operationId: updateDeviceSwitchPort
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: portId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              accessPolicyType: Sticky MAC allow list
              enabled: true
              isolationEnabled: false
              linkNegotiation: Auto negotiate
              name: My switch port
              poeEnabled: true
              portScheduleId: '1234'
              rstpEnabled: true
              stickyMacAllowList:
                - '34:56:fe:ce:8e:b0'
                - '34:56:fe:ce:8e:b1'
              stickyMacAllowListLimit: 5
              stormControlEnabled: true
              stpGuard: disabled
              tags:
                - tag1
                - tag2
              type: access
              udld: Alert only
              vlan: 10
              voiceVlan: 20
            properties:
              accessPolicyNumber:
                description: >-
                  The number of a custom access policy to configure on the
                  switch port. Only applicable when 'accessPolicyType' is
                  'Custom access policy'
                type: integer
              accessPolicyType:
                description: >-
                  The type of the access policy of the switch port. Only
                  applicable to access ports. Can be one of 'Open', 'Custom
                  access policy', 'MAC allow list' or 'Sticky MAC allow list'
                enum:
                  - Open
                  - Custom access policy
                  - MAC allow list
                  - Sticky MAC allow list
                type: string
              allowedVlans:
                description: >-
                  The VLANs allowed on the switch port. Only applicable to trunk
                  ports.
                type: string
              enabled:
                description: The status of the switch port
                type: boolean
              flexibleStackingEnabled:
                description: >-
                  For supported switches (e.g. MS420/MS425), whether or not the
                  port has flexible stacking enabled.
                type: boolean
              isolationEnabled:
                description: The isolation status of the switch port
                type: boolean
              linkNegotiation:
                description: The link speed for the switch port
                type: string
              macAllowList:
                description: >-
                  Only devices with MAC addresses specified in this list will
                  have access to this port. Up to 20 MAC addresses can be
                  defined. Only applicable when 'accessPolicyType' is 'MAC allow
                  list'
                items:
                  type: string
                type: array
              name:
                description: The name of the switch port
                type: string
              poeEnabled:
                description: The PoE status of the switch port
                type: boolean
              portScheduleId:
                description: >-
                  The ID of the port schedule. A value of null will clear the
                  port schedule.
                type: string
              rstpEnabled:
                description: The rapid spanning tree protocol status
                type: boolean
              stickyMacAllowList:
                description: >-
                  The initial list of MAC addresses for sticky Mac allow list.
                  Only applicable when 'accessPolicyType' is 'Sticky MAC allow
                  list'
                items:
                  type: string
                type: array
              stickyMacAllowListLimit:
                description: >-
                  The maximum number of MAC addresses for sticky MAC allow list.
                  Only applicable when 'accessPolicyType' is 'Sticky MAC allow
                  list'
                type: integer
              stormControlEnabled:
                description: The storm control status of the switch port
                type: boolean
              stpGuard:
                description: >-
                  The state of the STP guard ('disabled', 'root guard', 'bpdu
                  guard' or 'loop guard')
                enum:
                  - disabled
                  - root guard
                  - bpdu guard
                  - loop guard
                type: string
              tags:
                description: The list of tags of the switch port
                items:
                  type: string
                type: array
              type:
                description: The type of the switch port ('trunk' or 'access')
                enum:
                  - trunk
                  - access
                type: string
              udld:
                description: >-
                  The action to take when Unidirectional Link is detected (Alert
                  only, Enforce). Default configuration is Alert only.
                enum:
                  - Alert only
                  - Enforce
                type: string
              vlan:
                description: >-
                  The VLAN of the switch port. A null value will clear the value
                  set for trunk ports.
                type: integer
              voiceVlan:
                description: >-
                  The voice VLAN of the switch port. Only applicable to access
                  ports.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a switch port
      tags:
        - switch
        - configure
        - ports
  '/devices/{serial}/switch/routing/interfaces':
    get:
      description: List layer 3 interfaces for a switch
      operationId: getDeviceSwitchRoutingInterfaces
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List layer 3 interfaces for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
    post:
      consumes:
        - application/json
      description: Create a layer 3 interface for a switch
      operationId: createDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              defaultGateway: 192.168.1.1
              interfaceIp: 192.168.1.2
              multicastRouting: disabled
              name: L3 interface
              ospfSettings:
                area: '0'
                cost: 1
                isPassiveEnabled: true
              subnet: 192.168.1.0/24
              vlanId: 100
            properties:
              defaultGateway:
                description: >-
                  The next hop for any traffic that isn't going to a directly
                  connected subnet or over a static route. This IP address must
                  exist in a subnet with a routed interface.
                type: string
              interfaceIp:
                description: >-
                  The IP address this switch will use for layer 3 routing on
                  this VLAN or subnet. This cannot be the same as the switch's
                  management IP.
                type: string
              multicastRouting:
                description: >-
                  Enable multicast support if, multicast routing between VLANs
                  is required. Options are, 'disabled', 'enabled' or 'IGMP
                  snooping querier'. Default is 'disabled'.
                enum:
                  - disabled
                  - enabled
                  - IGMP snooping querier
                type: string
              name:
                description: A friendly name or description for the interface or VLAN.
                type: string
              ospfSettings:
                description: The OSPF routing settings of the interface.
                properties:
                  area:
                    description: >-
                      The OSPF area to which this interface should belong. Can
                      be either 'disabled' or the identifier of an existing OSPF
                      area. Defaults to 'disabled'.
                    type: string
                  cost:
                    description: >-
                      The path cost for this interface. Defaults to 1, but can
                      be increased up to 65535 to give lower priority.
                    type: integer
                  isPassiveEnabled:
                    description: >-
                      When enabled, OSPF will not run on the interface, but the
                      subnet will still be advertised.
                    type: boolean
                type: object
              subnet:
                description: >-
                  The network that this routed interface is on, in CIDR notation
                  (ex. 10.1.1.0/24).
                type: string
              vlanId:
                description: >-
                  The VLAN this routed interface is on. VLAN must be between 1
                  and 4094.
                type: integer
            required:
              - name
              - interfaceIp
              - vlanId
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a layer 3 interface for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
  '/devices/{serial}/switch/routing/interfaces/{interfaceId}':
    delete:
      description: Delete a layer 3 interface from the switch
      operationId: deleteDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a layer 3 interface from the switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
    get:
      description: Return a layer 3 interface for a switch
      operationId: getDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a layer 3 interface for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
    put:
      consumes:
        - application/json
      description: Update a layer 3 interface for a switch
      operationId: updateDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              interfaceIp: 192.168.1.2
              multicastRouting: disabled
              name: L3 interface
              ospfSettings:
                area: '0'
                cost: 1
                isPassiveEnabled: true
              subnet: 192.168.1.0/24
              vlanId: 100
            properties:
              interfaceIp:
                description: >-
                  The IP address this switch will use for layer 3 routing on
                  this VLAN or subnet. This cannot be the same as the switch's
                  management IP.
                type: string
              multicastRouting:
                description: >-
                  Enable multicast support if, multicast routing between VLANs
                  is required. Options are, 'disabled', 'enabled' or 'IGMP
                  snooping querier'.
                enum:
                  - disabled
                  - enabled
                  - IGMP snooping querier
                type: string
              name:
                description: A friendly name or description for the interface or VLAN.
                type: string
              ospfSettings:
                description: The OSPF routing settings of the interface.
                properties:
                  area:
                    description: >-
                      The OSPF area to which this interface should belong. Can
                      be either 'disabled' or the identifier of an existing OSPF
                      area.
                    type: string
                  cost:
                    description: >-
                      The path cost for this interface. Defaults to 1, but can
                      be increased up to 65535 to give lower priority.
                    type: integer
                  isPassiveEnabled:
                    description: >-
                      When enabled, OSPF will not run on the interface, but the
                      subnet will still be advertised.
                    type: boolean
                type: object
              subnet:
                description: >-
                  The network that this routed interface is on, in CIDR notation
                  (ex. 10.1.1.0/24).
                type: string
              vlanId:
                description: >-
                  The VLAN this routed interface is on. VLAN must be between 1
                  and 4094.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a layer 3 interface for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
  '/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp':
    get:
      description: Return a layer 3 interface DHCP configuration for a switch
      operationId: getDeviceSwitchRoutingInterfaceDhcp
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a layer 3 interface DHCP configuration for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
        - dhcp
    put:
      consumes:
        - application/json
      description: Update a layer 3 interface DHCP configuration for a switch
      operationId: updateDeviceSwitchRoutingInterfaceDhcp
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              bootFileName: home_boot_file
              bootNextServer: 1.2.3.4
              bootOptionsEnabled: true
              dhcpLeaseTime: 1 day
              dhcpMode: dhcpServer
              dhcpOptions:
                - code: '5'
                  type: text
                  value: five
              dnsCustomNameservers:
                - '8.8.8.8, 8.8.4.4'
              dnsNameserversOption: custom
              fixedIpAssignments:
                - ip: 192.168.1.12
                  mac: '22:33:44:55:66:77'
                  name: Cisco Meraki valued client
              reservedIpRanges:
                - comment: A reserved IP range
                  end: 192.168.1.10
                  start: 192.168.1.1
            properties:
              bootFileName:
                description: >-
                  The PXE boot server filename for the DHCP server running on
                  the switch interface
                type: string
              bootNextServer:
                description: >-
                  The PXE boot server IP for the DHCP server running on the
                  switch interface
                type: string
              bootOptionsEnabled:
                description: >-
                  Enable DHCP boot options to provide PXE boot options configs
                  for the dhcp server running on the switch interface
                type: boolean
              dhcpLeaseTime:
                description: >-
                  The DHCP lease time config for the dhcp server running on
                  switch interface ('30 minutes', '1 hour', '4 hours', '12
                  hours', '1 day' or '1 week')
                enum:
                  - 30 minutes
                  - 1 hour
                  - 4 hours
                  - 12 hours
                  - 1 day
                  - 1 week
                type: string
              dhcpMode:
                description: >-
                  The DHCP mode options for the switch interface
                  ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
                enum:
                  - dhcpDisabled
                  - dhcpRelay
                  - dhcpServer
                type: string
              dhcpOptions:
                description: >-
                  Array of DHCP options consisting of code, type and value for
                  the DHCP server running on the switch interface
                items:
                  properties:
                    code:
                      description: The code for DHCP option which should be from 2 to 254
                      type: string
                    type:
                      description: >-
                        The type of the DHCP option which should be one of
                        ('text', 'ip', 'integer' or 'hex')
                      enum:
                        - text
                        - ip
                        - integer
                        - hex
                      type: string
                    value:
                      description: The value of the DHCP option
                      type: string
                  required:
                    - code
                    - type
                    - value
                  type: object
                type: array
              dhcpRelayServerIps:
                description: >-
                  The DHCP relay server IPs to which DHCP packets would get
                  relayed for the switch interface
                items:
                  type: string
                type: array
              dnsCustomNameservers:
                description: >-
                  The DHCP name server IPs when DHCP name server option is
                  'custom'
                items:
                  type: string
                type: array
              dnsNameserversOption:
                description: >-
                  The DHCP name server option for the dhcp server running on the
                  switch interface ('googlePublicDns', 'openDns' or 'custom')
                enum:
                  - googlePublicDns
                  - openDns
                  - custom
                type: string
              fixedIpAssignments:
                description: >-
                  Array of DHCP fixed IP assignments for the DHCP server running
                  on the switch interface
                items:
                  properties:
                    ip:
                      description: >-
                        The IP address of the client which has fixed IP address
                        assigned to it
                      type: string
                    mac:
                      description: The MAC address of the client which has fixed IP address
                      type: string
                    name:
                      description: The name of the client which has fixed IP address
                      type: string
                  required:
                    - name
                    - mac
                    - ip
                  type: object
                type: array
              reservedIpRanges:
                description: >-
                  Array of DHCP reserved IP assignments for the DHCP server
                  running on the switch interface
                items:
                  properties:
                    comment:
                      description: The comment for the reserved IP range
                      type: string
                    end:
                      description: The ending IP address of the reserved IP range
                      type: string
                    start:
                      description: The starting IP address of the reserved IP range
                      type: string
                  required:
                    - start
                    - end
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a layer 3 interface DHCP configuration for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
        - dhcp
  '/devices/{serial}/switch/routing/staticRoutes':
    get:
      description: List layer 3 static routes for a switch
      operationId: getDeviceSwitchRoutingStaticRoutes
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List layer 3 static routes for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
    post:
      consumes:
        - application/json
      description: Create a layer 3 static route for a switch
      operationId: createDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: >-
                  IP address of the next hop device to which the device sends
                  its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: >-
                  The subnet which is routed via this static route and should be
                  specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            required:
              - subnet
              - nextHopIp
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
  '/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}':
    delete:
      description: Delete a layer 3 static route for a switch
      operationId: deleteDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
    get:
      description: Return a layer 3 static route for a switch
      operationId: getDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
    put:
      consumes:
        - application/json
      description: Update a layer 3 static route for a switch
      operationId: updateDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: >-
                  IP address of the next hop device to which the device sends
                  its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: >-
                  The subnet which is routed via this static route and should be
                  specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
  '/devices/{serial}/switch/warmSpare':
    get:
      description: Return warm spare configuration for a switch
      operationId: getDeviceSwitchWarmSpare
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return warm spare configuration for a switch
      tags:
        - switch
        - configure
        - warmSpare
    put:
      consumes:
        - application/json
      description: >-
        Update warm spare configuration for a switch. The spare will use the
        same L3 configuration as the primary. Note that this will irreversibly
        destroy any existing L3 configuration on the spare.
      operationId: updateDeviceSwitchWarmSpare
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              enabled: true
              spareSerial: Q234-ABCD-0002
            properties:
              enabled:
                description: Enable or disable warm spare for a switch
                type: boolean
              spareSerial:
                description: Serial number of the warm spare switch
                type: string
            required:
              - enabled
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update warm spare configuration for a switch
      tags:
        - switch
        - configure
        - warmSpare
  '/devices/{serial}/wireless/bluetooth/settings':
    get:
      description: Return the bluetooth settings for a wireless device
      operationId: getDeviceWirelessBluetoothSettings
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the bluetooth settings for a wireless device
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
    put:
      consumes:
        - application/json
      description: Update the bluetooth settings for a wireless device
      operationId: updateDeviceWirelessBluetoothSettings
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              major: 13
              minor: 125
              uuid: 00000000-0000-0000-000-000000000000
            properties:
              major:
                description: >-
                  Desired major value of the beacon. If the value is set to null
                  it will reset to Dashboard's automatically generated value.
                type: integer
              minor:
                description: >-
                  Desired minor value of the beacon. If the value is set to null
                  it will reset to Dashboard's automatically generated value.
                type: integer
              uuid:
                description: >-
                  Desired UUID of the beacon. If the value is set to null it
                  will reset to Dashboard's automatically generated value.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the bluetooth settings for a wireless device
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
  '/devices/{serial}/wireless/connectionStats':
    get:
      description: Aggregated connectivity info for a given AP on this network
      operationId: getDeviceWirelessConnectionStats
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Aggregated connectivity info for a given AP on this network
      tags:
        - wireless
        - monitor
        - connectionStats
  '/devices/{serial}/wireless/latencyStats':
    get:
      description: Aggregated latency info for a given AP on this network
      operationId: getDeviceWirelessLatencyStats
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
        - description: >-
            Partial selection: If present, this call will return only the
            selected fields of ["rawDistribution", "avg"]. All fields will be
            returned by default. Selected fields must be entered as a comma
            separated string.
          in: query
          name: fields
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Aggregated latency info for a given AP on this network
      tags:
        - wireless
        - monitor
        - latencyStats
  '/devices/{serial}/wireless/radio/settings':
    get:
      description: Return the radio settings of a device
      operationId: getDeviceWirelessRadioSettings
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the radio settings of a device
      tags:
        - wireless
        - configure
        - radio
        - settings
    put:
      consumes:
        - application/json
      description: Update the radio settings of a device
      operationId: updateDeviceWirelessRadioSettings
      parameters:
        - in: path
          name: serial
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              fiveGhzSettings:
                channel: 149
                channelWidth: 20
                targetPower: 15
              rfProfileId: '1234'
              twoFourGhzSettings:
                channel: 11
                targetPower: 21
            properties:
              fiveGhzSettings:
                description: Manual radio settings for 5 GHz.
                properties:
                  channel:
                    description: >-
                      Sets a manual channel for 5 GHz. Can be '36', '40', '44',
                      '48', '52', '56', '60', '64', '100', '104', '108', '112',
                      '116', '120', '124', '128', '132', '136', '140', '144',
                      '149', '153', '157', '161', '165', '169', '173' or '177'
                      or null for using auto channel.
                    enum:
                      - 36
                      - 40
                      - 44
                      - 48
                      - 52
                      - 56
                      - 60
                      - 64
                      - 100
                      - 104
                      - 108
                      - 112
                      - 116
                      - 120
                      - 124
                      - 128
                      - 132
                      - 136
                      - 140
                      - 144
                      - 149
                      - 153
                      - 157
                      - 161
                      - 165
                      - 169
                      - 173
                      - 177
                    type: integer
                  channelWidth:
                    description: >-
                      Sets a manual channel for 5 GHz. Can be '0', '20', '40',
                      '80' or '160' or null for using auto channel width.
                    enum:
                      - 0
                      - 20
                      - 40
                      - 80
                      - 160
                    type: integer
                  targetPower:
                    description: >-
                      Set a manual target power for 5 GHz. Can be between '8' or
                      '30' or null for using auto power range.
                    type: integer
                type: object
              rfProfileId:
                description: >-
                  The ID of an RF profile to assign to the device. If the value
                  of this parameter is null, the appropriate basic RF profile
                  (indoor or outdoor) will be assigned to the device. Assigning
                  an RF profile will clear ALL manually configured overrides on
                  the device (channel width, channel, power).
                type: integer
              twoFourGhzSettings:
                description: Manual radio settings for 2.4 GHz.
                properties:
                  channel:
                    description: >-
                      Sets a manual channel for 2.4 GHz. Can be '1', '2', '3',
                      '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or
                      '14' or null for using auto channel.
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                      - 8
                      - 9
                      - 10
                      - 11
                      - 12
                      - 13
                      - 14
                    type: integer
                  targetPower:
                    description: >-
                      Set a manual target power for 2.4 GHz. Can be between '5'
                      or '30' or null for using auto power range.
                    type: integer
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the radio settings of a device
      tags:
        - wireless
        - configure
        - radio
        - settings
  '/devices/{serial}/wireless/status':
    get:
      description: Return the SSID statuses of an access point
      operationId: getDeviceWirelessStatus
      parameters:
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the SSID statuses of an access point
      tags:
        - wireless
        - monitor
        - status
  '/networks/{networkId}':
    delete:
      description: Delete a network
      operationId: deleteNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a network
      tags:
        - networks
        - configure
    get:
      description: Return a network
      operationId: getNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a network
      tags:
        - networks
        - configure
    put:
      consumes:
        - application/json
      description: Update a network
      operationId: updateNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: Long Island Office
              notes: Combined network for Long Island Office
              tags:
                - tag1
                - tag2
              timeZone: America/Los_Angeles
            properties:
              enrollmentString:
                description: >-
                  A unique identifier which can be used for device enrollment or
                  easy access through the Meraki SM Registration page or the
                  Self Service Portal. Please note that changing this field may
                  cause existing bookmarks to break.
                type: string
              name:
                description: The name of the network
                type: string
              notes:
                description: >-
                  Add any notes or additional information about this network
                  here.
                type: string
              tags:
                description: A list of tags to be applied to the network
                items:
                  type: string
                type: array
              timeZone:
                description: >-
                  The timezone of the network. For a list of allowed timezones,
                  please see the 'TZ' column in the table in <a target='_blank'
                  href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                  article.</a>
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a network
      tags:
        - networks
        - configure
  '/networks/{networkId}/alerts/settings':
    get:
      description: Return the alert configuration for this network
      operationId: getNetworkAlertsSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the alert configuration for this network
      tags:
        - networks
        - configure
        - alerts
        - settings
    put:
      consumes:
        - application/json
      description: Update the alert configuration for this network
      operationId: updateNetworkAlertsSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              alerts:
                - alertDestinations:
                    allAdmins: false
                    emails:
                      - miles@meraki.com
                    httpServerIds:
                      - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                    snmp: false
                  enabled: true
                  filters:
                    timeout: 60
                  type: gatewayDown
              defaultDestinations:
                allAdmins: true
                emails:
                  - miles@meraki.com
                httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                snmp: true
            properties:
              alerts:
                description: >-
                  Alert-specific configuration for each type. Only alerts that
                  pertain to the network can be updated.
                items:
                  properties:
                    alertDestinations:
                      description: A hash of destinations for this specific alert
                      properties:
                        allAdmins:
                          description: >-
                            If true, then all network admins will receive emails
                            for this alert
                          type: boolean
                        emails:
                          description: >-
                            A list of emails that will receive information about
                            the alert
                          items:
                            type: string
                          type: array
                        httpServerIds:
                          description: >-
                            A list of HTTP server IDs to send a Webhook to for
                            this alert
                          items:
                            type: string
                          type: array
                        snmp:
                          description: >-
                            If true, then an SNMP trap will be sent for this
                            alert if there is an SNMP trap server configured for
                            this network
                          type: boolean
                      type: object
                    enabled:
                      description: A boolean depicting if the alert is turned on or off
                      type: boolean
                    filters:
                      description: >-
                        A hash of specific configuration data for the alert.
                        Only filters specific to the alert will be updated.
                      properties: {}
                      type: object
                    type:
                      description: The type of alert
                      type: string
                  required:
                    - type
                  type: object
                type: array
              defaultDestinations:
                description: The network-wide destinations for all alerts on the network.
                properties:
                  allAdmins:
                    description: 'If true, then all network admins will receive emails.'
                    type: boolean
                  emails:
                    description: A list of emails that will recieve the alert(s).
                    items:
                      type: string
                    type: array
                  httpServerIds:
                    description: A list of HTTP server IDs to send a Webhook to
                    items:
                      type: string
                    type: array
                  snmp:
                    description: >-
                      If true, then an SNMP trap will be sent if there is an
                      SNMP trap server configured for this network.
                    type: boolean
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the alert configuration for this network
      tags:
        - networks
        - configure
        - alerts
        - settings
  '/networks/{networkId}/appliance/clients/{clientId}/security/events':
    get:
      description: >-
        List the security events for a client. Clients can be identified by a
        client key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      operationId: getNetworkApplianceClientSecurityEvents
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. Data is gathered after
            the specified t0 value. The maximum lookback period is 791 days from
            today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 791
            days after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 791 days. The
            default is 31 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 100.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            Sorted order of security events based on event detection time. Order
            options are 'ascending' or 'descending'. Default is ascending order.
          enum:
            - ascending
            - descending
          in: query
          name: sortOrder
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the security events for a client
      tags:
        - appliance
        - monitor
        - clients
        - security
        - events
  '/networks/{networkId}/appliance/connectivityMonitoringDestinations':
    get:
      description: Return the connectivity testing destinations for an MX network
      operationId: getNetworkApplianceConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the connectivity testing destinations for an MX network
      tags:
        - appliance
        - configure
        - connectivityMonitoringDestinations
    put:
      consumes:
        - application/json
      description: Update the connectivity testing destinations for an MX network
      operationId: updateNetworkApplianceConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              destinations:
                - default: false
                  description: Google
                  ip: 8.8.8.8
                - default: true
                  description: test description
                  ip: 1.23.45.67
                - ip: 9.8.7.6
            properties:
              destinations:
                description: The list of connectivity monitoring destinations
                items:
                  properties:
                    default:
                      description: >-
                        Boolean indicating whether this is the default testing
                        destination (true) or not (false). Defaults to false.
                        Only one default is allowed
                      type: boolean
                    description:
                      description: >-
                        Description of the testing destination. Optional,
                        defaults to null
                      type: string
                    ip:
                      description: The IP address to test connectivity with
                      type: string
                  required:
                    - ip
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the connectivity testing destinations for an MX network
      tags:
        - appliance
        - configure
        - connectivityMonitoringDestinations
  '/networks/{networkId}/appliance/contentFiltering':
    get:
      description: Return the content filtering settings for an MX network
      operationId: getNetworkApplianceContentFiltering
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the content filtering settings for an MX network
      tags:
        - appliance
        - configure
        - contentFiltering
    put:
      consumes:
        - application/json
      description: Update the content filtering settings for an MX network
      operationId: updateNetworkApplianceContentFiltering
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              allowedUrlPatterns:
                - 'http://www.example.org'
                - 'http://help.com.au'
              blockedUrlCategories:
                - 'meraki:contentFiltering/category/1'
                - 'meraki:contentFiltering/category/7'
              blockedUrlPatterns:
                - 'http://www.example.com'
                - 'http://www.betting.com'
              urlCategoryListSize: topSites
            properties:
              allowedUrlPatterns:
                description: A list of URL patterns that are allowed
                items:
                  type: string
                type: array
              blockedUrlCategories:
                description: A list of URL categories to block
                items:
                  type: string
                type: array
              blockedUrlPatterns:
                description: A list of URL patterns that are blocked
                items:
                  type: string
                type: array
              urlCategoryListSize:
                description: >-
                  URL category list size which is either 'topSites' or
                  'fullList'
                enum:
                  - topSites
                  - fullList
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the content filtering settings for an MX network
      tags:
        - appliance
        - configure
        - contentFiltering
  '/networks/{networkId}/appliance/contentFiltering/categories':
    get:
      description: List all available content filtering categories for an MX network
      operationId: getNetworkApplianceContentFilteringCategories
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List all available content filtering categories for an MX network
      tags:
        - appliance
        - configure
        - contentFiltering
        - categories
  '/networks/{networkId}/appliance/firewall/cellularFirewallRules':
    get:
      description: Return the cellular firewall rules for an MX network
      operationId: getNetworkApplianceFirewallCellularFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the cellular firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - cellularFirewallRules
    put:
      consumes:
        - application/json
      description: Update the cellular firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallCellularFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: 443
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: >-
                  An ordered array of the firewall rules (not including the
                  default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: >-
                        Comma-separated list of destination IP address(es) (in
                        IP or CIDR notation), fully-qualified domain names
                        (FQDN) or 'any'
                      type: string
                    destPort:
                      description: >-
                        Comma-separated list of destination port(s) (integer in
                        the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any')
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcCidr:
                      description: >-
                        Comma-separated list of source IP address(es) (in IP or
                        CIDR notation), or 'any' (note: FQDN not supported for
                        source addresses)
                      type: string
                    srcPort:
                      description: >-
                        Comma-separated list of source port(s) (integer in the
                        range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: >-
                        Log this rule to syslog (true or false, boolean value) -
                        only applicable if a syslog has been configured
                        (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the cellular firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - cellularFirewallRules
  '/networks/{networkId}/appliance/firewall/firewalledServices':
    get:
      description: List the appliance services and their accessibility rules
      operationId: getNetworkApplianceFirewallFirewalledServices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the appliance services and their accessibility rules
      tags:
        - appliance
        - configure
        - firewall
        - firewalledServices
  '/networks/{networkId}/appliance/firewall/firewalledServices/{service}':
    get:
      description: >-
        Return the accessibility settings of the given service ('ICMP', 'web',
        or 'SNMP')
      operationId: getNetworkApplianceFirewallFirewalledService
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: service
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the accessibility settings of the given service ('ICMP', 'web',
        or 'SNMP')
      tags:
        - appliance
        - configure
        - firewall
        - firewalledServices
    put:
      consumes:
        - application/json
      description: >-
        Updates the accessibility settings for the given service ('ICMP', 'web',
        or 'SNMP')
      operationId: updateNetworkApplianceFirewallFirewalledService
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: service
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              access: restricted
              allowedIps:
                - 123.123.123.1
            properties:
              access:
                description: >-
                  A string indicating the rule for which IPs are allowed to use
                  the specified service. Acceptable values are "blocked" (no
                  remote IPs can access the service), "restricted" (only allowed
                  IPs can access the service), and "unrestriced" (any remote IP
                  can access the service). This field is required
                enum:
                  - blocked
                  - restricted
                  - unrestricted
                type: string
              allowedIps:
                description: >-
                  An array of allowed IPs that can access the service. This
                  field is required if "access" is set to "restricted".
                  Otherwise this field is ignored
                items:
                  type: string
                type: array
            required:
              - access
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Updates the accessibility settings for the given service ('ICMP', 'web',
        or 'SNMP')
      tags:
        - appliance
        - configure
        - firewall
        - firewalledServices
  '/networks/{networkId}/appliance/firewall/inboundFirewallRules':
    get:
      description: Return the inbound firewall rules for an MX network
      operationId: getNetworkApplianceFirewallInboundFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the inbound firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - inboundFirewallRules
    put:
      consumes:
        - application/json
      description: Update the inbound firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallInboundFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: 443
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: >-
                  An ordered array of the firewall rules (not including the
                  default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: >-
                        Comma-separated list of destination IP address(es) (in
                        IP or CIDR notation), fully-qualified domain names
                        (FQDN) or 'any'
                      type: string
                    destPort:
                      description: >-
                        Comma-separated list of destination port(s) (integer in
                        the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any')
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcCidr:
                      description: >-
                        Comma-separated list of source IP address(es) (in IP or
                        CIDR notation), or 'any' (note: FQDN not supported for
                        source addresses)
                      type: string
                    srcPort:
                      description: >-
                        Comma-separated list of source port(s) (integer in the
                        range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: >-
                        Log this rule to syslog (true or false, boolean value) -
                        only applicable if a syslog has been configured
                        (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
              syslogDefaultRule:
                description: >-
                  Log the special default rule (boolean value - enable only if
                  you've configured a syslog server) (optional)
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the inbound firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - inboundFirewallRules
  '/networks/{networkId}/appliance/firewall/l3FirewallRules':
    get:
      description: Return the L3 firewall rules for an MX network
      operationId: getNetworkApplianceFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the L3 firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l3FirewallRules
    put:
      consumes:
        - application/json
      description: Update the L3 firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: 443
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: >-
                  An ordered array of the firewall rules (not including the
                  default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: >-
                        Comma-separated list of destination IP address(es) (in
                        IP or CIDR notation), fully-qualified domain names
                        (FQDN) or 'any'
                      type: string
                    destPort:
                      description: >-
                        Comma-separated list of destination port(s) (integer in
                        the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any')
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcCidr:
                      description: >-
                        Comma-separated list of source IP address(es) (in IP or
                        CIDR notation), or 'any' (note: FQDN not supported for
                        source addresses)
                      type: string
                    srcPort:
                      description: >-
                        Comma-separated list of source port(s) (integer in the
                        range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: >-
                        Log this rule to syslog (true or false, boolean value) -
                        only applicable if a syslog has been configured
                        (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
              syslogDefaultRule:
                description: >-
                  Log the special default rule (boolean value - enable only if
                  you've configured a syslog server) (optional)
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the L3 firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l3FirewallRules
  '/networks/{networkId}/appliance/firewall/l7FirewallRules':
    get:
      description: List the MX L7 firewall rules for an MX network
      operationId: getNetworkApplianceFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the MX L7 firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l7FirewallRules
    put:
      consumes:
        - application/json
      description: Update the MX L7 firewall rules for an MX network
      operationId: updateNetworkApplianceFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - policy: deny
                  type: application
                  value:
                    id: 'meraki:layer7/application/67'
                    name: Xbox LIVE
                - policy: deny
                  type: applicationCategory
                  value:
                    id: 'meraki:layer7/category/2'
                    name: Blogging
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: '23'
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: '10.11.12.00/24:5555'
                - policy: deny
                  type: blockedCountries
                  value:
                    - AX
                    - CA
                - policy: deny
                  type: allowedCountries
                  value:
                    - US
            properties:
              rules:
                description: An ordered array of the MX L7 firewall rules
                items:
                  properties:
                    policy:
                      description: '''Deny'' traffic specified by this rule'
                      enum:
                        - deny
                      type: string
                    type:
                      description: >-
                        Type of the L7 rule. One of: 'application',
                        'applicationCategory', 'host', 'port', 'ipRange'
                      enum:
                        - application
                        - applicationCategory
                        - host
                        - port
                        - ipRange
                      type: string
                    value:
                      description: >-
                        The 'value' of what you want to block. Format of 'value'
                        varies depending on type of the rule. See sample
                        request. The application categories and application ids
                        can be retrieved from the the 'MX L7 application
                        categories' endpoint. The countries follow the
                        two-letter ISO 3166-1 alpha-2 format.
                      type: string
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the MX L7 firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l7FirewallRules
  '/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories':
    get:
      description: >-
        Return the L7 firewall application categories and their associated
        applications for an MX network
      operationId: getNetworkApplianceFirewallL7FirewallRulesApplicationCategories
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the L7 firewall application categories and their associated
        applications for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l7FirewallRules
        - applicationCategories
  '/networks/{networkId}/appliance/firewall/oneToManyNatRules':
    get:
      description: 'Return the 1:Many NAT mapping rules for an MX network'
      operationId: getNetworkApplianceFirewallOneToManyNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Return the 1:Many NAT mapping rules for an MX network'
      tags:
        - appliance
        - configure
        - firewall
        - oneToManyNatRules
    put:
      consumes:
        - application/json
      description: 'Set the 1:Many NAT mapping rules for an MX network'
      operationId: updateNetworkApplianceFirewallOneToManyNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              rules:
                - portRules:
                    - allowedIps:
                        - any
                      localIp: 192.168.128.1
                      localPort: '443'
                      name: Rule 1
                      protocol: tcp
                      publicPort: '9443'
                    - allowedIps:
                        - 10.82.110.0/24
                        - 10.82.111.0/24
                      localIp: 192.168.128.1
                      localPort: '80'
                      name: Rule 2
                      protocol: tcp
                      publicPort: '8080'
                  publicIp: 146.11.11.13
                  uplink: internet1
            properties:
              rules:
                description: 'An array of 1:Many nat rules'
                items:
                  properties:
                    portRules:
                      description: An array of associated forwarding rules
                      items:
                        properties:
                          allowedIps:
                            description: >-
                              Remote IP addresses or ranges that are permitted
                              to access the internal resource via this port
                              forwarding rule, or 'any'
                            items:
                              type: string
                            type: array
                          localIp:
                            description: >-
                              Local IP address to which traffic will be
                              forwarded
                            type: string
                          localPort:
                            description: >-
                              Destination port of the forwarded traffic that
                              will be sent from the MX to the specified host on
                              the LAN. If you simply wish to forward the traffic
                              without translating the port, this should be the
                              same as the Public port
                            type: string
                          name:
                            description: A description of the rule
                            type: string
                          protocol:
                            description: '''tcp'' or ''udp'''
                            enum:
                              - tcp
                              - udp
                            type: string
                          publicPort:
                            description: >-
                              Destination port of the traffic that is arriving
                              on the WAN
                            type: string
                        type: object
                      type: array
                    publicIp:
                      description: >-
                        The IP address that will be used to access the internal
                        resource from the WAN
                      type: string
                    uplink:
                      description: >-
                        The physical WAN interface on which the traffic will
                        arrive ('internet1' or, if available, 'internet2')
                      enum:
                        - internet1
                        - internet2
                      type: string
                  required:
                    - publicIp
                    - uplink
                    - portRules
                  type: object
                type: array
            required:
              - rules
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Set the 1:Many NAT mapping rules for an MX network'
      tags:
        - appliance
        - configure
        - firewall
        - oneToManyNatRules
  '/networks/{networkId}/appliance/firewall/oneToOneNatRules':
    get:
      description: 'Return the 1:1 NAT mapping rules for an MX network'
      operationId: getNetworkApplianceFirewallOneToOneNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Return the 1:1 NAT mapping rules for an MX network'
      tags:
        - appliance
        - configure
        - firewall
        - oneToOneNatRules
    put:
      consumes:
        - application/json
      description: 'Set the 1:1 NAT mapping rules for an MX network'
      operationId: updateNetworkApplianceFirewallOneToOneNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              rules:
                - allowedInbound:
                    - allowedIps:
                        - 10.82.112.0/24
                        - 10.82.0.0/16
                      destinationPorts:
                        - '80'
                      protocol: tcp
                    - allowedIps:
                        - 10.81.110.5
                        - 10.81.0.0/16
                      destinationPorts:
                        - '8080'
                      protocol: udp
                  lanIp: 192.168.128.22
                  name: Service behind NAT
                  publicIp: 146.12.3.33
                  uplink: internet1
            properties:
              rules:
                description: 'An array of 1:1 nat rules'
                items:
                  properties:
                    allowedInbound:
                      description: >-
                        The ports this mapping will provide access on, and the
                        remote IPs that will be allowed access to the resource
                      items:
                        properties:
                          allowedIps:
                            description: >-
                              An array of ranges of WAN IP addresses that are
                              allowed to make inbound connections on the
                              specified ports or port ranges, or 'any'
                            items:
                              type: string
                            type: array
                          destinationPorts:
                            description: >-
                              An array of ports or port ranges that will be
                              forwarded to the host on the LAN
                            items:
                              type: string
                            type: array
                          protocol:
                            description: >-
                              Either of the following: 'tcp', 'udp', 'icmp-ping'
                              or 'any'
                            enum:
                              - tcp
                              - udp
                              - icmp-ping
                              - any
                            type: string
                        type: object
                      type: array
                    lanIp:
                      description: >-
                        The IP address of the server or device that hosts the
                        internal resource that you wish to make available on the
                        WAN
                      type: string
                    name:
                      description: A descriptive name for the rule
                      type: string
                    publicIp:
                      description: >-
                        The IP address that will be used to access the internal
                        resource from the WAN
                      type: string
                    uplink:
                      description: >-
                        The physical WAN interface on which the traffic will
                        arrive ('internet1' or, if available, 'internet2')
                      enum:
                        - internet1
                        - internet2
                      type: string
                  required:
                    - lanIp
                  type: object
                type: array
            required:
              - rules
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Set the 1:1 NAT mapping rules for an MX network'
      tags:
        - appliance
        - configure
        - firewall
        - oneToOneNatRules
  '/networks/{networkId}/appliance/firewall/portForwardingRules':
    get:
      description: Return the port forwarding rules for an MX network
      operationId: getNetworkApplianceFirewallPortForwardingRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the port forwarding rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - portForwardingRules
    put:
      consumes:
        - application/json
      description: Update the port forwarding rules for an MX network
      operationId: updateNetworkApplianceFirewallPortForwardingRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              rules:
                - allowedIps:
                    - any
                  lanIp: 192.168.128.1
                  localPort: 442-443
                  name: Description of Port Forwarding Rule
                  protocol: tcp
                  publicPort: 8100-8101
                  uplink: both
            properties:
              rules:
                description: An array of port forwarding params
                items:
                  properties:
                    allowedIps:
                      description: >-
                        An array of ranges of WAN IP addresses that are allowed
                        to make inbound connections on the specified ports or
                        port ranges (or any)
                      items:
                        type: string
                      type: array
                    lanIp:
                      description: >-
                        The IP address of the server or device that hosts the
                        internal resource that you wish to make available on the
                        WAN
                      type: string
                    localPort:
                      description: >-
                        A port or port ranges that will receive the forwarded
                        traffic from the WAN
                      type: string
                    name:
                      description: A descriptive name for the rule
                      type: string
                    protocol:
                      description: TCP or UDP
                      enum:
                        - tcp
                        - udp
                      type: string
                    publicPort:
                      description: >-
                        A port or port ranges that will be forwarded to the host
                        on the LAN
                      type: string
                    uplink:
                      description: >-
                        The physical WAN interface on which the traffic will
                        arrive ('internet1' or, if available, 'internet2' or
                        'both')
                      enum:
                        - internet1
                        - internet2
                        - both
                      type: string
                  required:
                    - lanIp
                    - publicPort
                    - localPort
                    - allowedIps
                    - protocol
                  type: object
                type: array
            required:
              - rules
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the port forwarding rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - portForwardingRules
  '/networks/{networkId}/appliance/ports':
    get:
      description: List per-port VLAN settings for all ports of a MX.
      operationId: getNetworkAppliancePorts
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List per-port VLAN settings for all ports of a MX.
      tags:
        - appliance
        - configure
        - ports
  '/networks/{networkId}/appliance/ports/{portId}':
    get:
      description: Return per-port VLAN settings for a single MX port.
      operationId: getNetworkAppliancePort
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: portId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return per-port VLAN settings for a single MX port.
      tags:
        - appliance
        - configure
        - ports
    put:
      consumes:
        - application/json
      description: Update the per-port VLAN settings for a single MX port.
      operationId: updateNetworkAppliancePort
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: portId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              accessPolicy: open
              dropUntaggedTraffic: false
              enabled: true
              type: access
              vlan: 3
            properties:
              accessPolicy:
                description: >-
                  The name of the policy. Only applicable to Access ports. Valid
                  values are: 'open', '8021x-radius', 'mac-radius',
                  'hybris-radius' for MX64 or Z3 or any MX supporting the per
                  port authentication feature. Otherwise, 'open' is the only
                  valid value and 'open' is the default value if the field is
                  missing.
                type: string
              allowedVlans:
                description: >-
                  Comma-delimited list of the VLAN ID's allowed on the port, or
                  'all' to permit all VLAN's on the port.
                type: string
              dropUntaggedTraffic:
                description: >-
                  Trunk port can Drop all Untagged traffic. When true, no VLAN
                  is required. Access ports cannot have dropUntaggedTraffic set
                  to true.
                type: boolean
              enabled:
                description: The status of the port
                type: boolean
              type:
                description: 'The type of the port: ''access'' or ''trunk''.'
                type: string
              vlan:
                description: >-
                  Native VLAN when the port is in Trunk mode. Access VLAN when
                  the port is in Access mode.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the per-port VLAN settings for a single MX port.
      tags:
        - appliance
        - configure
        - ports
  '/networks/{networkId}/appliance/security/events':
    get:
      description: List the security events for a network
      operationId: getNetworkApplianceSecurityEvents
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. Data is gathered after
            the specified t0 value. The maximum lookback period is 365 days from
            today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 365
            days after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 365 days. The
            default is 31 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 100.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            Sorted order of security events based on event detection time. Order
            options are 'ascending' or 'descending'. Default is ascending order.
          enum:
            - ascending
            - descending
          in: query
          name: sortOrder
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the security events for a network
      tags:
        - appliance
        - monitor
        - security
        - events
  '/networks/{networkId}/appliance/security/intrusion':
    get:
      description: Returns all supported intrusion settings for an MX network
      operationId: getNetworkApplianceSecurityIntrusion
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns all supported intrusion settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - intrusion
    put:
      consumes:
        - application/json
      description: Set the supported intrusion settings for an MX network
      operationId: updateNetworkApplianceSecurityIntrusion
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              idsRulesets: balanced
              mode: prevention
              protectedNetworks:
                excludedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
                includedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
                  - 169.254.0.0/16
                  - 172.16.0.0/12
                useDefault: false
            properties:
              idsRulesets:
                description: >-
                  Set the detection ruleset 'connectivity'/'balanced'/'security'
                  (optional - omitting will leave current config unchanged).
                  Default value is 'balanced' if none currently saved
                enum:
                  - connectivity
                  - balanced
                  - security
                type: string
              mode:
                description: >-
                  Set mode to 'disabled'/'detection'/'prevention' (optional -
                  omitting will leave current config unchanged)
                enum:
                  - prevention
                  - detection
                  - disabled
                type: string
              protectedNetworks:
                description: >-
                  Set the included/excluded networks from the intrusion engine
                  (optional - omitting will leave current config unchanged).
                  This is available only in 'passthrough' mode
                properties:
                  excludedCidr:
                    description: >-
                      list of IP addresses or subnets being excluded from
                      protection (required if 'useDefault' is false)
                    items:
                      type: string
                    type: array
                  includedCidr:
                    description: >-
                      list of IP addresses or subnets being protected (required
                      if 'useDefault' is false)
                    items:
                      type: string
                    type: array
                  useDefault:
                    description: >-
                      true/false whether to use special IPv4 addresses:
                      https://tools.ietf.org/html/rfc5735 (required). Default
                      value is true if none currently saved
                    type: boolean
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Set the supported intrusion settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - intrusion
  '/networks/{networkId}/appliance/security/malware':
    get:
      description: Returns all supported malware settings for an MX network
      operationId: getNetworkApplianceSecurityMalware
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns all supported malware settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - malware
    put:
      consumes:
        - application/json
      description: Set the supported malware settings for an MX network
      operationId: updateNetworkApplianceSecurityMalware
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              allowedFiles:
                - comment: allow ZIP file
                  sha256: >-
                    e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
              allowedUrls:
                - comment: allow example.org
                  url: example.org
                - comment: allow help.com.au
                  url: help.com.au
              mode: enabled
            properties:
              allowedFiles:
                description: >-
                  The sha256 digests of files that should be permitted by the
                  malware detection engine. If omitted, the current config will
                  remain unchanged. This is available only if your network
                  supports AMP allow listing
                items:
                  properties:
                    comment:
                      description: Comment about the allowed entity
                      type: string
                    sha256:
                      description: The file sha256 hash to allow
                      type: string
                  required:
                    - sha256
                    - comment
                  type: object
                type: array
              allowedUrls:
                description: >-
                  The urls that should be permitted by the malware detection
                  engine. If omitted, the current config will remain unchanged.
                  This is available only if your network supports AMP allow
                  listing
                items:
                  properties:
                    comment:
                      description: Comment about the allowed entity
                      type: string
                    url:
                      description: The url to allow
                      type: string
                  required:
                    - url
                    - comment
                  type: object
                type: array
              mode:
                description: >-
                  Set mode to 'enabled' to enable malware prevention, otherwise
                  'disabled'
                enum:
                  - enabled
                  - disabled
                type: string
            required:
              - mode
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Set the supported malware settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - malware
  '/networks/{networkId}/appliance/settings':
    get:
      description: Return the appliance settings for a network
      operationId: getNetworkApplianceSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the appliance settings for a network
      tags:
        - appliance
        - configure
        - settings
  '/networks/{networkId}/appliance/singleLan':
    get:
      description: Return single LAN configuration
      operationId: getNetworkApplianceSingleLan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return single LAN configuration
      tags:
        - appliance
        - configure
        - singleLan
    put:
      consumes:
        - application/json
      description: Update single LAN configuration
      operationId: updateNetworkApplianceSingleLan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              applianceIp:
                description: The appliance IP address of the single LAN
                type: string
              subnet:
                description: The subnet of the single LAN configuration
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update single LAN configuration
      tags:
        - appliance
        - configure
        - singleLan
  '/networks/{networkId}/appliance/staticRoutes':
    get:
      description: List the static routes for an MX or teleworker network
      operationId: getNetworkApplianceStaticRoutes
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the static routes for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
    post:
      consumes:
        - application/json
      description: Add a static route for an MX or teleworker network
      operationId: createNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              gatewayIp: 1.2.3.5
              name: My route
              subnet: 192.168.1.0/24
            properties:
              gatewayIp:
                description: The gateway IP (next hop) of the static route
                type: string
              name:
                description: The name of the new static route
                type: string
              subnet:
                description: The subnet of the static route
                type: string
            required:
              - name
              - subnet
              - gatewayIp
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a static route for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
  '/networks/{networkId}/appliance/staticRoutes/{staticRouteId}':
    delete:
      description: Delete a static route from an MX or teleworker network
      operationId: deleteNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a static route from an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
    get:
      description: Return a static route for an MX or teleworker network
      operationId: getNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a static route for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
    put:
      consumes:
        - application/json
      description: Update a static route for an MX or teleworker network
      operationId: updateNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              fixedIpAssignments:
                '22:33:44:55:66:77':
                  ip: 1.2.3.4
                  name: Some client name
              name: My route
              reservedIpRanges:
                - comment: A reserved IP range
                  end: 192.168.1.1
                  start: 192.168.1.0
              subnet: 192.168.1.0/24
            properties:
              enabled:
                description: The enabled state of the static route
                type: boolean
              fixedIpAssignments:
                description: >-
                  The DHCP fixed IP assignments on the static route. This should
                  be an object that contains mappings from MAC addresses to
                  objects that themselves each contain "ip" and "name" string
                  fields. See the sample request/response for more details.
                properties: {}
                type: object
              gatewayIp:
                description: The gateway IP (next hop) of the static route
                type: string
              name:
                description: The name of the static route
                type: string
              reservedIpRanges:
                description: The DHCP reserved IP ranges on the static route
                items:
                  properties:
                    comment:
                      description: A text comment for the reserved range
                      type: string
                    end:
                      description: The last IP in the reserved range
                      type: string
                    start:
                      description: The first IP in the reserved range
                      type: string
                  required:
                    - start
                    - end
                    - comment
                  type: object
                type: array
              subnet:
                description: The subnet of the static route
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a static route for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
  '/networks/{networkId}/appliance/trafficShaping':
    get:
      description: Display the traffic shaping settings for an MX network
      operationId: getNetworkApplianceTrafficShaping
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Display the traffic shaping settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
    put:
      consumes:
        - application/json
      description: Update the traffic shaping settings for an MX network
      operationId: updateNetworkApplianceTrafficShaping
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              globalBandwidthLimits:
                limitDown: 5120
                limitUp: 2048
            properties:
              globalBandwidthLimits:
                description: Global per-client bandwidth limit
                properties:
                  limitDown:
                    description: >-
                      The download bandwidth limit in Kbps. (0 represents no
                      limit.)
                    type: integer
                  limitUp:
                    description: >-
                      The upload bandwidth limit in Kbps. (0 represents no
                      limit.)
                    type: integer
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the traffic shaping settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
  '/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses':
    get:
      description: List all custom performance classes for an MX network
      operationId: getNetworkApplianceTrafficShapingCustomPerformanceClasses
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List all custom performance classes for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
    post:
      consumes:
        - application/json
      description: Add a custom performance class for an MX network
      operationId: createNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              maxJitter: 100
              maxLatency: 100
              maxLossPercentage: 5
              name: myCustomPerformanceClass
            properties:
              maxJitter:
                description: Maximum jitter in milliseconds
                type: integer
              maxLatency:
                description: Maximum latency in milliseconds
                type: integer
              maxLossPercentage:
                description: Maximum percentage of packet loss
                type: integer
              name:
                description: Name of the custom performance class
                type: string
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a custom performance class for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
  '/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}':
    delete:
      description: Delete a custom performance class from an MX network
      operationId: deleteNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: customPerformanceClassId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a custom performance class from an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
    get:
      description: Return a custom performance class for an MX network
      operationId: getNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: customPerformanceClassId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a custom performance class for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
    put:
      consumes:
        - application/json
      description: Update a custom performance class for an MX network
      operationId: updateNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: customPerformanceClassId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              maxJitter: 100
              maxLatency: 100
              maxLossPercentage: 5
              name: myCustomPerformanceClass
            properties:
              maxJitter:
                description: Maximum jitter in milliseconds
                type: integer
              maxLatency:
                description: Maximum latency in milliseconds
                type: integer
              maxLossPercentage:
                description: Maximum percentage of packet loss
                type: integer
              name:
                description: Name of the custom performance class
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a custom performance class for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
  '/networks/{networkId}/appliance/trafficShaping/rules':
    get:
      description: Display the traffic shaping settings rules for an MX network
      operationId: getNetworkApplianceTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Display the traffic shaping settings rules for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - rules
    put:
      consumes:
        - application/json
      description: Update the traffic shaping settings rules for an MX network
      operationId: updateNetworkApplianceTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              defaultRulesEnabled: true
              rules:
                - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: '9090'
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: '10.1.0.0/16:80'
                    - type: localNet
                      value: 192.168.0.0/16
                    - type: applicationCategory
                      value:
                        id: 'meraki:layer7/category/2'
                        name: Blogging
                    - type: application
                      value:
                        id: 'meraki:layer7/application/133'
                        name: Battle.net
                  dscpTagValue: null
                  perClientBandwidthLimits:
                    bandwidthLimits:
                      limitDown: 1000000
                      limitUp: 1000000
                    settings: custom
                  priority: normal
            properties:
              defaultRulesEnabled:
                description: >-
                  Whether default traffic shaping rules are enabled (true) or
                  disabled (false). There are 4 default rules, which can be seen
                  on your network's traffic shaping page. Note that default
                  rules count against the rule limit of 8.
                type: boolean
              rules:
                description: |2
                      An array of traffic shaping rules. Rules are applied in the order that
                      they are specified in. An empty list (or null) means no rules. Note that
                      you are allowed a maximum of 8 rules.
                items:
                  properties:
                    definitions:
                      description: |2
                            A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                      items:
                        properties:
                          type:
                            description: >-
                              The type of definition. Can be one of
                              'application', 'applicationCategory', 'host',
                              'port', 'ipRange' or 'localNet'.
                            enum:
                              - application
                              - applicationCategory
                              - host
                              - port
                              - ipRange
                              - localNet
                            type: string
                          value:
                            description: |2
                                  If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                  a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                  "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                  custom ports.
                                   If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                  with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                  application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                  endpoint).
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      type: array
                    dscpTagValue:
                      description: |2
                            The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                            For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                      type: integer
                    perClientBandwidthLimits:
                      description: |2
                            An object describing the bandwidth settings for your rule.
                      properties:
                        bandwidthLimits:
                          description: >-
                            The bandwidth limits object, specifying the upload
                            ('limitUp') and download ('limitDown') speed in
                            Kbps. These are only enforced if 'settings' is set
                            to 'custom'.
                          properties:
                            limitDown:
                              description: 'The maximum download limit (integer, in Kbps).'
                              type: integer
                            limitUp:
                              description: 'The maximum upload limit (integer, in Kbps).'
                              type: integer
                          type: object
                        settings:
                          description: >-
                            How bandwidth limits are applied by your rule. Can
                            be one of 'network default', 'ignore' or 'custom'.
                          type: string
                      type: object
                    priority:
                      description: |2
                            A string, indicating the priority level for packets bound to your rule.
                            Can be 'low', 'normal' or 'high'.
                      type: string
                  required:
                    - definitions
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the traffic shaping settings rules for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - rules
  '/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth':
    get:
      description: Returns the uplink bandwidth settings for your MX network.
      operationId: getNetworkApplianceTrafficShapingUplinkBandwidth
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the uplink bandwidth settings for your MX network.
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkBandwidth
    put:
      consumes:
        - application/json
      description: Updates the uplink bandwidth settings for your MX network.
      operationId: updateNetworkApplianceTrafficShapingUplinkBandwidth
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              bandwidthLimits:
                cellular:
                  limitDown: 51200
                  limitUp: 51200
                wan1:
                  limitDown: 1000000
                  limitUp: 1000000
                wan2:
                  limitDown: 1000000
                  limitUp: 1000000
            properties:
              bandwidthLimits:
                description: >-
                  A mapping of uplinks to their bandwidth settings (be sure to
                  check which uplinks are supported for your network)
                properties:
                  cellular:
                    description: The bandwidth settings for the 'cellular' uplink
                    properties:
                      limitDown:
                        description: >-
                          The maximum download limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                      limitUp:
                        description: >-
                          The maximum upload limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                    type: object
                  wan1:
                    description: The bandwidth settings for the 'wan1' uplink
                    properties:
                      limitDown:
                        description: >-
                          The maximum download limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                      limitUp:
                        description: >-
                          The maximum upload limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                    type: object
                  wan2:
                    description: The bandwidth settings for the 'wan2' uplink
                    properties:
                      limitDown:
                        description: >-
                          The maximum download limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                      limitUp:
                        description: >-
                          The maximum upload limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                    type: object
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates the uplink bandwidth settings for your MX network.
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkBandwidth
  '/networks/{networkId}/appliance/trafficShaping/uplinkSelection':
    get:
      description: Show uplink selection settings for an MX network
      operationId: getNetworkApplianceTrafficShapingUplinkSelection
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Show uplink selection settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkSelection
    put:
      consumes:
        - application/json
      description: Update uplink selection settings for an MX network
      operationId: updateNetworkApplianceTrafficShapingUplinkSelection
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              activeActiveAutoVpnEnabled: true
              defaultUplink: wan1
              loadBalancingEnabled: true
              vpnTrafficUplinkPreferences:
                - failOverCriterion: poorPerformance
                  performanceClass:
                    customPerformanceClassId: '123456'
                    type: custom
                  preferredUplink: wan2
                  trafficFilters:
                    - type: applicationCategory
                      value:
                        id: 'meraki:layer7/category/1'
                    - type: application
                      value:
                        id: 'meraki:layer7/application/33'
                    - type: custom
                      value:
                        destination:
                          cidr: any
                          port: any
                        protocol: tcp
                        source:
                          cidr: 192.168.1.0/24
                          port: any
                    - type: custom
                      value:
                        destination:
                          host: 200
                          network: L_23456789
                          port: any
                          vlan: 20
                        protocol: tcp
                        source:
                          cidr: any
                          port: any
                    - type: custom
                      value:
                        destination:
                          fqdn: www.google.com
                          port: 1-1024
                        protocol: tcp
                        source:
                          cidr: any
                          port: any
                - preferredUplink: defaultUplink
                  trafficFilters:
                    - type: application
                      value:
                        id: 'meraki:layer7/application/9'
                - preferredUplink: bestForVoIP
                  trafficFilters:
                    - type: application
                      value:
                        id: 'meraki:layer7/application/106'
                - performanceClass:
                    builtinPerformanceClassName: VoIP
                    type: builtin
                  preferredUplink: loadBalancing
                  trafficFilters:
                    - type: application
                      value:
                        id: 'meraki:layer7/application/107'
                - performanceClass:
                    customPerformanceClassId: '123456'
                    type: custom
                  preferredUplink: loadBalancing
                  trafficFilters:
                    - type: application
                      value:
                        id: 'meraki:layer7/application/162'
                - failOverCriterion: poorPerformance
                  performanceClass:
                    builtinPerformanceClassName: VoIP
                    type: builtin
                  preferredUplink: wan2
                  trafficFilters:
                    - type: application
                      value:
                        id: 'meraki:layer7/application/168'
                - failOverCriterion: poorPerformance
                  performanceClass:
                    customPerformanceClassId: '123456'
                    type: custom
                  preferredUplink: wan2
                  trafficFilters:
                    - type: application
                      value:
                        id: 'meraki:layer7/application/171'
              wanTrafficUplinkPreferences:
                - preferredUplink: wan2
                  trafficFilters:
                    - type: custom
                      value:
                        destination:
                          cidr: any
                          port: any
                        protocol: tcp
                        source:
                          cidr: 192.168.1.0/24
                          port: any
                - preferredUplink: wan1
                  trafficFilters:
                    - type: custom
                      value:
                        destination:
                          cidr: any
                          port: any
                        protocol: tcp
                        source:
                          host: 254
                          port: 1-1024
                          vlan: 10
            properties:
              activeActiveAutoVpnEnabled:
                description: Toggle for enabling or disabling active-active AutoVPN
                type: boolean
              defaultUplink:
                description: 'The default uplink. Must be one of: ''wan1'' or ''wan2'''
                enum:
                  - wan1
                  - wan2
                type: string
              loadBalancingEnabled:
                description: Toggle for enabling or disabling load balancing
                type: boolean
              vpnTrafficUplinkPreferences:
                description: Array of uplink preference rules for VPN traffic
                items:
                  properties:
                    failOverCriterion:
                      description: >-
                        Fail over criterion for this uplink preference rule.
                        Must be one of: 'poorPerformance' or 'uplinkDown'
                      enum:
                        - poorPerformance
                        - uplinkDown
                      type: string
                    performanceClass:
                      description: >-
                        Performance class setting for this uplink preference
                        rule
                      properties:
                        builtinPerformanceClassName:
                          description: >-
                            Name of builtin performance class, must be present
                            when performanceClass type is 'builtin', and value
                            must be one of: 'VoIP'
                          enum:
                            - VoIP
                          type: string
                        customPerformanceClassId:
                          description: >-
                            ID of created custom performance class, must be
                            present when performanceClass type is 'custom'
                          type: string
                        type:
                          description: >-
                            Type of this performance class. Must be one of:
                            'builtin' or 'custom'
                          enum:
                            - builtin
                            - custom
                          type: string
                      required:
                        - type
                      type: object
                    preferredUplink:
                      description: >-
                        Preferred uplink for this uplink preference rule. Must
                        be one of: 'wan1', 'wan2', 'bestForVoIP',
                        'loadBalancing' or 'defaultUplink'
                      enum:
                        - wan1
                        - wan2
                        - bestForVoIP
                        - loadBalancing
                        - defaultUplink
                      type: string
                    trafficFilters:
                      description: Array of traffic filters for this uplink preference rule
                      items:
                        properties:
                          type:
                            description: >-
                              Type of this traffic filter. Must be one of:
                              'applicationCategory', 'application' or 'custom'
                            enum:
                              - applicationCategory
                              - application
                              - custom
                            type: string
                          value:
                            description: Value object of this traffic filter
                            properties:
                              destination:
                                description: Destination of this custom type traffic filter
                                properties:
                                  cidr:
                                    description: >-
                                      CIDR format address, or "any". E.g.:
                                      "192.168.10.0/24",  "192.168.10.1" (same
                                      as "192.168.10.1/32"), "0.0.0.0/0" (same
                                      as "any")
                                    type: string
                                  fqdn:
                                    description: >-
                                      FQDN format address. Currently only
                                      availabe in 'destination' of
                                      'vpnTrafficUplinkPreference' object. E.g.:
                                      'www.google.com'
                                    type: string
                                  host:
                                    description: >-
                                      Host ID in the VLAN, should be used along
                                      with 'vlan', and not exceed the vlan
                                      subnet capacity. Currently only available
                                      under a template network.
                                    type: integer
                                  network:
                                    description: >-
                                      Meraki network ID. Currently only
                                      available under a template network, and
                                      the value should be ID of either same
                                      template network, or another template
                                      network currently. E.g.: "L_12345678".
                                    type: string
                                  port:
                                    description: >-
                                      E.g.: "any", "0" (also means "any"),
                                      "8080", "1-1024"
                                    type: string
                                  vlan:
                                    description: >-
                                      VLAN ID of the configured VLAN in the
                                      Meraki network. Currently only available
                                      under a template network.
                                    type: integer
                                type: object
                              id:
                                description: >-
                                  ID of this applicationCategory or application
                                  type traffic filter. E.g.:
                                  "meraki:layer7/category/1",
                                  "meraki:layer7/application/4"
                                type: string
                              protocol:
                                description: >-
                                  Protocol of this custom type traffic filter.
                                  Must be one of: 'tcp', 'udp', 'icmp' or 'any'
                                enum:
                                  - tcp
                                  - udp
                                  - icmp
                                  - any
                                type: string
                              source:
                                description: Source of this custom type traffic filter
                                properties:
                                  cidr:
                                    description: >-
                                      CIDR format address, or "any". E.g.:
                                      "192.168.10.0/24",  "192.168.10.1" (same
                                      as "192.168.10.1/32"), "0.0.0.0/0" (same
                                      as "any")
                                    type: string
                                  host:
                                    description: >-
                                      Host ID in the VLAN, should be used along
                                      with 'vlan', and not exceed the vlan
                                      subnet capacity. Currently only available
                                      under a template network.
                                    type: integer
                                  network:
                                    description: >-
                                      Meraki network ID. Currently only
                                      available under a template network, and
                                      the value should be ID of either same
                                      template network, or another template
                                      network currently. E.g.: "L_12345678".
                                    type: string
                                  port:
                                    description: >-
                                      E.g.: "any", "0" (also means "any"),
                                      "8080", "1-1024"
                                    type: string
                                  vlan:
                                    description: >-
                                      VLAN ID of the configured VLAN in the
                                      Meraki network. Currently only available
                                      under a template network.
                                    type: integer
                                type: object
                            type: object
                        required:
                          - type
                          - value
                        type: object
                      type: array
                  required:
                    - trafficFilters
                    - preferredUplink
                  type: object
                type: array
              wanTrafficUplinkPreferences:
                description: Array of uplink preference rules for WAN traffic
                items:
                  properties:
                    preferredUplink:
                      description: >-
                        Preferred uplink for this uplink preference rule. Must
                        be one of: 'wan1' or 'wan2'
                      enum:
                        - wan1
                        - wan2
                      type: string
                    trafficFilters:
                      description: Array of traffic filters for this uplink preference rule
                      items:
                        properties:
                          type:
                            description: >-
                              Type of this traffic filter. Must be one of:
                              'custom'
                            enum:
                              - custom
                            type: string
                          value:
                            description: Value object of this traffic filter
                            properties:
                              destination:
                                description: Destination of this custom type traffic filter
                                properties:
                                  cidr:
                                    description: >-
                                      CIDR format address, or "any". E.g.:
                                      "192.168.10.0/24",  "192.168.10.1" (same
                                      as "192.168.10.1/32"), "0.0.0.0/0" (same
                                      as "any")
                                    type: string
                                  port:
                                    description: >-
                                      E.g.: "any", "0" (also means "any"),
                                      "8080", "1-1024"
                                    type: string
                                type: object
                              protocol:
                                description: >-
                                  Protocol of this custom type traffic filter.
                                  Must be one of: 'tcp', 'udp' or 'any'
                                enum:
                                  - tcp
                                  - udp
                                  - any
                                type: string
                              source:
                                description: Source of this custom type traffic filter
                                properties:
                                  cidr:
                                    description: >-
                                      CIDR format address, or "any". E.g.:
                                      "192.168.10.0/24",  "192.168.10.1" (same
                                      as "192.168.10.1/32"), "0.0.0.0/0" (same
                                      as "any")
                                    type: string
                                  host:
                                    description: >-
                                      Host ID in the VLAN, should be used along
                                      with 'vlan', and not exceed the vlan
                                      subnet capacity. Currently only available
                                      under a template network.
                                    type: integer
                                  port:
                                    description: >-
                                      E.g.: "any", "0" (also means "any"),
                                      "8080", "1-1024"
                                    type: string
                                  vlan:
                                    description: >-
                                      VLAN ID of the configured VLAN in the
                                      Meraki network. Currently only available
                                      under a template network.
                                    type: integer
                                type: object
                            required:
                              - source
                              - destination
                            type: object
                        required:
                          - type
                          - value
                        type: object
                      type: array
                  required:
                    - trafficFilters
                    - preferredUplink
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update uplink selection settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkSelection
  '/networks/{networkId}/appliance/uplinks/usageHistory':
    get:
      description: Get the sent and received bytes for each uplink of a network.
      operationId: getNetworkApplianceUplinksUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 365 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 14 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 14 days. The default
            is 10 minutes.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60.
          in: query
          name: resolution
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get the sent and received bytes for each uplink of a network.
      tags:
        - appliance
        - monitor
        - uplinks
        - usageHistory
  '/networks/{networkId}/appliance/vlans':
    get:
      description: List the VLANs for an MX network
      operationId: getNetworkApplianceVlans
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the VLANs for an MX network
      tags:
        - appliance
        - configure
        - vlans
    post:
      consumes:
        - application/json
      description: Add a VLAN
      operationId: createNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              applianceIp: 192.168.1.2
              groupPolicyId: '101'
              id: '1234'
              name: My VLAN
              subnet: 192.168.1.0/24
            properties:
              applianceIp:
                description: The local IP of the appliance on the VLAN
                type: string
              groupPolicyId:
                description: The id of the desired group policy to apply to the VLAN
                type: string
              id:
                description: The VLAN ID of the new VLAN (must be between 1 and 4094)
                type: string
              name:
                description: The name of the new VLAN
                type: string
              subnet:
                description: The subnet of the VLAN
                type: string
            required:
              - id
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a VLAN
      tags:
        - appliance
        - configure
        - vlans
  '/networks/{networkId}/appliance/vlans/settings':
    get:
      description: Returns the enabled status of VLANs for the network
      operationId: getNetworkApplianceVlansSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the enabled status of VLANs for the network
      tags:
        - appliance
        - configure
        - vlans
        - settings
    put:
      consumes:
        - application/json
      description: Enable/Disable VLANs for the given network
      operationId: updateNetworkApplianceVlansSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              vlansEnabled: true
            properties:
              vlansEnabled:
                description: >-
                  Boolean indicating whether to enable (true) or disable (false)
                  VLANs for the network
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Enable/Disable VLANs for the given network
      tags:
        - appliance
        - configure
        - vlans
        - settings
  '/networks/{networkId}/appliance/vlans/{vlanId}':
    delete:
      description: Delete a VLAN from a network
      operationId: deleteNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: vlanId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a VLAN from a network
      tags:
        - appliance
        - configure
        - vlans
    get:
      description: Return a VLAN
      operationId: getNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: vlanId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a VLAN
      tags:
        - appliance
        - configure
        - vlans
    put:
      consumes:
        - application/json
      description: Update a VLAN
      operationId: updateNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: vlanId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              applianceIp: 192.168.1.2
              dhcpBootFilename: null
              dhcpBootNextServer: null
              dhcpBootOptionsEnabled: false
              dhcpHandling: Run a DHCP server
              dhcpLeaseTime: 1 day
              dhcpOptions:
                - code: 5
                  type: text
                  value: five
              dnsNameservers: google_dns
              fixedIpAssignments:
                '22:33:44:55:66:77':
                  ip: 1.2.3.4
                  name: Some client name
              groupPolicyId: '101'
              name: My VLAN
              reservedIpRanges:
                - comment: A reserved IP range
                  end: 192.168.1.1
                  start: 192.168.1.0
              subnet: 192.168.1.0/24
            properties:
              applianceIp:
                description: The local IP of the appliance on the VLAN
                type: string
              dhcpBootFilename:
                description: DHCP boot option for boot filename
                type: string
              dhcpBootNextServer:
                description: >-
                  DHCP boot option to direct boot clients to the server to load
                  the boot file from
                type: string
              dhcpBootOptionsEnabled:
                description: Use DHCP boot options specified in other properties
                type: boolean
              dhcpHandling:
                description: >-
                  The appliance's handling of DHCP requests on this VLAN. One
                  of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do
                  not respond to DHCP requests'
                enum:
                  - Run a DHCP server
                  - Relay DHCP to another server
                  - Do not respond to DHCP requests
                type: string
              dhcpLeaseTime:
                description: >-
                  The term of DHCP leases if the appliance is running a DHCP
                  server on this VLAN. One of: '30 minutes', '1 hour', '4
                  hours', '12 hours', '1 day' or '1 week'
                enum:
                  - 30 minutes
                  - 1 hour
                  - 4 hours
                  - 12 hours
                  - 1 day
                  - 1 week
                type: string
              dhcpOptions:
                description: >-
                  The list of DHCP options that will be included in DHCP
                  responses. Each object in the list should have "code", "type",
                  and "value" properties.
                items:
                  properties:
                    code:
                      description: >-
                        The code for the DHCP option. This should be an integer
                        between 2 and 254.
                      type: string
                    type:
                      description: >-
                        The type for the DHCP option. One of: 'text', 'ip',
                        'hex' or 'integer'
                      enum:
                        - text
                        - ip
                        - hex
                        - integer
                      type: string
                    value:
                      description: The value for the DHCP option
                      type: string
                  required:
                    - code
                    - type
                    - value
                  type: object
                type: array
              dhcpRelayServerIps:
                description: >-
                  The IPs of the DHCP servers that DHCP requests should be
                  relayed to
                items:
                  type: string
                type: array
              dnsNameservers:
                description: >-
                  The DNS nameservers used for DHCP responses, either
                  "upstream_dns", "google_dns", "opendns", or a newline
                  seperated string of IP addresses or domain names
                type: string
              fixedIpAssignments:
                description: >-
                  The DHCP fixed IP assignments on the VLAN. This should be an
                  object that contains mappings from MAC addresses to objects
                  that themselves each contain "ip" and "name" string fields.
                  See the sample request/response for more details.
                properties: {}
                type: object
              groupPolicyId:
                description: The id of the desired group policy to apply to the VLAN
                type: string
              name:
                description: The name of the VLAN
                type: string
              reservedIpRanges:
                description: The DHCP reserved IP ranges on the VLAN
                items:
                  properties:
                    comment:
                      description: A text comment for the reserved range
                      type: string
                    end:
                      description: The last IP in the reserved range
                      type: string
                    start:
                      description: The first IP in the reserved range
                      type: string
                  required:
                    - start
                    - end
                    - comment
                  type: object
                type: array
              subnet:
                description: The subnet of the VLAN
                type: string
              vpnNatSubnet:
                description: >-
                  The translated VPN subnet if VPN and VPN subnet translation
                  are enabled on the VLAN
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a VLAN
      tags:
        - appliance
        - configure
        - vlans
  '/networks/{networkId}/appliance/vpn/bgp':
    get:
      description: Return a Hub BGP Configuration
      operationId: getNetworkApplianceVpnBgp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a Hub BGP Configuration
      tags:
        - appliance
        - configure
        - vpn
        - bgp
    put:
      consumes:
        - application/json
      description: Update a Hub BGP Configuration
      operationId: updateNetworkApplianceVpnBgp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              asNumber: 64515
              enabled: true
              ibgpHoldTimer: 120
              neighbors:
                - allowTransit: true
                  ebgpHoldTimer: 180
                  ebgpMultihop: 2
                  ip: 10.10.10.22
                  receiveLimit: 120
                  remoteAsNumber: 64343
            properties:
              asNumber:
                description: >-
                  An Autonomous System Number (ASN) is required if you are to
                  run BGP and peer with another BGP Speaker outside of the Auto
                  VPN domain. This ASN will be applied to the entire Auto VPN
                  domain. The entire 4-byte ASN range is supported. So, the ASN
                  must be an integer between 1 and 4294967295. When absent, this
                  field is not updated. If no value exists then it defaults to
                  64512.
                type: integer
              enabled:
                description: >-
                  Boolean value to enable or disable the BGP configuration. When
                  BGP is enabled, the asNumber (ASN) will be autopopulated with
                  the preconfigured ASN at other Hubs or a default value if
                  there is no ASN configured.
                type: boolean
              ibgpHoldTimer:
                description: >-
                  The IBGP holdtimer in seconds. The IBGP holdtimer must be an
                  integer between 12 and 240. When absent, this field is not
                  updated. If no value exists then it defaults to 240.
                type: integer
              neighbors:
                description: >-
                  List of BGP neighbors. This list replaces the existing set of
                  neighbors. When absent, this field is not updated.
                items:
                  properties:
                    allowTransit:
                      description: >-
                        When this feature is on, the Meraki device will
                        advertise routes learned from other Autonomous Systems,
                        thereby allowing traffic between Autonomous Systems to
                        transit this AS. When absent, it defaults to false.
                      type: boolean
                    ebgpHoldTimer:
                      description: >-
                        The EBGP hold timer in seconds for each neighbor. The
                        EBGP hold timer must be an integer between 12 and 240.
                      type: integer
                    ebgpMultihop:
                      description: >-
                        Configure this if the neighbor is not adjacent. The EBGP
                        multi-hop must be an integer between 1 and 255.
                      type: integer
                    ip:
                      description: IP address of the neighbor.
                      type: string
                    receiveLimit:
                      description: >-
                        The receive limit is the maximum number of routes that
                        can be received from any BGP peer. The receive limit
                        must be an integer between 0 and 4294967295. When
                        absent, it defaults to 0.
                      type: integer
                    remoteAsNumber:
                      description: >-
                        Remote ASN of the neighbor. The remote ASN must be an
                        integer between 1 and 4294967295.
                      type: integer
                  required:
                    - ip
                    - remoteAsNumber
                    - ebgpHoldTimer
                    - ebgpMultihop
                  type: object
                type: array
            required:
              - enabled
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a Hub BGP Configuration
      tags:
        - appliance
        - configure
        - vpn
        - bgp
  '/networks/{networkId}/appliance/vpn/siteToSiteVpn':
    get:
      description: >-
        Return the site-to-site VPN settings of a network. Only valid for MX
        networks.
      operationId: getNetworkApplianceVpnSiteToSiteVpn
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the site-to-site VPN settings of a network
      tags:
        - appliance
        - configure
        - vpn
        - siteToSiteVpn
    put:
      consumes:
        - application/json
      description: >-
        Update the site-to-site VPN settings of a network. Only valid for MX
        networks in NAT mode.
      operationId: updateNetworkApplianceVpnSiteToSiteVpn
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              hubs:
                - hubId: N_4901849
                  useDefaultRoute: true
                - hubId: N_1892489
                  useDefaultRoute: false
              mode: spoke
              subnets:
                - localSubnet: 192.168.1.0/24
                  useVpn: true
                - localSubnet: 192.168.128.0/24
                  useVpn: true
            properties:
              hubs:
                description: >-
                  The list of VPN hubs, in order of preference. In spoke mode,
                  at least 1 hub is required.
                items:
                  properties:
                    hubId:
                      description: The network ID of the hub.
                      type: string
                    useDefaultRoute:
                      description: >-
                        Only valid in 'spoke' mode. Indicates whether default
                        route traffic should be sent to this hub.
                      type: boolean
                  required:
                    - hubId
                  type: object
                type: array
              mode:
                description: >-
                  The site-to-site VPN mode. Can be one of 'none', 'spoke' or
                  'hub'
                enum:
                  - none
                  - spoke
                  - hub
                type: string
              subnets:
                description: The list of subnets and their VPN presence.
                items:
                  properties:
                    localSubnet:
                      description: The CIDR notation subnet used within the VPN
                      type: string
                    useVpn:
                      description: Indicates the presence of the subnet in the VPN
                      type: boolean
                  required:
                    - localSubnet
                  type: object
                type: array
            required:
              - mode
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the site-to-site VPN settings of a network
      tags:
        - appliance
        - configure
        - vpn
        - siteToSiteVpn
  '/networks/{networkId}/appliance/warmSpare':
    get:
      description: Return MX warm spare settings
      operationId: getNetworkApplianceWarmSpare
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return MX warm spare settings
      tags:
        - appliance
        - configure
        - warmSpare
    put:
      consumes:
        - application/json
      description: Update MX warm spare settings
      operationId: updateNetworkApplianceWarmSpare
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              enabled: true
              spareSerial: Q234-ABCD-5678
              uplinkMode: virtual
              virtualIp1: 1.2.3.4
              virtualIp2: 1.2.3.4
            properties:
              enabled:
                description: Enable warm spare
                type: boolean
              spareSerial:
                description: Serial number of the warm spare appliance
                type: string
              uplinkMode:
                description: 'Uplink mode, either virtual or public'
                type: string
              virtualIp1:
                description: The WAN 1 shared IP
                type: string
              virtualIp2:
                description: The WAN 2 shared IP
                type: string
            required:
              - enabled
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update MX warm spare settings
      tags:
        - appliance
        - configure
        - warmSpare
  '/networks/{networkId}/appliance/warmSpare/swap':
    post:
      description: Swap MX primary and warm spare appliances
      operationId: swapNetworkApplianceWarmSpare
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Swap MX primary and warm spare appliances
      tags:
        - appliance
        - configure
        - warmSpare
  '/networks/{networkId}/bind':
    post:
      consumes:
        - application/json
      description: Bind a network to a template.
      operationId: bindNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              autoBind: false
              configTemplateId: N_23952905
            properties:
              autoBind:
                description: >-
                  Optional boolean indicating whether the network's switches
                  should automatically bind to profiles of the same model.
                  Defaults to false if left unspecified. This option only
                  affects switch networks and switch templates. Auto-bind is not
                  valid unless the switch template has at least one profile and
                  has at most one profile per switch model.
                type: boolean
              configTemplateId:
                description: The ID of the template to which the network should be bound.
                type: string
            required:
              - configTemplateId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Bind a network to a template.
      tags:
        - networks
        - configure
  '/networks/{networkId}/bluetoothClients':
    get:
      description: List the Bluetooth clients seen by APs in this network
      operationId: getNetworkBluetoothClients
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 7 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 7 days. The default is 1
            day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 5 -
            1000. Default is 10.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: Include the connectivity history for this client
          in: query
          name: includeConnectivityHistory
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the Bluetooth clients seen by APs in this network
      tags:
        - networks
        - monitor
        - bluetoothClients
  '/networks/{networkId}/bluetoothClients/{bluetoothClientId}':
    get:
      description: >-
        Return a Bluetooth client. Bluetooth clients can be identified by their
        ID or their MAC.
      operationId: getNetworkBluetoothClient
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: bluetoothClientId
          required: true
          type: string
        - description: Include the connectivity history for this client
          in: query
          name: includeConnectivityHistory
          type: boolean
        - description: >-
            The timespan, in seconds, for the connectivityHistory data. By
            default 1 day, 86400, will be used.
          in: query
          name: connectivityHistoryTimespan
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a Bluetooth client
      tags:
        - networks
        - monitor
        - bluetoothClients
  '/networks/{networkId}/camera/qualityRetentionProfiles':
    get:
      description: List the quality retention profiles for this network
      operationId: getNetworkCameraQualityRetentionProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the quality retention profiles for this network
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
    post:
      consumes:
        - application/json
      description: Creates new quality retention profile for this network.
      operationId: createNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example: {}
            properties:
              audioRecordingEnabled:
                description: >-
                  Whether or not to record audio. Can be either true or false.
                  Defaults to false.
                type: boolean
              cloudArchiveEnabled:
                description: >-
                  Create redundant video backup using Cloud Archive. Can be
                  either true or false. Defaults to false.
                type: boolean
              maxRetentionDays:
                description: >-
                  The maximum number of days for which the data will be stored,
                  or 'null' to keep data until storage space runs out. If the
                  former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14,
                  30, 60, 90] days.
                type: integer
              motionBasedRetentionEnabled:
                description: >-
                  Deletes footage older than 3 days in which no motion was
                  detected. Can be either true or false. Defaults to false. This
                  setting does not apply to MV2 cameras.
                type: boolean
              motionDetectorVersion:
                description: >-
                  The version of the motion detector that will be used by the
                  camera. Only applies to Gen 2 cameras. Defaults to v2.
                type: integer
              name:
                description: >-
                  The name of the new profile. Must be unique. This parameter is
                  required.
                type: string
              restrictedBandwidthModeEnabled:
                description: >-
                  Disable features that require additional bandwidth such as
                  Motion Recap. Can be either true or false. Defaults to false.
                  This setting does not apply to MV2 cameras.
                type: boolean
              scheduleId:
                description: >-
                  Schedule for which this camera will record video, or 'null' to
                  always record.
                type: string
              videoSettings:
                description: >-
                  Video quality and resolution settings for all the camera
                  models.
                properties:
                  MV12/MV22/MV72:
                    description: Quality and resolution for MV12/MV22/MV72 camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1280x720' or
                          '1920x1080'.
                        enum:
                          - 1280x720
                          - 1920x1080
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV12WE:
                    description: Quality and resolution for MV12WE camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1280x720' or
                          '1920x1080'.
                        enum:
                          - 1280x720
                          - 1920x1080
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV21/MV71:
                    description: Quality and resolution for MV21/MV71 camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: Resolution of the camera. Can be one of '1280x720'.
                        enum:
                          - 1280x720
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV22X/MV72X:
                    description: Quality and resolution for MV22X/MV72X camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1280x720',
                          '1920x1080' or '2688x1512'.
                        enum:
                          - 1280x720
                          - 1920x1080
                          - 2688x1512
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV32:
                    description: Quality and resolution for MV32 camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1080x1080' or
                          '2058x2058'.
                        enum:
                          - 1080x1080
                          - 2058x2058
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                type: object
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Creates new quality retention profile for this network.
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
  '/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}':
    delete:
      description: Delete an existing quality retention profile for this network.
      operationId: deleteNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: qualityRetentionProfileId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an existing quality retention profile for this network.
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
    get:
      description: Retrieve a single quality retention profile
      operationId: getNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: qualityRetentionProfileId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Retrieve a single quality retention profile
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
    put:
      consumes:
        - application/json
      description: Update an existing quality retention profile for this network.
      operationId: updateNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: qualityRetentionProfileId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              audioRecordingEnabled:
                description: >-
                  Whether or not to record audio. Can be either true or false.
                  Defaults to false.
                type: boolean
              cloudArchiveEnabled:
                description: >-
                  Create redundant video backup using Cloud Archive. Can be
                  either true or false. Defaults to false.
                type: boolean
              maxRetentionDays:
                description: >-
                  The maximum number of days for which the data will be stored,
                  or 'null' to keep data until storage space runs out. If the
                  former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14,
                  30, 60, 90] days.
                type: integer
              motionBasedRetentionEnabled:
                description: >-
                  Deletes footage older than 3 days in which no motion was
                  detected. Can be either true or false. Defaults to false. This
                  setting does not apply to MV2 cameras.
                type: boolean
              motionDetectorVersion:
                description: >-
                  The version of the motion detector that will be used by the
                  camera. Only applies to Gen 2 cameras. Defaults to v2.
                type: integer
              name:
                description: The name of the new profile. Must be unique.
                type: string
              restrictedBandwidthModeEnabled:
                description: >-
                  Disable features that require additional bandwidth such as
                  Motion Recap. Can be either true or false. Defaults to false.
                  This setting does not apply to MV2 cameras.
                type: boolean
              scheduleId:
                description: >-
                  Schedule for which this camera will record video, or 'null' to
                  always record.
                type: string
              videoSettings:
                description: >-
                  Video quality and resolution settings for all the camera
                  models.
                properties:
                  MV12/MV22/MV72:
                    description: Quality and resolution for MV12/MV22/MV72 camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1280x720' or
                          '1920x1080'.
                        enum:
                          - 1280x720
                          - 1920x1080
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV12WE:
                    description: Quality and resolution for MV12WE camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1280x720' or
                          '1920x1080'.
                        enum:
                          - 1280x720
                          - 1920x1080
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV21/MV71:
                    description: Quality and resolution for MV21/MV71 camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: Resolution of the camera. Can be one of '1280x720'.
                        enum:
                          - 1280x720
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV22X/MV72X:
                    description: Quality and resolution for MV22X/MV72X camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1280x720',
                          '1920x1080' or '2688x1512'.
                        enum:
                          - 1280x720
                          - 1920x1080
                          - 2688x1512
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                  MV32:
                    description: Quality and resolution for MV32 camera models.
                    properties:
                      quality:
                        description: >-
                          Quality of the camera. Can be one of 'Standard',
                          'Enhanced' or 'High'.
                        enum:
                          - Standard
                          - Enhanced
                          - High
                        type: string
                      resolution:
                        description: >-
                          Resolution of the camera. Can be one of '1080x1080' or
                          '2058x2058'.
                        enum:
                          - 1080x1080
                          - 2058x2058
                        type: string
                    required:
                      - quality
                      - resolution
                    type: object
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an existing quality retention profile for this network.
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
  '/networks/{networkId}/camera/schedules':
    get:
      description: Returns a list of all camera recording schedules.
      operationId: getNetworkCameraSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns a list of all camera recording schedules.
      tags:
        - camera
        - configure
        - schedules
  '/networks/{networkId}/camera/wirelessProfiles':
    get:
      description: List the camera wireless profiles for this network.
      operationId: getNetworkCameraWirelessProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the camera wireless profiles for this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
    post:
      consumes:
        - application/json
      description: Creates a new camera wireless profile for this network.
      operationId: createNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example: {}
            properties:
              identity:
                description: >-
                  The identity of the wireless profile. Required for creating
                  wireless profiles in 8021x-radius auth mode.
                properties:
                  password:
                    description: The password of the identity.
                    type: string
                  username:
                    description: The username of the identity.
                    type: string
                type: object
              name:
                description: >-
                  The name of the camera wireless profile. This parameter is
                  required.
                type: string
              ssid:
                description: The details of the SSID config.
                properties:
                  authMode:
                    description: >-
                      The auth mode of the SSID. It can be set to ('psk',
                      '8021x-radius').
                    enum:
                      - psk
                      - 8021x-radius
                    type: string
                  encryptionMode:
                    description: >-
                      The encryption mode of the SSID. It can be set to ('wpa',
                      'wpa-eap'). With 'wpa' mode, the authMode should be 'psk'
                      and with 'wpa-eap' the authMode should be '8021x-radius'
                    type: string
                  name:
                    description: The name of the SSID.
                    type: string
                  psk:
                    description: The pre-shared key of the SSID.
                    type: string
                type: object
            required:
              - name
              - ssid
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Creates a new camera wireless profile for this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
  '/networks/{networkId}/camera/wirelessProfiles/{wirelessProfileId}':
    delete:
      description: Delete an existing camera wireless profile for this network.
      operationId: deleteNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: wirelessProfileId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an existing camera wireless profile for this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
    get:
      description: Retrieve a single camera wireless profile.
      operationId: getNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: wirelessProfileId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Retrieve a single camera wireless profile.
      tags:
        - camera
        - configure
        - wirelessProfiles
    put:
      consumes:
        - application/json
      description: Update an existing camera wireless profile in this network.
      operationId: updateNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: wirelessProfileId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              identity:
                description: >-
                  The identity of the wireless profile. Required for creating
                  wireless profiles in 8021x-radius auth mode.
                properties:
                  password:
                    description: The password of the identity.
                    type: string
                  username:
                    description: The username of the identity.
                    type: string
                type: object
              name:
                description: The name of the camera wireless profile.
                type: string
              ssid:
                description: The details of the SSID config.
                properties:
                  authMode:
                    description: >-
                      The auth mode of the SSID. It can be set to ('psk',
                      '8021x-radius').
                    enum:
                      - psk
                      - 8021x-radius
                    type: string
                  encryptionMode:
                    description: >-
                      The encryption mode of the SSID. It can be set to ('wpa',
                      'wpa-eap'). With 'wpa' mode, the authMode should be 'psk'
                      and with 'wpa-eap' the authMode should be '8021x-radius'
                    type: string
                  name:
                    description: The name of the SSID.
                    type: string
                  psk:
                    description: The pre-shared key of the SSID.
                    type: string
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an existing camera wireless profile in this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
  '/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations':
    get:
      description: Return the connectivity testing destinations for an MG network
      operationId: getNetworkCellularGatewayConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the connectivity testing destinations for an MG network
      tags:
        - cellularGateway
        - configure
        - connectivityMonitoringDestinations
    put:
      consumes:
        - application/json
      description: Update the connectivity testing destinations for an MG network
      operationId: updateNetworkCellularGatewayConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              destinations:
                - default: false
                  description: Google
                  ip: 8.8.8.8
                - default: true
                  description: test description
                  ip: 1.23.45.67
                - ip: 9.8.7.6
            properties:
              destinations:
                description: The list of connectivity monitoring destinations
                items:
                  properties:
                    default:
                      default: false
                      description: >-
                        Boolean indicating whether this is the default testing
                        destination (true) or not (false). Defaults to false.
                        Only one default is allowed
                      type: boolean
                    description:
                      default: null
                      description: >-
                        Description of the testing destination. Optional,
                        defaults to null
                      type: string
                    ip:
                      description: The IP address to test connectivity with
                      type: string
                  required:
                    - ip
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the connectivity testing destinations for an MG network
      tags:
        - cellularGateway
        - configure
        - connectivityMonitoringDestinations
  '/networks/{networkId}/cellularGateway/dhcp':
    get:
      description: List common DHCP settings of MGs
      operationId: getNetworkCellularGatewayDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List common DHCP settings of MGs
      tags:
        - cellularGateway
        - configure
        - dhcp
    put:
      consumes:
        - application/json
      description: Update common DHCP settings of MGs
      operationId: updateNetworkCellularGatewayDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              dhcpLeaseTime: 1 hour
              dnsCustomNameservers:
                - 172.16.2.111
                - 172.16.2.30
              dnsNameservers: custom
            properties:
              dhcpLeaseTime:
                description: >-
                  DHCP Lease time for all MG of the network. It can be '30
                  minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1
                  week'.
                type: string
              dnsCustomNameservers:
                description: >-
                  list of fixed IP representing the the DNS Name servers when
                  the mode is 'custom'
                items:
                  type: string
                type: array
              dnsNameservers:
                description: >-
                  DNS name servers mode for all MG of the network. It can take 4
                  different values: 'upstream_dns', 'google_dns', 'opendns',
                  'custom'.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update common DHCP settings of MGs
      tags:
        - cellularGateway
        - configure
        - dhcp
  '/networks/{networkId}/cellularGateway/subnetPool':
    get:
      description: Return the subnet pool and mask configured for MGs in the network.
      operationId: getNetworkCellularGatewaySubnetPool
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the subnet pool and mask configured for MGs in the network.
      tags:
        - cellularGateway
        - configure
        - subnetPool
    put:
      consumes:
        - application/json
      description: Update the subnet pool and mask configuration for MGs in the network.
      operationId: updateNetworkCellularGatewaySubnetPool
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              cidr: 192.168.0.0/16
              mask: '24'
            properties:
              cidr:
                description: >-
                  CIDR of the pool of subnets. Each MG in this network will
                  automatically pick a subnet from this pool.
                type: string
              mask:
                description: Mask used for the subnet of all MGs in  this network.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the subnet pool and mask configuration for MGs in the network.
      tags:
        - cellularGateway
        - configure
        - subnetPool
  '/networks/{networkId}/cellularGateway/uplink':
    get:
      description: Returns the uplink settings for your MG network.
      operationId: getNetworkCellularGatewayUplink
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the uplink settings for your MG network.
      tags:
        - cellularGateway
        - configure
        - uplink
    put:
      consumes:
        - application/json
      description: Updates the uplink settings for your MG network.
      operationId: updateNetworkCellularGatewayUplink
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              bandwidthLimits:
                description: The bandwidth settings for the 'cellular' uplink
                properties:
                  limitDown:
                    description: >-
                      The maximum download limit (integer, in Kbps). null
                      indicates no limit
                    type: integer
                  limitUp:
                    description: >-
                      The maximum upload limit (integer, in Kbps). null
                      indicates no limit
                    type: integer
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates the uplink settings for your MG network.
      tags:
        - cellularGateway
        - configure
        - uplink
  '/networks/{networkId}/clients':
    get:
      description: List the clients that have used this network in the timespan
      operationId: getNetworkClients
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 31 days. The default is 1
            day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 10.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - collectionFormat: csv
          description: >-
            Filters clients based on status. Can be one of 'Online' or
            'Offline'.
          in: query
          items:
            enum:
              - Online
              - Offline
            type: string
          name: statuses
          type: array
        - description: >-
            Filters clients based on a partial or full match for the ip address
            field.
          in: query
          name: ip
          type: string
        - description: >-
            Filters clients based on a partial or full match for the ip6 address
            field.
          in: query
          name: ip6
          type: string
        - description: >-
            Filters clients based on a partial or full match for the ip6Local
            address field.
          in: query
          name: ip6Local
          type: string
        - description: >-
            Filters clients based on a partial or full match for the mac address
            field.
          in: query
          name: mac
          type: string
        - description: >-
            Filters clients based on a partial or full match for the os
            (operating system) field.
          in: query
          name: os
          type: string
        - description: >-
            Filters clients based on a partial or full match for the description
            field.
          in: query
          name: description
          type: string
        - collectionFormat: csv
          description: >-
            Filters clients based on recent connection type. Can be one of
            'Wired' or 'Wireless'.
          in: query
          items:
            enum:
              - Wired
              - Wireless
            type: string
          name: recentDeviceConnections
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the clients that have used this network in the timespan
      tags:
        - networks
        - monitor
        - clients
  '/networks/{networkId}/clients/applicationUsage':
    get:
      description: >-
        Return the application usage data for clients. Usage data is in
        kilobytes. Clients can be identified by client keys or either the MACs
        or IPs depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientsApplicationUsage
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: 'A list of client keys, MACs or IPs separated by comma.'
          in: query
          name: clients
          required: true
          type: string
        - description: >-
            An SSID number to include. If not specified, eveusage histories
            application usagents for all SSIDs will be returned.
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
          in: query
          name: ssidNumber
          type: integer
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Return the application usage data for clients
      tags:
        - networks
        - monitor
        - clients
        - applicationUsage
  '/networks/{networkId}/clients/overview':
    get:
      description: Return overview statistics for network clients
      operationId: getNetworkClientsOverview
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 7200, 86400, 604800, 2592000. The default is
            604800.
          in: query
          name: resolution
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return overview statistics for network clients
      tags:
        - networks
        - monitor
        - clients
        - overview
  '/networks/{networkId}/clients/provision':
    post:
      consumes:
        - application/json
      description: >-
        Provisions a client with a name and policy. Clients can be provisioned
        before they associate to the network.
      operationId: provisionNetworkClients
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              clients:
                - clientId: k74272e
                  mac: '00:11:22:33:44:55'
                  name: Miles's phone
              devicePolicy: Group policy
              groupPolicyId: '101'
            properties:
              clients:
                description: The array of clients to provision
                items:
                  properties:
                    mac:
                      description: The MAC address of the client. Required.
                      type: string
                    name:
                      description: >-
                        The display name for the client. Optional. Limited to
                        255 bytes.
                      type: string
                  required:
                    - mac
                  type: object
                type: array
              devicePolicy:
                description: >-
                  The policy to apply to the specified client. Can be 'Group
                  policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'.
                  Required.
                enum:
                  - Group policy
                  - Allowed
                  - Blocked
                  - Per connection
                  - Normal
                type: string
              groupPolicyId:
                description: >-
                  The ID of the desired group policy to apply to the client.
                  Required if 'devicePolicy' is set to "Group policy". Otherwise
                  this is ignored.
                type: string
              policiesBySecurityAppliance:
                description: >-
                  An object, describing what the policy-connection association
                  is for the security appliance. (Only relevant if the security
                  appliance is actually within the network)
                properties:
                  devicePolicy:
                    description: >-
                      The policy to apply to the specified client. Can be
                      'Allowed', 'Blocked' or 'Normal'. Required.
                    enum:
                      - Allowed
                      - Blocked
                      - Normal
                    type: string
                type: object
              policiesBySsid:
                description: >-
                  An object, describing the policy-connection associations for
                  each active SSID within the network. Keys should be the number
                  of enabled SSIDs, mapping to an object describing the client's
                  policy
                properties:
                  '0':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '1':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '2':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '3':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '4':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '5':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '6':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '7':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '8':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '9':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '10':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '11':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '12':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '13':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                  '14':
                    description: The number for the SSID
                    properties:
                      devicePolicy:
                        description: >-
                          The policy to apply to the specified client. Can be
                          'Allowed', 'Blocked', 'Normal' or 'Group policy'.
                          Required.
                        enum:
                          - Allowed
                          - Blocked
                          - Normal
                          - Group policy
                        type: string
                      groupPolicyId:
                        description: >-
                          The ID of the desired group policy to apply to the
                          client. Required if 'devicePolicy' is set to "Group
                          policy". Otherwise this is ignored.
                        type: string
                    required:
                      - devicePolicy
                    type: object
                type: object
            required:
              - clients
              - devicePolicy
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Provisions a client with a name and policy
      tags:
        - networks
        - configure
        - clients
  '/networks/{networkId}/clients/usageHistories':
    get:
      description: >-
        Return the usage histories for clients. Usage data is in kilobytes.
        Clients can be identified by client keys or either the MACs or IPs
        depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientsUsageHistories
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: 'A list of client keys, MACs or IPs separated by comma.'
          in: query
          name: clients
          required: true
          type: string
        - description: >-
            An SSID number to include. If not specified, events for all SSIDs
            will be returned.
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
          in: query
          name: ssidNumber
          type: integer
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Return the usage histories for clients
      tags:
        - networks
        - monitor
        - clients
        - usageHistories
  '/networks/{networkId}/clients/{clientId}':
    get:
      description: >-
        Return the client associated with the given identifier. Clients can be
        identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      operationId: getNetworkClient
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the client associated with the given identifier
      tags:
        - networks
        - monitor
        - clients
  '/networks/{networkId}/clients/{clientId}/policy':
    get:
      description: >-
        Return the policy assigned to a client on the network. Clients can be
        identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      operationId: getNetworkClientPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the policy assigned to a client on the network
      tags:
        - networks
        - configure
        - clients
        - policy
    put:
      consumes:
        - application/json
      description: >-
        Update the policy assigned to a client on the network. Clients can be
        identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      operationId: updateNetworkClientPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              devicePolicy: Group policy
              groupPolicyId: '101'
              mac: '00:11:22:33:44:55'
            properties:
              devicePolicy:
                description: >-
                  The policy to assign. Can be 'Whitelisted', 'Blocked',
                  'Normal' or 'Group policy'. Required.
                type: string
              groupPolicyId:
                description: >-
                  [optional] If 'devicePolicy' is set to 'Group policy' this
                  param is used to specify the group policy ID.
                type: string
            required:
              - devicePolicy
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the policy assigned to a client on the network
      tags:
        - networks
        - configure
        - clients
        - policy
  '/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus':
    get:
      description: >-
        Return the splash authorization for a client, for each SSID they've
        associated with through splash. Only enabled SSIDs with Click-through
        splash enabled will be included. Clients can be identified by a client
        key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      operationId: getNetworkClientSplashAuthorizationStatus
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the splash authorization for a client, for each SSID they've
        associated with through splash
      tags:
        - networks
        - configure
        - clients
        - splashAuthorizationStatus
    put:
      consumes:
        - application/json
      description: >-
        Update a client's splash authorization. Clients can be identified by a
        client key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      operationId: updateNetworkClientSplashAuthorizationStatus
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              ssids:
                '0':
                  isAuthorized: true
                '2':
                  isAuthorized: false
            properties:
              ssids:
                description: >-
                  The target SSIDs. Each SSID must be enabled and must have
                  Click-through splash enabled. For each SSID where isAuthorized
                  is true, the expiration time will automatically be set
                  according to the SSID's splash frequency. Not all networks
                  support configuring all SSIDs
                properties:
                  '0':
                    description: Splash authorization for SSID 0
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '1':
                    description: Splash authorization for SSID 1
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '2':
                    description: Splash authorization for SSID 2
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '3':
                    description: Splash authorization for SSID 3
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '4':
                    description: Splash authorization for SSID 4
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '5':
                    description: Splash authorization for SSID 5
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '6':
                    description: Splash authorization for SSID 6
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '7':
                    description: Splash authorization for SSID 7
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '8':
                    description: Splash authorization for SSID 8
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '9':
                    description: Splash authorization for SSID 9
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '10':
                    description: Splash authorization for SSID 10
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '11':
                    description: Splash authorization for SSID 11
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '12':
                    description: Splash authorization for SSID 12
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '13':
                    description: Splash authorization for SSID 13
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                  '14':
                    description: Splash authorization for SSID 14
                    properties:
                      isAuthorized:
                        description: 'New authorization status for the SSID (true, false).'
                        type: boolean
                    type: object
                type: object
            required:
              - ssids
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a client's splash authorization
      tags:
        - networks
        - configure
        - clients
        - splashAuthorizationStatus
  '/networks/{networkId}/clients/{clientId}/trafficHistory':
    get:
      description: >-
        Return the client's network traffic data over time. Usage data is in
        kilobytes. This endpoint requires detailed traffic analysis to be
        enabled on the Network-wide > General page. Clients can be identified by
        a client key or either the MAC or IP depending on whether the network
        uses Track-by-IP.
      operationId: getNetworkClientTrafficHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Return the client's network traffic data over time
      tags:
        - networks
        - monitor
        - clients
        - trafficHistory
  '/networks/{networkId}/clients/{clientId}/usageHistory':
    get:
      description: >-
        Return the client's daily usage history. Usage data is in kilobytes.
        Clients can be identified by a client key or either the MAC or IP
        depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the client's daily usage history
      tags:
        - networks
        - monitor
        - clients
        - usageHistory
  '/networks/{networkId}/devices':
    get:
      description: List the devices in a network
      operationId: getNetworkDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the devices in a network
      tags:
        - networks
        - configure
        - devices
  '/networks/{networkId}/devices/claim':
    post:
      consumes:
        - application/json
      description: >-
        Claim devices into a network. (Note: for recently claimed devices, it
        may take a few minutes for API requsts against that device to succeed)
      operationId: claimNetworkDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
            properties:
              serials:
                description: A list of serials of devices to claim
                items:
                  type: string
                type: array
            required:
              - serials
            type: object
      responses:
        '200':
          description: Successful operation
      summary: >-
        Claim devices into a network. (Note: for recently claimed devices, it
        may take a few minutes for API requsts against that device to succeed)
      tags:
        - networks
        - configure
        - devices
  '/networks/{networkId}/devices/remove':
    post:
      consumes:
        - application/json
      description: Remove a single device
      operationId: removeNetworkDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              serial: Q234-ABCD-5678
            properties:
              serial:
                description: The serial of a device
                type: string
            required:
              - serial
            type: object
      responses:
        '204':
          description: Successful operation
      summary: Remove a single device
      tags:
        - networks
        - configure
        - devices
  '/networks/{networkId}/events':
    get:
      description: List the events for the network
      operationId: getNetworkEvents
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The product type to fetch events for. This parameter is required for
            networks with multiple device types. Valid types are wireless,
            appliance, switch, systemsManager, camera, and cellularGateway
          enum:
            - wireless
            - appliance
            - switch
            - systemsManager
            - camera
            - cellularGateway
          in: query
          name: productType
          type: string
        - collectionFormat: csv
          description: >-
            A list of event types. The returned events will be filtered to only
            include events with these types.
          in: query
          items:
            type: string
          name: includedEventTypes
          type: array
        - collectionFormat: csv
          description: >-
            A list of event types. The returned events will be filtered to
            exclude events with these types.
          in: query
          items:
            type: string
          name: excludedEventTypes
          type: array
        - description: >-
            The MAC address of the Meraki device which the list of events will
            be filtered with
          in: query
          name: deviceMac
          type: string
        - description: >-
            The serial of the Meraki device which the list of events will be
            filtered with
          in: query
          name: deviceSerial
          type: string
        - description: >-
            The name of the Meraki device which the list of events will be
            filtered with
          in: query
          name: deviceName
          type: string
        - description: >-
            The IP of the client which the list of events will be filtered with.
            Only supported for track-by-IP networks.
          in: query
          name: clientIp
          type: string
        - description: >-
            The MAC address of the client which the list of events will be
            filtered with. Only supported for track-by-MAC networks.
          in: query
          name: clientMac
          type: string
        - description: >-
            The name, or partial name, of the client which the list of events
            will be filtered with
          in: query
          name: clientName
          type: string
        - description: >-
            The MAC address of the Systems Manager device which the list of
            events will be filtered with
          in: query
          name: smDeviceMac
          type: string
        - description: >-
            The name of the Systems Manager device which the list of events will
            be filtered with
          in: query
          name: smDeviceName
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 10.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the events for the network
      tags:
        - networks
        - monitor
        - events
  '/networks/{networkId}/events/eventTypes':
    get:
      description: List the event type to human-readable description
      operationId: getNetworkEventsEventTypes
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the event type to human-readable description
      tags:
        - networks
        - monitor
        - events
        - eventTypes
  '/networks/{networkId}/firmwareUpgrades':
    get:
      description: Get firmware upgrade information for a network
      operationId: getNetworkFirmwareUpgrades
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get firmware upgrade information for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
    put:
      consumes:
        - application/json
      description: Update firmware upgrade information for a network
      operationId: updateNetworkFirmwareUpgrades
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              products:
                switch:
                  nextUpgrade:
                    toVersion:
                      id: 7857
            properties:
              products:
                description: Contains information about the network to update
                properties:
                  appliance:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                  camera:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                  cellularGateway:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                  environmental:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                  sensor:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                  switch:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                      participateInNextBetaRelease:
                        description: Whether or not the network wants beta firmware
                        type: boolean
                    type: object
                  vmxHost:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                  wireless:
                    description: The network device to be updated
                    properties:
                      nextUpgrade:
                        description: The pending firmware upgrade if it exists
                        properties:
                          time:
                            description: The time of the last successful upgrade
                            type: string
                          toVersion:
                            description: The version to be updated to
                            properties:
                              id:
                                description: The version ID
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              timezone:
                description: The timezone for the network
                type: string
              upgradeWindow:
                description: Upgrade window for devices in network
                properties:
                  dayOfWeek:
                    description: Day of the week
                    enum:
                      - sun
                      - mon
                      - tue
                      - wed
                      - thu
                      - fri
                      - sat
                      - sunday
                      - monday
                      - tuesday
                      - wednesday
                      - thursday
                      - friday
                      - saturday
                    type: string
                  hourOfDay:
                    description: Hour of the day
                    enum:
                      - '0:00'
                      - 60
                      - 120
                      - 180
                      - 240
                      - 300
                      - 360
                      - 420
                      - 480
                      - 540
                      - 600
                      - 660
                      - 720
                      - 780
                      - 840
                      - 900
                      - 960
                      - 1020
                      - 1080
                      - 1140
                      - 1200
                      - 1260
                      - 1320
                      - 1380
                    type: string
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update firmware upgrade information for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
  '/networks/{networkId}/firmwareUpgrades/rollbacks':
    post:
      consumes:
        - application/json
      description: Rollback a Firmware Upgrade For A Network
      operationId: createNetworkFirmwareUpgradesRollback
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              product: switch
              reasons:
                - category: performance
                  comment: Network was slower with the upgrade
                - category: stability
                  comment: We saw some errors in the logs we didn't expect
              time: '2020-10-21T02:00:00.000Z'
              toVersion:
                id: 7857
            properties:
              product:
                description: >-
                  Product type to rollback (if the network is a combined
                  network)
                enum:
                  - wireless
                  - switch
                  - appliance
                  - camera
                  - vmxHost
                  - cellularGateway
                type: string
              reasons:
                description: Reasons for the rollback
                items:
                  properties:
                    category:
                      description: Reason for the rollback
                      enum:
                        - performance
                        - stability
                        - broke old features
                        - unifying networks versions
                        - testing
                        - other
                      type: string
                    comment:
                      description: Additional comment about the rollback
                      type: string
                  required:
                    - category
                    - comment
                  type: object
                type: array
              time:
                description: Scheduled time for the rollback
                format: date-time
                type: string
              toVersion:
                description: >-
                  Version to downgrade to (if the network has firmware
                  flexibility)
                properties:
                  id:
                    description: The version ID
                    type: string
                type: object
            required:
              - reasons
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Rollback a Firmware Upgrade For A Network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - rollbacks
  '/networks/{networkId}/floorPlans':
    get:
      description: List the floor plans that belong to your network
      operationId: getNetworkFloorPlans
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the floor plans that belong to your network
      tags:
        - networks
        - configure
        - floorPlans
    post:
      consumes:
        - application/json
      description: Upload a floor plan
      operationId: createNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example: {}
            properties:
              bottomLeftCorner:
                description: >-
                  The longitude and latitude of the bottom left corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              bottomRightCorner:
                description: >-
                  The longitude and latitude of the bottom right corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              center:
                description: >-
                  The longitude and latitude of the center of your floor plan.
                  The 'center' or two adjacent corners (e.g. 'topLeftCorner' and
                  'bottomLeftCorner') must be specified. If 'center' is
                  specified, the floor plan is placed over that point with no
                  rotation. If two adjacent corners are specified, the floor
                  plan is rotated to line up with the two specified points. The
                  aspect ratio of the floor plan's image is preserved regardless
                  of which corners/center are specified. (This means if that
                  more than two corners are specified, only two corners may be
                  used to preserve the floor plan's aspect ratio.). No two
                  points can have the same latitude, longitude pair.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              imageContents:
                description: >-
                  The file contents (a base 64 encoded string) of your image.
                  Supported formats are PNG, GIF, and JPG. Note that all images
                  are saved as PNG files, regardless of the format they are
                  uploaded in.
                format: byte
                type: string
              name:
                description: The name of your floor plan.
                type: string
              topLeftCorner:
                description: >-
                  The longitude and latitude of the top left corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              topRightCorner:
                description: >-
                  The longitude and latitude of the top right corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
            required:
              - name
              - imageContents
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Upload a floor plan
      tags:
        - networks
        - configure
        - floorPlans
  '/networks/{networkId}/floorPlans/{floorPlanId}':
    delete:
      description: Destroy a floor plan
      operationId: deleteNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: floorPlanId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Destroy a floor plan
      tags:
        - networks
        - configure
        - floorPlans
    get:
      description: Find a floor plan by ID
      operationId: getNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: floorPlanId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Find a floor plan by ID
      tags:
        - networks
        - configure
        - floorPlans
    put:
      consumes:
        - application/json
      description: Update a floor plan's geolocation and other meta data
      operationId: updateNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: floorPlanId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              bottomLeftCorner:
                description: >-
                  The longitude and latitude of the bottom left corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              bottomRightCorner:
                description: >-
                  The longitude and latitude of the bottom right corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              center:
                description: >-
                  The longitude and latitude of the center of your floor plan.
                  If you want to change the geolocation data of your floor plan,
                  either the 'center' or two adjacent corners (e.g.
                  'topLeftCorner' and 'bottomLeftCorner') must be specified. If
                  'center' is specified, the floor plan is placed over that
                  point with no rotation. If two adjacent corners are specified,
                  the floor plan is rotated to line up with the two specified
                  points. The aspect ratio of the floor plan's image is
                  preserved regardless of which corners/center are specified.
                  (This means if that more than two corners are specified, only
                  two corners may be used to preserve the floor plan's aspect
                  ratio.). No two points can have the same latitude, longitude
                  pair.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              imageContents:
                description: >-
                  The file contents (a base 64 encoded string) of your new
                  image. Supported formats are PNG, GIF, and JPG. Note that all
                  images are saved as PNG files, regardless of the format they
                  are uploaded in. If you upload a new image, and you do NOT
                  specify any new geolocation fields ('center, 'topLeftCorner',
                  etc), the floor plan will be recentered with no rotation in
                  order to maintain the aspect ratio of your new image.
                format: byte
                type: string
              name:
                description: The name of your floor plan.
                type: string
              topLeftCorner:
                description: >-
                  The longitude and latitude of the top left corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
              topRightCorner:
                description: >-
                  The longitude and latitude of the top right corner of your
                  floor plan.
                properties:
                  lat:
                    description: Latitude
                    format: float
                    type: number
                  lng:
                    description: Longitude
                    format: float
                    type: number
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a floor plan's geolocation and other meta data
      tags:
        - networks
        - configure
        - floorPlans
  '/networks/{networkId}/groupPolicies':
    get:
      description: List the group policies in a network
      operationId: getNetworkGroupPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the group policies in a network
      tags:
        - networks
        - configure
        - groupPolicies
    post:
      consumes:
        - application/json
      description: Create a group policy
      operationId: createNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              bandwidth:
                bandwidthLimits:
                  limitDown: 1000000
                  limitUp: 1000000
                settings: custom
              bonjourForwarding:
                rules:
                  - description: A simple bonjour rule
                    services:
                      - All Services
                    vlanId: '1'
                settings: custom
              contentFiltering:
                allowedUrlPatterns:
                  patterns: []
                  settings: network default
                blockedUrlCategories:
                  categories:
                    - 'meraki:contentFiltering/category/1'
                    - 'meraki:contentFiltering/category/7'
                  settings: override
                blockedUrlPatterns:
                  patterns:
                    - 'http://www.example.com'
                    - 'http://www.betting.com'
                  settings: append
              firewallAndTrafficShaping:
                l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    destCidr: 192.168.1.0/24
                    destPort: 443
                    policy: allow
                    protocol: tcp
                l7FirewallRules:
                  - policy: deny
                    type: application
                    value:
                      id: 'meraki:layer7/application/67'
                      name: Xbox LIVE
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: 'meraki:layer7/category/2'
                      name: Blogging
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: '23'
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: '10.11.12.00/24:5555'
                  - policy: deny
                    type: blockedCountries
                    value:
                      - AX
                      - CA
                  - policy: deny
                    type: allowedCountries
                    value:
                      - US
                settings: custom
                trafficShapingRules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: '9090'
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: '10.1.0.0/16:80'
                      - type: localNet
                        value: 192.168.0.0/16
                      - type: applicationCategory
                        value:
                          id: 'meraki:layer7/category/2'
                          name: Blogging
                      - type: application
                        value:
                          id: 'meraki:layer7/application/133'
                          name: Battle.net
                    dscpTagValue: null
                    pcpTagValue: null
                    perClientBandwidthLimits:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
              name: No video streaming
              scheduling:
                enabled: true
                friday:
                  active: true
                  from: 540
                  to: 1020
                monday:
                  active: true
                  from: 540
                  to: 1020
                saturday:
                  active: false
                  from: '0:00'
                  to: 1440
                sunday:
                  active: false
                  from: '0:00'
                  to: 1440
                thursday:
                  active: true
                  from: 540
                  to: 1020
                tuesday:
                  active: true
                  from: 540
                  to: 1020
                wednesday:
                  active: true
                  from: 540
                  to: 1020
              splashAuthSettings: bypass
              vlanTagging:
                settings: custom
                vlanId: '1'
            properties:
              bandwidth:
                description: |2
                      The bandwidth settings for clients bound to your group policy.
                properties:
                  bandwidthLimits:
                    description: >-
                      The bandwidth limits object, specifying upload and
                      download speed for clients bound to the group policy.
                      These are only enforced if 'settings' is set to 'custom'.
                    properties:
                      limitDown:
                        description: >-
                          The maximum download limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                      limitUp:
                        description: >-
                          The maximum upload limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                    type: object
                  settings:
                    description: >-
                      How bandwidth limits are enforced. Can be 'network
                      default', 'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                type: object
              bonjourForwarding:
                description: >-
                  The Bonjour settings for your group policy. Only valid if your
                  network has a wireless configuration.
                properties:
                  rules:
                    description: >-
                      A list of the Bonjour forwarding rules for your group
                      policy. If 'settings' is set to 'custom', at least one
                      rule must be specified.
                    items:
                      properties:
                        description:
                          description: >-
                            A description for your Bonjour forwarding rule.
                            Optional.
                          type: string
                        services:
                          description: >-
                            A list of Bonjour services. At least one service
                            must be specified. Available services are 'All
                            Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP',
                            'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners'
                            and 'SSH'
                          items:
                            enum:
                              - All Services
                              - AirPlay
                              - AFP
                              - BitTorrent
                              - FTP
                              - iChat
                              - iTunes
                              - Printers
                              - Samba
                              - Scanners
                              - SSH
                            type: string
                          type: array
                        vlanId:
                          description: The ID of the service VLAN. Required.
                          type: string
                      required:
                        - vlanId
                        - services
                      type: object
                    type: array
                  settings:
                    description: >-
                      How Bonjour rules are applied. Can be 'network default',
                      'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                type: object
              contentFiltering:
                description: The content filtering settings for your group policy
                properties:
                  allowedUrlPatterns:
                    description: Settings for allowed URL patterns
                    properties:
                      patterns:
                        description: A list of URL patterns that are allowed
                        items:
                          type: string
                        type: array
                      settings:
                        description: >-
                          How URL patterns are applied. Can be 'network
                          default', 'append' or 'override'.
                        enum:
                          - network default
                          - append
                          - override
                        type: string
                    type: object
                  blockedUrlCategories:
                    description: Settings for blocked URL categories
                    properties:
                      categories:
                        description: A list of URL categories to block
                        items:
                          type: string
                        type: array
                      settings:
                        description: >-
                          How URL categories are applied. Can be 'network
                          default', 'append' or 'override'.
                        enum:
                          - network default
                          - append
                          - override
                        type: string
                    type: object
                  blockedUrlPatterns:
                    description: Settings for blocked URL patterns
                    properties:
                      patterns:
                        description: A list of URL patterns that are blocked
                        items:
                          type: string
                        type: array
                      settings:
                        description: >-
                          How URL patterns are applied. Can be 'network
                          default', 'append' or 'override'.
                        enum:
                          - network default
                          - append
                          - override
                        type: string
                    type: object
                type: object
              firewallAndTrafficShaping:
                description: |2
                      The firewall and traffic shaping rules and settings for your policy.
                properties:
                  l3FirewallRules:
                    description: An ordered array of the L3 firewall rules
                    items:
                      properties:
                        comment:
                          description: Description of the rule (optional)
                          type: string
                        destCidr:
                          description: >-
                            Destination IP address (in IP or CIDR notation), a
                            fully-qualified domain name (FQDN, if your network
                            supports it) or 'any'.
                          type: string
                        destPort:
                          description: >-
                            Destination port (integer in the range 1-65535), a
                            port range (e.g. 8080-9090), or 'any'
                          type: string
                        policy:
                          description: '''allow'' or ''deny'' traffic specified by this rule'
                          type: string
                        protocol:
                          description: >-
                            The type of protocol (must be 'tcp', 'udp', 'icmp'
                            or 'any')
                          type: string
                      required:
                        - policy
                        - protocol
                        - destCidr
                      type: object
                    type: array
                  l7FirewallRules:
                    description: An ordered array of L7 firewall rules
                    items:
                      properties:
                        policy:
                          description: >-
                            The policy applied to matching traffic. Must be
                            'deny'.
                          enum:
                            - deny
                          type: string
                        type:
                          description: >-
                            Type of the L7 Rule. Must be 'application',
                            'applicationCategory', 'host', 'port' or 'ipRange'
                          enum:
                            - application
                            - applicationCategory
                            - host
                            - port
                            - ipRange
                          type: string
                        value:
                          description: >-
                            The 'value' of what you want to block. If 'type' is
                            'host', 'port' or 'ipRange', 'value' must be a
                            string matching either a hostname (e.g.
                            somewhere.com), a port (e.g. 8080), or an IP range
                            (e.g. 192.1.0.0/16). If 'type' is 'application' or
                            'applicationCategory', then 'value' must be an
                            object with an ID for the application.
                          type: string
                      type: object
                    type: array
                  settings:
                    description: >-
                      How firewall and traffic shaping rules are enforced. Can
                      be 'network default', 'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                  trafficShapingRules:
                    description: |2
                          An array of traffic shaping rules. Rules are applied in the order that
                          they are specified in. An empty list (or null) means no rules. Note that
                          you are allowed a maximum of 8 rules.
                    items:
                      properties:
                        definitions:
                          description: |2
                                A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                          items:
                            properties:
                              type:
                                description: >-
                                  The type of definition. Can be one of
                                  'application', 'applicationCategory', 'host',
                                  'port', 'ipRange' or 'localNet'.
                                enum:
                                  - application
                                  - applicationCategory
                                  - host
                                  - port
                                  - ipRange
                                  - localNet
                                type: string
                              value:
                                description: |2
                                      If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                      a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                      "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                      custom ports.
                                       If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                      with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                      application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                      endpoint).
                                type: string
                            required:
                              - type
                              - value
                            type: object
                          type: array
                        dscpTagValue:
                          description: |2
                                The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                          type: integer
                        pcpTagValue:
                          description: |2
                                The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                                null means 'Do not set PCP tag'.
                          type: integer
                        perClientBandwidthLimits:
                          description: |2
                                An object describing the bandwidth settings for your rule.
                          properties:
                            bandwidthLimits:
                              description: >-
                                The bandwidth limits object, specifying the
                                upload ('limitUp') and download ('limitDown')
                                speed in Kbps. These are only enforced if
                                'settings' is set to 'custom'.
                              properties:
                                limitDown:
                                  description: >-
                                    The maximum download limit (integer, in
                                    Kbps).
                                  type: integer
                                limitUp:
                                  description: 'The maximum upload limit (integer, in Kbps).'
                                  type: integer
                              type: object
                            settings:
                              description: >-
                                How bandwidth limits are applied by your rule.
                                Can be one of 'network default', 'ignore' or
                                'custom'.
                              type: string
                          type: object
                        priority:
                          description: |2
                                A string, indicating the priority level for packets bound to your rule.
                                Can be 'low', 'normal' or 'high'.
                          type: string
                      required:
                        - definitions
                      type: object
                    type: array
                type: object
              name:
                description: The name for your group policy. Required.
                type: string
              scheduling:
                description: |2
                      The schedule for the group policy. Schedules are applied to days of the week.
                properties:
                  enabled:
                    description: >-
                      Whether scheduling is enabled (true) or disabled (false).
                      Defaults to false. If true, the schedule objects for each
                      day of the week (monday - sunday) are parsed.
                    type: boolean
                  friday:
                    description: The schedule object for Friday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  monday:
                    description: The schedule object for Monday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  saturday:
                    description: The schedule object for Saturday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  sunday:
                    description: The schedule object for Sunday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  thursday:
                    description: The schedule object for Thursday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  tuesday:
                    description: The schedule object for Tuesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  wednesday:
                    description: The schedule object for Wednesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                type: object
              splashAuthSettings:
                description: >-
                  Whether clients bound to your policy will bypass splash
                  authorization or behave according to the network's rules. Can
                  be one of 'network default' or 'bypass'. Only available if
                  your network has a wireless configuration.
                enum:
                  - network default
                  - bypass
                type: string
              vlanTagging:
                description: >-
                  The VLAN tagging settings for your group policy. Only
                  available if your network has a wireless configuration.
                properties:
                  settings:
                    description: >-
                      How VLAN tagging is applied. Can be 'network default',
                      'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                  vlanId:
                    description: >-
                      The ID of the vlan you want to tag. This only applies if
                      'settings' is set to 'custom'.
                    type: string
                type: object
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a group policy
      tags:
        - networks
        - configure
        - groupPolicies
  '/networks/{networkId}/groupPolicies/{groupPolicyId}':
    delete:
      description: Delete a group policy
      operationId: deleteNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: groupPolicyId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a group policy
      tags:
        - networks
        - configure
        - groupPolicies
    get:
      description: Display a group policy
      operationId: getNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: groupPolicyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Display a group policy
      tags:
        - networks
        - configure
        - groupPolicies
    put:
      consumes:
        - application/json
      description: Update a group policy
      operationId: updateNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: groupPolicyId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              bandwidth:
                bandwidthLimits:
                  limitDown: 1000000
                  limitUp: 1000000
                settings: custom
              bonjourForwarding:
                rules:
                  - description: A simple bonjour rule
                    services:
                      - All Services
                    vlanId: '1'
                settings: custom
              contentFiltering:
                allowedUrlPatterns:
                  patterns: []
                  settings: network default
                blockedUrlCategories:
                  categories:
                    - 'meraki:contentFiltering/category/1'
                    - 'meraki:contentFiltering/category/7'
                  settings: override
                blockedUrlPatterns:
                  patterns:
                    - 'http://www.example.com'
                    - 'http://www.betting.com'
                  settings: append
              firewallAndTrafficShaping:
                l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    destCidr: 192.168.1.0/24
                    destPort: 443
                    policy: allow
                    protocol: tcp
                l7FirewallRules:
                  - policy: deny
                    type: application
                    value:
                      id: 'meraki:layer7/application/67'
                      name: Xbox LIVE
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: 'meraki:layer7/category/2'
                      name: Blogging
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: '23'
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: '10.11.12.00/24:5555'
                  - policy: deny
                    type: blockedCountries
                    value:
                      - AX
                      - CA
                  - policy: deny
                    type: allowedCountries
                    value:
                      - US
                settings: custom
                trafficShapingRules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: '9090'
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: '10.1.0.0/16:80'
                      - type: localNet
                        value: 192.168.0.0/16
                      - type: applicationCategory
                        value:
                          id: 'meraki:layer7/category/2'
                          name: Blogging
                      - type: application
                        value:
                          id: 'meraki:layer7/application/133'
                          name: Battle.net
                    dscpTagValue: null
                    pcpTagValue: null
                    perClientBandwidthLimits:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
              name: No video streaming
              scheduling:
                enabled: true
                friday:
                  active: true
                  from: 540
                  to: 1020
                monday:
                  active: true
                  from: 540
                  to: 1020
                saturday:
                  active: false
                  from: '0:00'
                  to: 1440
                sunday:
                  active: false
                  from: '0:00'
                  to: 1440
                thursday:
                  active: true
                  from: 540
                  to: 1020
                tuesday:
                  active: true
                  from: 540
                  to: 1020
                wednesday:
                  active: true
                  from: 540
                  to: 1020
              splashAuthSettings: bypass
              vlanTagging:
                settings: custom
                vlanId: '1'
            properties:
              bandwidth:
                description: |2
                      The bandwidth settings for clients bound to your group policy.
                properties:
                  bandwidthLimits:
                    description: >-
                      The bandwidth limits object, specifying upload and
                      download speed for clients bound to the group policy.
                      These are only enforced if 'settings' is set to 'custom'.
                    properties:
                      limitDown:
                        description: >-
                          The maximum download limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                      limitUp:
                        description: >-
                          The maximum upload limit (integer, in Kbps). null
                          indicates no limit
                        type: integer
                    type: object
                  settings:
                    description: >-
                      How bandwidth limits are enforced. Can be 'network
                      default', 'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                type: object
              bonjourForwarding:
                description: >-
                  The Bonjour settings for your group policy. Only valid if your
                  network has a wireless configuration.
                properties:
                  rules:
                    description: >-
                      A list of the Bonjour forwarding rules for your group
                      policy. If 'settings' is set to 'custom', at least one
                      rule must be specified.
                    items:
                      properties:
                        description:
                          description: >-
                            A description for your Bonjour forwarding rule.
                            Optional.
                          type: string
                        services:
                          description: >-
                            A list of Bonjour services. At least one service
                            must be specified. Available services are 'All
                            Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP',
                            'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners'
                            and 'SSH'
                          items:
                            enum:
                              - All Services
                              - AirPlay
                              - AFP
                              - BitTorrent
                              - FTP
                              - iChat
                              - iTunes
                              - Printers
                              - Samba
                              - Scanners
                              - SSH
                            type: string
                          type: array
                        vlanId:
                          description: The ID of the service VLAN. Required.
                          type: string
                      required:
                        - vlanId
                        - services
                      type: object
                    type: array
                  settings:
                    description: >-
                      How Bonjour rules are applied. Can be 'network default',
                      'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                type: object
              contentFiltering:
                description: The content filtering settings for your group policy
                properties:
                  allowedUrlPatterns:
                    description: Settings for allowed URL patterns
                    properties:
                      patterns:
                        description: A list of URL patterns that are allowed
                        items:
                          type: string
                        type: array
                      settings:
                        description: >-
                          How URL patterns are applied. Can be 'network
                          default', 'append' or 'override'.
                        enum:
                          - network default
                          - append
                          - override
                        type: string
                    type: object
                  blockedUrlCategories:
                    description: Settings for blocked URL categories
                    properties:
                      categories:
                        description: A list of URL categories to block
                        items:
                          type: string
                        type: array
                      settings:
                        description: >-
                          How URL categories are applied. Can be 'network
                          default', 'append' or 'override'.
                        enum:
                          - network default
                          - append
                          - override
                        type: string
                    type: object
                  blockedUrlPatterns:
                    description: Settings for blocked URL patterns
                    properties:
                      patterns:
                        description: A list of URL patterns that are blocked
                        items:
                          type: string
                        type: array
                      settings:
                        description: >-
                          How URL patterns are applied. Can be 'network
                          default', 'append' or 'override'.
                        enum:
                          - network default
                          - append
                          - override
                        type: string
                    type: object
                type: object
              firewallAndTrafficShaping:
                description: |2
                      The firewall and traffic shaping rules and settings for your policy.
                properties:
                  l3FirewallRules:
                    description: An ordered array of the L3 firewall rules
                    items:
                      properties:
                        comment:
                          description: Description of the rule (optional)
                          type: string
                        destCidr:
                          description: >-
                            Destination IP address (in IP or CIDR notation), a
                            fully-qualified domain name (FQDN, if your network
                            supports it) or 'any'.
                          type: string
                        destPort:
                          description: >-
                            Destination port (integer in the range 1-65535), a
                            port range (e.g. 8080-9090), or 'any'
                          type: string
                        policy:
                          description: '''allow'' or ''deny'' traffic specified by this rule'
                          type: string
                        protocol:
                          description: >-
                            The type of protocol (must be 'tcp', 'udp', 'icmp'
                            or 'any')
                          type: string
                      required:
                        - policy
                        - protocol
                        - destCidr
                      type: object
                    type: array
                  l7FirewallRules:
                    description: An ordered array of L7 firewall rules
                    items:
                      properties:
                        policy:
                          description: >-
                            The policy applied to matching traffic. Must be
                            'deny'.
                          enum:
                            - deny
                          type: string
                        type:
                          description: >-
                            Type of the L7 Rule. Must be 'application',
                            'applicationCategory', 'host', 'port' or 'ipRange'
                          enum:
                            - application
                            - applicationCategory
                            - host
                            - port
                            - ipRange
                          type: string
                        value:
                          description: >-
                            The 'value' of what you want to block. If 'type' is
                            'host', 'port' or 'ipRange', 'value' must be a
                            string matching either a hostname (e.g.
                            somewhere.com), a port (e.g. 8080), or an IP range
                            (e.g. 192.1.0.0/16). If 'type' is 'application' or
                            'applicationCategory', then 'value' must be an
                            object with an ID for the application.
                          type: string
                      type: object
                    type: array
                  settings:
                    description: >-
                      How firewall and traffic shaping rules are enforced. Can
                      be 'network default', 'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                  trafficShapingRules:
                    description: |2
                          An array of traffic shaping rules. Rules are applied in the order that
                          they are specified in. An empty list (or null) means no rules. Note that
                          you are allowed a maximum of 8 rules.
                    items:
                      properties:
                        definitions:
                          description: |2
                                A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                          items:
                            properties:
                              type:
                                description: >-
                                  The type of definition. Can be one of
                                  'application', 'applicationCategory', 'host',
                                  'port', 'ipRange' or 'localNet'.
                                enum:
                                  - application
                                  - applicationCategory
                                  - host
                                  - port
                                  - ipRange
                                  - localNet
                                type: string
                              value:
                                description: |2
                                      If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                      a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                      "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                      custom ports.
                                       If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                      with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                      application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                      endpoint).
                                type: string
                            required:
                              - type
                              - value
                            type: object
                          type: array
                        dscpTagValue:
                          description: |2
                                The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                          type: integer
                        pcpTagValue:
                          description: |2
                                The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                                null means 'Do not set PCP tag'.
                          type: integer
                        perClientBandwidthLimits:
                          description: |2
                                An object describing the bandwidth settings for your rule.
                          properties:
                            bandwidthLimits:
                              description: >-
                                The bandwidth limits object, specifying the
                                upload ('limitUp') and download ('limitDown')
                                speed in Kbps. These are only enforced if
                                'settings' is set to 'custom'.
                              properties:
                                limitDown:
                                  description: >-
                                    The maximum download limit (integer, in
                                    Kbps).
                                  type: integer
                                limitUp:
                                  description: 'The maximum upload limit (integer, in Kbps).'
                                  type: integer
                              type: object
                            settings:
                              description: >-
                                How bandwidth limits are applied by your rule.
                                Can be one of 'network default', 'ignore' or
                                'custom'.
                              type: string
                          type: object
                        priority:
                          description: |2
                                A string, indicating the priority level for packets bound to your rule.
                                Can be 'low', 'normal' or 'high'.
                          type: string
                      required:
                        - definitions
                      type: object
                    type: array
                type: object
              name:
                description: The name for your group policy.
                type: string
              scheduling:
                description: |2
                      The schedule for the group policy. Schedules are applied to days of the week.
                properties:
                  enabled:
                    description: >-
                      Whether scheduling is enabled (true) or disabled (false).
                      Defaults to false. If true, the schedule objects for each
                      day of the week (monday - sunday) are parsed.
                    type: boolean
                  friday:
                    description: The schedule object for Friday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  monday:
                    description: The schedule object for Monday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  saturday:
                    description: The schedule object for Saturday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  sunday:
                    description: The schedule object for Sunday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  thursday:
                    description: The schedule object for Thursday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  tuesday:
                    description: The schedule object for Tuesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  wednesday:
                    description: The schedule object for Wednesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                type: object
              splashAuthSettings:
                description: >-
                  Whether clients bound to your policy will bypass splash
                  authorization or behave according to the network's rules. Can
                  be one of 'network default' or 'bypass'. Only available if
                  your network has a wireless configuration.
                enum:
                  - network default
                  - bypass
                type: string
              vlanTagging:
                description: >-
                  The VLAN tagging settings for your group policy. Only
                  available if your network has a wireless configuration.
                properties:
                  settings:
                    description: >-
                      How VLAN tagging is applied. Can be 'network default',
                      'ignore' or 'custom'.
                    enum:
                      - network default
                      - ignore
                      - custom
                    type: string
                  vlanId:
                    description: >-
                      The ID of the vlan you want to tag. This only applies if
                      'settings' is set to 'custom'.
                    type: string
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a group policy
      tags:
        - networks
        - configure
        - groupPolicies
  '/networks/{networkId}/insight/applications/{applicationId}/healthByTime':
    get:
      description: Get application health by time
      operationId: getNetworkInsightApplicationHealthByTime
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: applicationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 7 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days. The default
            is 2 hours.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 60, 300, 3600, 86400. The default is 300.
          in: query
          name: resolution
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get application health by time
      tags:
        - insight
        - monitor
        - applications
        - healthByTime
  '/networks/{networkId}/merakiAuthUsers':
    get:
      description: >-
        List the users configured under Meraki Authentication for a network
        (splash guest or RADIUS users for a wireless network, or client VPN
        users for a wired network)
      operationId: getNetworkMerakiAuthUsers
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        List the users configured under Meraki Authentication for a network
        (splash guest or RADIUS users for a wireless network, or client VPN
        users for a wired network)
      tags:
        - networks
        - configure
        - merakiAuthUsers
    post:
      consumes:
        - application/json
      description: >-
        Authorize a user configured with Meraki Authentication for a network
        (currently supports 802.1X, splash guest, and client VPN users, and
        currently, organizations have a 50,000 user cap)
      operationId: createNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example: {}
            properties:
              accountType:
                default: 802.1X
                description: >-
                  Authorization type for user. Can be 'Guest' or '802.1X' for
                  wireless networks, or 'Client VPN' for wired networks.
                  Defaults to '802.1X'.
                enum:
                  - Guest
                  - 802.1X
                  - Client VPN
                type: string
              authorizations:
                description: Authorization zones and expiration dates for the user.
                items:
                  properties:
                    expiresAt:
                      default: Never
                      description: >-
                        Date for authorization to expire. Set to 'Never' for the
                        authorization to not expire, which is the default.
                      type: string
                    ssidNumber:
                      description: >-
                        Required for wireless networks. The SSID for which the
                        user is being authorized, which must be configured for
                        the user's given accountType.
                      type: integer
                  type: object
                type: array
              email:
                description: Email address of the user
                type: string
              emailPasswordToUser:
                description: >-
                  Whether or not Meraki should email the password to user.
                  Default is false.
                type: boolean
              name:
                description: Name of the user
                type: string
              password:
                description: The password for this user account
                type: string
            required:
              - email
              - name
              - password
              - authorizations
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Authorize a user configured with Meraki Authentication for a network
        (currently supports 802.1X, splash guest, and client VPN users, and
        currently, organizations have a 50,000 user cap)
      tags:
        - networks
        - configure
        - merakiAuthUsers
  '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}':
    delete:
      description: >-
        Deauthorize a user. To reauthorize a user after deauthorizing them, POST
        to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client
        VPN users can be deauthorized.)
      operationId: deleteNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: merakiAuthUserId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Deauthorize a user
      tags:
        - networks
        - configure
        - merakiAuthUsers
    get:
      description: 'Return the Meraki Auth splash guest, RADIUS, or client VPN user'
      operationId: getNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: merakiAuthUserId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Return the Meraki Auth splash guest, RADIUS, or client VPN user'
      tags:
        - networks
        - configure
        - merakiAuthUsers
    put:
      consumes:
        - application/json
      description: >-
        Update a user configured with Meraki Authentication (currently, 802.1X
        RADIUS, splash guest, and client VPN users can be updated)
      operationId: updateNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: merakiAuthUserId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              authorizations:
                description: Authorization zones and expiration dates for the user.
                items:
                  properties:
                    expiresAt:
                      default: Never
                      description: >-
                        Date for authorization to expire. Default is for
                        authorization to not expire.
                      type: string
                    ssidNumber:
                      description: SSID for which the user is being authorized
                      type: integer
                  required:
                    - ssidNumber
                  type: object
                type: array
              emailPasswordToUser:
                description: >-
                  Whether or not Meraki should email the password to user.
                  Default is false.
                type: boolean
              name:
                description: Name of the user
                type: string
              password:
                description: The password for this user account
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Update a user configured with Meraki Authentication (currently, 802.1X
        RADIUS, splash guest, and client VPN users can be updated)
      tags:
        - networks
        - configure
        - merakiAuthUsers
  '/networks/{networkId}/mqttBrokers':
    get:
      description: List the MQTT brokers for this network
      operationId: getNetworkMqttBrokers
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the MQTT brokers for this network
      tags:
        - networks
        - configure
        - mqttBrokers
    post:
      consumes:
        - application/json
      description: Add an MQTT broker
      operationId: createNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              host: 1.1.1.1
              name: MQTT_Broker_1
              port: 1234
            properties:
              host:
                description: Host name/IP address where MQTT broker runs
                type: string
              name:
                description: Name of the MQTT broker
                type: string
              port:
                description: Host port though which MQTT broker can be reached
                type: integer
            required:
              - name
              - host
              - port
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
  '/networks/{networkId}/mqttBrokers/{mqttBrokerId}':
    delete:
      description: Delete an MQTT broker
      operationId: deleteNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: mqttBrokerId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
    get:
      description: Return an MQTT broker
      operationId: getNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: mqttBrokerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
    put:
      consumes:
        - application/json
      description: Update an MQTT broker
      operationId: updateNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: mqttBrokerId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              host: 1.1.1.1
              id: '1234'
              name: MQTT_Broker_1
              port: 1234
            properties:
              host:
                description: Host name where mqtt broker runs
                type: string
              name:
                description: Name of the mqtt config
                type: string
              port:
                description: Host port though which mqtt broker can be reached
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
  '/networks/{networkId}/netflow':
    get:
      description: Return the NetFlow traffic reporting settings for a network
      operationId: getNetworkNetflow
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the NetFlow traffic reporting settings for a network
      tags:
        - networks
        - configure
        - netflow
    put:
      consumes:
        - application/json
      description: Update the NetFlow traffic reporting settings for a network
      operationId: updateNetworkNetflow
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              collectorIp: 1.2.3.4
              collectorPort: 443
              etaDstPort: 443
              etaEnabled: true
              reportingEnabled: true
            properties:
              collectorIp:
                description: The IPv4 address of the NetFlow collector.
                type: string
              collectorPort:
                description: The port that the NetFlow collector will be listening on.
                type: integer
              etaDstPort:
                description: >-
                  The port that the Encrypted Traffic Analysis collector will be
                  listening on.
                type: integer
              etaEnabled:
                description: >-
                  Boolean indicating whether Encrypted Traffic Analysis is
                  enabled (true) or disabled (false).
                type: boolean
              reportingEnabled:
                description: >-
                  Boolean indicating whether NetFlow traffic reporting is
                  enabled (true) or disabled (false).
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the NetFlow traffic reporting settings for a network
      tags:
        - networks
        - configure
        - netflow
  '/networks/{networkId}/networkHealth/channelUtilization':
    get:
      description: Get the channel utilization over each radio for all APs in a network.
      operationId: getNetworkNetworkHealthChannelUtilization
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 600. The default is 600.
          in: query
          name: resolution
          type: integer
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            100. Default is 10.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Get the channel utilization over each radio for all APs in a network.
      tags:
        - networks
        - monitor
        - networkHealth
        - channelUtilization
  '/networks/{networkId}/pii/piiKeys':
    get:
      description: >-
        List the keys required to access Personally Identifiable Information
        (PII) for a given identifier. Exactly one identifier will be accepted.
        If the organization contains org-wide Systems Manager users matching the
        key provided then there will be an entry with the key "0" containing the
        applicable keys.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/piiKeys

        ```
      operationId: getNetworkPiiPiiKeys
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: The username of a Systems Manager user
          in: query
          name: username
          type: string
        - description: The email of a network user account or a Systems Manager device
          in: query
          name: email
          type: string
        - description: The MAC of a network client device or a Systems Manager device
          in: query
          name: mac
          type: string
        - description: The serial of a Systems Manager device
          in: query
          name: serial
          type: string
        - description: The IMEI of a Systems Manager device
          in: query
          name: imei
          type: string
        - description: The MAC of a Bluetooth client
          in: query
          name: bluetoothMac
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        List the keys required to access Personally Identifiable Information
        (PII) for a given identifier
      tags:
        - networks
        - configure
        - pii
        - piiKeys
  '/networks/{networkId}/pii/requests':
    get:
      description: |-
        List the PII requests for this network or organization

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      operationId: getNetworkPiiRequests
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the PII requests for this network or organization
      tags:
        - networks
        - configure
        - pii
        - requests
    post:
      consumes:
        - application/json
      description: |-
        Submit a new delete or restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      operationId: createNetworkPiiRequest
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              datasets:
                - usage
                - events
              mac: '00:77:00:77:00:77'
              type: delete
            properties:
              datasets:
                description: >-
                  The datasets related to the provided key that should be
                  deleted. Only applies to "delete" requests. The value "all"
                  will be expanded to all datasets applicable to this type. The
                  datasets by applicable to each type are: mac (usage, events,
                  traffic), email (users, loginAttempts), username (users,
                  loginAttempts), bluetoothMac (client, connectivity),
                  smDeviceId (device), smUserId (user)
                items:
                  type: string
                type: array
              email:
                description: >-
                  The email of a network user account. Only applies to "delete"
                  requests.
                type: string
              mac:
                description: >-
                  The MAC of a network client device. Applies to both "restrict
                  processing" and "delete" requests.
                type: string
              smDeviceId:
                description: >-
                  The sm_device_id of a Systems Manager device. The only way to
                  "restrict processing" or "delete" a Systems Manager device.
                  Must include "device" in the dataset for a "delete" request to
                  destroy the device.
                type: string
              smUserId:
                description: >-
                  The sm_user_id of a Systems Manager user. The only way to
                  "restrict processing" or "delete" a Systems Manager user. Must
                  include "user" in the dataset for a "delete" request to
                  destroy the user.
                type: string
              type:
                description: One of "delete" or "restrict processing"
                enum:
                  - delete
                  - restrict processing
                type: string
              username:
                description: >-
                  The username of a network log in. Only applies to "delete"
                  requests.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Submit a new delete or restrict processing PII request
      tags:
        - networks
        - configure
        - pii
        - requests
  '/networks/{networkId}/pii/requests/{requestId}':
    delete:
      description: |-
        Delete a restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      operationId: deleteNetworkPiiRequest
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: requestId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a restrict processing PII request
      tags:
        - networks
        - configure
        - pii
        - requests
    get:
      description: |-
        Return a PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      operationId: getNetworkPiiRequest
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: requestId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a PII request
      tags:
        - networks
        - configure
        - pii
        - requests
  '/networks/{networkId}/pii/smDevicesForKey':
    get:
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager device ID(s) associated with that identifier. These
        device IDs can be used with the Systems Manager API endpoints to
        retrieve device details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smDevicesForKey

        ```
      operationId: getNetworkPiiSmDevicesForKey
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: The username of a Systems Manager user
          in: query
          name: username
          type: string
        - description: The email of a network user account or a Systems Manager device
          in: query
          name: email
          type: string
        - description: The MAC of a network client device or a Systems Manager device
          in: query
          name: mac
          type: string
        - description: The serial of a Systems Manager device
          in: query
          name: serial
          type: string
        - description: The IMEI of a Systems Manager device
          in: query
          name: imei
          type: string
        - description: The MAC of a Bluetooth client
          in: query
          name: bluetoothMac
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager device ID(s) associated with that identifier
      tags:
        - networks
        - configure
        - pii
        - smDevicesForKey
  '/networks/{networkId}/pii/smOwnersForKey':
    get:
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager owner ID(s) associated with that identifier. These owner
        IDs can be used with the Systems Manager API endpoints to retrieve owner
        details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smOwnersForKey

        ```
      operationId: getNetworkPiiSmOwnersForKey
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: The username of a Systems Manager user
          in: query
          name: username
          type: string
        - description: The email of a network user account or a Systems Manager device
          in: query
          name: email
          type: string
        - description: The MAC of a network client device or a Systems Manager device
          in: query
          name: mac
          type: string
        - description: The serial of a Systems Manager device
          in: query
          name: serial
          type: string
        - description: The IMEI of a Systems Manager device
          in: query
          name: imei
          type: string
        - description: The MAC of a Bluetooth client
          in: query
          name: bluetoothMac
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager owner ID(s) associated with that identifier
      tags:
        - networks
        - configure
        - pii
        - smOwnersForKey
  '/networks/{networkId}/settings':
    get:
      description: Return the settings for a network
      operationId: getNetworkSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the settings for a network
      tags:
        - networks
        - configure
        - settings
    put:
      consumes:
        - application/json
      description: Update the settings for a network
      operationId: updateNetworkSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              fips:
                enabled: true
              localStatusPageEnabled: true
              remoteStatusPageEnabled: true
              secureConnect:
                enabled: false
            properties:
              localStatusPageEnabled:
                description: >-
                  Enables / disables the local device status pages (<a
                  target='_blank' href='http://my.meraki.com/'>my.meraki.com,
                  </a><a target='_blank'
                  href='http://ap.meraki.com/'>ap.meraki.com, </a><a
                  target='_blank'
                  href='http://switch.meraki.com/'>switch.meraki.com, </a><a
                  target='_blank'
                  href='http://wired.meraki.com/'>wired.meraki.com</a>).
                  Optional (defaults to false)
                type: boolean
              remoteStatusPageEnabled:
                description: >-
                  Enables / disables access to the device status page (<a
                  target='_blank'>http://[device's LAN IP])</a>. Optional. Can
                  only be set if localStatusPageEnabled is set to true
                type: boolean
              secureConnect:
                description: A hash of SecureConnect options applied to the Network.
                properties:
                  enabled:
                    description: Enables / disables SecureConnect on the network. Optional.
                    type: boolean
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the settings for a network
      tags:
        - networks
        - configure
        - settings
  '/networks/{networkId}/sm/bypassActivationLockAttempts':
    post:
      consumes:
        - application/json
      description: Bypass activation lock attempt
      operationId: createNetworkSmBypassActivationLockAttempt
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              ids:
                - '1284392014819'
                - '2983092129865'
            properties:
              ids:
                description: The ids of the devices to attempt activation lock bypass.
                items:
                  type: string
                type: array
            required:
              - ids
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Bypass activation lock attempt
      tags:
        - sm
        - configure
        - bypassActivationLockAttempts
  '/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}':
    get:
      description: Bypass activation lock attempt status
      operationId: getNetworkSmBypassActivationLockAttempt
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: attemptId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Bypass activation lock attempt status
      tags:
        - sm
        - configure
        - bypassActivationLockAttempts
  '/networks/{networkId}/sm/devices':
    get:
      description: >-
        List the devices enrolled in an SM network with various specified fields
        and filters
      operationId: getNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - collectionFormat: csv
          description: |-
            Additional fields that will be displayed for each device.
                The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,
                systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,
                ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,
                simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,
                isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,
                hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.
          in: query
          items:
            type: string
          name: fields
          type: array
        - collectionFormat: csv
          description: Filter devices by wifi mac(s).
          in: query
          items:
            type: string
          name: wifiMacs
          type: array
        - collectionFormat: csv
          description: Filter devices by serial(s).
          in: query
          items:
            type: string
          name: serials
          type: array
        - collectionFormat: csv
          description: Filter devices by id(s).
          in: query
          items:
            type: string
          name: ids
          type: array
        - collectionFormat: csv
          description: >-
            Specify a scope (one of all, none, withAny, withAll, withoutAny, or
            withoutAll) and a set of tags.
          in: query
          items:
            type: string
          name: scope
          type: array
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        List the devices enrolled in an SM network with various specified fields
        and filters
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/checkin':
    post:
      consumes:
        - application/json
      description: Force check-in a set of devices
      operationId: checkinNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              ids: '"1284392014819"'
            properties:
              ids:
                description: The ids of the devices to be checked-in.
                items:
                  type: string
                type: array
              scope:
                description: >-
                  The scope (one of all, none, withAny, withAll, withoutAny, or
                  withoutAll) and a set of tags of the devices to be checked-in.
                items:
                  type: string
                type: array
              serials:
                description: The serials of the devices to be checked-in.
                items:
                  type: string
                type: array
              wifiMacs:
                description: The wifiMacs of the devices to be checked-in.
                items:
                  type: string
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Force check-in a set of devices
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/fields':
    put:
      consumes:
        - application/json
      description: Modify the fields of a device
      operationId: updateNetworkSmDevicesFields
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              deviceFields:
                name: Miles's phone
                notes: Here's some info about my device
              id: '1284392014819'
            properties:
              deviceFields:
                description: >-
                  The new fields of the device. Each field of this object is
                  optional.
                properties:
                  name:
                    description: New name for the device
                    type: string
                  notes:
                    description: New notes for the device
                    type: string
                type: object
              id:
                description: The id of the device to be modified.
                type: string
              serial:
                description: The serial of the device to be modified.
                type: string
              wifiMac:
                description: The wifiMac of the device to be modified.
                type: string
            required:
              - deviceFields
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Modify the fields of a device
      tags:
        - sm
        - configure
        - devices
        - fields
  '/networks/{networkId}/sm/devices/lock':
    post:
      consumes:
        - application/json
      description: Lock a set of devices
      operationId: lockNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              ids: '"1284392014819"'
            properties:
              ids:
                description: The ids of the devices to be locked.
                items:
                  type: string
                type: array
              pin:
                description: >-
                  The pin number for locking macOS devices (a six digit number).
                  Required only for macOS devices.
                type: integer
              scope:
                description: >-
                  The scope (one of all, none, withAny, withAll, withoutAny, or
                  withoutAll) and a set of tags of the devices to be wiped.
                items:
                  type: string
                type: array
              serials:
                description: The serials of the devices to be locked.
                items:
                  type: string
                type: array
              wifiMacs:
                description: The wifiMacs of the devices to be locked.
                items:
                  type: string
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Lock a set of devices
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/modifyTags':
    post:
      consumes:
        - application/json
      description: 'Add, delete, or update the tags of a set of devices'
      operationId: modifyNetworkSmDevicesTags
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              scope: 'withAny, old_tag'
              tags:
                - tag1
                - tag2
              updateAction: add
            properties:
              ids:
                description: The ids of the devices to be modified.
                items:
                  type: string
                type: array
              scope:
                description: >-
                  The scope (one of all, none, withAny, withAll, withoutAny, or
                  withoutAll) and a set of tags of the devices to be modified.
                items:
                  type: string
                type: array
              serials:
                description: The serials of the devices to be modified.
                items:
                  type: string
                type: array
              tags:
                description: 'The tags to be added, deleted, or updated.'
                items:
                  type: string
                type: array
              updateAction:
                description: >-
                  One of add, delete, or update. Only devices that have been
                  modified will be returned.
                type: string
              wifiMacs:
                description: The wifiMacs of the devices to be modified.
                items:
                  type: string
                type: array
            required:
              - tags
              - updateAction
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Add, delete, or update the tags of a set of devices'
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/move':
    post:
      consumes:
        - application/json
      description: Move a set of devices to a new network
      operationId: moveNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              ids: '"1284392014819"'
              newNetwork: N_24329156
            properties:
              ids:
                description: The ids of the devices to be moved.
                items:
                  type: string
                type: array
              newNetwork:
                description: The new network to which the devices will be moved.
                type: string
              scope:
                description: >-
                  The scope (one of all, none, withAny, withAll, withoutAny, or
                  withoutAll) and a set of tags of the devices to be moved.
                items:
                  type: string
                type: array
              serials:
                description: The serials of the devices to be moved.
                items:
                  type: string
                type: array
              wifiMacs:
                description: The wifiMacs of the devices to be moved.
                items:
                  type: string
                type: array
            required:
              - newNetwork
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Move a set of devices to a new network
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/wipe':
    post:
      consumes:
        - application/json
      description: Wipe a device
      operationId: wipeNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              id: '1284392014819'
            properties:
              id:
                description: The id of the device to be wiped.
                type: string
              pin:
                description: >-
                  The pin number (a six digit value) for wiping a macOS device.
                  Required only for macOS devices.
                type: integer
              serial:
                description: The serial of the device to be wiped.
                type: string
              wifiMac:
                description: The wifiMac of the device to be wiped.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Wipe a device
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory':
    get:
      description: >-
        Return the client's daily cellular data usage history. Usage data is in
        kilobytes.
      operationId: getNetworkSmDeviceCellularUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the client's daily cellular data usage history
      tags:
        - sm
        - monitor
        - devices
        - cellularUsageHistory
  '/networks/{networkId}/sm/devices/{deviceId}/certs':
    get:
      description: List the certs on a device
      operationId: getNetworkSmDeviceCerts
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the certs on a device
      tags:
        - sm
        - configure
        - devices
        - certs
  '/networks/{networkId}/sm/devices/{deviceId}/connectivity':
    get:
      description: >-
        Returns historical connectivity data (whether a device is regularly
        checking in to Dashboard).
      operationId: getNetworkSmDeviceConnectivity
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        Returns historical connectivity data (whether a device is regularly
        checking in to Dashboard).
      tags:
        - sm
        - monitor
        - devices
        - connectivity
  '/networks/{networkId}/sm/devices/{deviceId}/desktopLogs':
    get:
      description: >-
        Return historical records of various Systems Manager network connection
        details for desktop devices.
      operationId: getNetworkSmDeviceDesktopLogs
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        Return historical records of various Systems Manager network connection
        details for desktop devices.
      tags:
        - sm
        - monitor
        - devices
        - desktopLogs
  '/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs':
    get:
      description: >-
        Return historical records of commands sent to Systems Manager devices.
        Note that this will include the name of the Dashboard user who initiated
        the command if it was generated by a Dashboard admin rather than the
        automatic behavior of the system; you may wish to filter this out of any
        reports.
      operationId: getNetworkSmDeviceDeviceCommandLogs
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Return historical records of commands sent to Systems Manager devices
      tags:
        - sm
        - monitor
        - devices
        - deviceCommandLogs
  '/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles':
    get:
      description: Get the profiles associated with a device
      operationId: getNetworkSmDeviceDeviceProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get the profiles associated with a device
      tags:
        - sm
        - configure
        - devices
        - deviceProfiles
  '/networks/{networkId}/sm/devices/{deviceId}/networkAdapters':
    get:
      description: List the network adapters of a device
      operationId: getNetworkSmDeviceNetworkAdapters
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the network adapters of a device
      tags:
        - sm
        - configure
        - devices
        - networkAdapters
  '/networks/{networkId}/sm/devices/{deviceId}/performanceHistory':
    get:
      description: >-
        Return historical records of various Systems Manager client metrics for
        desktop devices.
      operationId: getNetworkSmDevicePerformanceHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        Return historical records of various Systems Manager client metrics for
        desktop devices.
      tags:
        - sm
        - monitor
        - devices
        - performanceHistory
  '/networks/{networkId}/sm/devices/{deviceId}/refreshDetails':
    post:
      description: Refresh the details of a device
      operationId: refreshNetworkSmDeviceDetails
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
      summary: Refresh the details of a device
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/{deviceId}/restrictions':
    get:
      description: List the restrictions on a device
      operationId: getNetworkSmDeviceRestrictions
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the restrictions on a device
      tags:
        - sm
        - configure
        - devices
        - restrictions
  '/networks/{networkId}/sm/devices/{deviceId}/securityCenters':
    get:
      description: List the security centers on a device
      operationId: getNetworkSmDeviceSecurityCenters
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the security centers on a device
      tags:
        - sm
        - configure
        - devices
        - securityCenters
  '/networks/{networkId}/sm/devices/{deviceId}/softwares':
    get:
      description: Get a list of softwares associated with a device
      operationId: getNetworkSmDeviceSoftwares
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get a list of softwares associated with a device
      tags:
        - sm
        - configure
        - devices
        - softwares
  '/networks/{networkId}/sm/devices/{deviceId}/unenroll':
    post:
      description: Unenroll a device
      operationId: unenrollNetworkSmDevice
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Unenroll a device
      tags:
        - sm
        - configure
        - devices
  '/networks/{networkId}/sm/devices/{deviceId}/wlanLists':
    get:
      description: List the saved SSID names on a device
      operationId: getNetworkSmDeviceWlanLists
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: deviceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the saved SSID names on a device
      tags:
        - sm
        - configure
        - devices
        - wlanLists
  '/networks/{networkId}/sm/profiles':
    get:
      description: List all profiles in a network
      operationId: getNetworkSmProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List all profiles in a network
      tags:
        - sm
        - configure
        - profiles
  '/networks/{networkId}/sm/targetGroups':
    get:
      description: List the target groups in this network
      operationId: getNetworkSmTargetGroups
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            Boolean indicating if the the ids of the devices or users scoped by
            the target group should be included in the response
          in: query
          name: withDetails
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the target groups in this network
      tags:
        - sm
        - configure
        - targetGroups
    post:
      consumes:
        - application/json
      description: Add a target group
      operationId: createNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: My target group
              scope: none
              tags: '[]'
              type: devices
            properties:
              name:
                description: The name of this target group
                type: string
              scope:
                description: >-
                  The scope and tag options of the target group. Comma separated
                  values beginning with one of withAny, withAll, withoutAny,
                  withoutAll, all, none, followed by tags. Default to none if
                  empty.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a target group
      tags:
        - sm
        - configure
        - targetGroups
  '/networks/{networkId}/sm/targetGroups/{targetGroupId}':
    delete:
      description: Delete a target group from a network
      operationId: deleteNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: targetGroupId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a target group from a network
      tags:
        - sm
        - configure
        - targetGroups
    get:
      description: Return a target group
      operationId: getNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: targetGroupId
          required: true
          type: string
        - description: >-
            Boolean indicating if the the ids of the devices or users scoped by
            the target group should be included in the response
          in: query
          name: withDetails
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a target group
      tags:
        - sm
        - configure
        - targetGroups
    put:
      consumes:
        - application/json
      description: Update a target group
      operationId: updateNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: targetGroupId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: My target group
              scope: none
              tags: '[]'
              type: devices
            properties:
              name:
                description: The name of this target group
                type: string
              scope:
                description: >-
                  The scope and tag options of the target group. Comma separated
                  values beginning with one of withAny, withAll, withoutAny,
                  withoutAll, all, none, followed by tags. Default to none if
                  empty.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a target group
      tags:
        - sm
        - configure
        - targetGroups
  '/networks/{networkId}/sm/userAccessDevices':
    get:
      description: List User Access Devices and its Trusted Access Connections
      operationId: getNetworkSmUserAccessDevices
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 100.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List User Access Devices and its Trusted Access Connections
      tags:
        - sm
        - configure
        - userAccessDevices
  '/networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}':
    delete:
      description: Delete a User Access Device
      operationId: deleteNetworkSmUserAccessDevice
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: userAccessDeviceId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a User Access Device
      tags:
        - sm
        - configure
        - userAccessDevices
  '/networks/{networkId}/sm/users':
    get:
      description: >-
        List the owners in an SM network with various specified fields and
        filters
      operationId: getNetworkSmUsers
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - collectionFormat: csv
          description: Filter users by id(s).
          in: query
          items:
            type: string
          name: ids
          type: array
        - collectionFormat: csv
          description: Filter users by username(s).
          in: query
          items:
            type: string
          name: usernames
          type: array
        - collectionFormat: csv
          description: Filter users by email(s).
          in: query
          items:
            type: string
          name: emails
          type: array
        - collectionFormat: csv
          description: >-
            Specifiy a scope (one of all, none, withAny, withAll, withoutAny,
            withoutAll) and a set of tags.
          in: query
          items:
            type: string
          name: scope
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        List the owners in an SM network with various specified fields and
        filters
      tags:
        - sm
        - configure
        - users
  '/networks/{networkId}/sm/users/{userId}/deviceProfiles':
    get:
      description: Get the profiles associated with a user
      operationId: getNetworkSmUserDeviceProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get the profiles associated with a user
      tags:
        - sm
        - configure
        - users
        - deviceProfiles
  '/networks/{networkId}/sm/users/{userId}/softwares':
    get:
      description: Get a list of softwares associated with a user
      operationId: getNetworkSmUserSoftwares
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get a list of softwares associated with a user
      tags:
        - sm
        - configure
        - users
        - softwares
  '/networks/{networkId}/snmp':
    get:
      description: Return the SNMP settings for a network
      operationId: getNetworkSnmp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the SNMP settings for a network
      tags:
        - networks
        - configure
        - snmp
    put:
      consumes:
        - application/json
      description: Update the SNMP settings for a network
      operationId: updateNetworkSnmp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              access: users
              users:
                - passphrase: hunter2
                  username: AzureDiamond
            properties:
              access:
                description: >-
                  The type of SNMP access. Can be one of 'none' (disabled),
                  'community' (V1/V2c), or 'users' (V3).
                enum:
                  - none
                  - community
                  - users
                type: string
              communityString:
                description: >-
                  The SNMP community string. Only relevant if 'access' is set to
                  'community'.
                type: string
              users:
                description: >-
                  The list of SNMP users. Only relevant if 'access' is set to
                  'users'.
                items:
                  properties:
                    passphrase:
                      description: The passphrase for the SNMP user. Required.
                      type: string
                    username:
                      description: The username for the SNMP user. Required.
                      type: string
                  required:
                    - username
                    - passphrase
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the SNMP settings for a network
      tags:
        - networks
        - configure
        - snmp
  '/networks/{networkId}/splashLoginAttempts':
    get:
      description: List the splash login attempts for a network
      operationId: getNetworkSplashLoginAttempts
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: Only return the login attempts for the specified SSID
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
          in: query
          name: ssidNumber
          type: integer
        - description: 'The username, email, or phone number used during login'
          in: query
          name: loginIdentifier
          type: string
        - description: >-
            The timespan, in seconds, for the login attempts. The period will be
            from [timespan] seconds ago until now. The maximum timespan is 3
            months
          in: query
          name: timespan
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the splash login attempts for a network
      tags:
        - networks
        - monitor
        - splashLoginAttempts
  '/networks/{networkId}/split':
    post:
      description: >-
        Split a combined network into individual networks for each type of
        device
      operationId: splitNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Split a combined network into individual networks for each type of
        device
      tags:
        - networks
        - configure
  '/networks/{networkId}/switch/accessControlLists':
    get:
      description: Return the access control lists for a MS network
      operationId: getNetworkSwitchAccessControlLists
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the access control lists for a MS network
      tags:
        - switch
        - configure
        - accessControlLists
    put:
      consumes:
        - application/json
      description: Update the access control lists for a MS network
      operationId: updateNetworkSwitchAccessControlLists
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              rules:
                - comment: Deny SSH
                  dstCidr: 172.16.30/24
                  dstPort: '22'
                  ipVersion: ipv4
                  policy: deny
                  protocol: tcp
                  srcCidr: 10.1.10.0/24
                  srcPort: any
                  vlan: '10'
            properties:
              rules:
                description: >-
                  An ordered array of the access control list rules (not
                  including the default rule). An empty array will clear the
                  rules.
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional).
                      type: string
                    dstCidr:
                      description: >-
                        Destination IP address (in IP or CIDR notation) or
                        'any'.
                      type: string
                    dstPort:
                      description: >-
                        Destination port. Must be in the range of 1-65535 or
                        'any'. Default is 'any'.
                      type: string
                    ipVersion:
                      description: >-
                        IP address version (must be 'any', 'ipv4' or 'ipv6').
                        Applicable only if network supports IPv6. Default value
                        is 'ipv4'.
                      enum:
                        - any
                        - ipv4
                        - ipv6
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule.'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: 'The type of protocol (must be ''tcp'', ''udp'', or ''any'').'
                      enum:
                        - tcp
                        - udp
                        - any
                      type: string
                    srcCidr:
                      description: Source IP address (in IP or CIDR notation) or 'any'.
                      type: string
                    srcPort:
                      description: >-
                        Source port. Must be in the range  of 1-65535 or 'any'.
                        Default is 'any'.
                      type: string
                    vlan:
                      description: >-
                        Incoming traffic VLAN. Must be in the range of 1-4095 or
                        'any'. Default is 'any'.
                      type: string
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - dstCidr
                  type: object
                type: array
            required:
              - rules
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the access control lists for a MS network
      tags:
        - switch
        - configure
        - accessControlLists
  '/networks/{networkId}/switch/accessPolicies':
    get:
      description: >-
        List the access policies for a switch network. Only returns access
        policies with 'my RADIUS server' as authentication method
      operationId: getNetworkSwitchAccessPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the access policies for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
    post:
      consumes:
        - application/json
      description: >-
        Create an access policy for a switch network. This endpoint only
        supports access policies with 'My RADIUS server' as authentication
        method.
      operationId: createNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              accessPolicyType: Hybrid authentication
              guestVlanId: 100
              hostMode: Single-Host
              increaseAccessSpeed: false
              name: 'Access policy #1'
              radius:
                criticalAuth:
                  dataVlanId: 100
                  suspendPortBounce: true
                  voiceVlanId: 100
                failedAuthVlanId: 100
                reAuthenticationInterval: 120
                suspendReAuthentication: true
              radiusAccountingEnabled: true
              radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                  secret: password1
              radiusCoaSupportEnabled: false
              radiusGroupAttribute: '11'
              radiusServers:
                - host: 1.2.3.4
                  port: 22
                  secret: password1
              radiusTestingEnabled: false
              urlRedirectWalledGardenEnabled: true
              urlRedirectWalledGardenRanges: 192.168.1.0/24
              voiceVlanClients: true
            properties:
              accessPolicyType:
                description: >-
                  Access Type of the policy. Automatically 'Hybrid
                  authentication' when hostMode is 'Multi-Domain'.
                enum:
                  - 802.1x
                  - MAC authentication bypass
                  - Hybrid authentication
                type: string
              guestVlanId:
                description: >-
                  ID for the guest VLAN allow unauthorized devices access to
                  limited network resources
                type: integer
              hostMode:
                description: Choose the Host Mode for the access policy.
                enum:
                  - Single-Host
                  - Multi-Domain
                  - Multi-Host
                  - Multi-Auth
                type: string
              increaseAccessSpeed:
                description: >-
                  Enabling this option will make switches execute 802.1X and
                  MAC-bypass authentication simultaneously so that clients
                  authenticate faster. Only required when accessPolicyType is
                  'Hybrid Authentication.
                type: boolean
              name:
                description: Name of the access policy
                type: string
              radius:
                description: Object for RADIUS Settings
                properties:
                  criticalAuth:
                    description: >-
                      Critical auth settings for when authentication is rejected
                      by the RADIUS server
                    properties:
                      dataVlanId:
                        description: >-
                          VLAN that clients who use data will be placed on when
                          RADIUS authentication fails. Will be null if hostMode
                          is Multi-Auth
                        type: integer
                      suspendPortBounce:
                        description: >-
                          Enable to suspend port bounce when RADIUS servers are
                          unreachable
                        type: boolean
                      voiceVlanId:
                        description: >-
                          VLAN that clients who use voice will be placed on when
                          RADIUS authentication fails. Will be null if hostMode
                          is Multi-Auth
                        type: integer
                    type: object
                type: object
              radiusAccountingEnabled:
                description: >-
                  Enable to send start, interim-update and stop messages to a
                  configured RADIUS accounting server for tracking connected
                  clients
                type: boolean
              radiusAccountingServers:
                description: >-
                  List of RADIUS accounting servers to require connecting
                  devices to authenticate against before granting network access
                items:
                  properties:
                    host:
                      description: Public IP address of the RADIUS accounting server
                      type: string
                    port:
                      description: >-
                        UDP port that the RADIUS Accounting server listens on
                        for access requests
                      type: integer
                    secret:
                      description: RADIUS client shared secret
                      type: string
                  required:
                    - host
                    - port
                    - secret
                  type: object
                type: array
              radiusCoaSupportEnabled:
                description: >-
                  Change of authentication for RADIUS re-authentication and
                  disconnection
                type: boolean
              radiusGroupAttribute:
                description: >-
                  Acceptable values are `""` for None, or `"11"` for Group
                  Policies ACL
                type: string
              radiusServers:
                description: >-
                  List of RADIUS servers to require connecting devices to
                  authenticate against before granting network access
                items:
                  properties:
                    host:
                      description: Public IP address of the RADIUS server
                      type: string
                    port:
                      description: >-
                        UDP port that the RADIUS server listens on for access
                        requests
                      type: integer
                    secret:
                      description: RADIUS client shared secret
                      type: string
                  required:
                    - host
                    - port
                    - secret
                  type: object
                type: array
              radiusTestingEnabled:
                description: >-
                  If enabled, Meraki devices will periodically send
                  access-request messages to these RADIUS servers
                type: boolean
              urlRedirectWalledGardenEnabled:
                description: >-
                  Enable to restrict access for clients to a specific set of IP
                  addresses or hostnames prior to authentication
                type: boolean
              urlRedirectWalledGardenRanges:
                description: >-
                  IP address ranges, in CIDR notation, to restrict access for
                  clients to a specific set of IP addresses or hostnames prior
                  to authentication
                items:
                  type: string
                type: array
              voiceVlanClients:
                description: >-
                  CDP/LLDP capable voice clients will be able to use this VLAN.
                  Automatically true when hostMode is 'Multi-Domain'.
                type: boolean
            required:
              - name
              - radiusServers
              - radiusTestingEnabled
              - radiusCoaSupportEnabled
              - radiusAccountingEnabled
              - hostMode
              - urlRedirectWalledGardenEnabled
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create an access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
  '/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}':
    delete:
      description: Delete an access policy for a switch network
      operationId: deleteNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: accessPolicyNumber
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
    get:
      description: Return a specific access policy for a switch network
      operationId: getNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: accessPolicyNumber
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a specific access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
    put:
      consumes:
        - application/json
      description: >-
        Update an access policy for a switch network. This endpoint only
        supports access policies with 'My RADIUS server' as authentication
        method.
      operationId: updateNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: accessPolicyNumber
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              accessPolicyType: Hybrid authentication
              guestVlanId: 100
              hostMode: Single-Host
              increaseAccessSpeed: false
              name: 'Access policy #1'
              radius:
                criticalAuth:
                  dataVlanId: 100
                  suspendPortBounce: true
                  voiceVlanId: 100
                failedAuthVlanId: 100
                reAuthenticationInterval: 120
                suspendReAuthentication: true
              radiusAccountingEnabled: true
              radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                  secret: password1
              radiusCoaSupportEnabled: false
              radiusGroupAttribute: '11'
              radiusServers:
                - host: 1.2.3.4
                  port: 22
                  secret: password1
              radiusTestingEnabled: false
              urlRedirectWalledGardenEnabled: true
              urlRedirectWalledGardenRanges: 192.168.1.0/24
              voiceVlanClients: true
            properties:
              accessPolicyType:
                description: >-
                  Access Type of the policy. Automatically 'Hybrid
                  authentication' when hostMode is 'Multi-Domain'.
                enum:
                  - 802.1x
                  - MAC authentication bypass
                  - Hybrid authentication
                type: string
              guestVlanId:
                description: >-
                  ID for the guest VLAN allow unauthorized devices access to
                  limited network resources
                type: integer
              hostMode:
                description: Choose the Host Mode for the access policy.
                enum:
                  - Single-Host
                  - Multi-Domain
                  - Multi-Host
                  - Multi-Auth
                type: string
              increaseAccessSpeed:
                description: >-
                  Enabling this option will make switches execute 802.1X and
                  MAC-bypass authentication simultaneously so that clients
                  authenticate faster. Only required when accessPolicyType is
                  'Hybrid Authentication.
                type: boolean
              name:
                description: Name of the access policy
                type: string
              radius:
                description: Object for RADIUS Settings
                properties:
                  criticalAuth:
                    description: >-
                      Critical auth settings for when authentication is rejected
                      by the RADIUS server
                    properties:
                      dataVlanId:
                        description: >-
                          VLAN that clients who use data will be placed on when
                          RADIUS authentication fails. Will be null if hostMode
                          is Multi-Auth
                        type: integer
                      suspendPortBounce:
                        description: >-
                          Enable to suspend port bounce when RADIUS servers are
                          unreachable
                        type: boolean
                      voiceVlanId:
                        description: >-
                          VLAN that clients who use voice will be placed on when
                          RADIUS authentication fails. Will be null if hostMode
                          is Multi-Auth
                        type: integer
                    type: object
                type: object
              radiusAccountingEnabled:
                description: >-
                  Enable to send start, interim-update and stop messages to a
                  configured RADIUS accounting server for tracking connected
                  clients
                type: boolean
              radiusAccountingServers:
                description: >-
                  List of RADIUS accounting servers to require connecting
                  devices to authenticate against before granting network access
                items:
                  properties:
                    host:
                      description: Public IP address of the RADIUS accounting server
                      type: string
                    port:
                      description: >-
                        UDP port that the RADIUS Accounting server listens on
                        for access requests
                      type: integer
                    secret:
                      description: RADIUS client shared secret
                      type: string
                  required:
                    - host
                    - port
                    - secret
                  type: object
                type: array
              radiusCoaSupportEnabled:
                description: >-
                  Change of authentication for RADIUS re-authentication and
                  disconnection
                type: boolean
              radiusGroupAttribute:
                description: >-
                  Can be either `""`, which means `None` on Dashboard, or
                  `"11"`, which means `Filter-Id` on Dashboard and will use
                  Group Policy ACLs when supported (firmware 14+)
                type: string
              radiusServers:
                description: >-
                  List of RADIUS servers to require connecting devices to
                  authenticate against before granting network access
                items:
                  properties:
                    host:
                      description: Public IP address of the RADIUS server
                      type: string
                    port:
                      description: >-
                        UDP port that the RADIUS server listens on for access
                        requests
                      type: integer
                    secret:
                      description: RADIUS client shared secret
                      type: string
                  required:
                    - host
                    - port
                    - secret
                  type: object
                type: array
              radiusTestingEnabled:
                description: >-
                  If enabled, Meraki devices will periodically send
                  access-request messages to these RADIUS servers
                type: boolean
              urlRedirectWalledGardenEnabled:
                description: >-
                  Enable to restrict access for clients to a specific set of IP
                  addresses or hostnames prior to authentication
                type: boolean
              urlRedirectWalledGardenRanges:
                description: >-
                  IP address ranges, in CIDR notation, to restrict access for
                  clients to a specific set of IP addresses or hostnames prior
                  to authentication
                items:
                  type: string
                type: array
              voiceVlanClients:
                description: >-
                  CDP/LLDP capable voice clients will be able to use this VLAN.
                  Automatically true when hostMode is 'Multi-Domain'.
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
  '/networks/{networkId}/switch/alternateManagementInterface':
    get:
      description: Return the switch alternate management interface for the network
      operationId: getNetworkSwitchAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the switch alternate management interface for the network
      tags:
        - switch
        - configure
        - alternateManagementInterface
    put:
      consumes:
        - application/json
      description: Update the switch alternate management interface for the network
      operationId: updateNetworkSwitchAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              enabled: true
              protocols:
                - radius
                - snmp
                - syslog
              switches:
                - alternateManagementIp: 1.2.3.4
                  serial: Q234-ABCD-5678
              vlanId: 100
            properties:
              enabled:
                description: >-
                  Boolean value to enable or disable AMI configuration. If
                  enabled, VLAN and protocols must be set
                type: boolean
              protocols:
                description: >-
                  Can be one or more of the following values: 'radius', 'snmp'
                  or 'syslog'
                items:
                  enum:
                    - radius
                    - snmp
                    - syslog
                  type: string
                type: array
              switches:
                description: >-
                  Array of switch serial number and IP assignment. If parameter
                  is present, it cannot have empty body. Note: switches
                  parameter is not applicable for template networks, in other
                  words, do not put 'switches' in the body when updating
                  template networks. Also, an empty 'switches' array will remove
                  all previous assignments
                items:
                  properties:
                    alternateManagementIp:
                      description: >-
                        Switch alternative management IP. To remove a prior IP
                        setting, provide an empty string
                      type: string
                    serial:
                      description: Switch serial number
                      type: string
                  required:
                    - serial
                    - alternateManagementIp
                  type: object
                type: array
              vlanId:
                description: 'Alternate management VLAN, must be between 1 and 4094'
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the switch alternate management interface for the network
      tags:
        - switch
        - configure
        - alternateManagementInterface
  '/networks/{networkId}/switch/dhcpServerPolicy':
    get:
      description: Return the DHCP server policy
      operationId: getNetworkSwitchDhcpServerPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the DHCP server policy
      tags:
        - switch
        - configure
        - dhcpServerPolicy
    put:
      consumes:
        - application/json
      description: Update the DHCP server policy
      operationId: updateNetworkSwitchDhcpServerPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              allowedServers:
                - '00:50:56:00:00:01'
                - '00:50:56:00:00:02'
              defaultPolicy: block
            properties:
              allowedServers:
                description: >-
                  List the MAC addresses of DHCP servers to permit on the
                  network. Applicable only if defaultPolicy is set to block. An
                  empty array will clear the entries.
                items:
                  type: string
                type: array
              blockedServers:
                description: >-
                  List the MAC addresses of DHCP servers to block on the
                  network. Applicable only if defaultPolicy is set to allow. An
                  empty array will clear the entries.
                items:
                  type: string
                type: array
              defaultPolicy:
                description: '''allow'' or ''block'' new DHCP servers. Default value is ''allow''.'
                enum:
                  - allow
                  - block
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the DHCP server policy
      tags:
        - switch
        - configure
        - dhcpServerPolicy
  '/networks/{networkId}/switch/dscpToCosMappings':
    get:
      description: Return the DSCP to CoS mappings
      operationId: getNetworkSwitchDscpToCosMappings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the DSCP to CoS mappings
      tags:
        - switch
        - configure
        - dscpToCosMappings
    put:
      consumes:
        - application/json
      description: Update the DSCP to CoS mappings
      operationId: updateNetworkSwitchDscpToCosMappings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              mappings:
                - cos: 1
                  dscp: 1
                  title: Video
            properties:
              mappings:
                description: >-
                  An array of DSCP to CoS mappings. An empty array will reset
                  the mappings to default.
                items:
                  properties:
                    cos:
                      description: >-
                        The actual layer-2 CoS queue the DSCP value is mapped
                        to. These are not bits set on outgoing frames. Value can
                        be in the range of 0 to 5 inclusive.
                      type: integer
                    dscp:
                      description: >-
                        The Differentiated Services Code Point (DSCP) tag in the
                        IP header that will be mapped to a particular
                        Class-of-Service (CoS) queue. Value can be in the range
                        of 0 to 63 inclusive.
                      type: integer
                    title:
                      description: Label for the mapping (optional).
                      type: string
                  required:
                    - dscp
                    - cos
                  type: object
                type: array
            required:
              - mappings
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the DSCP to CoS mappings
      tags:
        - switch
        - configure
        - dscpToCosMappings
  '/networks/{networkId}/switch/linkAggregations':
    get:
      description: List link aggregation groups
      operationId: getNetworkSwitchLinkAggregations
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List link aggregation groups
      tags:
        - switch
        - configure
        - linkAggregations
    post:
      consumes:
        - application/json
      description: Create a link aggregation group
      operationId: createNetworkSwitchLinkAggregation
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              switchPorts:
                - portId: '1'
                  serial: Q234-ABCD-0001
                - portId: '2'
                  serial: Q234-ABCD-0002
                - portId: '3'
                  serial: Q234-ABCD-0003
                - portId: '4'
                  serial: Q234-ABCD-0004
                - portId: '5'
                  serial: Q234-ABCD-0005
                - portId: '6'
                  serial: Q234-ABCD-0006
                - portId: '7'
                  serial: Q234-ABCD-0007
                - portId: '8'
                  serial: Q234-ABCD-0008
            properties:
              switchPorts:
                description: >-
                  Array of switch or stack ports for creating aggregation group.
                  Minimum 2 and maximum 8 ports are supported.
                items:
                  properties:
                    portId:
                      description: >-
                        Port identifier of switch port. For modules, the
                        identifier is "SlotNumber_ModuleType_PortNumber" (Ex:
                        "1_8X10G_1"), otherwise it is just the port number (Ex:
                        "8").
                      type: string
                    serial:
                      description: Serial number of the switch.
                      type: string
                  required:
                    - serial
                    - portId
                  type: object
                type: array
              switchProfilePorts:
                description: >-
                  Array of switch profile ports for creating aggregation group.
                  Minimum 2 and maximum 8 ports are supported.
                items:
                  properties:
                    portId:
                      description: >-
                        Port identifier of switch port. For modules, the
                        identifier is "SlotNumber_ModuleType_PortNumber" (Ex:
                        "1_8X10G_1"), otherwise it is just the port number (Ex:
                        "8").
                      type: string
                    profile:
                      description: Profile identifier.
                      type: string
                  required:
                    - profile
                    - portId
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a link aggregation group
      tags:
        - switch
        - configure
        - linkAggregations
  '/networks/{networkId}/switch/linkAggregations/{linkAggregationId}':
    delete:
      description: Split a link aggregation group into separate ports
      operationId: deleteNetworkSwitchLinkAggregation
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: linkAggregationId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Split a link aggregation group into separate ports
      tags:
        - switch
        - configure
        - linkAggregations
    put:
      consumes:
        - application/json
      description: Update a link aggregation group
      operationId: updateNetworkSwitchLinkAggregation
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: linkAggregationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              id: NDU2N18yXzM=
              switchPorts:
                - portId: '1'
                  serial: Q234-ABCD-0001
                - portId: '2'
                  serial: Q234-ABCD-0002
                - portId: '3'
                  serial: Q234-ABCD-0003
                - portId: '4'
                  serial: Q234-ABCD-0004
                - portId: '5'
                  serial: Q234-ABCD-0005
                - portId: '6'
                  serial: Q234-ABCD-0006
                - portId: '7'
                  serial: Q234-ABCD-0007
                - portId: '8'
                  serial: Q234-ABCD-0008
            properties:
              switchPorts:
                description: >-
                  Array of switch or stack ports for updating aggregation group.
                  Minimum 2 and maximum 8 ports are supported.
                items:
                  properties:
                    portId:
                      description: >-
                        Port identifier of switch port. For modules, the
                        identifier is "SlotNumber_ModuleType_PortNumber" (Ex:
                        "1_8X10G_1"), otherwise it is just the port number (Ex:
                        "8").
                      type: string
                    serial:
                      description: Serial number of the switch.
                      type: string
                  required:
                    - serial
                    - portId
                  type: object
                type: array
              switchProfilePorts:
                description: >-
                  Array of switch profile ports for updating aggregation group.
                  Minimum 2 and maximum 8 ports are supported.
                items:
                  properties:
                    portId:
                      description: >-
                        Port identifier of switch port. For modules, the
                        identifier is "SlotNumber_ModuleType_PortNumber" (Ex:
                        "1_8X10G_1"), otherwise it is just the port number (Ex:
                        "8").
                      type: string
                    profile:
                      description: Profile identifier.
                      type: string
                  required:
                    - profile
                    - portId
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a link aggregation group
      tags:
        - switch
        - configure
        - linkAggregations
  '/networks/{networkId}/switch/mtu':
    get:
      description: Return the MTU configuration
      operationId: getNetworkSwitchMtu
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the MTU configuration
      tags:
        - switch
        - configure
        - mtu
    put:
      consumes:
        - application/json
      description: Update the MTU configuration
      operationId: updateNetworkSwitchMtu
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              defaultMtuSize: 9578
              overrides:
                - mtuSize: 1500
                  switches:
                    - Q234-ABCD-0001
                    - Q234-ABCD-0002
                    - Q234-ABCD-0003
                - mtuSize: 1600
                  switchProfiles:
                    - '1284392014819'
                    - '2983092129865'
            properties:
              defaultMtuSize:
                description: MTU size for the entire network. Default value is 9578.
                type: integer
              overrides:
                description: >-
                  Override MTU size for individual switches or switch profiles.
                  An empty array will clear overrides.
                items:
                  properties:
                    mtuSize:
                      description: MTU size for the switches or switch profiles.
                      type: integer
                    switchProfiles:
                      description: >-
                        List of switch profile IDs. Applicable only for template
                        network.
                      items:
                        type: string
                      type: array
                    switches:
                      description: >-
                        List of switch serials. Applicable only for switch
                        network.
                      items:
                        type: string
                      type: array
                  required:
                    - mtuSize
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the MTU configuration
      tags:
        - switch
        - configure
        - mtu
  '/networks/{networkId}/switch/portSchedules':
    get:
      description: List switch port schedules
      operationId: getNetworkSwitchPortSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List switch port schedules
      tags:
        - switch
        - configure
        - portSchedules
    post:
      consumes:
        - application/json
      description: Add a switch port schedule
      operationId: createNetworkSwitchPortSchedule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: Weekdays schedule
              portSchedule:
                friday:
                  active: true
                  from: 540
                  to: 1020
                monday:
                  active: true
                  from: 540
                  to: 1020
                saturday:
                  active: false
                  from: '0:00'
                  to: 1440
                sunday:
                  active: false
                  from: '0:00'
                  to: 1440
                thursday:
                  active: true
                  from: 540
                  to: 1020
                tuesday:
                  active: true
                  from: 540
                  to: 1020
                wednesday:
                  active: true
                  from: 540
                  to: 1020
            properties:
              name:
                description: The name for your port schedule. Required
                type: string
              portSchedule:
                description: |2
                      The schedule for switch port scheduling. Schedules are applied to days of the week.
                      When it's empty, default schedule with all days of a week are configured.
                      Any unspecified day in the schedule is added as a default schedule configuration of the day.
                properties:
                  friday:
                    description: The schedule object for Friday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  monday:
                    description: The schedule object for Monday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  saturday:
                    description: The schedule object for Saturday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  sunday:
                    description: The schedule object for Sunday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  thursday:
                    description: The schedule object for Thursday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  tuesday:
                    description: The schedule object for Tuesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  wednesday:
                    description: The schedule object for Wednesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                type: object
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a switch port schedule
      tags:
        - switch
        - configure
        - portSchedules
  '/networks/{networkId}/switch/portSchedules/{portScheduleId}':
    delete:
      description: Delete a switch port schedule
      operationId: deleteNetworkSwitchPortSchedule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: portScheduleId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a switch port schedule
      tags:
        - switch
        - configure
        - portSchedules
    put:
      consumes:
        - application/json
      description: Update a switch port schedule
      operationId: updateNetworkSwitchPortSchedule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: portScheduleId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: Weekdays schedule
              portSchedule:
                friday:
                  active: true
                  from: 540
                  to: 1020
                monday:
                  active: true
                  from: 540
                  to: 1020
                saturday:
                  active: false
                  from: '0:00'
                  to: 1440
                sunday:
                  active: false
                  from: '0:00'
                  to: 1440
                thursday:
                  active: true
                  from: 540
                  to: 1020
                tuesday:
                  active: true
                  from: 540
                  to: 1020
                wednesday:
                  active: true
                  from: 540
                  to: 1020
            properties:
              name:
                description: The name for your port schedule.
                type: string
              portSchedule:
                description: |2
                      The schedule for switch port scheduling. Schedules are applied to days of the week.
                      When it's empty, default schedule with all days of a week are configured.
                      Any unspecified day in the schedule is added as a default schedule configuration of the day.
                properties:
                  friday:
                    description: The schedule object for Friday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  monday:
                    description: The schedule object for Monday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  saturday:
                    description: The schedule object for Saturday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  sunday:
                    description: The schedule object for Sunday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  thursday:
                    description: The schedule object for Thursday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  tuesday:
                    description: The schedule object for Tuesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                  wednesday:
                    description: The schedule object for Wednesday.
                    properties:
                      active:
                        description: >-
                          Whether the schedule is active (true) or inactive
                          (false) during the time specified between 'from' and
                          'to'. Defaults to true.
                        type: boolean
                      from:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be less than
                          the time specified in 'to'. Defaults to '00:00'. Only
                          30 minute increments are allowed.
                        type: string
                      to:
                        description: >-
                          The time, from '00:00' to '24:00'. Must be greater
                          than the time specified in 'from'. Defaults to
                          '24:00'. Only 30 minute increments are allowed.
                        type: string
                    type: object
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a switch port schedule
      tags:
        - switch
        - configure
        - portSchedules
  '/networks/{networkId}/switch/qosRules':
    get:
      description: List quality of service rules
      operationId: getNetworkSwitchQosRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List quality of service rules
      tags:
        - switch
        - configure
        - qosRules
    post:
      consumes:
        - application/json
      description: Add a quality of service rule
      operationId: createNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              dscp: 0
              dstPort: null
              dstPortRange: 3000-3100
              protocol: TCP
              srcPort: 2000
              srcPortRange: null
              vlan: 100
            properties:
              dscp:
                description: >-
                  DSCP tag. Set this to -1 to trust incoming DSCP. Default value
                  is 0
                type: integer
              dstPort:
                description: >-
                  The destination port of the incoming packet. Applicable only
                  if protocol is TCP or UDP.
                type: integer
              dstPortRange:
                description: >-
                  The destination port range of the incoming packet. Applicable
                  only if protocol is set to TCP or UDP. Example: 70-80
                type: string
              protocol:
                description: >-
                  The protocol of the incoming packet. Can be one of "ANY",
                  "TCP" or "UDP". Default value is "ANY"
                enum:
                  - ANY
                  - TCP
                  - UDP
                type: string
              srcPort:
                description: >-
                  The source port of the incoming packet. Applicable only if
                  protocol is TCP or UDP.
                type: integer
              srcPortRange:
                description: >-
                  The source port range of the incoming packet. Applicable only
                  if protocol is set to TCP or UDP. Example: 70-80
                type: string
              vlan:
                description: >-
                  The VLAN of the incoming packet. A null value will match any
                  VLAN.
                type: integer
            required:
              - vlan
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
  '/networks/{networkId}/switch/qosRules/order':
    get:
      description: >-
        Return the quality of service rule IDs by order in which they will be
        processed by the switch
      operationId: getNetworkSwitchQosRulesOrder
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the quality of service rule IDs by order in which they will be
        processed by the switch
      tags:
        - switch
        - configure
        - qosRules
        - order
    put:
      consumes:
        - application/json
      description: Update the order in which the rules should be processed by the switch
      operationId: updateNetworkSwitchQosRulesOrder
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              ruleIds:
                - '1284392014819'
                - '2983092129865'
            properties:
              ruleIds:
                description: >-
                  A list of quality of service rule IDs arranged in order in
                  which they should be processed by the switch.
                items:
                  type: string
                type: array
            required:
              - ruleIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the order in which the rules should be processed by the switch
      tags:
        - switch
        - configure
        - qosRules
        - order
  '/networks/{networkId}/switch/qosRules/{qosRuleId}':
    delete:
      description: Delete a quality of service rule
      operationId: deleteNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: qosRuleId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
    get:
      description: Return a quality of service rule
      operationId: getNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: qosRuleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
    put:
      consumes:
        - application/json
      description: Update a quality of service rule
      operationId: updateNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: qosRuleId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              dscp: 0
              dstPort: null
              dstPortRange: 3000-3100
              protocol: TCP
              srcPort: 2000
              srcPortRange: null
              vlan: 100
            properties:
              dscp:
                description: >-
                  DSCP tag that should be assigned to incoming packet. Set this
                  to -1 to trust incoming DSCP. Default value is 0.
                type: integer
              dstPort:
                description: >-
                  The destination port of the incoming packet. Applicable only
                  if protocol is TCP or UDP.
                type: integer
              dstPortRange:
                description: >-
                  The destination port range of the incoming packet. Applicable
                  only if protocol is set to TCP or UDP. Example: 70-80
                type: string
              protocol:
                description: >-
                  The protocol of the incoming packet. Can be one of "ANY",
                  "TCP" or "UDP". Default value is "ANY".
                enum:
                  - ANY
                  - TCP
                  - UDP
                type: string
              srcPort:
                description: >-
                  The source port of the incoming packet. Applicable only if
                  protocol is TCP or UDP.
                type: integer
              srcPortRange:
                description: >-
                  The source port range of the incoming packet. Applicable only
                  if protocol is set to TCP or UDP. Example: 70-80
                type: string
              vlan:
                description: >-
                  The VLAN of the incoming packet. A null value will match any
                  VLAN.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
  '/networks/{networkId}/switch/routing/multicast':
    get:
      description: Return multicast settings for a network
      operationId: getNetworkSwitchRoutingMulticast
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return multicast settings for a network
      tags:
        - switch
        - configure
        - routing
        - multicast
    put:
      consumes:
        - application/json
      description: Update multicast settings for a network
      operationId: updateNetworkSwitchRoutingMulticast
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              defaultSettings:
                floodUnknownMulticastTrafficEnabled: true
                igmpSnoopingEnabled: true
              overrides:
                - floodUnknownMulticastTrafficEnabled: true
                  igmpSnoopingEnabled: true
                  switches:
                    - Q234-ABCD-0001
                    - Q234-ABCD-0002
                    - Q234-ABCD-0003
                - floodUnknownMulticastTrafficEnabled: true
                  igmpSnoopingEnabled: true
                  stacks:
                    - '789102'
                    - '123456'
                    - '129102'
            properties:
              defaultSettings:
                description: >-
                  Default multicast setting for entire network. IGMP snooping
                  and Flood unknown multicast traffic settings are enabled by
                  default.
                properties:
                  floodUnknownMulticastTrafficEnabled:
                    description: Flood unknown multicast traffic setting for entire network
                    type: boolean
                  igmpSnoopingEnabled:
                    description: IGMP snooping setting for entire network
                    type: boolean
                type: object
              overrides:
                description: >-
                  Array of paired switches/stacks/profiles and corresponding
                  multicast settings. An empty array will clear the multicast
                  settings.
                items:
                  properties:
                    floodUnknownMulticastTrafficEnabled:
                      description: >-
                        Flood unknown multicast traffic setting for switches,
                        switch stacks or switch profiles
                      type: boolean
                    igmpSnoopingEnabled:
                      description: >-
                        IGMP snooping setting for switches, switch stacks or
                        switch profiles
                      type: boolean
                    stacks:
                      description: List of switch stack ids for non-template network
                      items:
                        type: string
                      type: array
                    switchProfiles:
                      description: List of switch profiles ids for template network
                      items:
                        type: string
                      type: array
                    switches:
                      description: List of switch serials for non-template network
                      items:
                        type: string
                      type: array
                  required:
                    - igmpSnoopingEnabled
                    - floodUnknownMulticastTrafficEnabled
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update multicast settings for a network
      tags:
        - switch
        - configure
        - routing
        - multicast
  '/networks/{networkId}/switch/routing/multicast/rendezvousPoints':
    get:
      description: List multicast rendezvous points
      operationId: getNetworkSwitchRoutingMulticastRendezvousPoints
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List multicast rendezvous points
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
    post:
      consumes:
        - application/json
      description: Create a multicast rendezvous point
      operationId: createNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              interfaceIp: 192.168.1.2
              multicastGroup: 192.168.128.0/24
            properties:
              interfaceIp:
                description: "The\_IP address of the interface where the RP needs to be created."
                type: string
              multicastGroup:
                description: '''Any'', or the IP address of a multicast group'
                type: string
            required:
              - interfaceIp
              - multicastGroup
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
  '/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}':
    delete:
      description: Delete a multicast rendezvous point
      operationId: deleteNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: rendezvousPointId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
    get:
      description: Return a multicast rendezvous point
      operationId: getNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: rendezvousPointId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
    put:
      consumes:
        - application/json
      description: Update a multicast rendezvous point
      operationId: updateNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: rendezvousPointId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              interfaceIp: 192.168.1.2
              multicastGroup: 192.168.128.0/24
            properties:
              interfaceIp:
                description: The IP address of the interface to use
                type: string
              multicastGroup:
                description: '''Any'', or the IP address of a multicast group'
                type: string
            required:
              - interfaceIp
              - multicastGroup
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
  '/networks/{networkId}/switch/routing/ospf':
    get:
      description: Return layer 3 OSPF routing configuration
      operationId: getNetworkSwitchRoutingOspf
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return layer 3 OSPF routing configuration
      tags:
        - switch
        - configure
        - routing
        - ospf
    put:
      consumes:
        - application/json
      description: Update layer 3 OSPF routing configuration
      operationId: updateNetworkSwitchRoutingOspf
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              areas:
                - areaId: '1284392014819'
                  areaName: Backbone
                  areaType: normal
              deadTimerInSeconds: 40
              enabled: true
              helloTimerInSeconds: 10
              md5AuthenticationEnabled: true
              md5AuthenticationKey:
                id: '1234'
                passphrase: abc1234
            properties:
              areas:
                description: OSPF areas
                items:
                  properties:
                    areaId:
                      description: OSPF area ID
                      type: integer
                    areaName:
                      description: Name of the OSPF area
                      type: string
                    areaType:
                      description: >-
                        Area types in OSPF. Must be one of: ["normal", "stub",
                        "nssa"]
                      enum:
                        - normal
                        - stub
                        - nssa
                      type: string
                  required:
                    - areaId
                    - areaName
                    - areaType
                  type: object
                type: array
              deadTimerInSeconds:
                description: >-
                  Time interval to determine when the peer will be declare
                  inactive/dead. Value must be between 1 and 65535
                type: integer
              enabled:
                description: >-
                  Boolean value to enable or disable OSPF routing. OSPF routing
                  is disabled by default.
                type: boolean
              helloTimerInSeconds:
                description: >-
                  Time interval in seconds at which hello packet will be sent to
                  OSPF neighbors to maintain connectivity. Value must be between
                  1 and 255. Default is 10 seconds
                type: integer
              md5AuthenticationEnabled:
                description: >-
                  Boolean value to enable or disable MD5 authentication. MD5
                  authentication is disabled by default.
                type: boolean
              md5AuthenticationKey:
                description: >-
                  MD5 authentication credentials. This param is only relevant if
                  md5AuthenticationEnabled is true
                properties:
                  id:
                    description: >-
                      MD5 authentication key index. Key index must be between 1
                      to 255
                    type: integer
                  passphrase:
                    description: MD5 authentication passphrase
                    type: string
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update layer 3 OSPF routing configuration
      tags:
        - switch
        - configure
        - routing
        - ospf
  '/networks/{networkId}/switch/settings':
    get:
      description: Returns the switch network settings
      operationId: getNetworkSwitchSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the switch network settings
      tags:
        - switch
        - configure
        - settings
    put:
      consumes:
        - application/json
      description: Update switch network settings
      operationId: updateNetworkSwitchSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              powerExceptions:
                - powerType: redundant
                  serial: Q234-ABCD-0001
                - powerType: combined
                  serial: Q234-ABCD-0002
                - powerType: redundant
                  serial: Q234-ABCD-0003
                - powerType: useNetworkSetting
                  serial: Q234-ABCD-0004
              useCombinedPower: false
              vlan: 100
            properties:
              powerExceptions:
                description: Exceptions on a per switch basis to "useCombinedPower"
                items:
                  properties:
                    powerType:
                      description: >-
                        Per switch exception (combined, redundant,
                        useNetworkSetting)
                      enum:
                        - combined
                        - redundant
                        - useNetworkSetting
                      type: string
                    serial:
                      description: Serial number of the switch
                      type: string
                  required:
                    - serial
                    - powerType
                  type: object
                type: array
              useCombinedPower:
                description: >-
                  The use Combined Power as the default behavior of secondary
                  power supplies on supported devices.
                type: boolean
              vlan:
                description: Management VLAN
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update switch network settings
      tags:
        - switch
        - configure
        - settings
  '/networks/{networkId}/switch/stacks':
    get:
      description: List the switch stacks in a network
      operationId: getNetworkSwitchStacks
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the switch stacks in a network
      tags:
        - switch
        - configure
        - stacks
    post:
      consumes:
        - application/json
      description: Create a stack
      operationId: createNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: A cool stack
              serials:
                - QBZY-XWVU-TSRQ
                - QBAB-CDEF-GHIJ
            properties:
              name:
                description: The name of the new stack
                type: string
              serials:
                description: An array of switch serials to be added into the new stack
                items:
                  type: string
                type: array
            required:
              - name
              - serials
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a stack
      tags:
        - switch
        - configure
        - stacks
  '/networks/{networkId}/switch/stacks/{switchStackId}':
    delete:
      description: Delete a stack
      operationId: deleteNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a stack
      tags:
        - switch
        - configure
        - stacks
    get:
      description: Show a switch stack
      operationId: getNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Show a switch stack
      tags:
        - switch
        - configure
        - stacks
  '/networks/{networkId}/switch/stacks/{switchStackId}/add':
    post:
      consumes:
        - application/json
      description: Add a switch to a stack
      operationId: addNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              serial: QBZY-XWVU-TSRQ
            properties:
              serial:
                description: The serial of the switch to be added
                type: string
            required:
              - serial
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Add a switch to a stack
      tags:
        - switch
        - configure
        - stacks
  '/networks/{networkId}/switch/stacks/{switchStackId}/remove':
    post:
      consumes:
        - application/json
      description: Remove a switch from a stack
      operationId: removeNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              serial: QBZY-XWVU-TSRQ
            properties:
              serial:
                description: The serial of the switch to be removed
                type: string
            required:
              - serial
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Remove a switch from a stack
      tags:
        - switch
        - configure
        - stacks
  '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces':
    get:
      description: List layer 3 interfaces for a switch stack
      operationId: getNetworkSwitchStackRoutingInterfaces
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List layer 3 interfaces for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
    post:
      consumes:
        - application/json
      description: Create a layer 3 interface for a switch stack
      operationId: createNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              defaultGateway: 192.168.1.1
              interfaceIp: 192.168.1.2
              multicastRouting: disabled
              name: L3 interface
              ospfSettings:
                area: '0'
                cost: 1
                isPassiveEnabled: true
              subnet: 192.168.1.0/24
              vlanId: 100
            properties:
              defaultGateway:
                description: >-
                  The next hop for any traffic that isn't going to a directly
                  connected subnet or over a static route. This IP address must
                  exist in a subnet with a routed interface.
                type: string
              interfaceIp:
                description: >-
                  The IP address this switch stack will use for layer 3 routing
                  on this VLAN or subnet. This cannot be the same as the
                  switch's management IP.
                type: string
              multicastRouting:
                description: >-
                  Enable multicast support if, multicast routing between VLANs
                  is required. Options are, 'disabled', 'enabled' or 'IGMP
                  snooping querier'. Default is 'disabled'.
                enum:
                  - disabled
                  - enabled
                  - IGMP snooping querier
                type: string
              name:
                description: A friendly name or description for the interface or VLAN.
                type: string
              ospfSettings:
                description: The OSPF routing settings of the interface.
                properties:
                  area:
                    description: >-
                      The OSPF area to which this interface should belong. Can
                      be either 'disabled' or the identifier of an existing OSPF
                      area. Defaults to 'disabled'.
                    type: string
                  cost:
                    description: >-
                      The path cost for this interface. Defaults to 1, but can
                      be increased up to 65535 to give lower priority.
                    type: integer
                  isPassiveEnabled:
                    description: >-
                      When enabled, OSPF will not run on the interface, but the
                      subnet will still be advertised.
                    type: boolean
                type: object
              subnet:
                description: >-
                  The network that this routed interface is on, in CIDR notation
                  (ex. 10.1.1.0/24).
                type: string
              vlanId:
                description: >-
                  The VLAN this routed interface is on. VLAN must be between 1
                  and 4094.
                type: integer
            required:
              - name
              - subnet
              - interfaceIp
              - vlanId
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a layer 3 interface for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
  '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}':
    delete:
      description: Delete a layer 3 interface from a switch stack
      operationId: deleteNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a layer 3 interface from a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
    get:
      description: Return a layer 3 interface from a switch stack
      operationId: getNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a layer 3 interface from a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
    put:
      consumes:
        - application/json
      description: Update a layer 3 interface for a switch stack
      operationId: updateNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              interfaceIp: 192.168.1.2
              multicastRouting: disabled
              name: L3 interface
              ospfSettings:
                area: '0'
                cost: 1
                isPassiveEnabled: true
              subnet: 192.168.1.0/24
              vlanId: 100
            properties:
              interfaceIp:
                description: >-
                  The IP address this switch stack will use for layer 3 routing
                  on this VLAN or subnet. This cannot be the same as the
                  switch's management IP.
                type: string
              multicastRouting:
                description: >-
                  Enable multicast support if, multicast routing between VLANs
                  is required. Options are, 'disabled', 'enabled' or 'IGMP
                  snooping querier'.
                enum:
                  - disabled
                  - enabled
                  - IGMP snooping querier
                type: string
              name:
                description: A friendly name or description for the interface or VLAN.
                type: string
              ospfSettings:
                description: The OSPF routing settings of the interface.
                properties:
                  area:
                    description: >-
                      The OSPF area to which this interface should belong. Can
                      be either 'disabled' or the identifier of an existing OSPF
                      area.
                    type: string
                  cost:
                    description: >-
                      The path cost for this interface. Defaults to 1, but can
                      be increased up to 65535 to give lower priority.
                    type: integer
                  isPassiveEnabled:
                    description: >-
                      When enabled, OSPF will not run on the interface, but the
                      subnet will still be advertised.
                    type: boolean
                type: object
              subnet:
                description: >-
                  The network that this routed interface is on, in CIDR notation
                  (ex. 10.1.1.0/24).
                type: string
              vlanId:
                description: >-
                  The VLAN this routed interface is on. VLAN must be between 1
                  and 4094.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a layer 3 interface for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
  '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp':
    get:
      description: Return a layer 3 interface DHCP configuration for a switch stack
      operationId: getNetworkSwitchStackRoutingInterfaceDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a layer 3 interface DHCP configuration for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
        - dhcp
    put:
      consumes:
        - application/json
      description: Update a layer 3 interface DHCP configuration for a switch stack
      operationId: updateNetworkSwitchStackRoutingInterfaceDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: interfaceId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              bootFileName: home_boot_file
              bootNextServer: 1.2.3.4
              bootOptionsEnabled: true
              dhcpLeaseTime: 1 day
              dhcpMode: dhcpServer
              dhcpOptions:
                - code: '5'
                  type: text
                  value: five
              dnsCustomNameservers:
                - '8.8.8.8, 8.8.4.4'
              dnsNameserversOption: custom
              fixedIpAssignments:
                - ip: 192.168.1.12
                  mac: '22:33:44:55:66:77'
                  name: Cisco Meraki valued client
              reservedIpRanges:
                - comment: A reserved IP range
                  end: 192.168.1.10
                  start: 192.168.1.1
            properties:
              bootFileName:
                description: >-
                  The PXE boot server file name for the DHCP server running on
                  the switch stack interface
                type: string
              bootNextServer:
                description: >-
                  The PXE boot server IP for the DHCP server running on the
                  switch stack interface
                type: string
              bootOptionsEnabled:
                description: >-
                  Enable DHCP boot options to provide PXE boot options configs
                  for the dhcp server running on the switch stack interface
                type: boolean
              dhcpLeaseTime:
                description: >-
                  The DHCP lease time config for the dhcp server running on
                  switch stack interface ('30 minutes', '1 hour', '4 hours', '12
                  hours', '1 day' or '1 week')
                enum:
                  - 30 minutes
                  - 1 hour
                  - 4 hours
                  - 12 hours
                  - 1 day
                  - 1 week
                type: string
              dhcpMode:
                description: >-
                  The DHCP mode options for the switch stack interface
                  ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
                enum:
                  - dhcpDisabled
                  - dhcpRelay
                  - dhcpServer
                type: string
              dhcpOptions:
                description: >-
                  Array of DHCP options consisting of code, type and value for
                  the DHCP server running on the switch stack interface
                items:
                  properties:
                    code:
                      description: The code for DHCP option which should be from 2 to 254
                      type: string
                    type:
                      description: >-
                        The type of the DHCP option which should be one of
                        ('text', 'ip', 'integer' or 'hex')
                      enum:
                        - text
                        - ip
                        - integer
                        - hex
                      type: string
                    value:
                      description: The value of the DHCP option
                      type: string
                  required:
                    - code
                    - type
                    - value
                  type: object
                type: array
              dhcpRelayServerIps:
                description: >-
                  The DHCP relay server IPs to which DHCP packets would get
                  relayed for the switch stack interface
                items:
                  type: string
                type: array
              dnsCustomNameservers:
                description: >-
                  The DHCP name server IPs when DHCP name server option is
                  'custom'
                items:
                  type: string
                type: array
              dnsNameserversOption:
                description: >-
                  The DHCP name server option for the dhcp server running on the
                  switch stack interface ('googlePublicDns', 'openDns' or
                  'custom')
                enum:
                  - googlePublicDns
                  - openDns
                  - custom
                type: string
              fixedIpAssignments:
                description: >-
                  Array of DHCP fixed IP assignments for the DHCP server running
                  on the switch stack interface
                items:
                  properties:
                    ip:
                      description: >-
                        The IP address of the client which has fixed IP address
                        assigned to it
                      type: string
                    mac:
                      description: The MAC address of the client which has fixed IP address
                      type: string
                    name:
                      description: The name of the client which has fixed IP address
                      type: string
                  required:
                    - name
                    - mac
                    - ip
                  type: object
                type: array
              reservedIpRanges:
                description: >-
                  Array of DHCP reserved IP assignments for the DHCP server
                  running on the switch stack interface
                items:
                  properties:
                    comment:
                      description: The comment for the reserved IP range
                      type: string
                    end:
                      description: The ending IP address of the reserved IP range
                      type: string
                    start:
                      description: The starting IP address of the reserved IP range
                      type: string
                  required:
                    - start
                    - end
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a layer 3 interface DHCP configuration for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
        - dhcp
  '/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes':
    get:
      description: List layer 3 static routes for a switch stack
      operationId: getNetworkSwitchStackRoutingStaticRoutes
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List layer 3 static routes for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
    post:
      consumes:
        - application/json
      description: Create a layer 3 static route for a switch stack
      operationId: createNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: >-
                  IP address of the next hop device to which the device sends
                  its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: >-
                  The subnet which is routed via this static route and should be
                  specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            required:
              - subnet
              - nextHopIp
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
  '/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}':
    delete:
      description: Delete a layer 3 static route for a switch stack
      operationId: deleteNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
    get:
      description: Return a layer 3 static route for a switch stack
      operationId: getNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
    put:
      consumes:
        - application/json
      description: Update a layer 3 static route for a switch stack
      operationId: updateNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: switchStackId
          required: true
          type: string
        - in: path
          name: staticRouteId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: >-
                  IP address of the next hop device to which the device sends
                  its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: >-
                  The subnet which is routed via this static route and should be
                  specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
  '/networks/{networkId}/switch/stormControl':
    get:
      description: Return the storm control configuration for a switch network
      operationId: getNetworkSwitchStormControl
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the storm control configuration for a switch network
      tags:
        - switch
        - configure
        - stormControl
    put:
      consumes:
        - application/json
      description: Update the storm control configuration for a switch network
      operationId: updateNetworkSwitchStormControl
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              broadcastThreshold: 30
              multicastThreshold: 30
              unknownUnicastThreshold: 30
            properties:
              broadcastThreshold:
                description: >-
                  Percentage (1 to 99) of total available port bandwidth for
                  broadcast traffic type. Default value 100 percent rate is to
                  clear the configuration.
                type: integer
              multicastThreshold:
                description: >-
                  Percentage (1 to 99) of total available port bandwidth for
                  multicast traffic type. Default value 100 percent rate is to
                  clear the configuration.
                type: integer
              unknownUnicastThreshold:
                description: >-
                  Percentage (1 to 99) of total available port bandwidth for
                  unknown unicast (dlf-destination lookup failure) traffic type.
                  Default value 100 percent rate is to clear the configuration.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the storm control configuration for a switch network
      tags:
        - switch
        - configure
        - stormControl
  '/networks/{networkId}/switch/stp':
    get:
      description: Returns STP settings
      operationId: getNetworkSwitchStp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns STP settings
      tags:
        - switch
        - configure
        - stp
    put:
      consumes:
        - application/json
      description: Updates STP settings
      operationId: updateNetworkSwitchStp
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rstpEnabled: true
              stpBridgePriority:
                - stpPriority: 4096
                  switches:
                    - Q234-ABCD-0001
                    - Q234-ABCD-0002
                    - Q234-ABCD-0003
                - stacks:
                    - '789102'
                    - '123456'
                    - '129102'
                  stpPriority: 28672
            properties:
              rstpEnabled:
                description: The spanning tree protocol status in network
                type: boolean
              stpBridgePriority:
                description: >-
                  STP bridge priority for switches/stacks or switch profiles. An
                  empty array will clear the STP bridge priority settings.
                items:
                  properties:
                    stacks:
                      description: List of stack IDs
                      items:
                        type: string
                      type: array
                    stpPriority:
                      description: 'STP priority for switch, stacks, or switch profiles'
                      type: integer
                    switchProfiles:
                      description: List of switch profile IDs
                      items:
                        type: string
                      type: array
                    switches:
                      description: List of switch serial numbers
                      items:
                        type: string
                      type: array
                  required:
                    - stpPriority
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates STP settings
      tags:
        - switch
        - configure
        - stp
  '/networks/{networkId}/syslogServers':
    get:
      description: List the syslog servers for a network
      operationId: getNetworkSyslogServers
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the syslog servers for a network
      tags:
        - networks
        - configure
        - syslogServers
    put:
      consumes:
        - application/json
      description: Update the syslog servers for a network
      operationId: updateNetworkSyslogServers
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              servers:
                - host: 1.2.3.4
                  port: 443
                  roles:
                    - Wireless event log
                    - URLs
            properties:
              servers:
                description: A list of the syslog servers for this network
                items:
                  properties:
                    host:
                      description: The IP address of the syslog server
                      type: string
                    port:
                      description: The port of the syslog server
                      type: integer
                    roles:
                      description: >-
                        A list of roles for the syslog server. Options
                        (case-insensitive): 'Wireless event log', 'Appliance
                        event log', 'Switch event log', 'Air Marshal events',
                        'Flows', 'URLs', 'IDS alerts', 'Security events'
                      items:
                        type: string
                      type: array
                  required:
                    - host
                    - port
                    - roles
                  type: object
                type: array
            required:
              - servers
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the syslog servers for a network
      tags:
        - networks
        - configure
        - syslogServers
  '/networks/{networkId}/traffic':
    get:
      description: >-
        Return the traffic analysis data for this network. Traffic analysis with
        hostname visibility must be enabled on the network.
      operationId: getNetworkTraffic
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 30 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 30 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter the data by device type: 'combined', 'wireless', 'switch' or
            'appliance'. Defaults to 'combined'. When using 'combined', for each
            rule the data will come from the device type with the most usage.
          enum:
            - combined
            - wireless
            - switch
            - appliance
          in: query
          name: deviceType
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the traffic analysis data for this network
      tags:
        - networks
        - monitor
        - traffic
  '/networks/{networkId}/trafficAnalysis':
    get:
      description: Return the traffic analysis settings for a network
      operationId: getNetworkTrafficAnalysis
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the traffic analysis settings for a network
      tags:
        - networks
        - configure
        - trafficAnalysis
    put:
      consumes:
        - application/json
      description: Update the traffic analysis settings for a network
      operationId: updateNetworkTrafficAnalysis
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              customPieChartItems:
                - name: Item from hostname
                  type: host
                  value: example.com
                - name: Item from port
                  type: port
                  value: '440'
                - name: Item from IP
                  type: ipRange
                  value: 192.1.0.0
                - name: Item from IP range (CIDR)
                  type: ipRange
                  value: 192.2.0.0/16
                - name: Item from IP range with port
                  type: ipRange
                  value: '192.3.0.0/16:80'
              mode: detailed
            properties:
              customPieChartItems:
                description: >-
                  The list of items that make up the custom pie chart for
                  traffic reporting.
                items:
                  properties:
                    name:
                      description: The name of the custom pie chart item.
                      type: string
                    type:
                      description: |2
                            The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.
                      enum:
                        - host
                        - port
                        - ipRange
                      type: string
                    value:
                      description: |2
                            The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item
                            (see sample request/response for more details).
                      type: string
                  required:
                    - name
                    - type
                    - value
                  type: object
                type: array
              mode:
                description: |2
                      The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
                      'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
                enum:
                  - disabled
                  - basic
                  - detailed
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the traffic analysis settings for a network
      tags:
        - networks
        - configure
        - trafficAnalysis
  '/networks/{networkId}/trafficShaping/applicationCategories':
    get:
      description: Returns the application categories for traffic shaping rules.
      operationId: getNetworkTrafficShapingApplicationCategories
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the application categories for traffic shaping rules.
      tags:
        - networks
        - configure
        - trafficShaping
        - applicationCategories
  '/networks/{networkId}/trafficShaping/dscpTaggingOptions':
    get:
      description: >-
        Returns the available DSCP tagging options for your traffic shaping
        rules.
      operationId: getNetworkTrafficShapingDscpTaggingOptions
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Returns the available DSCP tagging options for your traffic shaping
        rules.
      tags:
        - networks
        - configure
        - trafficShaping
        - dscpTaggingOptions
  '/networks/{networkId}/unbind':
    post:
      description: Unbind a network from a template.
      operationId: unbindNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Unbind a network from a template.
      tags:
        - networks
        - configure
  '/networks/{networkId}/webhooks/httpServers':
    get:
      description: List the HTTP servers for a network
      operationId: getNetworkWebhooksHttpServers
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the HTTP servers for a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
    post:
      consumes:
        - application/json
      description: Add an HTTP server to a network
      operationId: createNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: 'What''s in a name, anyway?'
              sharedSecret: shhh
              url: 'https://example.com'
            properties:
              name:
                description: A name for easy reference to the HTTP server
                type: string
              sharedSecret:
                description: >-
                  A shared secret that will be included in POSTs sent to the
                  HTTP server. This secret can be used to verify that the
                  request was sent by Meraki.
                type: string
              url:
                description: The URL of the HTTP server
                type: string
            required:
              - name
              - url
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add an HTTP server to a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
  '/networks/{networkId}/webhooks/httpServers/{httpServerId}':
    delete:
      description: Delete an HTTP server from a network
      operationId: deleteNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: httpServerId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an HTTP server from a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
    get:
      description: Return an HTTP server for a network
      operationId: getNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: httpServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an HTTP server for a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
    put:
      consumes:
        - application/json
      description: Update an HTTP server
      operationId: updateNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: httpServerId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: 'What''s in a name, anyway?'
              sharedSecret: shhh
              url: 'https://example.com'
            properties:
              name:
                description: A name for easy reference to the HTTP server
                type: string
              sharedSecret:
                description: >-
                  A shared secret that will be included in POSTs sent to the
                  HTTP server. This secret can be used to verify that the
                  request was sent by Meraki.
                type: string
              url:
                description: The URL of the HTTP server
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an HTTP server
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
  '/networks/{networkId}/webhooks/webhookTests':
    post:
      consumes:
        - application/json
      description: Send a test webhook for a network
      operationId: createNetworkWebhooksWebhookTest
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              url: 'https://www.example.com/path'
            properties:
              sharedSecret:
                default: ''
                description: >-
                  The shared secret the test webhook will send. Optional.
                  Defaults to an empty string.
                type: string
              url:
                description: The URL where the test webhook will be sent
                type: string
            required:
              - url
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Send a test webhook for a network
      tags:
        - networks
        - configure
        - webhooks
        - webhookTests
  '/networks/{networkId}/webhooks/webhookTests/{webhookTestId}':
    get:
      description: Return the status of a webhook test for a network
      operationId: getNetworkWebhooksWebhookTest
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: webhookTestId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the status of a webhook test for a network
      tags:
        - networks
        - configure
        - webhooks
        - webhookTests
  '/networks/{networkId}/wireless/airMarshal':
    get:
      description: List Air Marshal scan results from a network
      operationId: getNetworkWirelessAirMarshal
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameter t0. The value must be
            in seconds and be less than or equal to 31 days. The default is 7
            days.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List Air Marshal scan results from a network
      tags:
        - wireless
        - monitor
        - airMarshal
  '/networks/{networkId}/wireless/alternateManagementInterface':
    get:
      description: Return alternate management interface and devices with IP assigned
      operationId: getNetworkWirelessAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return alternate management interface and devices with IP assigned
      tags:
        - wireless
        - configure
        - alternateManagementInterface
    put:
      consumes:
        - application/json
      description: Update alternate management interface and device static IP
      operationId: updateNetworkWirelessAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              accessPoints:
                - alternateManagementIp: 1.2.3.4
                  dns1: 8.8.8.8
                  dns2: 8.8.4.4
                  gateway: 1.2.3.5
                  serial: Q234-ABCD-5678
                  subnetMask: 255.255.255.0
              enabled: true
              protocols:
                - radius
                - snmp
                - syslog
                - ldap
              vlanId: 100
            properties:
              accessPoints:
                description: >-
                  Array of access point serial number and IP assignment. Note:
                  accessPoints IP assignment is not applicable for template
                  networks, in other words, do not put 'accessPoints' in the
                  body when updating template networks. Also, an empty
                  'accessPoints' array will remove all previous static IP
                  assignments
                items:
                  properties:
                    alternateManagementIp:
                      description: >-
                        Wireless alternate management interface device IP.
                        Provide an empty string to remove alternate management
                        IP assignment
                      type: string
                    dns1:
                      description: Primary DNS must be in IP format
                      type: string
                    dns2:
                      description: Optional secondary DNS must be in IP format
                      type: string
                    gateway:
                      description: Gateway must be in IP format
                      type: string
                    serial:
                      description: >-
                        Serial number of access point to be configured with
                        alternate management IP
                      type: string
                    subnetMask:
                      description: Subnet mask must be in IP format
                      type: string
                  required:
                    - serial
                    - alternateManagementIp
                  type: object
                type: array
              enabled:
                description: >-
                  Boolean value to enable or disable alternate management
                  interface
                type: boolean
              protocols:
                description: >-
                  Can be one or more of the following values: 'radius', 'snmp',
                  'syslog' or 'ldap'
                items:
                  enum:
                    - radius
                    - snmp
                    - syslog
                    - ldap
                  type: string
                type: array
              vlanId:
                description: >-
                  Alternate management interface VLAN, must be between 1 and
                  4094
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update alternate management interface and device static IP
      tags:
        - wireless
        - configure
        - alternateManagementInterface
  '/networks/{networkId}/wireless/billing':
    get:
      description: Return the billing settings of this network
      operationId: getNetworkWirelessBilling
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the billing settings of this network
      tags:
        - wireless
        - configure
        - billing
    put:
      consumes:
        - application/json
      description: Update the billing settings
      operationId: updateNetworkWirelessBilling
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              currency: USD
              plans:
                - bandwidthLimits:
                    limitDown: 1000
                    limitUp: 1000
                  id: '1'
                  price: '5'
                  timeLimit: 1 hour
            properties:
              currency:
                description: The currency code of this node group's billing plans
                type: string
              plans:
                description: >-
                  Array of billing plans in the node group. (Can configure a
                  maximum of 5)
                items:
                  properties:
                    bandwidthLimits:
                      description: The uplink bandwidth settings for the pricing plan.
                      properties:
                        limitDown:
                          description: >-
                            The maximum download limit (integer, in Kbps). null
                            indicates no limit
                          type: integer
                        limitUp:
                          description: >-
                            The maximum upload limit (integer, in Kbps). null
                            indicates no limit
                          type: integer
                      type: object
                    id:
                      description: The id of the pricing plan to update.
                      type: string
                    price:
                      description: The price of the billing plan.
                      format: float
                      type: number
                    timeLimit:
                      description: >-
                        The time limit of the pricing plan in minutes. Can be '1
                        hour', '1 day', '1 week', or '30 days'.
                      enum:
                        - 1 hour
                        - 1 day
                        - 1 week
                        - 30 days
                      type: string
                  required:
                    - price
                    - bandwidthLimits
                    - timeLimit
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the billing settings
      tags:
        - wireless
        - configure
        - billing
  '/networks/{networkId}/wireless/bluetooth/settings':
    get:
      description: >-
        Return the Bluetooth settings for a network. <a
        href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a> must be enabled on the network.
      operationId: getNetworkWirelessBluetoothSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the Bluetooth settings for a network. <a
        href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a> must be enabled on the network.
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
    put:
      consumes:
        - application/json
      description: >-
        Update the Bluetooth settings for a network. See the docs page for <a
        href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a>.
      operationId: updateNetworkWirelessBluetoothSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              advertisingEnabled: true
              major: 1
              majorMinorAssignmentMode: Non-unique
              scanningEnabled: true
              uuid: 00000000-0000-0000-000-000000000000
            properties:
              advertisingEnabled:
                description: 'Whether APs will advertise beacons. (true, false)'
                type: boolean
              major:
                description: >-
                  The major number to be used in the beacon identifier. Only
                  valid in 'Non-unique' mode.
                type: integer
              majorMinorAssignmentMode:
                description: >-
                  The way major and minor number should be assigned to nodes in
                  the network. ('Unique', 'Non-unique')
                enum:
                  - Unique
                  - Non-unique
                type: string
              minor:
                description: >-
                  The minor number to be used in the beacon identifier. Only
                  valid in 'Non-unique' mode.
                type: integer
              scanningEnabled:
                description: >-
                  Whether APs will scan for Bluetooth enabled clients. (true,
                  false)
                type: boolean
              uuid:
                description: The UUID to be used in the beacon identifier.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the Bluetooth settings for a network
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
  '/networks/{networkId}/wireless/channelUtilizationHistory':
    get:
      description: Return AP channel utilization over time for a device or network client
      operationId: getNetworkWirelessChannelUtilizationHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 600, 1200, 3600, 14400, 86400. The default is
            86400.
          in: query
          name: resolution
          type: integer
        - description: >-
            Automatically select a data resolution based on the given timespan;
            this overrides the value specified by the 'resolution' parameter.
            The default setting is false.
          in: query
          name: autoResolution
          type: boolean
        - description: >-
            Filter results by network client to return per-device, per-band AP
            channel utilization metrics inner joined by the queried client's
            connection history.
          in: query
          name: clientId
          type: string
        - description: >-
            Filter results by device to return AP channel utilization metrics
            for the queried device; either :band or :clientId must be jointly
            specified.
          in: query
          name: deviceSerial
          type: string
        - description: >-
            Filter results by AP tag to return AP channel utilization metrics
            for devices labeled with the given tag; either :clientId or
            :deviceSerial must be jointly specified.
          in: query
          name: apTag
          type: string
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return AP channel utilization over time for a device or network client
      tags:
        - wireless
        - monitor
        - channelUtilizationHistory
  '/networks/{networkId}/wireless/clientCountHistory':
    get:
      description: >-
        Return wireless client counts over time for a network, device, or
        network client
      operationId: getNetworkWirelessClientCountHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is
            86400.
          in: query
          name: resolution
          type: integer
        - description: >-
            Automatically select a data resolution based on the given timespan;
            this overrides the value specified by the 'resolution' parameter.
            The default setting is false.
          in: query
          name: autoResolution
          type: boolean
        - description: >-
            Filter results by network client to return per-device client counts
            over time inner joined by the queried client's connection history.
          in: query
          name: clientId
          type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          type: string
        - description: Filter results by AP tag.
          in: query
          name: apTag
          type: string
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return wireless client counts over time for a network, device, or
        network client
      tags:
        - wireless
        - monitor
        - clientCountHistory
  '/networks/{networkId}/wireless/clients/connectionStats':
    get:
      description: 'Aggregated connectivity info for this network, grouped by clients'
      operationId: getNetworkWirelessClientsConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Aggregated connectivity info for this network, grouped by clients'
      tags:
        - wireless
        - monitor
        - clients
        - connectionStats
  '/networks/{networkId}/wireless/clients/latencyStats':
    get:
      description: 'Aggregated latency info for this network, grouped by clients'
      operationId: getNetworkWirelessClientsLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
        - description: >-
            Partial selection: If present, this call will return only the
            selected fields of ["rawDistribution", "avg"]. All fields will be
            returned by default. Selected fields must be entered as a comma
            separated string.
          in: query
          name: fields
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Aggregated latency info for this network, grouped by clients'
      tags:
        - wireless
        - monitor
        - clients
        - latencyStats
  '/networks/{networkId}/wireless/clients/{clientId}/connectionStats':
    get:
      description: >-
        Aggregated connectivity info for a given client on this network. Clients
        are identified by their MAC.
      operationId: getNetworkWirelessClientConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Aggregated connectivity info for a given client on this network
      tags:
        - wireless
        - monitor
        - clients
        - connectionStats
  '/networks/{networkId}/wireless/clients/{clientId}/connectivityEvents':
    get:
      description: >-
        List the wireless connectivity events for a client within a network in
        the timespan.
      operationId: getNetworkWirelessClientConnectivityEvents
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
        - collectionFormat: csv
          description: >-
            A list of event types to include. If not specified, events of all
            types will be returned. Valid types are 'assoc', 'disassoc', 'auth',
            'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.
          in: query
          items:
            enum:
              - assoc
              - disassoc
              - auth
              - deauth
              - dns
              - dhcp
              - roam
              - connection
              - sticky
            type: string
          name: types
          type: array
        - collectionFormat: csv
          description: >-
            A list of severities to include. If not specified, events of all
            severities will be returned. Valid severities are 'good', 'info',
            'warn' and/or 'bad'.
          in: query
          items:
            enum:
              - good
              - info
              - warn
              - bad
            type: string
          name: includedSeverities
          type: array
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: >-
            An SSID number to include. If not specified, events for all SSIDs
            will be returned.
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
          in: query
          name: ssidNumber
          type: integer
        - description: Filter results by an AP's serial number.
          in: query
          name: deviceSerial
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        List the wireless connectivity events for a client within a network in
        the timespan.
      tags:
        - wireless
        - monitor
        - clients
        - connectivityEvents
  '/networks/{networkId}/wireless/clients/{clientId}/latencyHistory':
    get:
      description: >-
        Return the latency history for a client. Clients can be identified by a
        client key or either the MAC or IP depending on whether the network uses
        Track-by-IP. The latency data is from a sample of 2% of packets and is
        grouped into 4 traffic categories: background, best effort, video,
        voice. Within these categories the sampled packet counters are bucketed
        by latency in milliseconds.
      operationId: getNetworkWirelessClientLatencyHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 791 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 791
            days after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 791 days. The
            default is 1 day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 86400. The default is 86400.
          in: query
          name: resolution
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the latency history for a client
      tags:
        - wireless
        - monitor
        - clients
        - latencyHistory
  '/networks/{networkId}/wireless/clients/{clientId}/latencyStats':
    get:
      description: >-
        Aggregated latency info for a given client on this network. Clients are
        identified by their MAC.
      operationId: getNetworkWirelessClientLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: clientId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
        - description: >-
            Partial selection: If present, this call will return only the
            selected fields of ["rawDistribution", "avg"]. All fields will be
            returned by default. Selected fields must be entered as a comma
            separated string.
          in: query
          name: fields
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Aggregated latency info for a given client on this network
      tags:
        - wireless
        - monitor
        - clients
        - latencyStats
  '/networks/{networkId}/wireless/connectionStats':
    get:
      description: Aggregated connectivity info for this network
      operationId: getNetworkWirelessConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Aggregated connectivity info for this network
      tags:
        - wireless
        - monitor
        - connectionStats
  '/networks/{networkId}/wireless/dataRateHistory':
    get:
      description: 'Return PHY data rates over time for a network, device, or network client'
      operationId: getNetworkWirelessDataRateHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is
            86400.
          in: query
          name: resolution
          type: integer
        - description: >-
            Automatically select a data resolution based on the given timespan;
            this overrides the value specified by the 'resolution' parameter.
            The default setting is false.
          in: query
          name: autoResolution
          type: boolean
        - description: Filter results by network client.
          in: query
          name: clientId
          type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          type: string
        - description: Filter results by AP tag.
          in: query
          name: apTag
          type: string
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Return PHY data rates over time for a network, device, or network client'
      tags:
        - wireless
        - monitor
        - dataRateHistory
  '/networks/{networkId}/wireless/devices/connectionStats':
    get:
      description: 'Aggregated connectivity info for this network, grouped by node'
      operationId: getNetworkWirelessDevicesConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Aggregated connectivity info for this network, grouped by node'
      tags:
        - wireless
        - monitor
        - devices
        - connectionStats
  '/networks/{networkId}/wireless/devices/latencyStats':
    get:
      description: 'Aggregated latency info for this network, grouped by node'
      operationId: getNetworkWirelessDevicesLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
        - description: >-
            Partial selection: If present, this call will return only the
            selected fields of ["rawDistribution", "avg"]. All fields will be
            returned by default. Selected fields must be entered as a comma
            separated string.
          in: query
          name: fields
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Aggregated latency info for this network, grouped by node'
      tags:
        - wireless
        - monitor
        - devices
        - latencyStats
  '/networks/{networkId}/wireless/failedConnections':
    get:
      description: >-
        List of all failed client connection events on this network in a given
        time range
      operationId: getNetworkWirelessFailedConnections
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
        - description: Filter by AP
          in: query
          name: serial
          type: string
        - description: Filter by client MAC
          in: query
          name: clientId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        List of all failed client connection events on this network in a given
        time range
      tags:
        - wireless
        - monitor
        - failedConnections
  '/networks/{networkId}/wireless/latencyHistory':
    get:
      description: >-
        Return average wireless latency over time for a network, device, or
        network client
      operationId: getNetworkWirelessLatencyHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is
            86400.
          in: query
          name: resolution
          type: integer
        - description: >-
            Automatically select a data resolution based on the given timespan;
            this overrides the value specified by the 'resolution' parameter.
            The default setting is false.
          in: query
          name: autoResolution
          type: boolean
        - description: Filter results by network client.
          in: query
          name: clientId
          type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          type: string
        - description: Filter results by AP tag.
          in: query
          name: apTag
          type: string
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          type: integer
        - description: Filter by access category.
          enum:
            - backgroundTraffic
            - bestEffortTraffic
            - videoTraffic
            - voiceTraffic
          in: query
          name: accessCategory
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return average wireless latency over time for a network, device, or
        network client
      tags:
        - wireless
        - monitor
        - latencyHistory
  '/networks/{networkId}/wireless/latencyStats':
    get:
      description: Aggregated latency info for this network
      operationId: getNetworkWirelessLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 180 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 7 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Filter results by band (either '2.4' or '5'). Note that data prior
            to February 2020 will not have band information.
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          type: string
        - description: >-
            Partial selection: If present, this call will return only the
            selected fields of ["rawDistribution", "avg"]. All fields will be
            returned by default. Selected fields must be entered as a comma
            separated string.
          in: query
          name: fields
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Aggregated latency info for this network
      tags:
        - wireless
        - monitor
        - latencyStats
  '/networks/{networkId}/wireless/meshStatuses':
    get:
      description: List wireless mesh statuses for repeaters
      operationId: getNetworkWirelessMeshStatuses
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            500. Default is 50.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List wireless mesh statuses for repeaters
      tags:
        - wireless
        - monitor
        - meshStatuses
  '/networks/{networkId}/wireless/rfProfiles':
    get:
      description: List the non-basic RF profiles for this network
      operationId: getNetworkWirelessRfProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            If the network is bound to a template, this parameter controls
            whether or not the non-basic RF profiles defined on the template
            should be included in the response alongside the non-basic profiles
            defined on the bound network. Defaults to false.
          in: query
          name: includeTemplateProfiles
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the non-basic RF profiles for this network
      tags:
        - wireless
        - configure
        - rfProfiles
    post:
      consumes:
        - application/json
      description: Creates new RF profile for this network
      operationId: createNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example: {}
            properties:
              apBandSettings:
                description: Settings that will be enabled if selectionType is set to 'ap'.
                properties:
                  bandOperationMode:
                    description: >-
                      Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to
                      dual.
                    enum:
                      - dual
                      - 2.4ghz
                      - 5ghz
                    type: string
                  bandSteeringEnabled:
                    description: >-
                      Steers client to most open band. Can be either true or
                      false. Defaults to true.
                    type: boolean
                type: object
              bandSelectionType:
                description: >-
                  Band selection can be set to either 'ssid' or 'ap'. This param
                  is required on creation.
                enum:
                  - ssid
                  - ap
                type: string
              clientBalancingEnabled:
                description: >-
                  Steers client to best available access point. Can be either
                  true or false. Defaults to true.
                type: boolean
              fiveGhzSettings:
                description: Settings related to 5Ghz band
                properties:
                  channelWidth:
                    description: >-
                      Sets channel width (MHz) for 5Ghz band. Can be one of
                      'auto', '20', '40' or '80'. Defaults to auto.
                    type: string
                  maxPower:
                    description: >-
                      Sets max power (dBm) of 5Ghz band. Can be integer between
                      8 and 30. Defaults to 30.
                    type: integer
                  minBitrate:
                    description: >-
                      Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6',
                      '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
                    type: integer
                  minPower:
                    description: >-
                      Sets min power (dBm) of 5Ghz band. Can be integer between
                      8 and 30. Defaults to 8.
                    type: integer
                  rxsop:
                    description: >-
                      The RX-SOP level controls the sensitivity of the radio. It
                      is strongly recommended to use RX-SOP only after
                      consulting a wireless expert. RX-SOP can be configured in
                      the range of -65 to -95 (dBm). A value of null will reset
                      this to the default.
                    type: integer
                  validAutoChannels:
                    description: >-
                      Sets valid auto channels for 5Ghz band. Can be one of
                      '36', '40', '44', '48', '52', '56', '60', '64', '100',
                      '104', '108', '112', '116', '120', '124', '128', '132',
                      '136', '140', '144', '149', '153', '157', '161' or
                      '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100,
                      104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144,
                      149, 153, 157, 161, 165].
                    items:
                      type: integer
                    type: array
                type: object
              minBitrateType:
                description: >-
                  Minimum bitrate can be set to either 'band' or 'ssid'.
                  Defaults to band.
                enum:
                  - band
                  - ssid
                type: string
              name:
                description: >-
                  The name of the new profile. Must be unique. This param is
                  required on creation.
                type: string
              twoFourGhzSettings:
                description: Settings related to 2.4Ghz band
                properties:
                  axEnabled:
                    description: >-
                      Determines whether ax radio on 2.4Ghz band is on or off.
                      Can be either true or false. If false, we highly recommend
                      disabling band steering. Defaults to true.
                    type: boolean
                  maxPower:
                    description: >-
                      Sets max power (dBm) of 2.4Ghz band. Can be integer
                      between 5 and 30. Defaults to 30.
                    type: integer
                  minBitrate:
                    description: >-
                      Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1',
                      '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48'
                      or '54'. Defaults to 11.
                    format: float
                    type: number
                  minPower:
                    description: >-
                      Sets min power (dBm) of 2.4Ghz band. Can be integer
                      between 5 and 30. Defaults to 5.
                    type: integer
                  rxsop:
                    description: >-
                      The RX-SOP level controls the sensitivity of the radio. It
                      is strongly recommended to use RX-SOP only after
                      consulting a wireless expert. RX-SOP can be configured in
                      the range of -65 to -95 (dBm). A value of null will reset
                      this to the default.
                    type: integer
                  validAutoChannels:
                    description: >-
                      Sets valid auto channels for 2.4Ghz band. Can be one of
                      '1', '6' or '11'. Defaults to [1, 6, 11].
                    items:
                      type: integer
                    type: array
                type: object
            required:
              - name
              - bandSelectionType
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Creates new RF profile for this network
      tags:
        - wireless
        - configure
        - rfProfiles
  '/networks/{networkId}/wireless/rfProfiles/{rfProfileId}':
    delete:
      description: Delete a RF Profile
      operationId: deleteNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: rfProfileId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a RF Profile
      tags:
        - wireless
        - configure
        - rfProfiles
    get:
      description: Return a RF profile
      operationId: getNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: rfProfileId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a RF profile
      tags:
        - wireless
        - configure
        - rfProfiles
    put:
      consumes:
        - application/json
      description: Updates specified RF profile for this network
      operationId: updateNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: rfProfileId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              apBandSettings:
                description: Settings that will be enabled if selectionType is set to 'ap'.
                properties:
                  bandOperationMode:
                    description: 'Choice between ''dual'', ''2.4ghz'' or ''5ghz''.'
                    enum:
                      - dual
                      - 2.4ghz
                      - 5ghz
                    type: string
                  bandSteeringEnabled:
                    description: >-
                      Steers client to most open band. Can be either true or
                      false.
                    type: boolean
                type: object
              bandSelectionType:
                description: Band selection can be set to either 'ssid' or 'ap'.
                enum:
                  - ssid
                  - ap
                type: string
              clientBalancingEnabled:
                description: >-
                  Steers client to best available access point. Can be either
                  true or false.
                type: boolean
              fiveGhzSettings:
                description: Settings related to 5Ghz band
                properties:
                  channelWidth:
                    description: >-
                      Sets channel width (MHz) for 5Ghz band. Can be one of
                      'auto', '20', '40' or '80'.
                    type: string
                  maxPower:
                    description: >-
                      Sets max power (dBm) of 5Ghz band. Can be integer between
                      8 and 30.
                    type: integer
                  minBitrate:
                    description: >-
                      Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6',
                      '9', '12', '18', '24', '36', '48' or '54'.
                    type: integer
                  minPower:
                    description: >-
                      Sets min power (dBm) of 5Ghz band. Can be integer between
                      8 and 30.
                    type: integer
                  rxsop:
                    description: >-
                      The RX-SOP level controls the sensitivity of the radio. It
                      is strongly recommended to use RX-SOP only after
                      consulting a wireless expert. RX-SOP can be configured in
                      the range of -65 to -95 (dBm). A value of null will reset
                      this to the default.
                    type: integer
                  validAutoChannels:
                    description: >-
                      Sets valid auto channels for 5Ghz band. Can be one of
                      '36', '40', '44', '48', '52', '56', '60', '64', '100',
                      '104', '108', '112', '116', '120', '124', '128', '132',
                      '136', '140', '144', '149', '153', '157', '161' or '165'.
                    items:
                      type: integer
                    type: array
                type: object
              minBitrateType:
                description: Minimum bitrate can be set to either 'band' or 'ssid'.
                enum:
                  - band
                  - ssid
                type: string
              name:
                description: The name of the new profile. Must be unique.
                type: string
              twoFourGhzSettings:
                description: Settings related to 2.4Ghz band
                properties:
                  axEnabled:
                    description: >-
                      Determines whether ax radio on 2.4Ghz band is on or off.
                      Can be either true or false. If false, we highly recommend
                      disabling band steering.
                    type: boolean
                  maxPower:
                    description: >-
                      Sets max power (dBm) of 2.4Ghz band. Can be integer
                      between 5 and 30.
                    type: integer
                  minBitrate:
                    description: >-
                      Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1',
                      '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48'
                      or '54'.
                    format: float
                    type: number
                  minPower:
                    description: >-
                      Sets min power (dBm) of 2.4Ghz band. Can be integer
                      between 5 and 30.
                    type: integer
                  rxsop:
                    description: >-
                      The RX-SOP level controls the sensitivity of the radio. It
                      is strongly recommended to use RX-SOP only after
                      consulting a wireless expert. RX-SOP can be configured in
                      the range of -65 to -95 (dBm). A value of null will reset
                      this to the default.
                    type: integer
                  validAutoChannels:
                    description: >-
                      Sets valid auto channels for 2.4Ghz band. Can be one of
                      '1', '6' or '11'.
                    items:
                      type: integer
                    type: array
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates specified RF profile for this network
      tags:
        - wireless
        - configure
        - rfProfiles
  '/networks/{networkId}/wireless/settings':
    get:
      description: Return the wireless settings for a network
      operationId: getNetworkWirelessSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the wireless settings for a network
      tags:
        - wireless
        - configure
        - settings
    put:
      consumes:
        - application/json
      description: Update the wireless settings for a network
      operationId: updateNetworkWirelessSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              ipv6BridgeEnabled: false
              locationAnalyticsEnabled: false
              meshingEnabled: true
              upgradeStrategy: minimizeUpgradeTime
            properties:
              ipv6BridgeEnabled:
                description: >-
                  Toggle for enabling or disabling IPv6 bridging in a network
                  (Note: if enabled, SSIDs must also be configured to use bridge
                  mode)
                type: boolean
              ledLightsOn:
                description: >-
                  Toggle for enabling or disabling LED lights on all APs in the
                  network (making them run dark)
                type: boolean
              locationAnalyticsEnabled:
                description: >-
                  Toggle for enabling or disabling location analytics for your
                  network
                type: boolean
              meshingEnabled:
                description: Toggle for enabling or disabling meshing in a network
                type: boolean
              upgradeStrategy:
                description: >-
                  The upgrade strategy to apply to the network. Must be one of
                  'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires
                  firmware version MR 26.8 or higher'
                enum:
                  - minimizeUpgradeTime
                  - minimizeClientDowntime
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the wireless settings for a network
      tags:
        - wireless
        - configure
        - settings
  '/networks/{networkId}/wireless/signalQualityHistory':
    get:
      description: >-
        Return signal quality (SNR/RSSI) over time for a device or network
        client
      operationId: getNetworkWirelessSignalQualityHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is
            86400.
          in: query
          name: resolution
          type: integer
        - description: >-
            Automatically select a data resolution based on the given timespan;
            this overrides the value specified by the 'resolution' parameter.
            The default setting is false.
          in: query
          name: autoResolution
          type: boolean
        - description: Filter results by network client.
          in: query
          name: clientId
          type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          type: string
        - description: >-
            Filter results by AP tag; either :clientId or :deviceSerial must be
            jointly specified.
          in: query
          name: apTag
          type: string
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return signal quality (SNR/RSSI) over time for a device or network
        client
      tags:
        - wireless
        - monitor
        - signalQualityHistory
  '/networks/{networkId}/wireless/ssids':
    get:
      description: List the MR SSIDs in a network
      operationId: getNetworkWirelessSsids
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the MR SSIDs in a network
      tags:
        - wireless
        - configure
        - ssids
  '/networks/{networkId}/wireless/ssids/{number}':
    get:
      description: Return a single MR SSID
      operationId: getNetworkWirelessSsid
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a single MR SSID
      tags:
        - wireless
        - configure
        - ssids
    put:
      consumes:
        - application/json
      description: Update the attributes of an MR SSID
      operationId: updateNetworkWirelessSsid
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              enabled: true
              name: My SSID
            properties:
              activeDirectory:
                description: >-
                  The current setting for Active Directory. Only valid if
                  splashPage is 'Password-protected with Active Directory'
                properties:
                  credentials:
                    description: >-
                      (Optional) The credentials of the user account to be used
                      by the AP to bind to your Active Directory server. The
                      Active Directory account should have permissions on all
                      your Active Directory servers. Only valid if the
                      splashPage is 'Password-protected with Active Directory'.
                    properties:
                      logonName:
                        description: The logon name of the Active Directory account.
                        type: string
                      password:
                        description: The password to the Active Directory user account.
                        type: string
                    type: object
                  servers:
                    description: >-
                      The Active Directory servers to be used for
                      authentication.
                    items:
                      properties:
                        host:
                          description: IP address of your Active Directory server.
                          type: string
                        port:
                          description: >-
                            (Optional) UDP port the Active Directory server
                            listens on. By default, uses port 3268.
                          type: integer
                      required:
                        - host
                      type: object
                    type: array
                type: object
              adultContentFilteringEnabled:
                description: >-
                  Boolean indicating whether or not adult content will be
                  blocked
                type: boolean
              apTagsAndVlanIds:
                description: >-
                  The list of tags and VLAN IDs used for VLAN tagging. This
                  param is only valid when the ipAssignmentMode is 'Bridge mode'
                  or 'Layer 3 roaming'
                items:
                  properties:
                    tags:
                      description: Array of AP tags
                      items:
                        type: string
                      type: array
                    vlanId:
                      description: Numerical identifier that is assigned to the VLAN
                      type: integer
                  type: object
                type: array
              authMode:
                description: >-
                  The association control method for the SSID ('open', 'psk',
                  'open-with-radius', '8021x-meraki', '8021x-radius',
                  '8021x-google', '8021x-localradius', 'ipsk-with-radius' or
                  'ipsk-without-radius')
                enum:
                  - open
                  - psk
                  - open-with-radius
                  - 8021x-meraki
                  - 8021x-radius
                  - 8021x-google
                  - 8021x-localradius
                  - ipsk-with-radius
                  - ipsk-without-radius
                type: string
              availabilityTags:
                description: >-
                  Accepts a list of tags for this SSID. If availableOnAllAps is
                  false, then the SSID will only be broadcast by APs with tags
                  matching any of the tags in this list.
                items:
                  type: string
                type: array
              availableOnAllAps:
                description: >-
                  Boolean indicating whether all APs should broadcast the SSID
                  or if it should be restricted to APs matching any availability
                  tags. Can only be false if the SSID has availability tags.
                type: boolean
              bandSelection:
                description: >-
                  The client-serving radio frequencies. ('Dual band operation',
                  '5 GHz band only' or 'Dual band operation with Band Steering')
                type: string
              concentratorNetworkId:
                description: >-
                  The concentrator to use when the ipAssignmentMode is 'Layer 3
                  roaming with a concentrator' or 'VPN'.
                type: string
              defaultVlanId:
                description: >-
                  The default VLAN ID used for 'all other APs'. This param is
                  only valid when the ipAssignmentMode is 'Bridge mode' or
                  'Layer 3 roaming'
                type: integer
              dnsRewrite:
                description: DNS servers rewrite settings
                properties:
                  dnsCustomNameservers:
                    description: User specified DNS servers (up to two servers)
                    items:
                      type: string
                    type: array
                  enabled:
                    description: >-
                      Boolean indicating whether or not DNS server rewrite is
                      enabled. If disabled, upstream DNS will be used
                    type: boolean
                type: object
              dot11r:
                description: The current setting for 802.11r
                properties:
                  adaptive:
                    description: (Optional) Whether 802.11r is adaptive or not.
                    type: boolean
                  enabled:
                    description: Whether 802.11r is enabled or not.
                    type: boolean
                type: object
              dot11w:
                description: The current setting for Protected Management Frames (802.11w).
                properties:
                  enabled:
                    description: Whether 802.11w is enabled or not.
                    type: boolean
                  required:
                    description: (Optional) Whether 802.11w is required or not.
                    type: boolean
                type: object
              enabled:
                description: Whether or not the SSID is enabled
                type: boolean
              encryptionMode:
                description: >-
                  The psk encryption mode for the SSID ('wep' or 'wpa'). This
                  param is only valid if the authMode is 'psk'
                enum:
                  - wep
                  - wpa
                type: string
              enterpriseAdminAccess:
                description: >-
                  Whether or not an SSID is accessible by 'enterprise'
                  administrators ('access disabled' or 'access enabled')
                enum:
                  - access disabled
                  - access enabled
                type: string
              ipAssignmentMode:
                description: >-
                  The client IP assignment mode ('NAT mode', 'Bridge mode',
                  'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or
                  'VPN')
                type: string
              lanIsolationEnabled:
                description: >-
                  Boolean indicating whether Layer 2 LAN isolation should be
                  enabled or disabled. Only configurable when ipAssignmentMode
                  is 'Bridge mode'.
                type: boolean
              ldap:
                description: >-
                  The current setting for LDAP. Only valid if splashPage is
                  'Password-protected with LDAP'.
                properties:
                  baseDistinguishedName:
                    description: The base distinguished name of users on the LDAP server.
                    type: string
                  credentials:
                    description: >-
                      (Optional) The credentials of the user account to be used
                      by the AP to bind to your LDAP server. The LDAP account
                      should have permissions on all your LDAP servers.
                    properties:
                      distinguishedName:
                        description: >-
                          The distinguished name of the LDAP user account
                          (example: cn=user,dc=meraki,dc=com).
                        type: string
                      password:
                        description: The password of the LDAP user account.
                        type: string
                    type: object
                  serverCaCertificate:
                    description: The CA certificate used to sign the LDAP server's key.
                    properties:
                      contents:
                        description: >-
                          The contents of the CA certificate. Must be in PEM or
                          DER format.
                        type: string
                    type: object
                  servers:
                    description: The LDAP servers to be used for authentication.
                    items:
                      properties:
                        host:
                          description: IP address of your LDAP server.
                          type: string
                        port:
                          description: UDP port the LDAP server listens on.
                          type: integer
                      required:
                        - host
                        - port
                      type: object
                    type: array
                type: object
              localRadius:
                description: >-
                  The current setting for Local Authentication, a built-in
                  RADIUS server on the access point. Only valid if authMode is
                  '8021x-localradius'.
                properties:
                  cacheTimeout:
                    description: >-
                      The duration (in seconds) for which LDAP and OCSP lookups
                      are cached.
                    type: integer
                  certificateAuthentication:
                    description: The current setting for certificate verification.
                    properties:
                      clientRootCaCertificate:
                        description: >-
                          The Client CA Certificate used to sign the client
                          certificate.
                        properties:
                          contents:
                            description: >-
                              The contents of the Client CA Certificate. Must be
                              in PEM or DER format.
                            type: string
                        type: object
                      enabled:
                        description: >-
                          Whether or not to use EAP-TLS certificate-based
                          authentication to validate wireless clients.
                        type: boolean
                      ocspResponderUrl:
                        description: >-
                          (Optional) The URL of the OCSP responder to verify
                          client certificate status.
                        type: string
                      useLdap:
                        description: Whether or not to verify the certificate with LDAP.
                        type: boolean
                      useOcsp:
                        description: Whether or not to verify the certificate with OCSP.
                        type: boolean
                    type: object
                  passwordAuthentication:
                    description: The current setting for password-based authentication.
                    properties:
                      enabled:
                        description: >-
                          Whether or not to use EAP-TTLS/PAP or PEAP-GTC
                          password-based authentication via LDAP lookup.
                        type: boolean
                    type: object
                type: object
              mandatoryDhcpEnabled:
                description: >-
                  If true, Mandatory DHCP will enforce that clients connecting
                  to this SSID must use the IP address assigned by the DHCP
                  server. Clients who use a static IP address won't be able to
                  associate.
                type: boolean
              minBitrate:
                description: >-
                  The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11',
                  '12', '18', '24', '36', '48' or '54')
                format: float
                type: number
              name:
                description: The name of the SSID
                type: string
              oauth:
                description: >-
                  The OAuth settings of this SSID. Only valid if splashPage is
                  'Google OAuth'.
                properties:
                  allowedDomains:
                    description: >-
                      (Optional) The list of domains allowed access to the
                      network.
                    items:
                      type: string
                    type: array
                type: object
              perClientBandwidthLimitDown:
                description: The download bandwidth limit in Kbps. (0 represents no limit.)
                type: integer
              perClientBandwidthLimitUp:
                description: The upload bandwidth limit in Kbps. (0 represents no limit.)
                type: integer
              perSsidBandwidthLimitDown:
                description: >-
                  The total download bandwidth limit in Kbps. (0 represents no
                  limit.)
                type: integer
              perSsidBandwidthLimitUp:
                description: >-
                  The total upload bandwidth limit in Kbps. (0 represents no
                  limit.)
                type: integer
              psk:
                description: >-
                  The passkey for the SSID. This param is only valid if the
                  authMode is 'psk'
                type: string
              radiusAccountingEnabled:
                description: >-
                  Whether or not RADIUS accounting is enabled. This param is
                  only valid if the authMode is 'open-with-radius',
                  '8021x-radius' or 'ipsk-with-radius'
                type: boolean
              radiusAccountingInterimInterval:
                description: >-
                  The interval (in seconds) in which accounting information is
                  updated and sent to the RADIUS accounting server.
                type: integer
              radiusAccountingServers:
                description: >-
                  The RADIUS accounting 802.1X servers to be used for
                  authentication. This param is only valid if the authMode is
                  'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and
                  radiusAccountingEnabled is 'true'
                items:
                  properties:
                    host:
                      description: >-
                        IP address to which the APs will send RADIUS accounting
                        messages
                      type: string
                    port:
                      description: >-
                        Port on the RADIUS server that is listening for
                        accounting messages
                      type: integer
                    radsecEnabled:
                      description: >-
                        Use RADSEC (TLS over TCP) to connect to this RADIUS
                        accounting server. Requires radiusProxyEnabled.
                      type: boolean
                    secret:
                      description: >-
                        Shared key used to authenticate messages between the APs
                        and RADIUS server
                      type: string
                  required:
                    - host
                  type: object
                type: array
              radiusAttributeForGroupPolicies:
                description: >-
                  Specify the RADIUS attribute used to look up group policies
                  ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or
                  'Aruba-User-Role'). Access points must receive this attribute
                  in the RADIUS Access-Accept message
                enum:
                  - Filter-Id
                  - Reply-Message
                  - Airespace-ACL-Name
                  - Aruba-User-Role
                type: string
              radiusAuthenticationNasId:
                description: >-
                  The template of the NAS identifier to be used for RADIUS
                  authentication (ex. $NODE_MAC$:$VAP_NUM$).
                type: string
              radiusCalledStationId:
                description: >-
                  The template of the called station identifier to be used for
                  RADIUS (ex. $NODE_MAC$:$VAP_NUM$).
                type: string
              radiusCoaEnabled:
                description: >-
                  If true, Meraki devices will act as a RADIUS Dynamic
                  Authorization Server and will respond to RADIUS
                  Change-of-Authorization and Disconnect messages sent by the
                  RADIUS server.
                type: boolean
              radiusFailoverPolicy:
                description: >-
                  This policy determines how authentication requests should be
                  handled in the event that all of the configured RADIUS servers
                  are unreachable ('Deny access' or 'Allow access')
                enum:
                  - Deny access
                  - Allow access
                type: string
              radiusFallbackEnabled:
                description: >-
                  Whether or not higher priority RADIUS servers should be
                  retried after 60 seconds.
                type: boolean
              radiusGuestVlanEnabled:
                description: >-
                  Whether or not RADIUS Guest VLAN is enabled. This param is
                  only valid if the authMode is 'open-with-radius' and
                  addressing mode is not set to 'isolated' or 'nat' mode
                type: boolean
              radiusGuestVlanId:
                description: >-
                  VLAN ID of the RADIUS Guest VLAN. This param is only valid if
                  the authMode is 'open-with-radius' and addressing mode is not
                  set to 'isolated' or 'nat' mode
                type: integer
              radiusLoadBalancingPolicy:
                description: >-
                  This policy determines which RADIUS server will be contacted
                  first in an authentication attempt and the ordering of any
                  necessary retry attempts ('Strict priority order' or 'Round
                  robin')
                enum:
                  - Strict priority order
                  - Round robin
                type: string
              radiusOverride:
                description: >-
                  If true, the RADIUS response can override VLAN tag. This is
                  not valid when ipAssignmentMode is 'NAT mode'.
                type: boolean
              radiusProxyEnabled:
                description: >-
                  If true, Meraki devices will proxy RADIUS messages through the
                  Meraki cloud to the configured RADIUS auth and accounting
                  servers.
                type: boolean
              radiusServerAttemptsLimit:
                description: >-
                  The maximum number of transmit attempts after which a RADIUS
                  server is failed over (must be between 1-5).
                type: integer
              radiusServerTimeout:
                description: >-
                  The amount of time for which a RADIUS client waits for a reply
                  from the RADIUS server (must be between 1-10 seconds).
                type: integer
              radiusServers:
                description: >-
                  The RADIUS 802.1X servers to be used for authentication. This
                  param is only valid if the authMode is 'open-with-radius',
                  '8021x-radius' or 'ipsk-with-radius'
                items:
                  properties:
                    host:
                      description: IP address of your RADIUS server
                      type: string
                    port:
                      description: >-
                        UDP port the RADIUS server listens on for
                        Access-requests
                      type: integer
                    radsecEnabled:
                      description: >-
                        Use RADSEC (TLS over TCP) to connect to this RADIUS
                        server. Requires radiusProxyEnabled.
                      type: boolean
                    secret:
                      description: RADIUS client shared secret
                      type: string
                  required:
                    - host
                  type: object
                type: array
              radiusTestingEnabled:
                description: >-
                  If true, Meraki devices will periodically send Access-Request
                  messages to configured RADIUS servers using identity
                  'meraki_8021x_test' to ensure that the RADIUS servers are
                  reachable.
                type: boolean
              splashGuestSponsorDomains:
                description: >-
                  Array of valid sponsor email domains for sponsored guest
                  splash type.
                items:
                  type: string
                type: array
              splashPage:
                description: >-
                  The type of splash page for the SSID ('None', 'Click-through
                  splash page', 'Billing', 'Password-protected with Meraki
                  RADIUS', 'Password-protected with custom RADIUS',
                  'Password-protected with Active Directory',
                  'Password-protected with LDAP', 'SMS authentication', 'Systems
                  Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored
                  guest', 'Cisco ISE' or 'Google Apps domain'). This attribute
                  is not supported for template children.
                enum:
                  - None
                  - Click-through splash page
                  - Billing
                  - Password-protected with Meraki RADIUS
                  - Password-protected with custom RADIUS
                  - Password-protected with Active Directory
                  - Password-protected with LDAP
                  - SMS authentication
                  - Systems Manager Sentry
                  - Facebook Wi-Fi
                  - Google OAuth
                  - Sponsored guest
                  - Cisco ISE
                  - Google Apps domain
                type: string
              useVlanTagging:
                description: >-
                  Whether or not traffic should be directed to use specific
                  VLANs. This param is only valid if the ipAssignmentMode is
                  'Bridge mode' or 'Layer 3 roaming'
                type: boolean
              visible:
                description: >-
                  Boolean indicating whether APs should advertise or hide this
                  SSID. APs will only broadcast this SSID if set to true
                type: boolean
              vlanId:
                description: >-
                  The VLAN ID used for VLAN tagging. This param is only valid
                  when the ipAssignmentMode is 'Layer 3 roaming with a
                  concentrator' or 'VPN'
                type: integer
              walledGardenEnabled:
                description: >-
                  Allow access to a configurable list of IP ranges, which users
                  may access prior to sign-on.
                type: boolean
              walledGardenRanges:
                description: >-
                  Specify your walled garden by entering an array of addresses,
                  ranges using CIDR notation, domain names, and domain wildcards
                  (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com',
                  '*.google.com']). Meraki's splash page is automatically
                  included in your walled garden.
                items:
                  type: string
                type: array
              wpaEncryptionMode:
                description: >-
                  The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2',
                  'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')
                enum:
                  - WPA1 only
                  - WPA1 and WPA2
                  - WPA2 only
                  - WPA3 Transition Mode
                  - WPA3 only
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the attributes of an MR SSID
      tags:
        - wireless
        - configure
        - ssids
  '/networks/{networkId}/wireless/ssids/{number}/bonjourForwarding':
    get:
      description: List the Bonjour forwarding setting and rules for the SSID
      operationId: getNetworkWirelessSsidBonjourForwarding
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the Bonjour forwarding setting and rules for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - bonjourForwarding
    put:
      consumes:
        - application/json
      description: Update the bonjour forwarding setting and rules for the SSID
      operationId: updateNetworkWirelessSsidBonjourForwarding
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              enabled: true
              rules:
                - description: A simple bonjour rule
                  services:
                    - All Services
                  vlanId: '1'
            properties:
              enabled:
                description: 'If true, Bonjour forwarding is enabled on this SSID.'
                type: boolean
              rules:
                description: List of bonjour forwarding rules.
                items:
                  properties:
                    description:
                      description: >-
                        A description for your Bonjour forwarding rule.
                        Optional.
                      type: string
                    services:
                      description: >-
                        A list of Bonjour services. At least one service must be
                        specified. Available services are 'All Services',
                        'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat',
                        'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
                      items:
                        enum:
                          - All Services
                          - AirPlay
                          - AFP
                          - BitTorrent
                          - FTP
                          - iChat
                          - iTunes
                          - Printers
                          - Samba
                          - Scanners
                          - SSH
                        type: string
                      type: array
                    vlanId:
                      description: The ID of the service VLAN. Required.
                      type: string
                  required:
                    - vlanId
                    - services
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the bonjour forwarding setting and rules for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - bonjourForwarding
  '/networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies':
    get:
      description: List the device type group policies for the SSID
      operationId: getNetworkWirelessSsidDeviceTypeGroupPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the device type group policies for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - deviceTypeGroupPolicies
    put:
      consumes:
        - application/json
      description: Update the device type group policies for the SSID
      operationId: updateNetworkWirelessSsidDeviceTypeGroupPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              deviceTypePolicies:
                - devicePolicy: Allowed
                  deviceType: Android
                - devicePolicy: Group policy
                  deviceType: iPhone
                  groupPolicyId: 101
              enabled: true
            properties:
              deviceTypePolicies:
                description: List of device type policies.
                items:
                  properties:
                    devicePolicy:
                      description: >-
                        The device policy. Can be one of 'Allowed', 'Blocked' or
                        'Group policy'
                      enum:
                        - Allowed
                        - Blocked
                        - Group policy
                      type: string
                    deviceType:
                      description: >-
                        The device type. Can be one of 'Android', 'BlackBerry',
                        'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X',
                        'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'
                      enum:
                        - Android
                        - BlackBerry
                        - Chrome OS
                        - iPad
                        - iPhone
                        - iPod
                        - Mac OS X
                        - Windows
                        - Windows Phone
                        - B&N Nook
                        - Other OS
                      type: string
                    groupPolicyId:
                      description: ID of the group policy object.
                      type: integer
                  required:
                    - deviceType
                    - devicePolicy
                  type: object
                type: array
              enabled:
                description: 'If true, the SSID device type group policies are enabled.'
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the device type group policies for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - deviceTypeGroupPolicies
  '/networks/{networkId}/wireless/ssids/{number}/eapOverride':
    get:
      description: Return the EAP overridden parameters for an SSID
      operationId: getNetworkWirelessSsidEapOverride
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the EAP overridden parameters for an SSID
      tags:
        - wireless
        - configure
        - ssids
        - eapOverride
    put:
      consumes:
        - application/json
      description: Update the EAP overridden parameters for an SSID.
      operationId: updateNetworkWirelessSsidEapOverride
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              eapolKey:
                description: EAPOL Key settings.
                properties:
                  retries:
                    description: Maximum number of EAPOL key retries.
                    type: integer
                  timeoutInMs:
                    description: EAPOL Key timeout in milliseconds.
                    type: integer
                type: object
              identity:
                description: EAP settings for identity requests.
                properties:
                  retries:
                    description: Maximum number of EAP retries.
                    type: integer
                  timeout:
                    description: EAP timeout in seconds.
                    type: integer
                type: object
              maxRetries:
                description: Maximum number of general EAP retries.
                type: integer
              timeout:
                description: General EAP timeout in seconds.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the EAP overridden parameters for an SSID.
      tags:
        - wireless
        - configure
        - ssids
        - eapOverride
  '/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules':
    get:
      description: Return the L3 firewall rules for an SSID on an MR network
      operationId: getNetworkWirelessSsidFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the L3 firewall rules for an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l3FirewallRules
    put:
      consumes:
        - application/json
      description: Update the L3 firewall rules of an SSID on an MR network
      operationId: updateNetworkWirelessSsidFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: 443
                  policy: allow
                  protocol: tcp
            properties:
              allowLanAccess:
                description: >-
                  Allow wireless client access to local LAN (boolean value -
                  true allows access and false denies access) (optional)
                type: boolean
              rules:
                description: >-
                  An ordered array of the firewall rules for this SSID (not
                  including the local LAN access rule or the default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: >-
                        Comma-separated list of destination IP address(es) (in
                        IP or CIDR notation), fully-qualified domain names
                        (FQDN) or 'any'
                      type: string
                    destPort:
                      description: >-
                        Comma-separated list of destination port(s) (integer in
                        the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any')
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                  required:
                    - policy
                    - protocol
                    - destCidr
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the L3 firewall rules of an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l3FirewallRules
  '/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules':
    get:
      description: Return the L7 firewall rules for an SSID on an MR network
      operationId: getNetworkWirelessSsidFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the L7 firewall rules for an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l7FirewallRules
    put:
      consumes:
        - application/json
      description: Update the L7 firewall rules of an SSID on an MR network
      operationId: updateNetworkWirelessSsidFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - policy: deny
                  type: application
                  value:
                    id: 'meraki:layer7/application/67'
                    name: Xbox LIVE
                - policy: deny
                  type: applicationCategory
                  value:
                    id: 'meraki:layer7/category/2'
                    name: Blogging
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: '23'
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: '10.11.12.00/24:5555'
            properties:
              rules:
                description: >-
                  An array of L7 firewall rules for this SSID. Rules will get
                  applied in the same order user has specified in request. Empty
                  array will clear the L7 firewall rule configuration.
                items:
                  properties:
                    policy:
                      description: '''Deny'' traffic specified by this rule'
                      enum:
                        - deny
                      type: string
                    type:
                      description: >-
                        Type of the L7 firewall rule. One of: 'application',
                        'applicationCategory', 'host', 'port', 'ipRange'
                      enum:
                        - application
                        - applicationCategory
                        - host
                        - port
                        - ipRange
                      type: string
                    value:
                      description: >-
                        The value of what needs to get blocked. Format of the
                        value varies depending on type of the firewall rule
                        selected.
                      type: string
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the L7 firewall rules of an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l7FirewallRules
  '/networks/{networkId}/wireless/ssids/{number}/hotspot20':
    get:
      description: Return the Hotspot 2.0 settings for an SSID
      operationId: getNetworkWirelessSsidHotspot20
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the Hotspot 2.0 settings for an SSID
      tags:
        - wireless
        - configure
        - ssids
        - hotspot20
    put:
      consumes:
        - application/json
      description: Update the Hotspot 2.0 settings of an SSID
      operationId: updateNetworkWirelessSsidHotspot20
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              domains:
                - meraki.local
                - domain2.com
              enabled: true
              mccMncs:
                - mcc: '123'
                  mnc: '456'
                - mcc: '563'
                  mnc: '232'
              naiRealms:
                - format: 1
                  methods:
                    - authenticationTypes:
                        credentials: []
                        eapInnerAuthentication:
                          - EAP-TTLS with MSCHAPv2
                        nonEapInnerAuthentication:
                          - MSCHAP
                        tunneledEapMethodCredentials: []
                      id: '1'
                  name: Realm 1
              networkAccessType: Private network
              operator:
                name: Meraki Product Management
              roamConsortOis:
                - ABC123
                - 456EFG
              venue:
                name: SF Branch
                type: Unspecified Assembly
            properties:
              domains:
                description: An array of domain names
                items:
                  type: string
                type: array
              enabled:
                description: Whether or not Hotspot 2.0 for this SSID is enabled
                type: boolean
              mccMncs:
                description: An array of MCC/MNC pairs
                items:
                  properties:
                    mcc:
                      description: MCC value
                      type: string
                    mnc:
                      description: MNC value
                      type: string
                  type: object
                type: array
              naiRealms:
                description: An array of NAI realms
                items:
                  properties:
                    format:
                      description: The format for the realm ('1' or '0')
                      enum:
                        - '1'
                        - '0'
                      type: string
                    methods:
                      description: An array of EAP methods for the realm.
                      items:
                        properties:
                          authenticationTypes:
                            description: >-
                              The authentication types for the method. These
                              should be formatted as an object with the EAP
                              method category in camelcase as the key and the
                              list of types as the value
                              (nonEapInnerAuthentication: Reserved, PAP, CHAP,
                              MSCHAP, MSCHAPV2; eapInnerAuthentication: EAP-TLS,
                              EAP-SIM, EAP-AKA, EAP-TTLS with MSCHAPv2;
                              credentials: SIM, USIM, NFC Secure Element,
                              Hardware Token, Softoken, Certificate,
                              username/password, none, Reserved, Vendor
                              Specific; tunneledEapMethodCredentials: SIM, USIM,
                              NFC Secure Element, Hardware Token, Softoken,
                              Certificate, username/password, Reserved,
                              Anonymous, Vendor Specific)
                            properties: {}
                            type: object
                          id:
                            description: ID of method
                            type: string
                        type: object
                      type: array
                    realm:
                      description: The name of the realm
                      type: string
                  type: object
                type: array
              networkAccessType:
                description: >-
                  The network type of this SSID ('Private network', 'Private
                  network with guest access', 'Chargeable public network', 'Free
                  public network', 'Personal device network', 'Emergency
                  services only network', 'Test or experimental', 'Wildcard')
                enum:
                  - Private network
                  - Private network with guest access
                  - Chargeable public network
                  - Free public network
                  - Personal device network
                  - Emergency services only network
                  - Test or experimental
                  - Wildcard
                type: string
              operator:
                description: Operator settings for this SSID
                properties:
                  name:
                    description: Operator name
                    type: string
                type: object
              roamConsortOis:
                description: >-
                  An array of roaming consortium OIs (hexadecimal number 3-5
                  octets in length)
                items:
                  type: string
                type: array
              venue:
                description: Venue settings for this SSID
                properties:
                  name:
                    description: Venue name
                    type: string
                  type:
                    description: >-
                      Venue type ('Unspecified', 'Unspecified Assembly',
                      'Arena', 'Stadium', 'Passenger Terminal', 'Amphitheater',
                      'Amusement Park', 'Place of Worship', 'Convention Center',
                      'Library', 'Museum', 'Restaurant', 'Theater', 'Bar',
                      'Coffee Shop', 'Zoo or Aquarium', 'Emergency Coordination
                      Center', 'Unspecified Business', 'Doctor or Dentist
                      office', 'Bank', 'Fire Station', 'Police Station', 'Post
                      Office', 'Professional Office', 'Research and Development
                      Facility', 'Attorney Office', 'Unspecified Educational',
                      'School, Primary', 'School, Secondary', 'University or
                      College', 'Unspecified Factory and Industrial', 'Factory',
                      'Unspecified Institutional', 'Hospital', 'Long-Term Care
                      Facility', 'Alcohol and Drug Rehabilitation Center',
                      'Group Home', 'Prison or Jail', 'Unspecified Mercantile',
                      'Retail Store', 'Grocery Market', 'Automotive Service
                      Station', 'Shopping Mall', 'Gas Station', 'Unspecified
                      Residential', 'Private Residence', 'Hotel or Motel',
                      'Dormitory', 'Boarding House', 'Unspecified Storage',
                      'Unspecified Utility and Miscellaneous', 'Unspecified
                      Vehicular', 'Automobile or Truck', 'Airplane', 'Bus',
                      'Ferry', 'Ship or Boat', 'Train', 'Motor Bike',
                      'Unspecified Outdoor', 'Muni-mesh Network', 'City Park',
                      'Rest Area', 'Traffic Control', 'Bus Stop', 'Kiosk')
                    enum:
                      - Unspecified
                      - Unspecified Assembly
                      - Arena
                      - Stadium
                      - Passenger Terminal
                      - Amphitheater
                      - Amusement Park
                      - Place of Worship
                      - Convention Center
                      - Library
                      - Museum
                      - Restaurant
                      - Theater
                      - Bar
                      - Coffee Shop
                      - Zoo or Aquarium
                      - Emergency Coordination Center
                      - Unspecified Business
                      - Doctor or Dentist office
                      - Bank
                      - Fire Station
                      - Police Station
                      - Post Office
                      - Professional Office
                      - Research and Development Facility
                      - Attorney Office
                      - Unspecified Educational
                      - 'School, Primary'
                      - 'School, Secondary'
                      - University or College
                      - Unspecified Factory and Industrial
                      - Factory
                      - Unspecified Institutional
                      - Hospital
                      - Long-Term Care Facility
                      - Alcohol and Drug Rehabilitation Center
                      - Group Home
                      - Prison or Jail
                      - Unspecified Mercantile
                      - Retail Store
                      - Grocery Market
                      - Automotive Service Station
                      - Shopping Mall
                      - Gas Station
                      - Unspecified Residential
                      - Private Residence
                      - Hotel or Motel
                      - Dormitory
                      - Boarding House
                      - Unspecified Storage
                      - Unspecified Utility and Miscellaneous
                      - Unspecified Vehicular
                      - Automobile or Truck
                      - Airplane
                      - Bus
                      - Ferry
                      - Ship or Boat
                      - Train
                      - Motor Bike
                      - Unspecified Outdoor
                      - Muni-mesh Network
                      - City Park
                      - Rest Area
                      - Traffic Control
                      - Bus Stop
                      - Kiosk
                    type: string
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the Hotspot 2.0 settings of an SSID
      tags:
        - wireless
        - configure
        - ssids
        - hotspot20
  '/networks/{networkId}/wireless/ssids/{number}/identityPsks':
    get:
      description: List all Identity PSKs in a wireless network
      operationId: getNetworkWirelessSsidIdentityPsks
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List all Identity PSKs in a wireless network
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
    post:
      consumes:
        - application/json
      description: Create an Identity PSK
      operationId: createNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              groupPolicyId: '101'
              id: '1284392014819'
              name: Sample Identity PSK
              passphrase: NIalareK
            properties:
              groupPolicyId:
                description: The group policy to be applied to clients
                type: string
              name:
                description: The name of the Identity PSK
                type: string
              passphrase:
                description: >-
                  The passphrase for client authentication. If left blank, one
                  will be auto-generated.
                type: string
            required:
              - name
              - groupPolicyId
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
  '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}':
    delete:
      description: Delete an Identity PSK
      operationId: deleteNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: path
          name: identityPskId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
    get:
      description: Return an Identity PSK
      operationId: getNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: path
          name: identityPskId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
    put:
      consumes:
        - application/json
      description: Update an Identity PSK
      operationId: updateNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: path
          name: identityPskId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              groupPolicyId: '101'
              id: '1284392014819'
              name: Sample Identity PSK
              passphrase: NIalareK
            properties:
              groupPolicyId:
                description: The group policy to be applied to clients
                type: string
              name:
                description: The name of the Identity PSK
                type: string
              passphrase:
                description: The passphrase for client authentication
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
  '/networks/{networkId}/wireless/ssids/{number}/schedules':
    get:
      description: List the outage schedule for the SSID
      operationId: getNetworkWirelessSsidSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the outage schedule for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - schedules
    put:
      consumes:
        - application/json
      description: Update the outage schedule for the SSID
      operationId: updateNetworkWirelessSsidSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              enabled: true
              ranges:
                - endDay: Tuesday
                  endTime: '05:00'
                  startDay: Tuesday
                  startTime: '01:00'
                - endDay: monday
                  endTime: '05:00'
                  startDay: Fri
                  startTime: 1140
            properties:
              enabled:
                description: 'If true, the SSID outage schedule is enabled.'
                type: boolean
              ranges:
                description: >-
                  List of outage ranges. Has a start date and time, and end date
                  and time. If this parameter is passed in along with
                  rangesInSeconds parameter, this will take precedence.
                items:
                  properties:
                    endDay:
                      description: >-
                        Day of when the outage ends. Can be either full day
                        name, or three letter abbreviation
                      type: string
                    endTime:
                      description: 24 hour time when the outage ends.
                      type: string
                    startDay:
                      description: >-
                        Day of when the outage starts. Can be either full day
                        name, or three letter abbreviation.
                      type: string
                    startTime:
                      description: 24 hour time when the outage starts.
                      type: string
                  required:
                    - startDay
                    - startTime
                    - endDay
                    - endTime
                  type: object
                type: array
              rangesInSeconds:
                description: >-
                  List of outage ranges in seconds since Sunday at Midnight. Has
                  a start and end. If this parameter is passed in along with the
                  ranges parameter, ranges will take precedence.
                items:
                  properties:
                    end:
                      description: >-
                        Seconds since Sunday at midnight when that outage range
                        ends.
                      type: integer
                    start:
                      description: >-
                        Seconds since Sunday at midnight when the outage range
                        starts.
                      type: integer
                  required:
                    - start
                    - end
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the outage schedule for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - schedules
  '/networks/{networkId}/wireless/ssids/{number}/splash/settings':
    get:
      description: Display the splash page settings for the given SSID
      operationId: getNetworkWirelessSsidSplashSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Display the splash page settings for the given SSID
      tags:
        - wireless
        - configure
        - ssids
        - splash
        - settings
    put:
      consumes:
        - application/json
      description: Modify the splash page settings for the given SSID
      operationId: updateNetworkWirelessSsidSplashSettings
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              redirectUrl: 'https://example.com'
              splashImage:
                md5: null
              splashLogo:
                extension: jpg
                md5: abcd1234
              splashPage: Click-through splash page
              splashPrepaidFront:
                md5: null
              splashUrl: 'https://www.custom_splash_url.com'
              useRedirectUrl: true
              useSplashUrl: true
              welcomeMessage: Welcome!
            properties:
              allowSimultaneousLogins:
                description: >-
                  Whether or not to allow simultaneous logins from different
                  devices.
                type: boolean
              billing:
                description: Details associated with billing splash.
                properties:
                  freeAccess:
                    description: Details associated with a free access plan with limits.
                    properties:
                      durationInMinutes:
                        description: How long a device can use a network for free.
                        type: integer
                      enabled:
                        description: Whether or not free access is enabled.
                        type: boolean
                    type: object
                  prepaidAccessFastLoginEnabled:
                    description: >-
                      Whether or not billing uses the fast login prepaid access
                      option.
                    type: boolean
                  replyToEmailAddress:
                    description: The email address that receives replies from clients.
                    type: string
                type: object
              blockAllTrafficBeforeSignOn:
                description: >-
                  How restricted allowing traffic should be. If true, all
                  traffic types are blocked until the splash page is
                  acknowledged. If false, all non-HTTP traffic is allowed before
                  the splash page is acknowledged.
                type: boolean
              controllerDisconnectionBehavior:
                description: >-
                  How login attempts should be handled when the controller is
                  unreachable. Can be either 'open', 'restricted', or 'default'.
                enum:
                  - open
                  - restricted
                  - default
                type: string
              guestSponsorship:
                description: Details associated with guest sponsored splash.
                properties:
                  durationInMinutes:
                    description: >-
                      Duration in minutes of sponsored guest authorization. Must
                      be between 1 and 60480 (6 weeks)
                    type: integer
                  guestCanRequestTimeframe:
                    description: >-
                      Whether or not guests can specify how much time they are
                      requesting.
                    type: boolean
                type: object
              redirectUrl:
                description: >-
                  The custom redirect URL where the users will go after the
                  splash page.
                type: string
              sentryEnrollment:
                description: Systems Manager sentry enrollment splash settings.
                properties:
                  enforcedSystems:
                    description: >-
                      The system types that the Sentry enforces. Must be
                      included in: 'iOS, 'Android', 'macOS', and 'Windows'.
                    items:
                      type: string
                    type: array
                  strength:
                    description: >-
                      The strength of the enforcement of selected system types.
                      Must be one of: 'focused', 'click-through', and 'strict'.
                    enum:
                      - focused
                      - click-through
                      - strict
                    type: string
                  systemsManagerNetwork:
                    description: Systems Manager network targeted for sentry enrollment.
                    properties:
                      id:
                        description: The network ID of the Systems Manager network.
                        type: string
                    required:
                      - id
                    type: object
                type: object
              splashImage:
                description: The image used in the splash page.
                properties:
                  extension:
                    description: The extension of the image file.
                    type: string
                  md5:
                    description: >-
                      The MD5 value of the image file. Setting this to null will
                      remove the image from the splash page.
                    type: string
                type: object
              splashLogo:
                description: The logo used in the splash page.
                properties:
                  extension:
                    description: The extension of the logo file.
                    type: string
                  md5:
                    description: >-
                      The MD5 value of the logo file. Setting this to null will
                      remove the logo from the splash page.
                    type: string
                type: object
              splashPrepaidFront:
                description: The prepaid front image used in the splash page.
                properties:
                  extension:
                    description: The extension of the prepaid front image file.
                    type: string
                  md5:
                    description: >-
                      The MD5 value of the prepaid front image file. Setting
                      this to null will remove the prepaid front from the splash
                      page.
                    type: string
                type: object
              splashTimeout:
                description: >-
                  Splash timeout in minutes. This will determine how often users
                  will see the splash page.
                type: integer
              splashUrl:
                description: >-
                  [optional] The custom splash URL of the click-through splash
                  page. Note that the URL can be configured without necessarily
                  being used. In order to enable the custom URL, see
                  'useSplashUrl'
                type: string
              useRedirectUrl:
                description: >-
                  The Boolean indicating whether the the user will be redirected
                  to the custom redirect URL after the splash page. A custom
                  redirect URL must be set if this is true.
                type: boolean
              useSplashUrl:
                description: >-
                  [optional] Boolean indicating whether the users will be
                  redirected to the custom splash url. A custom splash URL must
                  be set if this is true. Note that depending on your SSID's
                  access control settings, it may not be possible to use the
                  custom splash URL.
                type: boolean
              welcomeMessage:
                description: The welcome message for the users on the splash page.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Modify the splash page settings for the given SSID
      tags:
        - wireless
        - configure
        - ssids
        - splash
        - settings
  '/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules':
    get:
      description: Display the traffic shaping settings for a SSID on an MR network
      operationId: getNetworkWirelessSsidTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Display the traffic shaping settings for a SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - trafficShaping
        - rules
    put:
      consumes:
        - application/json
      description: Update the traffic shaping settings for an SSID on an MR network
      operationId: updateNetworkWirelessSsidTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              defaultRulesEnabled: true
              rules:
                - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: '9090'
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: '10.1.0.0/16:80'
                    - type: localNet
                      value: 192.168.0.0/16
                    - type: applicationCategory
                      value:
                        id: 'meraki:layer7/category/2'
                        name: Blogging
                    - type: application
                      value:
                        id: 'meraki:layer7/application/133'
                        name: Battle.net
                  dscpTagValue: null
                  pcpTagValue: null
                  perClientBandwidthLimits:
                    bandwidthLimits:
                      limitDown: 1000000
                      limitUp: 1000000
                    settings: custom
              trafficShapingEnabled: true
            properties:
              defaultRulesEnabled:
                description: >-
                  Whether default traffic shaping rules are enabled (true) or
                  disabled (false). There are 4 default rules, which can be seen
                  on your network's traffic shaping page. Note that default
                  rules count against the rule limit of 8.
                type: boolean
              rules:
                description: |2
                      An array of traffic shaping rules. Rules are applied in the order that
                      they are specified in. An empty list (or null) means no rules. Note that
                      you are allowed a maximum of 8 rules.
                items:
                  properties:
                    definitions:
                      description: |2
                            A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                      items:
                        properties:
                          type:
                            description: >-
                              The type of definition. Can be one of
                              'application', 'applicationCategory', 'host',
                              'port', 'ipRange' or 'localNet'.
                            enum:
                              - application
                              - applicationCategory
                              - host
                              - port
                              - ipRange
                              - localNet
                            type: string
                          value:
                            description: |2
                                  If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                  a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                  "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                  custom ports.
                                   If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                  with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                  application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                  endpoint).
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      type: array
                    dscpTagValue:
                      description: |2
                            The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                            For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                      type: integer
                    pcpTagValue:
                      description: |2
                            The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                            null means 'Do not set PCP tag'.
                      type: integer
                    perClientBandwidthLimits:
                      description: |2
                            An object describing the bandwidth settings for your rule.
                      properties:
                        bandwidthLimits:
                          description: >-
                            The bandwidth limits object, specifying the upload
                            ('limitUp') and download ('limitDown') speed in
                            Kbps. These are only enforced if 'settings' is set
                            to 'custom'.
                          properties:
                            limitDown:
                              description: 'The maximum download limit (integer, in Kbps).'
                              type: integer
                            limitUp:
                              description: 'The maximum upload limit (integer, in Kbps).'
                              type: integer
                          type: object
                        settings:
                          description: >-
                            How bandwidth limits are applied by your rule. Can
                            be one of 'network default', 'ignore' or 'custom'.
                          type: string
                      type: object
                  required:
                    - definitions
                  type: object
                type: array
              trafficShapingEnabled:
                description: >-
                  Whether traffic shaping rules are applied to clients on your
                  SSID.
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the traffic shaping settings for an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - trafficShaping
        - rules
  '/networks/{networkId}/wireless/ssids/{number}/vpn':
    get:
      description: List the VPN settings for the SSID.
      operationId: getNetworkWirelessSsidVpn
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the VPN settings for the SSID.
      tags:
        - wireless
        - configure
        - ssids
        - vpn
    put:
      consumes:
        - application/json
      description: Update the VPN settings for the SSID
      operationId: updateNetworkWirelessSsidVpn
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - in: path
          name: number
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              splitTunnel:
                enabled: true
                rules:
                  - comment: split tunnel rule 1
                    destCidr: 1.1.1.1/32
                    destPort: any
                    policy: allow
                    protocol: any
                  - comment: split tunnel rule 2
                    destCidr: foo.com
                    destPort: any
                    policy: deny
            properties:
              splitTunnel:
                description: The VPN split tunnel settings for this SSID.
                properties:
                  enabled:
                    description: 'If true, VPN split tunnel is enabled.'
                    type: boolean
                  rules:
                    description: List of VPN split tunnel rules.
                    items:
                      properties:
                        comment:
                          description: Description for this split tunnel rule (optional).
                          type: string
                        destCidr:
                          description: >-
                            Destination for this split tunnel rule. IP address,
                            fully-qualified domain names (FQDN) or 'any'.
                          type: string
                        destPort:
                          description: >-
                            Destination port for this split tunnel rule,
                            (integer in the range 1-65535), or 'any'.
                          type: string
                        policy:
                          description: >-
                            Traffic policy specified for this split tunnel rule,
                            'allow' or 'deny'.
                          type: string
                        protocol:
                          description: Protocol for this split tunnel rule.
                          enum:
                            - Any
                            - TCP
                            - UDP
                          type: string
                      required:
                        - destCidr
                        - policy
                      type: object
                    type: array
                type: object
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the VPN settings for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - vpn
  '/networks/{networkId}/wireless/usageHistory':
    get:
      description: Return AP usage over time for a device or network client
      operationId: getNetworkWirelessUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 7 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The time resolution in seconds for returned data. The valid
            resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is
            86400.
          in: query
          name: resolution
          type: integer
        - description: >-
            Automatically select a data resolution based on the given timespan;
            this overrides the value specified by the 'resolution' parameter.
            The default setting is false.
          in: query
          name: autoResolution
          type: boolean
        - description: >-
            Filter results by network client to return per-device AP usage over
            time inner joined by the queried client's connection history.
          in: query
          name: clientId
          type: string
        - description: 'Filter results by device. Requires :band.'
          in: query
          name: deviceSerial
          type: string
        - description: >-
            Filter results by AP tag; either :clientId or :deviceSerial must be
            jointly specified.
          in: query
          name: apTag
          type: string
        - description: Filter results by band (either '2.4' or '5').
          enum:
            - '2.4'
            - '5'
          in: query
          name: band
          type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return AP usage over time for a device or network client
      tags:
        - wireless
        - monitor
        - usageHistory
  /organizations:
    get:
      description: List the organizations that the user has privileges on
      operationId: getOrganizations
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the organizations that the user has privileges on
      tags:
        - organizations
        - configure
    post:
      consumes:
        - application/json
      description: Create a new organization
      operationId: createOrganization
      parameters:
        - in: body
          name: body
          required: true
          schema:
            example:
              name: My organization
            properties:
              name:
                description: The name of the organization
                type: string
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a new organization
      tags:
        - organizations
        - configure
  '/organizations/{organizationId}':
    delete:
      description: Delete an organization
      operationId: deleteOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an organization
      tags:
        - organizations
        - configure
    get:
      description: Return an organization
      operationId: getOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an organization
      tags:
        - organizations
        - configure
    put:
      consumes:
        - application/json
      description: Update an organization
      operationId: updateOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: My organization
            properties:
              api:
                description: API-specific settings
                properties:
                  enabled:
                    description: >-
                      If true, enable the access to the Cisco Meraki Dashboard
                      API
                    type: boolean
                type: object
              name:
                description: The name of the organization
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an organization
      tags:
        - organizations
        - configure
  '/organizations/{organizationId}/actionBatches':
    get:
      description: Return the list of action batches in the organization
      operationId: getOrganizationActionBatches
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            Filter batches by status. Valid types are pending, completed, and
            failed.
          enum:
            - pending
            - completed
            - failed
          in: query
          name: status
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the list of action batches in the organization
      tags:
        - organizations
        - configure
        - actionBatches
    post:
      consumes:
        - application/json
      description: Create an action batch
      operationId: createOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              actions:
                - body:
                    enabled: false
                  operation: update
                  resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                - body:
                    name: Group 1
                  operation: create
                  resource: /networks/L_XXXXX/groupPolicies
              confirmed: true
              synchronous: false
            properties:
              actions:
                description: >-
                  A set of changes to make as part of this action (<a
                  href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more
                  details</a>)
                items:
                  properties:
                    body:
                      default: {}
                      description: The body of the action
                      properties: {}
                      type: object
                    operation:
                      description: The operation to be used
                      type: string
                    resource:
                      description: Unique identifier for the resource to be acted on
                      type: string
                  required:
                    - resource
                    - operation
                  type: object
                type: array
              confirmed:
                description: >-
                  Set to true for immediate execution. Set to false if the
                  action should be previewed before executing. This property
                  cannot be unset once it is true. Defaults to false.
                type: boolean
              synchronous:
                description: >-
                  Set to true to force the batch to run synchronous. There can
                  be at most 20 actions in synchronous batch. Defaults to false.
                type: boolean
            required:
              - actions
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create an action batch
      tags:
        - organizations
        - configure
        - actionBatches
  '/organizations/{organizationId}/actionBatches/{actionBatchId}':
    delete:
      description: Delete an action batch
      operationId: deleteOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: actionBatchId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete an action batch
      tags:
        - organizations
        - configure
        - actionBatches
    get:
      description: Return an action batch
      operationId: getOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: actionBatchId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an action batch
      tags:
        - organizations
        - configure
        - actionBatches
    put:
      consumes:
        - application/json
      description: Update an action batch
      operationId: updateOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: actionBatchId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              confirmed: true
              synchronous: false
            properties:
              confirmed:
                description: >-
                  A boolean representing whether or not the batch has been
                  confirmed. This property cannot be unset once it is true.
                type: boolean
              synchronous:
                description: >-
                  Set to true to force the batch to run synchronous. There can
                  be at most 20 actions in synchronous batch.
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an action batch
      tags:
        - organizations
        - configure
        - actionBatches
  '/organizations/{organizationId}/adaptivePolicy/acls':
    get:
      description: List adaptive policy ACLs in a organization
      operationId: getOrganizationAdaptivePolicyAcls
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List adaptive policy ACLs in a organization
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
    post:
      consumes:
        - application/json
      description: Creates new adaptive policy ACL
      operationId: createOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              description: Blocks sensitive web traffic
              ipVersion: ipv6
              name: Block sensitive web traffic
              rules:
                - dstPort: 22-30
                  policy: deny
                  protocol: tcp
                  srcPort: '1,33'
                - dstPort: any
                  policy: allow
                  protocol: any
                  srcPort: any
            properties:
              description:
                default: ''
                description: Description of the adaptive policy ACL
                type: string
              ipVersion:
                description: >-
                  IP version of adpative policy ACL. One of: 'any', 'ipv4' or
                  'ipv6'
                enum:
                  - any
                  - ipv4
                  - ipv6
                type: string
              name:
                description: Name of the adaptive policy ACL
                type: string
              rules:
                description: An ordered array of the adaptive policy ACL rules.
                items:
                  properties:
                    dstPort:
                      description: >-
                        Destination port. Must be in the format of single port:
                        '1', port list: '1,2' or port range: '1-10', and in the
                        range of 1-65535, or 'any'. Default is 'any'.
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule.'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any').
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcPort:
                      description: >-
                        Source port. Must be in the format of single port: '1',
                        port list: '1,2' or port range: '1-10', and in the range
                        of 1-65535, or 'any'. Default is 'any'.
                      type: string
                  required:
                    - policy
                    - protocol
                  type: object
                type: array
            required:
              - name
              - rules
              - ipVersion
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Creates new adaptive policy ACL
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
  '/organizations/{organizationId}/adaptivePolicy/acls/{id}':
    delete:
      description: >-
        Deletes the specified adaptive policy ACL. Note this adaptive policy ACL
        will also be removed from policies using it.
      operationId: deleteOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: id
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Deletes the specified adaptive policy ACL
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
    get:
      description: Returns the adaptive policy ACL information
      operationId: getOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the adaptive policy ACL information
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
    put:
      consumes:
        - application/json
      description: Updates an adaptive policy ACL
      operationId: updateOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              description: Blocks sensitive web traffic
              ipVersion: ipv6
              name: Block sensitive web traffic
              rules:
                - dstPort: 22-30
                  policy: deny
                  protocol: tcp
                  srcPort: '1,33'
                - dstPort: any
                  policy: allow
                  protocol: any
                  srcPort: any
            properties:
              description:
                description: Description of the adaptive policy ACL
                type: string
              ipVersion:
                description: >-
                  IP version of adpative policy ACL. One of: 'any', 'ipv4' or
                  'ipv6'
                enum:
                  - any
                  - ipv4
                  - ipv6
                type: string
              name:
                description: Name of the adaptive policy ACL
                type: string
              rules:
                description: >-
                  An ordered array of the adaptive policy ACL rules. An empty
                  array will clear the rules.
                items:
                  properties:
                    dstPort:
                      description: >-
                        Destination port. Must be in the format of single port:
                        '1', port list: '1,2' or port range: '1-10', and in the
                        range of 1-65535, or 'any'. Default is 'any'.
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule.'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any').
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcPort:
                      description: >-
                        Source port. Must be in the format of single port: '1',
                        port list: '1,2' or port range: '1-10', and in the range
                        of 1-65535, or 'any'. Default is 'any'.
                      type: string
                  required:
                    - policy
                    - protocol
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates an adaptive policy ACL
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
  '/organizations/{organizationId}/adaptivePolicy/settings':
    get:
      description: Returns global adaptive policy settings in an organization
      operationId: getOrganizationAdaptivePolicySettings
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns global adaptive policy settings in an organization
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - settings
    put:
      consumes:
        - application/json
      description: Update global adaptive policy settings
      operationId: updateOrganizationAdaptivePolicySettings
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              enabledNetworks:
                - L_11111111
                - L_22222222
                - N_33333333
                - L_44444444
            properties:
              enabledNetworks:
                description: List of network IDs with adaptive policy enabled
                items:
                  type: string
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update global adaptive policy settings
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - settings
  '/organizations/{organizationId}/admins':
    get:
      description: List the dashboard administrators in this organization
      operationId: getOrganizationAdmins
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the dashboard administrators in this organization
      tags:
        - organizations
        - configure
        - admins
    post:
      consumes:
        - application/json
      description: Create a new dashboard administrator
      operationId: createOrganizationAdmin
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              email: miles@meraki.com
              name: Miles Meraki
              orgAccess: none
              tags:
                - access: read-only
                  tag: west
            properties:
              authenticationMethod:
                description: >-
                  The method of authentication the user will use to sign in to
                  the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX
                  Sign-On'. The default is Email authentication
                enum:
                  - Email
                  - Cisco SecureX Sign-On
                type: string
              email:
                description: >-
                  The email of the dashboard administrator. This attribute can
                  not be updated.
                type: string
              name:
                description: The name of the dashboard administrator
                type: string
              networks:
                description: >-
                  The list of networks that the dashboard administrator has
                  privileges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the dashboard administrator on the
                        network. Can be one of 'full', 'read-only',
                        'guest-ambassador' or 'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    id:
                      description: The network ID
                      type: string
                  required:
                    - id
                    - access
                  type: object
                type: array
              orgAccess:
                description: >-
                  The privilege of the dashboard administrator on the
                  organization. Can be one of 'full', 'read-only', 'enterprise'
                  or 'none'
                enum:
                  - full
                  - read-only
                  - enterprise
                  - none
                type: string
              tags:
                description: >-
                  The list of tags that the dashboard administrator has
                  privileges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the dashboard administrator on the tag.
                        Can be one of 'full', 'read-only', 'guest-ambassador' or
                        'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    tag:
                      description: The name of the tag
                      type: string
                  required:
                    - tag
                    - access
                  type: object
                type: array
            required:
              - email
              - name
              - orgAccess
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a new dashboard administrator
      tags:
        - organizations
        - configure
        - admins
  '/organizations/{organizationId}/admins/{adminId}':
    delete:
      description: Revoke all access for a dashboard administrator within this organization
      operationId: deleteOrganizationAdmin
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: adminId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Revoke all access for a dashboard administrator within this organization
      tags:
        - organizations
        - configure
        - admins
    put:
      consumes:
        - application/json
      description: Update an administrator
      operationId: updateOrganizationAdmin
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: adminId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: Miles Meraki
              orgAccess: none
              tags:
                - access: read-only
                  tag: west
            properties:
              name:
                description: The name of the dashboard administrator
                type: string
              networks:
                description: >-
                  The list of networks that the dashboard administrator has
                  privileges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the dashboard administrator on the
                        network. Can be one of 'full', 'read-only',
                        'guest-ambassador' or 'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    id:
                      description: The network ID
                      type: string
                  required:
                    - id
                    - access
                  type: object
                type: array
              orgAccess:
                description: >-
                  The privilege of the dashboard administrator on the
                  organization. Can be one of 'full', 'read-only', 'enterprise'
                  or 'none'
                enum:
                  - full
                  - read-only
                  - enterprise
                  - none
                type: string
              tags:
                description: >-
                  The list of tags that the dashboard administrator has
                  privileges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the dashboard administrator on the tag.
                        Can be one of 'full', 'read-only', 'guest-ambassador' or
                        'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    tag:
                      description: The name of the tag
                      type: string
                  required:
                    - tag
                    - access
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update an administrator
      tags:
        - organizations
        - configure
        - admins
  '/organizations/{organizationId}/apiRequests':
    get:
      description: List the API requests made by an organization
      operationId: getOrganizationApiRequests
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 31 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 50.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: Filter the results by the ID of the admin who made the API requests
          in: query
          name: adminId
          type: string
        - description: Filter the results by the path of the API requests
          in: query
          name: path
          type: string
        - description: >-
            Filter the results by the method of the API requests (must be 'GET',
            'PUT', 'POST' or 'DELETE')
          in: query
          name: method
          type: string
        - description: Filter the results by the response code of the API requests
          in: query
          name: responseCode
          type: integer
        - description: Filter the results by the IP address of the originating API request
          in: query
          name: sourceIp
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the API requests made by an organization
      tags:
        - organizations
        - monitor
        - apiRequests
  '/organizations/{organizationId}/apiRequests/overview':
    get:
      description: Return an aggregated overview of API requests data
      operationId: getOrganizationApiRequestsOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 31 days.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an aggregated overview of API requests data
      tags:
        - organizations
        - monitor
        - apiRequests
        - overview
  '/organizations/{organizationId}/appliance/security/events':
    get:
      description: List the security events for an organization
      operationId: getOrganizationApplianceSecurityEvents
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. Data is gathered after
            the specified t0 value. The maximum lookback period is 365 days from
            today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 365
            days after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 365 days. The
            default is 31 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 100.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            Sorted order of security events based on event detection time. Order
            options are 'ascending' or 'descending'. Default is ascending order.
          enum:
            - ascending
            - descending
          in: query
          name: sortOrder
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the security events for an organization
      tags:
        - appliance
        - monitor
        - security
        - events
  '/organizations/{organizationId}/appliance/security/intrusion':
    get:
      description: Returns all supported intrusion settings for an organization
      operationId: getOrganizationApplianceSecurityIntrusion
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns all supported intrusion settings for an organization
      tags:
        - appliance
        - configure
        - security
        - intrusion
    put:
      consumes:
        - application/json
      description: Sets supported intrusion settings for an organization
      operationId: updateOrganizationApplianceSecurityIntrusion
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              allowedRules:
                - message: SQL sa login failed
                  ruleId: 'meraki:intrusion/snort/GID/01/SID/688'
                - message: >-
                    MALWARE-OTHER Trackware myway speedbar runtime detection -
                    switch engines
                  ruleId: 'meraki:intrusion/snort/GID/01/SID/5805'
            properties:
              allowedRules:
                description: Sets a list of specific SNORT signatures to allow
                items:
                  properties:
                    message:
                      description: >-
                        Message is optional and is ignored on a PUT call. It is
                        allowed in order for PUT to be compatible with GET
                      type: string
                    ruleId:
                      description: >-
                        A rule identifier of the format
                        meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid
                        can be obtained from either
                        https://www.snort.org/rule-docs or as ruleIds from the
                        security events in /organization/[orgId]/securityEvents
                      type: string
                  required:
                    - ruleId
                  type: object
                type: array
            required:
              - allowedRules
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Sets supported intrusion settings for an organization
      tags:
        - appliance
        - configure
        - security
        - intrusion
  '/organizations/{organizationId}/appliance/uplink/statuses':
    get:
      description: >-
        List the uplink status of every Meraki MX and Z series appliances in the
        organization
      operationId: getOrganizationApplianceUplinkStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - collectionFormat: csv
          description: >-
            A list of network IDs. The returned devices will be filtered to only
            include these networks.
          in: query
          items:
            type: string
          name: networkIds
          type: array
        - collectionFormat: csv
          description: >-
            A list of serial numbers. The returned devices will be filtered to
            only include these serials.
          in: query
          items:
            type: string
          name: serials
          type: array
        - collectionFormat: csv
          description: >-
            A list of ICCIDs. The returned devices will be filtered to only
            include these ICCIDs.
          in: query
          items:
            type: string
          name: iccids
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        List the uplink status of every Meraki MX and Z series appliances in the
        organization
      tags:
        - appliance
        - monitor
        - uplink
        - statuses
  '/organizations/{organizationId}/appliance/vpn/stats':
    get:
      description: Show VPN history stat for networks in an organization
      operationId: getOrganizationApplianceVpnStats
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            300. Default is 300.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - collectionFormat: csv
          description: >-
            A list of Meraki network IDs to filter results to contain only
            specified networks. E.g.:
            networkIds[]=N_12345678&networkIds[]=L_3456
          in: query
          items:
            type: string
          name: networkIds
          type: array
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 31 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Show VPN history stat for networks in an organization
      tags:
        - appliance
        - monitor
        - vpn
        - stats
  '/organizations/{organizationId}/appliance/vpn/statuses':
    get:
      description: Show VPN status for networks in an organization
      operationId: getOrganizationApplianceVpnStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            300. Default is 300.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - collectionFormat: csv
          description: >-
            A list of Meraki network IDs to filter results to contain only
            specified networks. E.g.:
            networkIds[]=N_12345678&networkIds[]=L_3456
          in: query
          items:
            type: string
          name: networkIds
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Show VPN status for networks in an organization
      tags:
        - appliance
        - monitor
        - vpn
        - statuses
  '/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers':
    get:
      description: Return the third party VPN peers for an organization
      operationId: getOrganizationApplianceVpnThirdPartyVPNPeers
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the third party VPN peers for an organization
      tags:
        - appliance
        - configure
        - vpn
        - thirdPartyVPNPeers
    put:
      consumes:
        - application/json
      description: Update the third party VPN peers for an organization
      operationId: updateOrganizationApplianceVpnThirdPartyVPNPeers
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              peers:
                - ikeVersion: '2'
                  ipsecPolicies:
                    childAuthAlgo:
                      - sha1
                    childCipherAlgo:
                      - aes128
                    childLifetime: 28800
                    childPfsGroup:
                      - disabled
                    ikeAuthAlgo:
                      - sha1
                    ikeCipherAlgo:
                      - tripledes
                    ikeDiffieHellmanGroup:
                      - group2
                    ikeLifetime: 28800
                    ikePrfAlgo:
                      - prfsha1
                  name: My peer 1
                  networkTags:
                    - all
                  privateSubnets:
                    - 192.168.1.0/24
                    - 192.168.128.0/24
                  publicIp: 123.123.123.1
                  secret: asdf1234
                - ikeVersion: '1'
                  ipsecPoliciesPreset: default
                  name: My peer 2
                  networkTags:
                    - none
                  privateSubnets:
                    - 192.168.2.0/24
                    - 192.168.129.0/24
                  publicIp: 123.123.123.2
                  remoteId: miles@meraki.com
                  secret: asdf56785678567856785678
            properties:
              peers:
                description: The list of VPN peers
                items:
                  properties:
                    ikeVersion:
                      default: '1'
                      description: >-
                        [optional] The IKE version to be used for the IPsec VPN
                        peer configuration. Defaults to '1' when omitted.
                      enum:
                        - '1'
                        - '2'
                      type: string
                    ipsecPolicies:
                      description: >-
                        Custom IPSec policies for the VPN peer. If not included
                        and a preset has not been chosen, the default preset for
                        IPSec policies will be used.
                      properties:
                        childAuthAlgo:
                          description: >-
                            This is the authentication algorithms to be used in
                            Phase 2. The value should be an array with one of
                            the following algorithms: 'sha256', 'sha1', 'md5'
                          items:
                            type: string
                          type: array
                        childCipherAlgo:
                          description: >-
                            This is the cipher algorithms to be used in Phase 2.
                            The value should be an array with one or more of the
                            following algorithms: 'aes256', 'aes192', 'aes128',
                            'tripledes', 'des', 'null'
                          items:
                            type: string
                          type: array
                        childLifetime:
                          description: The lifetime of the Phase 2 SA in seconds.
                          type: integer
                        childPfsGroup:
                          description: >-
                            This is the Diffie-Hellman group to be used for
                            Perfect Forward Secrecy in Phase 2. The value should
                            be an array with one of the following values:
                            'disabled','group14', 'group5', 'group2', 'group1'
                          items:
                            type: string
                          type: array
                        ikeAuthAlgo:
                          description: >-
                            This is the authentication algorithm to be used in
                            Phase 1. The value should be an array with one of
                            the following algorithms: 'sha256', 'sha1', 'md5'
                          items:
                            type: string
                          type: array
                        ikeCipherAlgo:
                          description: >-
                            This is the cipher algorithm to be used in Phase 1.
                            The value should be an array with one of the
                            following algorithms: 'aes256', 'aes192', 'aes128',
                            'tripledes', 'des'
                          items:
                            type: string
                          type: array
                        ikeDiffieHellmanGroup:
                          description: >-
                            This is the Diffie-Hellman group to be used in Phase
                            1. The value should be an array with one of the
                            following algorithms: 'group14', 'group5', 'group2',
                            'group1'
                          items:
                            type: string
                          type: array
                        ikeLifetime:
                          description: The lifetime of the Phase 1 SA in seconds.
                          type: integer
                        ikePrfAlgo:
                          description: >-
                            [optional] This is the pseudo-random function to be
                            used in IKE_SA. The value should be an array with
                            one of the following algorithms: 'prfsha256',
                            'prfsha1', 'prfmd5', 'default'. The 'default' option
                            can be used to default to the Authentication
                            algorithm.
                          items:
                            enum:
                              - prfsha256
                              - prfsha1
                              - prfmd5
                              - default
                            type: string
                          type: array
                      type: object
                    ipsecPoliciesPreset:
                      description: >-
                        One of the following available presets: 'default',
                        'aws', 'azure'. If this is provided, the 'ipsecPolicies'
                        parameter is ignored.
                      type: string
                    name:
                      description: The name of the VPN peer
                      type: string
                    networkTags:
                      description: >-
                        A list of network tags that will connect with this peer.
                        Use ['all'] for all networks. Use ['none'] for no
                        networks. If not included, the default is ['all'].
                      items:
                        type: string
                      type: array
                    privateSubnets:
                      description: The list of the private subnets of the VPN peer
                      items:
                        type: string
                      type: array
                    publicIp:
                      description: The public IP of the VPN peer
                      type: string
                    remoteId:
                      description: >-
                        [optional] The remote ID is used to identify the
                        connecting VPN peer. This can either be a valid IPv4
                        Address, FQDN or User FQDN.
                      type: string
                    secret:
                      description: The shared secret with the VPN peer
                      type: string
                  required:
                    - name
                    - publicIp
                    - privateSubnets
                    - secret
                  type: object
                type: array
            required:
              - peers
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the third party VPN peers for an organization
      tags:
        - appliance
        - configure
        - vpn
        - thirdPartyVPNPeers
  '/organizations/{organizationId}/appliance/vpn/vpnFirewallRules':
    get:
      description: Return the firewall rules for an organization's site-to-site VPN
      operationId: getOrganizationApplianceVpnVpnFirewallRules
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the firewall rules for an organization's site-to-site VPN
      tags:
        - appliance
        - configure
        - vpn
        - vpnFirewallRules
    put:
      consumes:
        - application/json
      description: Update the firewall rules of an organization's site-to-site VPN
      operationId: updateOrganizationApplianceVpnVpnFirewallRules
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: 443
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: >-
                  An ordered array of the firewall rules (not including the
                  default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: >-
                        Comma-separated list of destination IP address(es) (in
                        IP or CIDR notation) or 'any' (FQDN not supported)
                      type: string
                    destPort:
                      description: >-
                        Comma-separated list of destination port(s) (integer in
                        the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any')
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcCidr:
                      description: >-
                        Comma-separated list of source IP address(es) (in IP or
                        CIDR notation), or 'any' (FQDN not supported)
                      type: string
                    srcPort:
                      description: >-
                        Comma-separated list of source port(s) (integer in the
                        range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: >-
                        Log this rule to syslog (true or false, boolean value) -
                        only applicable if a syslog has been configured
                        (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
              syslogDefaultRule:
                description: >-
                  Log the special default rule (boolean value - enable only if
                  you've configured a syslog server) (optional)
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the firewall rules of an organization's site-to-site VPN
      tags:
        - appliance
        - configure
        - vpn
        - vpnFirewallRules
  '/organizations/{organizationId}/brandingPolicies':
    get:
      description: List the branding policies of an organization
      operationId: getOrganizationBrandingPolicies
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the branding policies of an organization
      tags:
        - organizations
        - configure
        - brandingPolicies
    post:
      consumes:
        - application/json
      description: Add a new branding policy to an organization
      operationId: createOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              adminSettings:
                appliesTo: All admins of networks...
                values:
                  - N_1234
                  - L_5678
              brandingPolicyId: '456'
              enabled: true
              helpSettings:
                apiDocsSubtab: default or inherit
                casesSubtab: hide
                ciscoMerakiProductDocumentation: show
                communitySubtab: show
                dataProtectionRequestsSubtab: default or inherit
                firewallInfoSubtab: hide
                getHelpSubtab: default or inherit
                getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                hardwareReplacementsSubtab: hide
                helpTab: show
                newFeaturesSubtab: show
                smForums: hide
                supportContactInfo: show
                universalSearchKnowledgeBaseSearch: hide
              name: My Branding Policy
            properties:
              adminSettings:
                description: >-
                  Settings for describing which kinds of admins this policy
                  applies to.
                properties:
                  appliesTo:
                    description: >-
                      Which kinds of admins this policy applies to. Can be one
                      of 'All organization admins', 'All enterprise admins',
                      'All network admins', 'All admins of networks...', 'All
                      admins of networks tagged...', 'Specific admins...', 'All
                      admins' or 'All SAML admins'.
                    enum:
                      - All organization admins
                      - All enterprise admins
                      - All network admins
                      - All admins of networks...
                      - All admins of networks tagged...
                      - Specific admins...
                      - All admins
                      - All SAML admins
                    type: string
                  values:
                    description: |2
                          If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                          entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                          networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                          specify an array of tag names.
                    items:
                      type: string
                    type: array
                type: object
              enabled:
                description: Boolean indicating whether this policy is enabled.
                type: boolean
              helpSettings:
                description: |2-
                      Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                      'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                      the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                      Dashboard; see the documentation for each property to see the allowed values.
                   Each property defaults to 'default or inherit' when not provided.
                properties:
                  apiDocsSubtab:
                    description: |2
                          The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                          'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  casesSubtab:
                    description: |2
                          The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                          of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  ciscoMerakiProductDocumentation:
                    description: |2
                          The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                    type: string
                  communitySubtab:
                    description: |2
                          The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  dataProtectionRequestsSubtab:
                    description: |2
                          The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                          be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  firewallInfoSubtab:
                    description: |2
                          The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                          listed. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  getHelpSubtab:
                    description: |2
                          The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                          that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                          and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  getHelpSubtabKnowledgeBaseSearch:
                    description: |2
                          The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                    type: string
                  hardwareReplacementsSubtab:
                    description: |2
                          The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                          'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  helpTab:
                    description: |2
                          The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                          customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  newFeaturesSubtab:
                    description: |2
                          The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  smForums:
                    description: |2
                          The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                          organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  supportContactInfo:
                    description: |2
                          The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                    type: string
                  universalSearchKnowledgeBaseSearch:
                    description: |2
                          The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                          whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                type: object
              name:
                description: Name of the Dashboard branding policy.
                type: string
            required:
              - name
              - enabled
              - adminSettings
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a new branding policy to an organization
      tags:
        - organizations
        - configure
        - brandingPolicies
  '/organizations/{organizationId}/brandingPolicies/priorities':
    get:
      description: >-
        Return the branding policy IDs of an organization in priority order. IDs
        are ordered in ascending order of priority (IDs later in the array have
        higher priority).
      operationId: getOrganizationBrandingPoliciesPriorities
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the branding policy IDs of an organization in priority order
      tags:
        - organizations
        - configure
        - brandingPolicies
        - priorities
    put:
      consumes:
        - application/json
      description: Update the priority ordering of an organization's branding policies.
      operationId: updateOrganizationBrandingPoliciesPriorities
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              brandingPolicyIds:
                - '123'
                - '456'
                - '789'
            properties:
              brandingPolicyIds:
                description: >-
                  A list of branding policy IDs arranged in ascending priority
                  order (IDs later in the array have higher priority).
                items:
                  type: string
                type: array
            required:
              - brandingPolicyIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the priority ordering of an organization's branding policies.
      tags:
        - organizations
        - configure
        - brandingPolicies
        - priorities
  '/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}':
    delete:
      description: Delete a branding policy
      operationId: deleteOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: brandingPolicyId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a branding policy
      tags:
        - organizations
        - configure
        - brandingPolicies
    get:
      description: Return a branding policy
      operationId: getOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: brandingPolicyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a branding policy
      tags:
        - organizations
        - configure
        - brandingPolicies
    put:
      consumes:
        - application/json
      description: Update a branding policy
      operationId: updateOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: brandingPolicyId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              adminSettings:
                appliesTo: All admins of networks...
                values:
                  - N_1234
                  - L_5678
              brandingPolicyId: '456'
              enabled: true
              helpSettings:
                apiDocsSubtab: default or inherit
                casesSubtab: hide
                ciscoMerakiProductDocumentation: show
                communitySubtab: show
                dataProtectionRequestsSubtab: default or inherit
                firewallInfoSubtab: hide
                getHelpSubtab: default or inherit
                getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                hardwareReplacementsSubtab: hide
                helpTab: show
                newFeaturesSubtab: show
                smForums: hide
                supportContactInfo: show
                universalSearchKnowledgeBaseSearch: hide
              name: My Branding Policy
            properties:
              adminSettings:
                description: >-
                  Settings for describing which kinds of admins this policy
                  applies to.
                properties:
                  appliesTo:
                    description: >-
                      Which kinds of admins this policy applies to. Can be one
                      of 'All organization admins', 'All enterprise admins',
                      'All network admins', 'All admins of networks...', 'All
                      admins of networks tagged...', 'Specific admins...', 'All
                      admins' or 'All SAML admins'.
                    enum:
                      - All organization admins
                      - All enterprise admins
                      - All network admins
                      - All admins of networks...
                      - All admins of networks tagged...
                      - Specific admins...
                      - All admins
                      - All SAML admins
                    type: string
                  values:
                    description: |2
                          If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                          entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                          networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                          specify an array of tag names.
                    items:
                      type: string
                    type: array
                type: object
              enabled:
                description: Boolean indicating whether this policy is enabled.
                type: boolean
              helpSettings:
                description: |2
                      Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                      'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                      the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                      Dashboard; see the documentation for each property to see the allowed values.
                properties:
                  apiDocsSubtab:
                    description: |2
                          The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                          'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  casesSubtab:
                    description: |2
                          The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                          of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  ciscoMerakiProductDocumentation:
                    description: |2
                          The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                    type: string
                  communitySubtab:
                    description: |2
                          The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  dataProtectionRequestsSubtab:
                    description: |2
                          The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                          be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  firewallInfoSubtab:
                    description: |2
                          The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                          listed. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  getHelpSubtab:
                    description: |2
                          The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                          that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                          and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  getHelpSubtabKnowledgeBaseSearch:
                    description: |2
                          The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                    type: string
                  hardwareReplacementsSubtab:
                    description: |2
                          The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                          'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  helpTab:
                    description: |2
                          The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                          customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  newFeaturesSubtab:
                    description: |2
                          The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  smForums:
                    description: |2
                          The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                          organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                  supportContactInfo:
                    description: |2
                          The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                    type: string
                  universalSearchKnowledgeBaseSearch:
                    description: |2
                          The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                          whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                    enum:
                      - default or inherit
                      - hide
                      - show
                    type: string
                type: object
              name:
                description: Name of the Dashboard branding policy.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a branding policy
      tags:
        - organizations
        - configure
        - brandingPolicies
  '/organizations/{organizationId}/camera/onboarding/statuses':
    get:
      description: Fetch onboarding status of cameras
      operationId: getOrganizationCameraOnboardingStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - collectionFormat: csv
          description: >-
            A list of serial numbers. The returned cameras will be filtered to
            only include these serials.
          in: query
          items:
            type: string
          name: serials
          type: array
        - collectionFormat: csv
          description: >-
            A list of network IDs. The returned cameras will be filtered to only
            include these networks.
          in: query
          items:
            type: string
          name: networkIds
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Fetch onboarding status of cameras
      tags:
        - camera
        - configure
        - onboarding
        - statuses
    put:
      consumes:
        - application/json
      description: Notify that credential handoff to camera has completed
      operationId: updateOrganizationCameraOnboardingStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              serial:
                description: Serial of camera
                type: string
              wirelessCredentialsSent:
                description: Note whether credentials were sent successfully
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Notify that credential handoff to camera has completed
      tags:
        - camera
        - configure
        - onboarding
        - statuses
  '/organizations/{organizationId}/cellularGateway/uplink/statuses':
    get:
      description: >-
        List the uplink status of every Meraki MG cellular gateway in the
        organization
      operationId: getOrganizationCellularGatewayUplinkStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - collectionFormat: csv
          description: >-
            A list of network IDs. The returned devices will be filtered to only
            include these networks.
          in: query
          items:
            type: string
          name: networkIds
          type: array
        - collectionFormat: csv
          description: >-
            A list of serial numbers. The returned devices will be filtered to
            only include these serials.
          in: query
          items:
            type: string
          name: serials
          type: array
        - collectionFormat: csv
          description: >-
            A list of ICCIDs. The returned devices will be filtered to only
            include these ICCIDs.
          in: query
          items:
            type: string
          name: iccids
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        List the uplink status of every Meraki MG cellular gateway in the
        organization
      tags:
        - cellularGateway
        - monitor
        - uplink
        - statuses
  '/organizations/{organizationId}/claim':
    post:
      consumes:
        - application/json
      description: >-
        Claim a list of devices, licenses, and/or orders into an organization.
        When claiming by order, all devices and licenses in the order will be
        claimed; licenses will be added to the organization and devices will be
        placed in the organization's inventory.
      operationId: claimIntoOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              licenses:
                - key: Z2XXXXXXXXXX
                  mode: addDevices
              orders:
                - 4CXXXXXXX
              serials:
                - Q234-ABCD-5678
            properties:
              licenses:
                description: The licenses that should be claimed
                items:
                  properties:
                    key:
                      description: The key of the license
                      type: string
                    mode:
                      description: >-
                        Either 'renew' or 'addDevices'. 'addDevices' will
                        increase the license limit, while 'renew' will extend
                        the amount of time until expiration. Defaults to
                        'addDevices'. All licenses must be claimed with the same
                        mode, and at most one renewal can be claimed at a time.
                        This parameter is legacy and does not apply to
                        organizations with per-device licensing enabled.
                      enum:
                        - addDevices
                        - renew
                      type: string
                  required:
                    - key
                  type: object
                type: array
              orders:
                description: The numbers of the orders that should be claimed
                items:
                  type: string
                type: array
              serials:
                description: The serials of the devices that should be claimed
                items:
                  type: string
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: 'Claim a list of devices, licenses, and/or orders into an organization'
      tags:
        - organizations
        - configure
  '/organizations/{organizationId}/clone':
    post:
      consumes:
        - application/json
      description: Create a new organization by cloning the addressed organization
      operationId: cloneOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: My organization
            properties:
              name:
                description: The name of the new organization
                type: string
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a new organization by cloning the addressed organization
      tags:
        - organizations
        - configure
  '/organizations/{organizationId}/configTemplates':
    get:
      description: List the configuration templates for this organization
      operationId: getOrganizationConfigTemplates
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the configuration templates for this organization
      tags:
        - organizations
        - configure
        - configTemplates
    post:
      consumes:
        - application/json
      description: Create a new configuration template
      operationId: createOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: My config template
              timeZone: America/Los_Angeles
            properties:
              copyFromNetworkId:
                description: >-
                  The ID of the network or config template to copy configuration
                  from
                type: string
              name:
                description: The name of the configuration template
                type: string
              timeZone:
                description: >-
                  The timezone of the configuration template. For a list of
                  allowed timezones, please see the 'TZ' column in the table in
                  <a target='_blank'
                  href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                  article</a>. Not applicable if copying from existing network
                  or template
                type: string
            required:
              - name
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a new configuration template
      tags:
        - organizations
        - configure
        - configTemplates
  '/organizations/{organizationId}/configTemplates/{configTemplateId}':
    delete:
      description: Remove a configuration template
      operationId: deleteOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Remove a configuration template
      tags:
        - organizations
        - configure
        - configTemplates
    get:
      description: Return a single configuration template
      operationId: getOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a single configuration template
      tags:
        - organizations
        - configure
        - configTemplates
    put:
      consumes:
        - application/json
      description: Update a configuration template
      operationId: updateOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              name: My config template
              timeZone: America/Los_Angeles
            properties:
              name:
                description: The name of the configuration template
                type: string
              timeZone:
                description: >-
                  The timezone of the configuration template. For a list of
                  allowed timezones, please see the 'TZ' column in the table in
                  <a target='_blank'
                  href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                  article.</a>
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a configuration template
      tags:
        - organizations
        - configure
        - configTemplates
  '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles':
    get:
      description: List the switch profiles for your switch template configuration
      operationId: getOrganizationConfigTemplateSwitchProfiles
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the switch profiles for your switch template configuration
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
  '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports':
    get:
      description: Return all the ports of a switch profile
      operationId: getOrganizationConfigTemplateSwitchProfilePorts
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
        - in: path
          name: profileId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return all the ports of a switch profile
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
        - ports
  '/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}':
    get:
      description: Return a switch profile port
      operationId: getOrganizationConfigTemplateSwitchProfilePort
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
        - in: path
          name: profileId
          required: true
          type: string
        - in: path
          name: portId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a switch profile port
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
        - ports
    put:
      consumes:
        - application/json
      description: Update a switch profile port
      operationId: updateOrganizationConfigTemplateSwitchProfilePort
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: configTemplateId
          required: true
          type: string
        - in: path
          name: profileId
          required: true
          type: string
        - in: path
          name: portId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              accessPolicyType: Sticky MAC allow list
              enabled: true
              isolationEnabled: false
              linkNegotiation: Auto negotiate
              name: My switch port
              poeEnabled: true
              portScheduleId: '1234'
              rstpEnabled: true
              stickyMacAllowList:
                - '34:56:fe:ce:8e:b0'
                - '34:56:fe:ce:8e:b1'
              stickyMacAllowListLimit: 5
              stormControlEnabled: true
              stpGuard: disabled
              tags:
                - tag1
                - tag2
              type: access
              udld: Alert only
              vlan: 10
              voiceVlan: 20
            properties:
              accessPolicyNumber:
                description: >-
                  The number of a custom access policy to configure on the
                  switch profile port. Only applicable when 'accessPolicyType'
                  is 'Custom access policy'
                type: integer
              accessPolicyType:
                description: >-
                  The type of the access policy of the switch profile port. Only
                  applicable to access ports. Can be one of 'Open', 'Custom
                  access policy', 'MAC allow list' or 'Sticky MAC allow list'
                enum:
                  - Open
                  - Custom access policy
                  - MAC allow list
                  - Sticky MAC allow list
                type: string
              allowedVlans:
                description: >-
                  The VLANs allowed on the switch profile port. Only applicable
                  to trunk ports
                type: string
              enabled:
                description: The status of the switch profile port
                type: boolean
              flexibleStackingEnabled:
                description: >-
                  For supported switches (e.g. MS420/MS425), whether or not the
                  port has flexible stacking enabled.
                type: boolean
              isolationEnabled:
                description: The isolation status of the switch profile port
                type: boolean
              linkNegotiation:
                description: The link speed for the switch profile port
                type: string
              macAllowList:
                description: >-
                  Only devices with MAC addresses specified in this list will
                  have access to this port. Up to 20 MAC addresses can be
                  defined. Only applicable when 'accessPolicyType' is 'MAC allow
                  list'
                items:
                  type: string
                type: array
              name:
                description: The name of the switch profile port
                type: string
              poeEnabled:
                description: The PoE status of the switch profile port
                type: boolean
              portScheduleId:
                description: >-
                  The ID of the port schedule. A value of null will clear the
                  port schedule.
                type: string
              rstpEnabled:
                description: The rapid spanning tree protocol status
                type: boolean
              stickyMacAllowList:
                description: >-
                  The initial list of MAC addresses for sticky Mac allow list.
                  Only applicable when 'accessPolicyType' is 'Sticky MAC allow
                  list'
                items:
                  type: string
                type: array
              stickyMacAllowListLimit:
                description: >-
                  The maximum number of MAC addresses for sticky MAC allow list.
                  Only applicable when 'accessPolicyType' is 'Sticky MAC allow
                  list'
                type: integer
              stormControlEnabled:
                description: The storm control status of the switch profile port
                type: boolean
              stpGuard:
                description: >-
                  The state of the STP guard ('disabled', 'root guard', 'bpdu
                  guard' or 'loop guard')
                enum:
                  - disabled
                  - root guard
                  - bpdu guard
                  - loop guard
                type: string
              tags:
                description: The list of tags of the switch profile port
                items:
                  type: string
                type: array
              type:
                description: The type of the switch profile port ('trunk' or 'access')
                enum:
                  - trunk
                  - access
                type: string
              udld:
                description: >-
                  The action to take when Unidirectional Link is detected (Alert
                  only, Enforce). Default configuration is Alert only.
                enum:
                  - Alert only
                  - Enforce
                type: string
              vlan:
                description: >-
                  The VLAN of the switch profile port. A null value will clear
                  the value set for trunk ports.
                type: integer
              voiceVlan:
                description: >-
                  The voice VLAN of the switch profile port. Only applicable to
                  access ports
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a switch profile port
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
        - ports
  '/organizations/{organizationId}/configurationChanges':
    get:
      description: View the Change Log for your organization
      operationId: getOrganizationConfigurationChanges
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 365 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 365
            days after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 365 days. The
            default is 365 days.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            5000. Default is 5000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: Filters on the given network
          in: query
          name: networkId
          type: string
        - description: Filters on the given Admin
          in: query
          name: adminId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: View the Change Log for your organization
      tags:
        - organizations
        - monitor
        - configurationChanges
  '/organizations/{organizationId}/devices':
    get:
      description: List the devices in an organization
      operationId: getOrganizationDevices
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            Filter results by whether or not the device's configuration has been
            updated after the given timestamp
          in: query
          name: configurationUpdatedAfter
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the devices in an organization
      tags:
        - organizations
        - configure
        - devices
  '/organizations/{organizationId}/devices/statuses':
    get:
      description: List the status of every Meraki device in the organization
      operationId: getOrganizationDevicesStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: components
          in: query
          name: components
          type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the status of every Meraki device in the organization
      tags:
        - organizations
        - monitor
        - devices
        - statuses
  '/organizations/{organizationId}/devices/uplinksLossAndLatency':
    get:
      description: >-
        Return the uplink loss and latency for every MX in the organization from
        at latest 2 minutes ago
      operationId: getOrganizationDevicesUplinksLossAndLatency
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 365 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 5
            minutes after t0. The latest possible time that t1 can be is 2
            minutes into the past.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 5 minutes. The
            default is 5 minutes.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            Optional filter for a specific WAN uplink. Valid uplinks are wan1,
            wan2, cellular. Default will return all uplinks.
          enum:
            - wan1
            - wan2
            - cellular
          in: query
          name: uplink
          type: string
        - description: >-
            Optional filter for a specific destination IP. Default will return
            all destination IPs.
          in: query
          name: ip
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the uplink loss and latency for every MX in the organization from
        at latest 2 minutes ago
      tags:
        - organizations
        - monitor
        - devices
        - uplinksLossAndLatency
  '/organizations/{organizationId}/insight/applications':
    get:
      description: List all Insight tracked applications
      operationId: getOrganizationInsightApplications
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List all Insight tracked applications
      tags:
        - insight
        - configure
        - applications
  '/organizations/{organizationId}/insight/monitoredMediaServers':
    get:
      description: >-
        List the monitored media servers for this organization. Only valid for
        organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServers
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the monitored media servers for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
    post:
      consumes:
        - application/json
      description: >-
        Add a media server to be monitored for this organization. Only valid for
        organizations with Meraki Insight.
      operationId: createOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              address: 123.123.123.1
              bestEffortMonitoringEnabled: true
              name: Sample VoIP Provider
            properties:
              address:
                description: >-
                  The IP address (IPv4 only) or hostname of the media server to
                  monitor
                type: string
              bestEffortMonitoringEnabled:
                description: >-
                  Indicates that if the media server doesn't respond to ICMP
                  pings, the nearest hop will be used in its stead.
                type: boolean
              name:
                description: The name of the VoIP provider
                type: string
            required:
              - name
              - address
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Add a media server to be monitored for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
  '/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}':
    delete:
      description: >-
        Delete a monitored media server from this organization. Only valid for
        organizations with Meraki Insight.
      operationId: deleteOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: monitoredMediaServerId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Delete a monitored media server from this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
    get:
      description: >-
        Return a monitored media server for this organization. Only valid for
        organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: monitoredMediaServerId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a monitored media server for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
    put:
      consumes:
        - application/json
      description: >-
        Update a monitored media server for this organization. Only valid for
        organizations with Meraki Insight.
      operationId: updateOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: monitoredMediaServerId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              address: 123.123.123.1
              bestEffortMonitoringEnabled: true
              name: Sample VoIP Provider
            properties:
              address:
                description: >-
                  The IP address (IPv4 only) or hostname of the media server to
                  monitor
                type: string
              bestEffortMonitoringEnabled:
                description: >-
                  Indicates that if the media server doesn't respond to ICMP
                  pings, the nearest hop will be used in its stead.
                type: boolean
              name:
                description: The name of the VoIP provider
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a monitored media server for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
  '/organizations/{organizationId}/inventoryDevices':
    get:
      description: Return the device inventory for an organization
      operationId: getOrganizationInventoryDevices
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: >-
            Filter results by used or unused inventory. Accepted values are
            "used" or "unused".
          enum:
            - used
            - unused
          in: query
          name: usedState
          type: string
        - description: >-
            Search for devices in inventory based on serial number, mac address,
            or model.
          in: query
          name: search
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Return the device inventory for an organization
      tags:
        - organizations
        - configure
        - inventoryDevices
  '/organizations/{organizationId}/inventoryDevices/{serial}':
    get:
      description: Return a single device from the inventory of an organization
      operationId: getOrganizationInventoryDevice
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: serial
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a single device from the inventory of an organization
      tags:
        - organizations
        - configure
        - inventoryDevices
  '/organizations/{organizationId}/licenses':
    get:
      description: List the licenses for an organization
      operationId: getOrganizationLicenses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: Filter the licenses to those assigned to a particular device
          in: query
          name: deviceSerial
          type: string
        - description: Filter the licenses to those assigned in a particular network
          in: query
          name: networkId
          type: string
        - description: >-
            Filter the licenses to those in a particular state. Can be one of
            'active', 'expired', 'expiring', 'unused', 'unusedActive' or
            'recentlyQueued'
          enum:
            - active
            - expired
            - expiring
            - unused
            - unusedActive
            - recentlyQueued
          in: query
          name: state
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the licenses for an organization
      tags:
        - organizations
        - configure
        - licenses
  '/organizations/{organizationId}/licenses/assignSeats':
    post:
      consumes:
        - application/json
      description: >-
        Assign SM seats to a network. This will increase the managed SM device
        limit of the network
      operationId: assignOrganizationLicensesSeats
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              licenseId: '1234'
              networkId: N_24329156
              seatCount: 20
            properties:
              licenseId:
                description: The ID of the SM license to assign seats from
                type: string
              networkId:
                description: The ID of the SM network to assign the seats to
                type: string
              seatCount:
                description: >-
                  The number of seats to assign to the SM network. Must be less
                  than or equal to the total number of seats of the license
                type: integer
            required:
              - licenseId
              - networkId
              - seatCount
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Assign SM seats to a network
      tags:
        - organizations
        - configure
        - licenses
  '/organizations/{organizationId}/licenses/move':
    post:
      consumes:
        - application/json
      description: >-
        Move licenses to another organization. This will also move any devices
        that the licenses are assigned to
      operationId: moveOrganizationLicenses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              destOrganizationId: '2930418'
              licenseIds:
                - '123'
                - '456'
            properties:
              destOrganizationId:
                description: The ID of the organization to move the licenses to
                type: string
              licenseIds:
                description: A list of IDs of licenses to move to the new organization
                items:
                  type: string
                type: array
            required:
              - destOrganizationId
              - licenseIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Move licenses to another organization
      tags:
        - organizations
        - configure
        - licenses
  '/organizations/{organizationId}/licenses/moveSeats':
    post:
      consumes:
        - application/json
      description: Move SM seats to another organization
      operationId: moveOrganizationLicensesSeats
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              destOrganizationId: '2930418'
              licenseId: '1234'
              seatCount: 20
            properties:
              destOrganizationId:
                description: The ID of the organization to move the SM seats to
                type: string
              licenseId:
                description: The ID of the SM license to move the seats from
                type: string
              seatCount:
                description: >-
                  The number of seats to move to the new organization. Must be
                  less than or equal to the total number of seats of the license
                type: integer
            required:
              - destOrganizationId
              - licenseId
              - seatCount
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Move SM seats to another organization
      tags:
        - organizations
        - configure
        - licenses
  '/organizations/{organizationId}/licenses/overview':
    get:
      description: Return an overview of the license state for an organization
      operationId: getOrganizationLicensesOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return an overview of the license state for an organization
      tags:
        - organizations
        - monitor
        - licenses
        - overview
  '/organizations/{organizationId}/licenses/renewSeats':
    post:
      consumes:
        - application/json
      description: >-
        Renew SM seats of a license. This will extend the license expiration
        date of managed SM devices covered by this license
      operationId: renewOrganizationLicensesSeats
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              licenseIdToRenew: '123'
              unusedLicenseId: '1234'
            properties:
              licenseIdToRenew:
                description: >-
                  The ID of the SM license to renew. This license must already
                  be assigned to an SM network
                type: string
              unusedLicenseId:
                description: >-
                  The SM license to use to renew the seats on
                  'licenseIdToRenew'. This license must have at least as many
                  seats available as there are seats on 'licenseIdToRenew'
                type: string
            required:
              - licenseIdToRenew
              - unusedLicenseId
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Renew SM seats of a license
      tags:
        - organizations
        - configure
        - licenses
  '/organizations/{organizationId}/licenses/{licenseId}':
    get:
      description: Display a license
      operationId: getOrganizationLicense
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: licenseId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Display a license
      tags:
        - organizations
        - configure
        - licenses
    put:
      consumes:
        - application/json
      description: Update a license
      operationId: updateOrganizationLicense
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: licenseId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              deviceSerial:
                description: >-
                  The serial number of the device to assign this license to. Set
                  this to null to unassign the license. If a different license
                  is already active on the device, this parameter will control
                  queueing/dequeuing this license.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a license
      tags:
        - organizations
        - configure
        - licenses
  '/organizations/{organizationId}/loginSecurity':
    get:
      description: Returns the login security settings for an organization.
      operationId: getOrganizationLoginSecurity
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the login security settings for an organization.
      tags:
        - organizations
        - configure
        - loginSecurity
    put:
      consumes:
        - application/json
      description: Update the login security settings for an organization
      operationId: updateOrganizationLoginSecurity
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example: {}
            properties:
              accountLockoutAttempts:
                description: >-
                  Number of consecutive failed login attempts after which users'
                  accounts will be locked.
                type: integer
              enforceAccountLockout:
                description: >-
                  Boolean indicating whether users' Dashboard accounts will be
                  locked out after a specified number of consecutive failed
                  login attempts.
                type: boolean
              enforceDifferentPasswords:
                description: >-
                  Boolean indicating whether users, when setting a new password,
                  are forced to choose a new password that is different from any
                  past passwords.
                type: boolean
              enforceIdleTimeout:
                description: >-
                  Boolean indicating whether users will be logged out after
                  being idle for the specified number of minutes.
                type: boolean
              enforceLoginIpRanges:
                description: >-
                  Boolean indicating whether organization will restrict access
                  to Dashboard (including the API) from certain IP addresses.
                type: boolean
              enforcePasswordExpiration:
                description: >-
                  Boolean indicating whether users are forced to change their
                  password every X number of days.
                type: boolean
              enforceStrongPasswords:
                description: >-
                  Boolean indicating whether users will be forced to choose
                  strong passwords for their accounts. Strong passwords are at
                  least 8 characters that contain 3 of the following: number,
                  uppercase letter, lowercase letter, and symbol
                type: boolean
              enforceTwoFactorAuth:
                description: >-
                  Boolean indicating whether users in this organization will be
                  required to use an extra verification code when logging in to
                  Dashboard. This code will be sent to their mobile phone via
                  SMS, or can be generated by the Google Authenticator
                  application.
                type: boolean
              idleTimeoutMinutes:
                description: >-
                  Number of minutes users can remain idle before being logged
                  out of their accounts.
                type: integer
              loginIpRanges:
                description: >-
                  List of acceptable IP ranges. Entries can be single IP
                  addresses, IP address ranges, and CIDR subnets.
                items:
                  type: string
                type: array
              numDifferentPasswords:
                description: >-
                  Number of recent passwords that new password must be distinct
                  from.
                type: integer
              passwordExpirationDays:
                description: >-
                  Number of days after which users will be forced to change
                  their password.
                type: integer
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the login security settings for an organization
      tags:
        - organizations
        - configure
        - loginSecurity
  '/organizations/{organizationId}/networks':
    get:
      description: List the networks that the user has privileges on in an organization
      operationId: getOrganizationNetworks
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            An optional parameter that is the ID of a config template. Will
            return all networks bound to that template.
          in: query
          name: configTemplateId
          type: string
        - collectionFormat: csv
          description: >-
            An optional parameter to filter networks by tags. The filtering is
            case-sensitive. If tags are included, 'tagsFilterType' should also
            be included (see below).
          in: query
          items:
            type: string
          name: tags
          type: array
        - description: >-
            An optional parameter of value 'withAnyTags' or 'withAllTags' to
            indicate whether to return networks which contain ANY or ALL of the
            included tags. If no type is included, 'withAnyTags' will be
            selected.
          enum:
            - withAnyTags
            - withAllTags
          in: query
          name: tagsFilterType
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            100000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: List the networks that the user has privileges on in an organization
      tags:
        - organizations
        - configure
        - networks
    post:
      consumes:
        - application/json
      description: Create a network
      operationId: createOrganizationNetwork
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: Long Island Office
              notes: Combined network for Long Island Office
              productTypes:
                - appliance
                - switch
                - camera
              tags:
                - tag1
                - tag2
              timeZone: America/Los_Angeles
            properties:
              copyFromNetworkId:
                description: >-
                  The ID of the network to copy configuration from. Other
                  provided parameters will override the copied configuration,
                  except type which must match this network's type exactly.
                type: string
              name:
                description: The name of the new network
                type: string
              notes:
                description: >-
                  Add any notes or additional information about this network
                  here.
                type: string
              productTypes:
                description: >-
                  The product type(s) of the new network. Valid types are
                  wireless, appliance, switch, systemsManager, camera,
                  cellularGateway, sensor, environmental. If more than one type
                  is included, the network will be a combined network.
                items:
                  enum:
                    - wireless
                    - appliance
                    - switch
                    - systemsManager
                    - camera
                    - cellularGateway
                    - sensor
                    - environmental
                  type: string
                type: array
              tags:
                description: A list of tags to be applied to the network
                items:
                  type: string
                type: array
              timeZone:
                description: >-
                  The timezone of the network. For a list of allowed timezones,
                  please see the 'TZ' column in the table in <a target='_blank'
                  href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                  article.</a>
                type: string
            required:
              - name
              - productTypes
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a network
      tags:
        - organizations
        - configure
        - networks
  '/organizations/{organizationId}/networks/combine':
    post:
      consumes:
        - application/json
      description: Combine multiple networks into a single network
      operationId: combineOrganizationNetworks
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              name: Long Island Office
              networkIds:
                - N_1234
                - N_5678
            properties:
              enrollmentString:
                description: >-
                  A unique identifier which can be used for device enrollment or
                  easy access through the Meraki SM Registration page or the
                  Self Service Portal. Please note that changing this field may
                  cause existing bookmarks to break. All networks that are part
                  of this combined network will have their enrollment string
                  appended by '-network_type'. If left empty, all exisitng
                  enrollment strings will be deleted.
                type: string
              name:
                description: The name of the combined network
                type: string
              networkIds:
                description: >-
                  A list of the network IDs that will be combined. If an ID of a
                  combined network is included in this list, the other networks
                  in the list will be grouped into that network
                items:
                  type: string
                type: array
            required:
              - name
              - networkIds
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Combine multiple networks into a single network
      tags:
        - organizations
        - configure
        - networks
  '/organizations/{organizationId}/openapiSpec':
    get:
      description: >-
        Return the OpenAPI 2.0 Specification of the organization's API
        documentation in JSON
      operationId: getOrganizationOpenapiSpec
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Return the OpenAPI 2.0 Specification of the organization's API
        documentation in JSON
      tags:
        - organizations
        - monitor
        - openapiSpec
  '/organizations/{organizationId}/saml':
    get:
      description: Returns the SAML SSO enabled settings for an organization.
      operationId: getOrganizationSaml
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Returns the SAML SSO enabled settings for an organization.
      tags:
        - organizations
        - configure
        - saml
    put:
      consumes:
        - application/json
      description: Updates the SAML SSO enabled settings for an organization.
      operationId: updateOrganizationSaml
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              enabled: true
            properties:
              enabled:
                description: Boolean for updating SAML SSO enabled settings.
                type: boolean
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Updates the SAML SSO enabled settings for an organization.
      tags:
        - organizations
        - configure
        - saml
  '/organizations/{organizationId}/saml/idps':
    get:
      description: List the SAML IdPs in your organization.
      operationId: getOrganizationSamlIdps
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the SAML IdPs in your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
    post:
      consumes:
        - application/json
      description: Create a SAML IdP for your organization.
      operationId: createOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              idpId: ab0c1de23Fg
              sloLogoutUrl: 'https://somewhere.com'
              x509certSha1Fingerprint: '00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99'
            properties:
              sloLogoutUrl:
                description: Dashboard will redirect users to this URL when they sign out.
                type: string
              x509certSha1Fingerprint:
                description: >-
                  Fingerprint (SHA1) of the SAML certificate provided by your
                  Identity Provider (IdP). This will be used for encryption /
                  validation.
                type: string
            required:
              - x509certSha1Fingerprint
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a SAML IdP for your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
  '/organizations/{organizationId}/saml/idps/{idpId}':
    delete:
      description: Remove a SAML IdP in your organization.
      operationId: deleteOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: idpId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Remove a SAML IdP in your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
    get:
      description: Get a SAML IdP from your organization.
      operationId: getOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: idpId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get a SAML IdP from your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
    put:
      consumes:
        - application/json
      description: Update a SAML IdP in your organization
      operationId: updateOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: idpId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              idpId: ab0c1de23Fg
              sloLogoutUrl: 'https://somewhere.com'
              x509certSha1Fingerprint: '00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99'
            properties:
              sloLogoutUrl:
                description: Dashboard will redirect users to this URL when they sign out.
                type: string
              x509certSha1Fingerprint:
                description: >-
                  Fingerprint (SHA1) of the SAML certificate provided by your
                  Identity Provider (IdP). This will be used for encryption /
                  validation.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a SAML IdP in your organization
      tags:
        - organizations
        - configure
        - saml
        - idps
  '/organizations/{organizationId}/samlRoles':
    get:
      description: List the SAML roles for this organization
      operationId: getOrganizationSamlRoles
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the SAML roles for this organization
      tags:
        - organizations
        - configure
        - samlRoles
    post:
      consumes:
        - application/json
      description: Create a SAML role
      operationId: createOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              networks:
                - access: full
                  id: N_1234
              orgAccess: none
              role: myrole
              tags:
                - access: read-only
                  tag: west
            properties:
              networks:
                description: >-
                  The list of networks that the SAML administrator has
                  privileges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the SAML administrator on the network.
                        Can be one of 'full', 'read-only', 'guest-ambassador' or
                        'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    id:
                      description: The network ID
                      type: string
                  required:
                    - id
                    - access
                  type: object
                type: array
              orgAccess:
                description: >-
                  The privilege of the SAML administrator on the organization.
                  Can be one of 'none', 'read-only' or 'full'
                enum:
                  - none
                  - read-only
                  - full
                type: string
              role:
                description: The role of the SAML administrator
                type: string
              tags:
                description: The list of tags that the SAML administrator has privleges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the SAML administrator on the tag. Can
                        be one of 'full', 'read-only', 'guest-ambassador' or
                        'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    tag:
                      description: The name of the tag
                      type: string
                  required:
                    - tag
                    - access
                  type: object
                type: array
            required:
              - role
              - orgAccess
            type: object
      produces:
        - application/json
      responses:
        '201':
          description: Successful operation
          schema:
            type: object
      summary: Create a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
  '/organizations/{organizationId}/samlRoles/{samlRoleId}':
    delete:
      description: Remove a SAML role
      operationId: deleteOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: samlRoleId
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
      summary: Remove a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
    get:
      description: Return a SAML role
      operationId: getOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: samlRoleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
    put:
      consumes:
        - application/json
      description: Update a SAML role
      operationId: updateOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: samlRoleId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              networks:
                - access: full
                  id: N_1234
              orgAccess: none
              tags:
                - access: read-only
                  tag: west
            properties:
              networks:
                description: >-
                  The list of networks that the SAML administrator has
                  privileges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the SAML administrator on the network.
                        Can be one of 'full', 'read-only', 'guest-ambassador' or
                        'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    id:
                      description: The network ID
                      type: string
                  required:
                    - id
                    - access
                  type: object
                type: array
              orgAccess:
                description: >-
                  The privilege of the SAML administrator on the organization.
                  Can be one of 'none', 'read-only' or 'full'
                enum:
                  - none
                  - read-only
                  - full
                type: string
              role:
                description: The role of the SAML administrator
                type: string
              tags:
                description: The list of tags that the SAML administrator has privleges on
                items:
                  properties:
                    access:
                      description: >-
                        The privilege of the SAML administrator on the tag. Can
                        be one of 'full', 'read-only', 'guest-ambassador' or
                        'monitor-only'
                      enum:
                        - full
                        - read-only
                        - guest-ambassador
                        - monitor-only
                      type: string
                    tag:
                      description: The name of the tag
                      type: string
                  required:
                    - tag
                    - access
                  type: object
                type: array
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
  '/organizations/{organizationId}/sm/apnsCert':
    get:
      description: Get the organization's APNS certificate
      operationId: getOrganizationSmApnsCert
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Get the organization's APNS certificate
      tags:
        - sm
        - configure
        - apnsCert
  '/organizations/{organizationId}/sm/vppAccounts':
    get:
      description: List the VPP accounts in the organization
      operationId: getOrganizationSmVppAccounts
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: List the VPP accounts in the organization
      tags:
        - sm
        - configure
        - vppAccounts
  '/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}':
    get:
      description: >-
        Get a hash containing the unparsed token of the VPP account with the
        given ID
      operationId: getOrganizationSmVppAccount
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: path
          name: vppAccountId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Get a hash containing the unparsed token of the VPP account with the
        given ID
      tags:
        - sm
        - configure
        - vppAccounts
  '/organizations/{organizationId}/snmp':
    get:
      description: Return the SNMP settings for an organization
      operationId: getOrganizationSnmp
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return the SNMP settings for an organization
      tags:
        - organizations
        - configure
        - snmp
    put:
      consumes:
        - application/json
      description: Update the SNMP settings for an organization
      operationId: updateOrganizationSnmp
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          schema:
            example:
              peerIps:
                - 123.123.123.1
              v2cEnabled: false
              v3AuthMode: SHA
              v3Enabled: true
              v3PrivMode: AES128
            properties:
              peerIps:
                description: >-
                  The list of IPv4 addresses that are allowed to access the SNMP
                  server.
                items:
                  type: string
                type: array
              v2cEnabled:
                description: >-
                  Boolean indicating whether SNMP version 2c is enabled for the
                  organization.
                type: boolean
              v3AuthMode:
                description: >-
                  The SNMP version 3 authentication mode. Can be either 'MD5' or
                  'SHA'.
                enum:
                  - MD5
                  - SHA
                type: string
              v3AuthPass:
                description: >-
                  The SNMP version 3 authentication password. Must be at least 8
                  characters if specified.
                type: string
              v3Enabled:
                description: >-
                  Boolean indicating whether SNMP version 3 is enabled for the
                  organization.
                type: boolean
              v3PrivMode:
                description: >-
                  The SNMP version 3 privacy mode. Can be either 'DES' or
                  'AES128'.
                enum:
                  - DES
                  - AES128
                type: string
              v3PrivPass:
                description: >-
                  The SNMP version 3 privacy password. Must be at least 8
                  characters if specified.
                type: string
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Update the SNMP settings for an organization
      tags:
        - organizations
        - configure
        - snmp
  '/organizations/{organizationId}/switch/devices/clone':
    post:
      consumes:
        - application/json
      description: >-
        Clone port-level and some switch-level configuration settings from a
        source switch to one or more target switches. Cloned settings include:
        Aggregation Groups, Power Settings, Multicast Settings, MTU
        Configuration, STP Bridge priority, Port Mirroring
      operationId: cloneOrganizationSwitchDevices
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            example:
              sourceSerial: Q234-ABCD-5678
              targetSerials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
            properties:
              sourceSerial:
                description: >-
                  Serial number of the source switch (must be on a network not
                  bound to a template)
                type: string
              targetSerials:
                description: >-
                  Array of serial numbers of one or more target switches (must
                  be on a network not bound to a template)
                items:
                  type: string
                type: array
            required:
              - sourceSerial
              - targetSerials
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: >-
        Clone port-level and some switch-level configuration settings from a
        source switch to one or more target switches
      tags:
        - switch
        - configure
        - devices
  '/organizations/{organizationId}/uplinks/statuses':
    get:
      description: >-
        List the uplink status of every Meraki MX, MG and Z series devices in
        the organization
      operationId: getOrganizationUplinksStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 1000.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - collectionFormat: csv
          description: >-
            A list of network IDs. The returned devices will be filtered to only
            include these networks.
          in: query
          items:
            type: string
          name: networkIds
          type: array
        - collectionFormat: csv
          description: >-
            A list of serial numbers. The returned devices will be filtered to
            only include these serials.
          in: query
          items:
            type: string
          name: serials
          type: array
        - collectionFormat: csv
          description: >-
            A list of ICCIDs. The returned devices will be filtered to only
            include these ICCIDs.
          in: query
          items:
            type: string
          name: iccids
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: >-
        List the uplink status of every Meraki MX, MG and Z series devices in
        the organization
      tags:
        - organizations
        - monitor
        - uplinks
        - statuses
  '/organizations/{organizationId}/webhooks/alertTypes':
    get:
      description: Return a list of alert types to be used with managing webhook alerts
      operationId: getOrganizationWebhooksAlertTypes
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
      summary: Return a list of alert types to be used with managing webhook alerts
      tags:
        - organizations
        - monitor
        - webhooks
        - alertTypes
  '/organizations/{organizationId}/webhooks/logs':
    get:
      description: Return the log of webhook POSTs sent
      operationId: getOrganizationWebhooksLogs
      parameters:
        - in: path
          name: organizationId
          required: true
          type: string
        - description: >-
            The beginning of the timespan for the data. The maximum lookback
            period is 90 days from today.
          in: query
          name: t0
          type: string
        - description: >-
            The end of the timespan for the data. t1 can be a maximum of 31 days
            after t0.
          in: query
          name: t1
          type: string
        - description: >-
            The timespan for which the information will be fetched. If
            specifying timespan, do not specify parameters t0 and t1. The value
            must be in seconds and be less than or equal to 31 days. The default
            is 1 day.
          format: float
          in: query
          name: timespan
          type: number
        - description: >-
            The number of entries per page returned. Acceptable range is 3 -
            1000. Default is 50.
          in: query
          name: perPage
          type: integer
        - description: >-
            A token used by the server to indicate the start of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: startingAfter
          type: string
        - description: >-
            A token used by the server to indicate the end of the page. Often
            this is a timestamp or an ID but it is not limited to those. This
            parameter should not be defined by client applications. The link for
            the first, last, prev, or next page in the HTTP Link header should
            define it.
          in: query
          name: endingBefore
          type: string
        - description: The URL the webhook was sent to
          in: query
          name: url
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          headers:
            Link:
              description: >-
                A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              type: string
          schema:
            type: object
      summary: Return the log of webhook POSTs sent
      tags:
        - organizations
        - monitor
        - webhooks
        - logs
schemes:
  - https
security:
  - meraki_api_key: []
securityDefinitions:
  meraki_api_key:
    in: header
    name: X-Cisco-Meraki-API-Key
    type: apiKey
swagger: '2.0'
tags:
  - name: organizations
  - name: networks
  - name: devices
  - name: insight
  - name: wireless
  - name: camera
  - name: appliance
  - name: switch
  - name: cellularGateway
  - name: sm
  - name: accessControlLists
  - name: accessPolicies
  - name: acls
  - name: actionBatches
  - name: adaptivePolicy
  - name: admins
  - name: airMarshal
  - name: alertTypes
  - name: alerts
  - name: alternateManagementInterface
  - name: analytics
  - name: apiRequests
  - name: apnsCert
  - name: applicationCategories
  - name: applicationUsage
  - name: applications
  - name: bgp
  - name: billing
  - name: bluetooth
  - name: bluetoothClients
  - name: bonjourForwarding
  - name: brandingPolicies
  - name: bypassActivationLockAttempts
  - name: categories
  - name: cellularFirewallRules
  - name: cellularUsageHistory
  - name: certs
  - name: channelUtilization
  - name: channelUtilizationHistory
  - name: clientCountHistory
  - name: clients
  - name: configTemplates
  - name: configurationChanges
  - name: configure
  - name: connectionStats
  - name: connectivity
  - name: connectivityEvents
  - name: connectivityMonitoringDestinations
  - name: contentFiltering
  - name: customPerformanceClasses
  - name: dataRateHistory
  - name: desktopLogs
  - name: deviceCommandLogs
  - name: deviceProfiles
  - name: deviceTypeGroupPolicies
  - name: dhcp
  - name: dhcpServerPolicy
  - name: dscpTaggingOptions
  - name: dscpToCosMappings
  - name: eapOverride
  - name: eventTypes
  - name: events
  - name: failedConnections
  - name: fields
  - name: firewall
  - name: firewalledServices
  - name: firmwareUpgrades
  - name: floorPlans
  - name: groupPolicies
  - name: healthByTime
  - name: history
  - name: hotspot20
  - name: httpServers
  - name: identityPsks
  - name: idps
  - name: inboundFirewallRules
  - name: interfaces
  - name: intrusion
  - name: inventoryDevices
  - name: l3FirewallRules
  - name: l7FirewallRules
  - name: lan
  - name: latencyHistory
  - name: latencyStats
  - name: licenses
  - name: linkAggregations
  - name: live
  - name: liveTools
  - name: lldpCdp
  - name: loginSecurity
  - name: logs
  - name: lossAndLatencyHistory
  - name: malware
  - name: managementInterface
  - name: merakiAuthUsers
  - name: meshStatuses
  - name: monitor
  - name: monitoredMediaServers
  - name: mqttBrokers
  - name: mtu
  - name: multicast
  - name: netflow
  - name: networkAdapters
  - name: networkHealth
  - name: objectDetectionModels
  - name: onboarding
  - name: oneToManyNatRules
  - name: oneToOneNatRules
  - name: openapiSpec
  - name: order
  - name: ospf
  - name: overview
  - name: packets
  - name: performance
  - name: performanceHistory
  - name: pii
  - name: piiKeys
  - name: policy
  - name: portForwardingRules
  - name: portSchedules
  - name: ports
  - name: priorities
  - name: profiles
  - name: qosRules
  - name: qualityAndRetention
  - name: qualityRetentionProfiles
  - name: radio
  - name: recent
  - name: rendezvousPoints
  - name: requests
  - name: restrictions
  - name: rfProfiles
  - name: rollbacks
  - name: routing
  - name: rules
  - name: saml
  - name: samlRoles
  - name: schedules
  - name: security
  - name: securityCenters
  - name: sense
  - name: settings
  - name: signalQualityHistory
  - name: singleLan
  - name: siteToSiteVpn
  - name: smDevicesForKey
  - name: smOwnersForKey
  - name: snmp
  - name: softwares
  - name: splash
  - name: splashAuthorizationStatus
  - name: splashLoginAttempts
  - name: ssids
  - name: stacks
  - name: staticRoutes
  - name: stats
  - name: status
  - name: statuses
  - name: stormControl
  - name: stp
  - name: subnetPool
  - name: subnets
  - name: syslogServers
  - name: targetGroups
  - name: thirdPartyVPNPeers
  - name: traffic
  - name: trafficAnalysis
  - name: trafficHistory
  - name: trafficShaping
  - name: uplink
  - name: uplinkBandwidth
  - name: uplinkSelection
  - name: uplinks
  - name: uplinksLossAndLatency
  - name: usageHistories
  - name: usageHistory
  - name: userAccessDevices
  - name: users
  - name: video
  - name: videoLink
  - name: vlans
  - name: vpn
  - name: vpnFirewallRules
  - name: vppAccounts
  - name: warmSpare
  - name: webhookTests
  - name: webhooks
  - name: wirelessProfiles
  - name: wlanLists
  - name: zones
x-batchable-actions:
  - group: Alternate management interface
    operation: update
    resource: '/networks/{networkId}/switch/alternateManagementInterface'
    summary: Update the switch alternate management interface for the network
  - group: Bgp setting
    operation: update
    resource: '/networks/{networkId}/appliance/vpn/bgp'
    summary: Update a Hub BGP Configuration
  - group: Billing
    operation: update
    resource: '/networks/{networkId}/wireless/billing'
    summary: Update the billing settings
  - group: Bluetooth device setting
    operation: update
    resource: '/devices/{serial}/wireless/bluetooth/settings'
    summary: Update the bluetooth settings for a wireless device
  - group: Camera video settings
    operation: update
    resource: '/devices/{serial}/camera/video/settings'
    summary: Update video settings for the given camera
  - group: Camera wireless profile settings
    operation: update
    resource: '/devices/{serial}/camera/wirelessProfiles'
    summary: >-
      Assign wireless profiles to the given camera. Incremental updates are not
      supported, all profile assignment need to be supplied at once.
  - group: Cellular gateway connectivity monitoring destination
    operation: update
    resource: '/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations'
    summary: Update the connectivity testing destinations for an MG network
  - group: Cellular gateway device lan
    operation: update
    resource: '/devices/{serial}/cellularGateway/lan'
    summary: Update the LAN Settings for a single MG.
  - group: Cellular gateway dhcp setting
    operation: update
    resource: '/networks/{networkId}/cellularGateway/dhcp'
    summary: Update common DHCP settings of MGs
  - group: Cellular gateway port forwarding rules
    operation: update
    resource: '/devices/{serial}/cellularGateway/portForwardingRules'
    summary: Updates the port forwarding rules for a single MG.
  - group: Cellular gateway subnet pool
    operation: update
    resource: '/networks/{networkId}/cellularGateway/subnetPool'
    summary: Update the subnet pool and mask configuration for MGs in the network.
  - group: Cellular gateway uplink setting
    operation: update
    resource: '/networks/{networkId}/cellularGateway/uplink'
    summary: Updates the uplink settings for your MG network.
  - group: Client
    operation: provision
    resource: '/networks/{networkId}/clients'
    summary: >-
      Provisions a client with a name and policy. Clients can be provisioned
      before they associate to the network.
  - group: Config template
    operation: create
    resource: '/organizations/{organizationId}/configTemplates'
    summary: Create a new configuration template
  - group: Config template
    operation: update
    resource: '/organizations/{organizationId}/configTemplates/{configTemplateId}'
    summary: Update a configuration template
  - group: Custom performance class
    operation: create
    resource: '/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses'
    summary: Add a custom performance class for an MX network
  - group: Custom performance class
    operation: destroy
    resource: >-
      /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}
    summary: Delete a custom performance class from an MX network
  - group: Custom performance class
    operation: update
    resource: >-
      /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}
    summary: Update a custom performance class for an MX network
  - group: Device
    operation: update
    resource: '/devices/{serial}'
    summary: Update the attributes of a device
  - group: Device
    operation: claim
    resource: '/networks/{networkId}/devices'
    summary: >-
      Claim devices into a network. (Note: for recently claimed devices, it may
      take a few minutes for API requsts against that device to succeed)
  - group: Device
    operation: remove
    resource: '/networks/{networkId}/devices'
    summary: Remove a single device
  - group: Dhcp server policy
    operation: update
    resource: '/networks/{networkId}/switch/dhcpServerPolicy'
    summary: Update the DHCP server policy
  - group: Dscp cos mapping
    operation: update
    resource: '/networks/{networkId}/switch/dscpToCosMappings'
    summary: Update the DSCP to CoS mappings
  - group: Eap override
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/eapOverride'
    summary: Update the EAP overridden parameters for an SSID.
  - group: Firmware upgrade rollback
    operation: create
    resource: '/networks/{networkId}/firmwareUpgrades/rollbacks'
    summary: Rollback a Firmware Upgrade For A Network
  - group: Firmware upgrades update
    operation: update
    resource: '/networks/{networkId}/firmwareUpgrades'
    summary: Update firmware upgrade information for a network
  - group: Floor plan
    operation: destroy
    resource: '/networks/{networkId}/floorPlans/{floorPlanId}'
    summary: Destroy a floor plan
  - group: Floor plan
    operation: update
    resource: '/networks/{networkId}/floorPlans/{floorPlanId}'
    summary: Update a floor plan's geolocation and other meta data
  - group: Group policy
    operation: create
    resource: '/networks/{networkId}/groupPolicies'
    summary: Create a group policy
  - group: Group policy
    operation: destroy
    resource: '/networks/{networkId}/groupPolicies/{groupPolicyId}'
    summary: Delete a group policy
  - group: Group policy
    operation: update
    resource: '/networks/{networkId}/groupPolicies/{groupPolicyId}'
    summary: Update a group policy
  - group: Hotspot20
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/hotspot20'
    summary: Update the Hotspot 2.0 settings of an SSID
  - group: L3 interface
    operation: create
    resource: '/devices/{serial}/switch/routing/interfaces'
    summary: Create a layer 3 interface for a switch
  - group: L3 interface
    operation: destroy
    resource: '/devices/{serial}/switch/routing/interfaces/{interfaceId}'
    summary: Delete a layer 3 interface from the switch
  - group: L3 interface
    operation: update
    resource: '/devices/{serial}/switch/routing/interfaces/{interfaceId}'
    summary: Update a layer 3 interface for a switch
  - group: L3 interface dhcp
    operation: update
    resource: '/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp'
    summary: Update a layer 3 interface DHCP configuration for a switch
  - group: L3 static route
    operation: create
    resource: '/devices/{serial}/switch/routing/staticRoutes'
    summary: Create a layer 3 static route for a switch
  - group: L3 static route
    operation: destroy
    resource: '/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}'
    summary: Delete a layer 3 static route for a switch
  - group: L3 static route
    operation: update
    resource: '/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}'
    summary: Update a layer 3 static route for a switch
  - group: License
    operation: assignSeats
    resource: '/organizations/{organizationId}/licenses'
    summary: >-
      Assign SM seats to a network. This will increase the managed SM device
      limit of the network
  - group: License
    operation: move
    resource: '/organizations/{organizationId}/licenses'
    summary: >-
      Move licenses to another organization. This will also move any devices
      that the licenses are assigned to
  - group: License
    operation: moveSeats
    resource: '/organizations/{organizationId}/licenses'
    summary: Move SM seats to another organization
  - group: License
    operation: renewSeats
    resource: '/organizations/{organizationId}/licenses'
    summary: >-
      Renew SM seats of a license. This will extend the license expiration date
      of managed SM devices covered by this license
  - group: License
    operation: update
    resource: '/organizations/{organizationId}/licenses/{licenseId}'
    summary: Update a license
  - group: Link aggregation
    operation: create
    resource: '/networks/{networkId}/switch/linkAggregations'
    summary: Create a link aggregation group
  - group: Link aggregation
    operation: destroy
    resource: '/networks/{networkId}/switch/linkAggregations/{linkAggregationId}'
    summary: Split a link aggregation group into separate ports
  - group: Link aggregation
    operation: update
    resource: '/networks/{networkId}/switch/linkAggregations/{linkAggregationId}'
    summary: Update a link aggregation group
  - group: MTU configuration
    operation: update
    resource: '/networks/{networkId}/switch/mtu'
    summary: Update the MTU configuration
  - group: MX VLAN settings
    operation: update
    resource: '/networks/{networkId}/appliance/vlans/settings'
    summary: Enable/Disable VLANs for the given network
  - group: MX connectivity monitoring destination
    operation: update
    resource: '/networks/{networkId}/appliance/connectivityMonitoringDestinations'
    summary: Update the connectivity testing destinations for an MX network
  - group: MX l7 firewall
    operation: update
    resource: '/networks/{networkId}/appliance/firewall/l7FirewallRules'
    summary: Update the MX L7 firewall rules for an MX network
  - group: MX port
    operation: update
    resource: '/networks/{networkId}/appliance/ports/{portId}'
    summary: Update the per-port VLAN settings for a single MX port.
  - group: MX uplink setting
    operation: update
    resource: '/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth'
    summary: Updates the uplink bandwidth settings for your MX network.
  - group: Management interface settings
    operation: update
    resource: '/devices/{serial}/managementInterface'
    summary: Update the management interface settings for a device
  - group: Meraki auth user
    operation: create
    resource: '/networks/{networkId}/merakiAuthUsers'
    summary: >-
      Authorize a user configured with Meraki Authentication for a network
      (currently supports 802.1X, splash guest, and client VPN users, and
      currently, organizations have a 50,000 user cap)
  - group: Meraki auth user
    operation: destroy
    resource: '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}'
    summary: >-
      Deauthorize a user. To reauthorize a user after deauthorizing them, POST
      to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN
      users can be deauthorized.)
  - group: Meraki auth user
    operation: update
    resource: '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}'
    summary: >-
      Update a user configured with Meraki Authentication (currently, 802.1X
      RADIUS, splash guest, and client VPN users can be updated)
  - group: Monitored media server
    operation: create
    resource: '/organizations/{organizationId}/insight/monitoredMediaServers'
    summary: >-
      Add a media server to be monitored for this organization. Only valid for
      organizations with Meraki Insight.
  - group: Monitored media server
    operation: destroy
    resource: >-
      /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}
    summary: >-
      Delete a monitored media server from this organization. Only valid for
      organizations with Meraki Insight.
  - group: Monitored media server
    operation: update
    resource: >-
      /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}
    summary: >-
      Update a monitored media server for this organization. Only valid for
      organizations with Meraki Insight.
  - group: Mqtt broker
    operation: create
    resource: '/networks/{networkId}/mqttBrokers'
    summary: Add an MQTT broker
  - group: Mqtt broker
    operation: destroy
    resource: '/networks/{networkId}/mqttBrokers/{mqttBrokerId}'
    summary: Delete an MQTT broker
  - group: Mqtt broker
    operation: update
    resource: '/networks/{networkId}/mqttBrokers/{mqttBrokerId}'
    summary: Update an MQTT broker
  - group: Multicast
    operation: update
    resource: '/networks/{networkId}/switch/routing/multicast'
    summary: Update multicast settings for a network
  - group: Network
    operation: bind
    resource: '/networks/{networkId}'
    summary: Bind a network to a template.
  - group: Network
    operation: destroy
    resource: '/networks/{networkId}'
    summary: Delete a network
  - group: Network
    operation: split
    resource: '/networks/{networkId}'
    summary: Split a combined network into individual networks for each type of device
  - group: Network
    operation: unbind
    resource: '/networks/{networkId}'
    summary: Unbind a network from a template.
  - group: Network
    operation: update
    resource: '/networks/{networkId}'
    summary: Update a network
  - group: Network
    operation: combine
    resource: '/organizations/{organizationId}/networks'
    summary: Combine multiple networks into a single network
  - group: Network
    operation: create
    resource: '/organizations/{organizationId}/networks'
    summary: Create a network
  - group: Network settings
    operation: update
    resource: '/networks/{networkId}/settings'
    summary: Update the settings for a network
  - group: Organization SAML IdP
    operation: create
    resource: '/organizations/{organizationId}/saml/idps'
    summary: Create a SAML IdP for your organization.
  - group: Organization SAML IdP
    operation: destroy
    resource: '/organizations/{organizationId}/saml/idps/{idpId}'
    summary: Remove a SAML IdP in your organization.
  - group: Organization SAML IdP
    operation: update
    resource: '/organizations/{organizationId}/saml/idps/{idpId}'
    summary: Update a SAML IdP in your organization
  - group: Organization login security settings
    operation: update
    resource: '/organizations/{organizationId}/loginSecurity'
    summary: Update the login security settings for an organization
  - group: Ospf routing
    operation: update
    resource: '/networks/{networkId}/switch/routing/ospf'
    summary: Update layer 3 OSPF routing configuration
  - group: Psk group
    operation: create
    resource: '/networks/{networkId}/wireless/ssids/{number}/identityPsks'
    summary: Create an Identity PSK
  - group: Psk group
    operation: destroy
    resource: '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}'
    summary: Delete an Identity PSK
  - group: Psk group
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}'
    summary: Update an Identity PSK
  - group: Qos rule
    operation: create
    resource: '/networks/{networkId}/switch/qosRules'
    summary: Add a quality of service rule
  - group: Qos rule
    operation: update_order
    resource: '/networks/{networkId}/switch/qosRules/order'
    summary: Update the order in which the rules should be processed by the switch
  - group: Qos rule
    operation: destroy
    resource: '/networks/{networkId}/switch/qosRules/{qosRuleId}'
    summary: Delete a quality of service rule
  - group: Qos rule
    operation: update
    resource: '/networks/{networkId}/switch/qosRules/{qosRuleId}'
    summary: Update a quality of service rule
  - group: Quality and retention setting
    operation: update
    resource: '/devices/{serial}/camera/qualityAndRetention'
    summary: Update quality and retention settings for the given camera
  - group: RF profile
    operation: create
    resource: '/networks/{networkId}/wireless/rfProfiles'
    summary: Creates new RF profile for this network
  - group: RF profile
    operation: destroy
    resource: '/networks/{networkId}/wireless/rfProfiles/{rfProfileId}'
    summary: Delete a RF Profile
  - group: RF profile
    operation: update
    resource: '/networks/{networkId}/wireless/rfProfiles/{rfProfileId}'
    summary: Updates specified RF profile for this network
  - group: Radio settings
    operation: update
    resource: '/devices/{serial}/wireless/radio/settings'
    summary: Update the radio settings of a device
  - group: Rendezvous point
    operation: create
    resource: '/networks/{networkId}/switch/routing/multicast/rendezvousPoints'
    summary: Create a multicast rendezvous point
  - group: Rendezvous point
    operation: destroy
    resource: >-
      /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}
    summary: Delete a multicast rendezvous point
  - group: Rendezvous point
    operation: update
    resource: >-
      /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}
    summary: Update a multicast rendezvous point
  - group: STP configuration
    operation: update
    resource: '/networks/{networkId}/switch/stp'
    summary: Updates STP settings
  - group: Sense setting
    operation: update
    resource: '/devices/{serial}/camera/sense'
    summary: Update sense settings for the given camera
  - group: Single lan
    operation: update
    resource: '/networks/{networkId}/appliance/singleLan'
    summary: Update single LAN configuration
  - group: Site to site vpn
    operation: update
    resource: '/networks/{networkId}/appliance/vpn/siteToSiteVpn'
    summary: >-
      Update the site-to-site VPN settings of a network. Only valid for MX
      networks in NAT mode.
  - group: Ssid
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}'
    summary: Update the attributes of an MR SSID
  - group: Ssid bonjour forwarding
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/bonjourForwarding'
    summary: Update the bonjour forwarding setting and rules for the SSID
  - group: Ssid device type group policies
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies'
    summary: Update the device type group policies for the SSID
  - group: Ssid outage schedule
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/schedules'
    summary: Update the outage schedule for the SSID
  - group: Ssid splash settings
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/splash/settings'
    summary: Modify the splash page settings for the given SSID
  - group: Ssid vpn
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/vpn'
    summary: Update the VPN settings for the SSID
  - group: Storm control
    operation: update
    resource: '/networks/{networkId}/switch/stormControl'
    summary: Update the storm control configuration for a switch network
  - group: Switch
    operation: clone
    resource: '/organizations/{organizationId}/switch/devices'
    summary: >-
      Clone port-level and some switch-level configuration settings from a
      source switch to one or more target switches. Cloned settings include:
      Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration,
      STP Bridge priority, Port Mirroring
  - group: Switch access policy
    operation: create
    resource: '/networks/{networkId}/switch/accessPolicies'
    summary: >-
      Create an access policy for a switch network. This endpoint only supports
      access policies with 'My RADIUS server' as authentication method.
  - group: Switch access policy
    operation: destroy
    resource: '/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}'
    summary: Delete an access policy for a switch network
  - group: Switch access policy
    operation: update
    resource: '/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}'
    summary: >-
      Update an access policy for a switch network. This endpoint only supports
      access policies with 'My RADIUS server' as authentication method.
  - group: Switch port
    operation: cycle
    resource: '/devices/{serial}/switch/ports'
    summary: Cycle a set of switch ports
  - group: Switch port
    operation: update
    resource: '/devices/{serial}/switch/ports/{portId}'
    summary: Update a switch port
  - group: Switch port schedule
    operation: update
    resource: '/networks/{networkId}/switch/portSchedules/{portScheduleId}'
    summary: Update a switch port schedule
  - group: Switch profile port
    operation: update
    resource: >-
      /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}
    summary: Update a switch profile port
  - group: Switch stacks l3 interface
    operation: create
    resource: '/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces'
    summary: Create a layer 3 interface for a switch stack
  - group: Switch stacks l3 interface
    operation: destroy
    resource: >-
      /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}
    summary: Delete a layer 3 interface from a switch stack
  - group: Switch stacks l3 interface
    operation: update
    resource: >-
      /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}
    summary: Update a layer 3 interface for a switch stack
  - group: Switch stacks l3 interface dhcp
    operation: update
    resource: >-
      /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp
    summary: Update a layer 3 interface DHCP configuration for a switch stack
  - group: Switch stacks l3 static route
    operation: create
    resource: '/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes'
    summary: Create a layer 3 static route for a switch stack
  - group: Switch stacks l3 static route
    operation: destroy
    resource: >-
      /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}
    summary: Delete a layer 3 static route for a switch stack
  - group: Switch stacks l3 static route
    operation: update
    resource: >-
      /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}
    summary: Update a layer 3 static route for a switch stack
  - group: Switch warm spare settings
    operation: update
    resource: '/devices/{serial}/switch/warmSpare'
    summary: >-
      Update warm spare configuration for a switch. The spare will use the same
      L3 configuration as the primary. Note that this will irreversibly destroy
      any existing L3 configuration on the spare.
  - group: Traffic shaping settings
    operation: update
    resource: '/networks/{networkId}/appliance/trafficShaping/rules'
    summary: Update the traffic shaping settings rules for an MX network
  - group: Traffic shaping settings
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules'
    summary: Update the traffic shaping settings for an SSID on an MR network
  - group: Uplink selection settings
    operation: update
    resource: '/networks/{networkId}/appliance/trafficShaping/uplinkSelection'
    summary: Update uplink selection settings for an MX network
  - group: User access device
    operation: destroy
    resource: '/networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}'
    summary: Delete a User Access Device
  - group: V1/adaptive policy acl
    operation: create
    resource: '/organizations/{organizationId}/adaptivePolicy/acls'
    summary: Creates new adaptive policy ACL
  - group: V1/adaptive policy acl
    operation: destroy
    resource: '/organizations/{organizationId}/adaptivePolicy/acls/{id}'
    summary: >-
      Deletes the specified adaptive policy ACL. Note this adaptive policy ACL
      will also be removed from policies using it.
  - group: V1/adaptive policy acl
    operation: update
    resource: '/organizations/{organizationId}/adaptivePolicy/acls/{id}'
    summary: Updates an adaptive policy ACL
  - group: V1/adaptive policy settings
    operation: update
    resource: '/organizations/{organizationId}/adaptivePolicy/settings'
    summary: Update global adaptive policy settings
  - group: VLAN
    operation: create
    resource: '/networks/{networkId}/appliance/vlans'
    summary: Add a VLAN
  - group: VLAN
    operation: destroy
    resource: '/networks/{networkId}/appliance/vlans/{vlanId}'
    summary: Delete a VLAN from a network
  - group: VLAN
    operation: update
    resource: '/networks/{networkId}/appliance/vlans/{vlanId}'
    summary: Update a VLAN
  - group: Warm spare
    operation: swap
    resource: '/networks/{networkId}/appliance/warmSpare'
    summary: Swap MX primary and warm spare appliances
  - group: Warm spare
    operation: update
    resource: '/networks/{networkId}/appliance/warmSpare'
    summary: Update MX warm spare settings
  - group: Wireless alternate management interface
    operation: update
    resource: '/networks/{networkId}/wireless/alternateManagementInterface'
    summary: Update alternate management interface and device static IP
  - group: Wireless l7 firewall
    operation: update
    resource: '/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules'
    summary: Update the L7 firewall rules of an SSID on an MR network
  - group: Wireless settings
    operation: update
    resource: '/networks/{networkId}/wireless/settings'
    summary: Update the wireless settings for a network
x-components:
  requestBodies:
    createDeviceSwitchRoutingStaticRouteCreatedeviceswitchroutingstaticroute:
      content:
        application/json:
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: >-
                  IP address of the next hop device to which the device sends
                  its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: >-
                  The subnet which is routed via this static route and should be
                  specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            required:
              - subnet
              - nextHopIp
            type: object
      required: true
    createNetworkSmTargetGroupCreatenetworksmtargetgroup:
      content:
        application/json:
          schema:
            example:
              name: My target group
              scope: none
              tags: '[]'
              type: devices
            properties:
              name:
                description: The name of this target group
                type: string
              scope:
                description: >-
                  The scope and tag options of the target group. Comma separated
                  values beginning with one of withAny, withAll, withoutAny,
                  withoutAll, all, none, followed by tags. Default to none if
                  empty.
                type: string
            type: object
    updateDeviceSwitchRoutingStaticRouteUpdatedeviceswitchroutingstaticroute:
      content:
        application/json:
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: >-
                  IP address of the next hop device to which the device sends
                  its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: >-
                  The subnet which is routed via this static route and should be
                  specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            type: object
    updateNetworkApplianceFirewallInboundFirewallRulesUpdatenetworkappliancefirewallinboundfirewallrules:
      content:
        application/json:
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: 443
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: >-
                  An ordered array of the firewall rules (not including the
                  default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: >-
                        Comma-separated list of destination IP address(es) (in
                        IP or CIDR notation), fully-qualified domain names
                        (FQDN) or 'any'
                      type: string
                    destPort:
                      description: >-
                        Comma-separated list of destination port(s) (integer in
                        the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: '''allow'' or ''deny'' traffic specified by this rule'
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: >-
                        The type of protocol (must be 'tcp', 'udp', 'icmp' or
                        'any')
                      enum:
                        - tcp
                        - udp
                        - icmp
                        - any
                      type: string
                    srcCidr:
                      description: >-
                        Comma-separated list of source IP address(es) (in IP or
                        CIDR notation), or 'any' (note: FQDN not supported for
                        source addresses)
                      type: string
                    srcPort:
                      description: >-
                        Comma-separated list of source port(s) (integer in the
                        range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: >-
                        Log this rule to syslog (true or false, boolean value) -
                        only applicable if a syslog has been configured
                        (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
              syslogDefaultRule:
                description: >-
                  Log the special default rule (boolean value - enable only if
                  you've configured a syslog server) (optional)
                type: boolean
            type: object

