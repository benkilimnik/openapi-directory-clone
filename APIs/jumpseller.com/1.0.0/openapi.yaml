basePath: /v1
definitions:
  AddProductCustomField:
    properties:
      field:
        $ref: '#/definitions/AddProductCustomFieldFields'
    type: object
  AddProductCustomFieldFields:
    properties:
      id:
        description: Unique identifier of the ProductCustomField (custom_field_id)
        format: int32
        type: integer
      value:
        description: The value for the ProductCustomField
        type: string
    type: object
  App:
    properties:
      apps:
        items:
          $ref: '#/definitions/AppFields'
        type: array
    type: object
  AppFields:
    properties:
      author:
        description: Author of the app
        type: string
      code:
        description: Code of the app
        type: string
      description:
        description: Description of the app
        type: string
      js:
        default: false
        description: True if the app is a jsapp
        type: boolean
      name:
        description: Name of the app
        type: string
      page:
        description: Page of the app
        type: string
    type: object
  Attachment:
    properties:
      attachment:
        $ref: '#/definitions/AttachmentFields'
    type: object
  AttachmentEdit:
    properties:
      attachment:
        $ref: '#/definitions/AttachmentEditFields'
    type: object
  AttachmentEditFields:
    properties:
      filename:
        description: Filename of the attachment (with file extensison)
        type: string
      url:
        description: 'Public accessible URL with the desired file contents. (LIMIT: 100MB)'
        type: string
    type: object
  AttachmentFields:
    properties:
      id:
        description: Unique identifier of the attachment
        format: int32
        type: integer
      url:
        description: Private URL of the attachment
        type: string
    type: object
  BadParams:
    properties:
      message:
        type: string
  BestSold:
    properties:
      count:
        description: Quantity sold.
        type: integer
      product_id:
        type: integer
        x-descriprtion: Product ID.
      product_name:
        type: string
        x-descriprtion: Product name.
      total:
        description: Total sold amount.
        format: float
        type: number
    type: object
  BillingAddress:
    properties:
      address:
        description: Address of the Customer's Billing Address
        type: string
      city:
        description: City of the Customer's Billing Address
        type: string
      country:
        description: Country code of the Customer's Billing Address (ISO 3166-1 alpha-2)
        type: string
      municipality:
        description: Municipality of the Customer's Billing Address
        type: string
      name:
        description: Name of the Customer's Billing Address
        type: string
      postal:
        description: Postal code of the Customer's Billing Address
        type: string
      region:
        description: >-
          Region code of the Customer's Billing Address (Use the FIPS standard -
          http://www.geonames.org/countries/)
        type: string
      surname:
        description: Surname of the Customer's Billing Address
        type: string
      taxid:
        description: Tax id of the Customer's Billing Address
        type: string
  Category:
    properties:
      category:
        $ref: '#/definitions/CategoryFields'
    type: object
  CategoryEdit:
    properties:
      category:
        $ref: '#/definitions/CategoryEditFields'
    type: object
  CategoryEditFields:
    properties:
      name:
        description: Name of the Category
        type: string
      parent_id:
        description: Unique identifier of the Parent Category
        format: int32
        type: integer
    type: object
  CategoryFields:
    properties:
      id:
        description: Unique identifier of the Category
        format: int32
        type: integer
      name:
        description: Name of the Category
        type: string
      parent_id:
        description: Unique identifier of the Parent Category
        format: int32
        type: integer
      permalink:
        description: Category unique URL path
        type: string
    type: object
  CheckoutCustomField:
    properties:
      checkout_custom_field:
        $ref: '#/definitions/CheckoutCustomFieldFields'
    type: object
  CheckoutCustomFieldEdit:
    properties:
      checkout_custom_field:
        $ref: '#/definitions/CheckoutCustomFieldEditFields'
    type: object
  CheckoutCustomFieldEditFields:
    properties:
      area:
        description: Area of the CheckoutCustomField
        enum:
          - contact
          - billing_shipping
          - other
        type: string
      custom_field_select_options:
        description: The values for the CheckoutCustomField selection
        items:
          type: string
        type: array
      deletable:
        default: false
        description: True if the CheckoutCustomField can be removed from the store
        type: boolean
      label:
        description: Label given to the CheckoutCustomField
        type: string
      position:
        description: Position of the CheckoutCustomField
        format: int32
        type: integer
      required:
        default: false
        description: True if the CheckoutCustomField is mandatory
        type: boolean
      type:
        description: Type of the CheckoutCustomField
        enum:
          - text
          - select
          - input
          - checkbox
          - date
        type: string
    type: object
  CheckoutCustomFieldFields:
    properties:
      area:
        description: Area of the CheckoutCustomField
        enum:
          - contact
          - billing_shipping
          - other
        type: string
      custom_field_select_options:
        description: The values for the CheckoutCustomField selection
        items:
          type: string
        type: array
      deletable:
        default: false
        description: True if the CheckoutCustomField can be removed from the store
        type: boolean
      id:
        description: Unique identifier of the CheckoutCustomField
        format: int32
        type: integer
      label:
        description: Label given to the CheckoutCustomField
        type: string
      position:
        description: Position of the CheckoutCustomField
        format: int32
        type: integer
      required:
        default: false
        description: True if the CheckoutCustomField is mandatory
        type: boolean
      type:
        description: Type of the CheckoutCustomField
        enum:
          - text
          - select
          - input
          - checkbox
        type: string
    type: object
  Count:
    properties:
      count:
        format: int32
        type: integer
  Country:
    properties:
      code:
        type: string
      name:
        type: string
  CountryOrders:
    properties:
      code:
        type: string
        x-descriprtion: Country code.
      count:
        description: Number of country orders.
        type: integer
      country:
        type: string
        x-descriprtion: Country name.
      orders:
        description: Orders per region.
        items:
          $ref: '#/definitions/RegionOrders'
        type: array
    type: object
  CustomField:
    properties:
      custom_field:
        $ref: '#/definitions/CustomFieldFields'
    type: object
  CustomFieldEdit:
    properties:
      custom_field:
        $ref: '#/definitions/CustomFieldEditFields'
    type: object
  CustomFieldEditFields:
    properties:
      label:
        description: Label given to the Custom Field
        type: string
      type:
        description: Type of the Custom Field
        enum:
          - text
          - selection
          - input
        type: string
      values:
        description: All the possible Values of the Custom Field (for type 'selection')
        items:
          type: string
        type: array
    type: object
  CustomFieldFields:
    properties:
      id:
        description: Unique identifier of the Custom Field
        format: int32
        type: integer
      label:
        description: Label given to the Custom Field
        type: string
      type:
        description: Type of the Custom Field
        enum:
          - text
          - selection
          - input
        type: string
      values:
        description: All the possible Values of the Custom Field (for type 'selection')
        items:
          type: string
        type: array
    type: object
  CustomFieldSelectOption:
    properties:
      custom_field_select_option:
        $ref: '#/definitions/CustomFieldSelectOptionFields'
    type: object
  CustomFieldSelectOptionEdit:
    properties:
      custom_field_select_option:
        $ref: '#/definitions/CustomFieldSelectOptionEditFields'
    type: object
  CustomFieldSelectOptionEditFields:
    properties:
      value:
        description: Value given to the Custom Field Select Option
        type: string
    type: object
  CustomFieldSelectOptionFields:
    properties:
      id:
        description: Unique identifier of the Custom Field Select Option
        format: int32
        type: integer
      value:
        description: Value given to the Custom Field Select Option
        type: string
    type: object
  Customer:
    properties:
      customer:
        $ref: '#/definitions/CustomerFields'
    type: object
  CustomerAdditionalField:
    properties:
      customer_additional_field:
        $ref: '#/definitions/CustomerAdditionalFieldFields'
    type: object
  CustomerAdditionalFieldEdit:
    properties:
      customer_additional_field:
        $ref: '#/definitions/CustomerAdditionalFieldEditFields'
    type: object
  CustomerAdditionalFieldEditFields:
    properties:
      checkout_custom_field_id:
        description: Unique identifier of the Checkout Custom Field
        format: int32
        type: integer
      value:
        description: Value of the Customer Additional Field
        type: string
    type: object
  CustomerAdditionalFieldFields:
    properties:
      area:
        description: Area of the Customer Additional Field
        type: string
      checkout_custom_field_id:
        description: Unique identifier of the Checkout Custom Field
        format: int32
        type: integer
      customer_id:
        description: Unique identifier of the Customer
        format: int32
        type: integer
      id:
        description: Unique identifier of the Customer Additional Field
        format: int32
        type: integer
      label:
        description: Label of the Customer Additional Field
        type: string
      value:
        description: Value of the Customer Additional Field
        type: string
    type: object
  CustomerCategory:
    properties:
      category:
        $ref: '#/definitions/CustomerCategoryFields'
    type: object
  CustomerCategoryEdit:
    properties:
      category:
        $ref: '#/definitions/CustomerCategoryEditFields'
    type: object
  CustomerCategoryEditFields:
    properties:
      name:
        description: Name of the CustomerCategory
        type: string
    type: object
  CustomerCategoryFields:
    properties:
      code:
        description: Code of the CustomerCategory
        type: string
      id:
        description: Unique identifier of the CustomerCategory
        format: int32
        type: integer
      name:
        description: Name of the CustomerCategory
        type: string
    type: object
  CustomerFields:
    properties:
      billing_address:
        $ref: '#/definitions/BillingAddress'
      customer_additional_fields:
        items:
          $ref: '#/definitions/CustomerAdditionalField'
        type: array
      customer_categories:
        items:
          $ref: '#/definitions/CustomerCategory'
        type: array
      email:
        description: Email of the Customer
        type: string
      id:
        description: Unique identifier of the Customer
        format: int32
        type: integer
      name:
        description: Name of the Customer
        type: string
      phone:
        description: Phone of the Customer
        type: string
      shipping_address:
        $ref: '#/definitions/ShippingAddress'
      status:
        description: Status of the Customer
        enum:
          - approved
          - pending
          - disabled
        type: string
      surname:
        description: Surname of the Customer
        type: string
    type: object
  CustomerFieldsWithBillingAddressAndShippingAddressFields:
    properties:
      billing_address:
        $ref: '#/definitions/BillingAddress'
      id:
        description: Unique identifier of the Customer
        format: int32
        type: integer
      shipping_address:
        $ref: '#/definitions/ShippingAddress'
    type: object
  CustomerFieldsWithPassword:
    properties:
      billing_address:
        $ref: '#/definitions/BillingAddress'
      email:
        description: Email of the Customer
        type: string
      id:
        description: Unique identifier of the Customer
        format: int32
        type: integer
      password:
        description: Password
        type: string
      phone:
        description: Phone of the Customer
        type: string
      shipping_address:
        $ref: '#/definitions/ShippingAddress'
      status:
        description: Status of the Customer
        enum:
          - approved
          - pending
          - disabled
        type: string
    type: object
  CustomerFieldsWithPasswordNoID:
    properties:
      billing_address:
        $ref: '#/definitions/BillingAddress'
      customer_category:
        items:
          type: integer
        type: array
      email:
        description: Email of the Customer
        type: string
      password:
        description: Password
        type: string
      phone:
        description: Phone of the Customer
        type: string
      shipping_address:
        $ref: '#/definitions/ShippingAddress'
      status:
        description: Status of the Customer
        enum:
          - approved
          - pending
          - disabled
        type: string
    type: object
  CustomerToCustomerCategory:
    properties:
      email:
        description: Email of the Customer
        type: string
      id:
        description: Unique identifier of the Customer
        format: int32
        type: integer
    type: object
  CustomerWithPassword:
    properties:
      customer:
        $ref: '#/definitions/CustomerFieldsWithPassword'
    type: object
  CustomerWithPasswordNoID:
    properties:
      customer:
        $ref: '#/definitions/CustomerFieldsWithPasswordNoID'
    type: object
  CustomersToCustomerCategory:
    properties:
      customers:
        items:
          $ref: '#/definitions/CustomerToCustomerCategory'
        type: array
    type: object
  DailyVisits:
    properties:
      date:
        type: string
        x-descriprtion: Date
      visits:
        type: integer
        x-descriprtion: Total number of visits for the specified date.
    type: object
  DigitalProduct:
    properties:
      digital_product:
        $ref: '#/definitions/DigitalProductFields'
    type: object
  DigitalProductEdit:
    properties:
      digital_product:
        $ref: '#/definitions/DigitalProductEditFields'
    type: object
  DigitalProductEditFields:
    properties:
      filename:
        description: Filename of the digital product (with file extensison)
        type: string
      url:
        description: 'Public accessible URL with the desired file contents. (LIMIT: 100MB)'
        type: string
    type: object
  DigitalProductFields:
    properties:
      expiration_seconds:
        description: Time left in seconds before the current private URL expires
        format: int32
        type: integer
      id:
        description: Unique identifier of the digital product
        format: int32
        type: integer
      url:
        description: Private URL of the digital product
        type: string
    type: object
  Fulfillment:
    properties:
      category:
        $ref: '#/definitions/FulfillmentFields'
    type: object
  FulfillmentCreate:
    properties:
      order:
        $ref: '#/definitions/FulfillmentCreateFields'
    type: object
  FulfillmentCreateFields:
    properties:
      expected_arrival_from:
        description: First date expected for the fulfillment to arrive at customer place
        type: string
      expected_arrival_to:
        description: Last date expected for the fulfillment to arrive at customer place
        type: string
      external_id:
        description: Unique identifier of the Fulfillment used by the tracking company
        type: string
      order_id:
        description: Order associated with the fulfillment
        type: string
      service_type:
        description: Type of Service requested to the tracking company
        type: string
      shipment_status:
        description: Status of the Fulfillment
        enum:
          - requested
          - in_transit
          - delivered
          - failed
        type: string
      tracking_company:
        description: Tracking company responsible for the fulfillment
        type: string
      tracking_number:
        description: Tracking Number associated with the fulfillment
        type: string
      type:
        description: Type of fulfillment Service used
        enum:
          - manual
          - shipit
          - chilexpress
          - ctt
          - correos_chile
          - dhl
          - servientrega
          - starken
          - bluexpress
        type: string
  FulfillmentEdit:
    properties:
      order:
        $ref: '#/definitions/FulfillmentEditFields'
    type: object
  FulfillmentEditFields:
    properties:
      expected_arrival_from:
        description: First date expected for the fulfillment to arrive at customer place
        type: string
      expected_arrival_to:
        description: Last date expected for the fulfillment to arrive at customer place
        type: string
      external_id:
        description: Unique identifier of the Fulfillment used by the tracking company
        type: string
      order_id:
        description: Order associated with the fulfillment
        type: string
      service_type:
        description: Type of Service requested to the tracking company
        type: string
      shipment_status:
        description: Status of the Fulfillment
        enum:
          - requested
          - in_transit
          - delivered
          - failed
        type: string
      tracking_company:
        description: Tracking company responsible for the fulfillment
        type: string
      tracking_number:
        description: Tracking Number associated with the fulfillment
        type: string
      type:
        description: Type of fulfillment Service used
        enum:
          - manual
          - shipit
          - chilexpress
          - ctt
          - correos_chile
          - dhl
          - servientrega
          - starken
          - bluexpress
        type: string
  FulfillmentFields:
    properties:
      external_id:
        description: Unique identifier of the Fulfillment used by the tracking company
        type: string
      id:
        description: Unique identifier of the Fulfillment
        format: int32
        type: integer
      order_id:
        description: Order associated with the fulfillment
        type: string
      service_type:
        description: Type of Service requested to the tracking company
        type: string
      shipment_status:
        description: Status of the fulfillment
        type: string
      tracking_company:
        description: Tracking company responsible for the fulfillment
        type: string
      tracking_number:
        description: Tracking Number associated with the fulfillment
        type: string
      type:
        description: Type of fulfillment Service used
        type: string
    type: object
  Hook:
    properties:
      hook:
        $ref: '#/definitions/HookFields'
    type: object
  HookEdit:
    properties:
      hook:
        $ref: '#/definitions/HookEditFields'
    type: object
  HookEditFields:
    properties:
      event:
        description: Event associated with Hook
        enum:
          - order_updated
          - order_pending_payment
          - order_paid
          - order_shipped
          - order_canceled
          - order_abandoned
          - product_created
          - product_updated
          - product_deleted
          - customer_created
          - customer_updated
          - customer_deleted
        type: string
      url:
        description: Hook URL to be notified
        type: string
    required:
      - event
      - url
    type: object
  HookFields:
    properties:
      created_at:
        description: Hook creation date
        type: string
      event:
        description: Event associated with Hook
        type: string
      id:
        description: Unique identifier of the Hook
        format: int32
        type: integer
      name:
        description: Hook name
        type: string
      url:
        description: Hook URL to be notified
        type: string
    type: object
  Id:
    properties:
      id:
        format: int32
        type: integer
  Image:
    properties:
      image:
        $ref: '#/definitions/ImageFields'
    type: object
  ImageEdit:
    properties:
      image:
        $ref: '#/definitions/ImageEditFields'
    type: object
  ImageEditFields:
    properties:
      url:
        description: Complete URL of the image
        type: string
    type: object
  ImageFields:
    properties:
      id:
        description: Unique identifier of the image
        format: int32
        type: integer
      position:
        description: Position of the image
        format: int32
        type: integer
      url:
        description: Complete URL of the image
        type: string
    type: object
  JSApp:
    properties:
      element:
        description: Element of Template to inject HTML
        type: string
      template:
        description: Template of Store Theme to inject HTML
        type: string
      url:
        description: Url of the HTML to inject
        type: string
    type: object
  JSAppEdit:
    properties:
      app:
        $ref: '#/definitions/JSApp'
    type: object
  Language:
    properties:
      code:
        type: string
      name:
        type: string
  MessageObject:
    properties:
      message:
        type: string
  NewPartnerStore:
    properties:
      store:
        properties:
          code:
            description: New Store code.
            type: string
          email_partner:
            description: Partner email.
            format: email
            type: string
          name:
            description: New Store name.
            type: string
          redirect_url:
            description: New Store redirect url.
            format: uri
            type: string
        type: object
    type: object
  NewVsReturning:
    properties:
      date:
        type: string
        x-descriprtion: Date.
      new:
        type: integer
        x-descriprtion: Total number of new.
      returning:
        type: integer
        x-descriprtion: Total number of returning.
    type: object
  NotFound:
    properties:
      message:
        type: string
  Order:
    properties:
      order:
        $ref: '#/definitions/OrderFields'
    type: object
  OrderAdditionalFields:
    description: Additional field of an order
    properties:
      label:
        description: Label of the additional field
        format: string
        type: string
      value:
        description: Value of the additional field
        format: string
        type: string
    type: object
  OrderBillingAddress:
    properties:
      address:
        description: Address of the Order's Billing Address
        type: string
      city:
        description: City of the Order's Billing Address
        type: string
      country:
        description: Country code of the Order's Billing Address (ISO 3166-1 alpha-2)
        type: string
      country_name:
        description: Country name of the Order's Billing Address
        type: string
      municipality:
        description: Municipality of the Order's Billing Address
        type: string
      name:
        description: Name of the Order's Billing Address
        type: string
      postal:
        description: Postal code of the Order's Billing Address
        type: string
      region:
        description: >-
          Region code of the Order's Billing Address (Use the FIPS standard -
          http://www.geonames.org/countries/)
        type: string
      street_number:
        description: Street number of the Order's Billing Address
        type: number
      surname:
        description: Surname of the Order's Billing Address
        type: string
  OrderCreate:
    properties:
      order:
        $ref: '#/definitions/OrderCreateFields'
    type: object
  OrderCreateFields:
    properties:
      customer:
        $ref: '#/definitions/CustomerFieldsWithBillingAddressAndShippingAddressFields'
      products:
        items:
          $ref: '#/definitions/OrderProductOrderCreate'
        type: array
      shipping_method_id:
        description: Shipping method id
        format: int32
        type: integer
      shipping_method_name:
        description: Shipping method name e.g. Royal Mail
        type: string
      shipping_price:
        description: >-
          Shipping method's price (applicable if shipping_method_name is
          provided instead of a shipping_method_id)
        format: float
        type: number
      status:
        description: Status of the Order
        enum:
          - Abandoned
          - Canceled
          - Pending Payment
          - Paid
        type: string
  OrderEdit:
    properties:
      order:
        $ref: '#/definitions/OrderEditFields'
    type: object
  OrderEditFields:
    properties:
      additional_fields:
        description: Array of additional fields for the given Order
        items:
          $ref: '#/definitions/OrderAdditionalFields'
        type: array
      additional_information:
        description: Additional information for the given Order
        type: string
      shipment_status:
        description: Status of the Order Shipping
        enum:
          - requested
          - in_transit
          - delivered
          - failed
          - pickup_available
        type: string
      status:
        description: Status of the Order
        enum:
          - Abandoned
          - Canceled
          - Pending Payment
          - Paid
        type: string
      tracking_company:
        description: Shipping Company used for the given Order
        type: string
      tracking_number:
        description: Shipping Tracking Number used for the given Order
        type: string
      tracking_url:
        description: URL to check delivery information for the given Order
        type: string
  OrderFields:
    properties:
      additional_fields:
        description: Array of additional fields for the given Order
        items:
          $ref: '#/definitions/OrderAdditionalFields'
        type: array
      additional_information:
        description: Additional information for the given Order
        type: string
      billing_address:
        $ref: '#/definitions/OrderBillingAddress'
      checkout_url:
        description: Store Checkout Order URL for the given Order
        type: string
      coupons:
        description: Promotion Coupons used on the given Order
        type: string
      created_at:
        description: Order date
        type: string
      currency:
        description: Currency of the Order
        type: string
      customer:
        $ref: '#/definitions/Customer'
      discount:
        description: Discount value for the given Order
        format: float
        type: number
      duplicate_url:
        description: Duplicate Order URL for the given Order
        type: string
      external_shipping_rate_id:
        description: Rate id for selected External Shipping Method rate
        type: string
      id:
        description: Unique identifier of the Order
        format: int32
        type: integer
      payment_information:
        description: Payment information for the given Order
        type: string
      payment_method_name:
        description: Payment Method name used e.g. PayPal
        type: string
      payment_method_type:
        description: Payment Method type used e.g. paypal
        type: string
      products:
        items:
          $ref: '#/definitions/OrderProduct'
        type: array
      recovery_url:
        description: Recovery Order URL for the given Order
        type: string
      shipment_status:
        description: Shipment Status for Order Fulfillment.
        enum:
          - delivered
          - requested
          - in_transit
          - failed
          - pickup_available
        type: string
      shipping:
        description: Shipping value for the given Order
        format: float
        type: number
      shipping_address:
        $ref: '#/definitions/OrderShippingAddress'
      shipping_discount:
        description: Shipping Discount value for the given order
        format: float
        type: number
      shipping_method_id:
        description: Shipping method e.g. Royal Mail
        format: int32
        type: integer
      shipping_method_name:
        description: Shipping method e.g. Royal Mail
        type: string
      shipping_option:
        description: Shipping option for this order.
        enum:
          - delivery
          - store_pickup
          - no_shipping
        type: string
      shipping_required:
        default: true
        description: False if the order is digital.
        type: boolean
      shipping_tax:
        description: Shipping Tax value for the given order
        format: float
        type: number
      shipping_taxes:
        items:
          $ref: '#/definitions/OrderShippingTax'
        type: array
      source:
        $ref: '#/definitions/TrafficSource'
      status:
        description: Status of the Order
        enum:
          - Abandoned
          - Canceled
          - Pending Payment
          - Paid
        type: string
      subtotal:
        description: >-
          Subtotal value for the given Order. Excluding taxes, shipping and
          discounts
        format: float
        type: number
      tax:
        description: Tax value for the given order
        format: float
        type: number
      total:
        description: >-
          Total value for the given Order. Including taxes, shipping and
          discounts
        format: float
        type: number
      tracking_company:
        description: Company Used for Order Fulfillment.
        type: string
      tracking_number:
        description: Tracking Number for Order Fulfillment.
        type: string
      tracking_url:
        description: Tracking URL for Order Fulfillment.
        type: string
  OrderHistory:
    properties:
      order_history:
        $ref: '#/definitions/OrderHistoryFields'
    type: object
  OrderHistoryEdit:
    properties:
      order_history:
        $ref: '#/definitions/OrderHistoryEditFields'
    type: object
  OrderHistoryEditFields:
    properties:
      message:
        description: Message of the Order History
        type: string
    type: object
  OrderHistoryFields:
    properties:
      created_at:
        description: Creation date of the order history
        type: string
      id:
        description: Unique identifier of the Order History
        format: int32
        type: integer
      message:
        description: Message of the Order History
        type: string
    type: object
  OrderProduct:
    properties:
      discount:
        description: Discount of the Order Product
        format: float
        type: number
      id:
        description: Unique identifier of the original Product
        format: int32
        type: integer
      image:
        description: Image URL of the Order Product
        type: string
      name:
        description: Name of the Order Product
        type: string
      price:
        description: Price of the Order Product
        format: float
        type: number
      qty:
        description: Price of the Order Product
        format: int32
        type: integer
      sku:
        description: Stock Keeping Unit of the Order Product
        type: string
      taxes:
        items:
          $ref: '#/definitions/OrderProductTax'
        type: array
      variant_id:
        description: Unique identifier of the original Product Variant
        format: int32
        type: integer
      weight:
        default: 1
        description: Weight of the Order Product
        format: float
        type: number
    type: object
  OrderProductOrderCreate:
    properties:
      discount:
        description: Discount of the Order Product
        format: float
        type: number
      id:
        description: Unique identifier of the original Product
        format: int32
        type: integer
      price:
        description: Price of the Order Product
        format: float
        type: number
      qty:
        description: Price of the Order Product
        format: int32
        type: integer
      variant_id:
        description: Unique identifier of the original Product Variant
        format: int32
        type: integer
    type: object
  OrderProductTax:
    properties:
      fixed:
        default: false
        description: False if rate is a percentage and true if rate is monetary
        type: boolean
      id:
        description: Unique identifier of the Order Product Tax
        format: int32
        type: integer
      name:
        description: Name of the category that the tax is associated with or the tax name
        type: string
      rate:
        description: Tax rate
        format: float
        type: number
      tax_on_product_price:
        default: false
        description: False if tax is not included on product price
        type: boolean
    type: object
  OrderShippingAddress:
    properties:
      address:
        description: Address of the Order's Shipping Address
        type: string
      city:
        description: City of the Order's Shipping Address
        type: string
      country:
        description: Country code of the Order's Shipping Address (ISO 3166-1 alpha-2)
        type: string
      country_name:
        description: Country name of the Order's Shipping Address
        type: string
      latitude:
        description: Latitude of the Order's Shipping Address
        type: number
      longitude:
        description: Longitude of the Order's Shipping Address
        type: number
      municipality:
        description: Municipality of the Order's Shipping Address
        type: string
      name:
        description: Name of the Order's Shipping Address
        type: string
      postal:
        description: Postal code of the Order's Shipping Address
        type: string
      region:
        description: >-
          Region code of the Order's Shipping Address (Use the FIPS standard -
          http://www.geonames.org/countries/)
        type: string
      street_number:
        description: Street number of the Order's Shipping Address
        type: number
      surname:
        description: Surname of the Order's Shipping Address
        type: string
  OrderShippingTax:
    properties:
      country:
        description: Code of the associated country
        type: string
      fixed:
        default: false
        description: False if rate is a percentage and true if rate is monetary
        type: boolean
      id:
        description: Unique identifier of the Order Shipping Tax
        format: int32
        type: integer
      name:
        description: Tax name
        type: string
      rate:
        description: Tax rate
        format: float
        type: number
      region:
        description: Code of the associated region
        type: string
      tax_on_shipping_price:
        default: false
        description: False if shipping tax is not included on shipping price
        type: boolean
    type: object
  OrdersData:
    properties:
      average:
        format: float
        type: number
        x-descriprtion: Average order total.
      count:
        format: float
        type: number
        x-descriprtion: Total number of placed orders.
      date:
        type: string
        x-descriprtion: Date
      paid:
        description: Total amount paid.
        format: float
        type: number
      pending:
        format: float
        type: number
        x-descriprtion: Total amount in pending orders.
      total:
        format: float
        type: number
        x-descriprtion: Total amount in placed orders.
    type: object
  Page:
    properties:
      page:
        $ref: '#/definitions/PageFields'
    type: object
  PageCategory:
    properties:
      id:
        type: integer
      name:
        type: string
      position:
        type: integer
    type: object
  PageFields:
    properties:
      body:
        description: Body of the Page
        type: string
      categories:
        description: Page categories to which the Page belongs to
        items:
          $ref: '#/definitions/PageCategory'
        type: array
      id:
        description: Id of the Page
        type: integer
      image:
        description: Image of the Page
        properties:
          id:
            type: integer
          url:
            type: string
        type: object
      legal:
        description: True if it is a legal page
        type: boolean
      meta_description:
        description: Meta description of the Page
        type: string
      page_title:
        description: Meta title of the Page
        type: string
      permalink:
        description: URL of the Page
        type: string
      status:
        description: Status of the Page
        enum:
          - public
          - draft
          - hidden
        type: string
      template:
        $ref: '#/definitions/PageTemplate'
      title:
        description: Title of the Page
        type: string
    type: object
  PageModify:
    properties:
      page:
        $ref: '#/definitions/PageModifyFields'
    type: object
  PageModifyFields:
    properties:
      body:
        description: Body of the Page
        type: string
      categories:
        description: Page categories to which the Page belongs to
        items:
          $ref: '#/definitions/PageCategory'
        type: array
      image:
        description: Image of the Page
        properties:
          id:
            type: integer
          url:
            type: string
        type: object
      meta_description:
        description: Meta description of the Page
        type: string
      page_title:
        description: Meta title of the Page
        type: string
      permalink:
        description: URL of the Page
        type: string
      status:
        description: Status of the Page
        enum:
          - public
          - draft
          - hidden
        type: string
      template:
        description: ID of the Page template. Use null for the blank layout ('None')
        type: integer
      title:
        description: Title of the Page
        type: string
    type: object
  PageTemplate:
    description: Template of the Page
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  PartnerError:
    properties:
      error:
        description: True when an error occurs.
        type: boolean
      field:
        description: Field causing the error.
        type: string
      message:
        description: Message describing the error.
        type: string
    type: object
  PartnerStoreCode:
    properties:
      store:
        properties:
          code:
            description: Store code.
            type: string
        type: object
    type: object
  PartnerStoreCreate:
    properties:
      aff:
        description: Partner code.
        type: string
      email:
        description: New Store administrator email.
        format: email
        type: string
      locale:
        default: en
        description: ISO3166-2 code for the store langauge.
        type: string
      password:
        description: New Store administrator password.
        format: string
        type: string
      plan_name:
        default: pro
        description: New Store plan name.
        enum:
          - pro
          - plus
          - premium
        type: string
      reject_duplicates:
        default: false
        description: >-
          Indicates whether the request should fail if the Store name provided
          is already in use.
        type: boolean
      store_name:
        description: New Store name.
        type: string
    type: object
  PartnerStoreStatus:
    properties:
      status:
        properties:
          message:
            description: Message describing the current creation status.
            type: string
          percentage:
            description: Percentage of the creation process that was already completed.
            type: string
        type: object
    type: object
  PaymentMethod:
    properties:
      payment_method:
        $ref: '#/definitions/PaymentMethodFields'
    type: object
  PaymentMethodFields:
    properties:
      id:
        description: Unique identifier of the Payment Method
        format: int32
        type: integer
      name:
        description: Name of the Payment Method
        type: string
      type:
        description: Type of the Payment Method
        enum:
          - manual
          - paypal
          - pagseguro
          - moneybookers
          - webpay_cl
          - easypay
          - easypaycc
          - easypayboleto
          - ideal_basic
          - hipay
          - khipu
          - mercado_pago
          - ifthenpay
          - eupago
          - stripe
          - payu
          - servipag
        type: string
    type: object
  PaymentMethodFreq:
    properties:
      count:
        type: string
        x-descriprtion: Number of times payment method was used.
      name:
        type: string
        x-descriprtion: Payment method name.
    type: object
  Product:
    properties:
      product:
        $ref: '#/definitions/ProductFields'
    type: object
  ProductCustomField:
    properties:
      field:
        $ref: '#/definitions/ProductCustomFieldFields'
    type: object
  ProductCustomFieldFields:
    properties:
      custom_field_id:
        description: Unique identifier of the ProductCustomField
        format: int32
        type: integer
      id:
        description: Unique identifier of the ProductCustomField value
        format: int32
        type: integer
      label:
        description: The label for the ProductCustomField
        type: string
      type:
        description: The type of the ProductCustomField
        type: string
      value:
        description: The value for the ProductCustomField
        type: string
      value_id:
        description: The value id for the ProductCustomField
        type: string
    type: object
  ProductEdit:
    properties:
      product:
        $ref: '#/definitions/ProductEditFields'
    type: object
  ProductEditFields:
    properties:
      barcode:
        description: Barcode of the product
        type: string
      categories:
        items:
          $ref: '#/definitions/CategoryFields'
        type: array
      description:
        description: Description of the product
        type: string
      diameter:
        description: Diameter of the product
        format: float
        type: number
      featured:
        default: false
        description: True if the product is featured
        type: boolean
      google_product_category:
        description: Category of a Product based on the Google product taxonomy
        type: string
      height:
        description: Height of the product
        format: float
        type: number
      length:
        description: Length of the product
        format: float
        type: number
      meta_description:
        description: SEO meta description of the product
        type: string
      name:
        description: Name of the product
        type: string
      package_format:
        default: box
        description: Format the product package
        enum:
          - box
          - cylinder
        type: string
      page_title:
        description: SEO title of the product
        type: string
      permalink:
        description: Product unique URL path
        type: string
      price:
        description: Price of the product
        format: float
        type: number
      shipping_required:
        default: true
        description: False if the product is digital
        type: boolean
      sku:
        description: Stock Keeping Unit of the product
        type: string
      status:
        default: available
        description: Status of the product
        enum:
          - available
          - not-available
          - disabled
        type: string
      stock:
        default: 100
        description: Quantity in stock for the product
        format: int32
        type: integer
      stock_unlimited:
        description: True if the Product has unlimited stock
        type: boolean
      weight:
        default: 1
        description: Weight of the product
        format: float
        type: number
      width:
        description: Width of the product
        format: float
        type: number
    required:
      - name
      - price
    type: object
  ProductFields:
    properties:
      barcode:
        description: Barcode of the product
        type: string
      categories:
        items:
          $ref: '#/definitions/CategoryFields'
        type: array
      created_at:
        description: Date of product creation
        type: string
      description:
        description: Description of the product
        type: string
      diameter:
        description: Diameter of the product
        format: float
        type: number
      discount:
        description: Discount of the product
        format: float
        type: number
      featured:
        default: false
        description: True if the product is featured
        type: boolean
      google_product_category:
        description: Category of a Product based on the Google product taxonomy
        type: string
      height:
        description: Height of the product
        format: float
        type: number
      id:
        description: Unique identifier of the product
        format: int32
        type: integer
      images:
        items:
          $ref: '#/definitions/ImageFields'
        type: array
      length:
        description: Length of the product
        format: float
        type: number
      name:
        description: Name of the product
        type: string
      package_format:
        default: box
        description: Format the product package
        enum:
          - box
          - cylinder
        type: string
      permalink:
        description: Product unique URL path
        type: string
      price:
        description: Price of the product
        format: float
        type: number
      sku:
        description: Stock Keeping Unit of the product
        type: string
      status:
        default: available
        description: Status of the product
        enum:
          - available
          - not-available
          - disabled
        type: string
      stock:
        default: 100
        description: Quantity in stock for the product
        format: int32
        type: integer
      stock_unlimited:
        description: True if the Product has unlimited stock
        type: boolean
      variants:
        items:
          $ref: '#/definitions/VariantFields'
        type: array
      weight:
        default: 1
        description: Weight of the product
        format: float
        type: number
      width:
        description: Width of the product
        format: float
        type: number
    type: object
  ProductOption:
    properties:
      option:
        $ref: '#/definitions/ProductOptionFields'
    type: object
  ProductOptionEdit:
    properties:
      option:
        $ref: '#/definitions/ProductOptionEditFields'
    type: object
  ProductOptionEditFields:
    properties:
      name:
        description: Name of the product option
        type: string
      option_type:
        description: Type of the product option
        enum:
          - option
          - input
          - text
          - file
        type: string
      position:
        description: Position of the product option
        format: int32
        type: integer
    type: object
  ProductOptionFields:
    properties:
      id:
        description: Unique identifier of the product option
        format: int32
        type: integer
      name:
        description: Name of the product option
        type: string
      option_type:
        description: Type of the product option
        enum:
          - option
          - input
          - text
          - file
        type: string
      position:
        description: Position of the product option
        format: int32
        type: integer
      values:
        items:
          $ref: '#/definitions/ProductOptionValueFields'
        type: array
    type: object
  ProductOptionValue:
    properties:
      value:
        $ref: '#/definitions/ProductOptionValueFields'
    type: object
  ProductOptionValueEdit:
    properties:
      value:
        $ref: '#/definitions/ProductOptionValueEditFields'
    type: object
  ProductOptionValueEditFields:
    properties:
      name:
        description: Name of the product option value
        type: string
      position:
        description: Position of the product option value
        format: int32
        type: integer
    type: object
  ProductOptionValueFields:
    properties:
      id:
        description: Unique identifier of the product option value
        format: int32
        type: integer
      name:
        description: Name of the product option value
        type: string
      position:
        description: Position of the product option value
        format: int32
        type: integer
      product_option:
        $ref: '#/definitions/ProductOption'
      variants:
        items:
          $ref: '#/definitions/Variant'
        type: array
    type: object
  ProductOptionVariantEdit:
    properties:
      name:
        description: Name of the product option
        type: string
      product_option_id:
        description: Id of the product option
        format: int32
        type: integer
      product_option_position:
        description: position of product option
        format: int32
        type: integer
      product_option_value_id:
        description: Id of product option value
        format: int32
        type: integer
      product_value_position:
        description: position of product option value
        format: int32
        type: integer
      value:
        description: Value of the product option
        type: string
    type: object
  Promotion:
    properties:
      promotion:
        $ref: '#/definitions/PromotionFields'
    type: object
  PromotionEdit:
    properties:
      promotion:
        $ref: '#/definitions/PromotionEditFields'
    type: object
  PromotionEditFields:
    properties:
      begins_at:
        description: Creation date of the promotion (requires 'lasts' param - 'date')
        type: string
      buys_at_least:
        description: 'Controls the promotion''s condition (''none'', ''price'', ''qty'')'
        type: string
      categories:
        description: >-
          Products Categories where the promotion will be applied (requires
          'discount_target' param - 'categories')
        items:
          $ref: '#/definitions/Id'
        type: array
      code:
        description: Code of the promotion
        type: string
      condition_price:
        description: >-
          Minimum order amount to validate the promotion (requires
          'buys_at_least' param - 'price')
        format: float
        type: number
      condition_qty:
        description: >-
          Minimum quantity of ordered itens to validate the promotion (requires
          'buys_at_least' param - 'qty')
        format: int32
        type: integer
      cumulative:
        default: false
        description: True if the promotion can be acumulated with others
        type: boolean
      customer_categories:
        description: >-
          Customer Categories to whom the promotion will be applied (requires
          'customers' param - 'categories')
        items:
          $ref: '#/definitions/Id'
        type: array
      customers:
        description: >-
          Controls to which customers the promotion will be applied ('all',
          'loggedin', 'categories', 'guests')
        type: string
      discount_amount_fix:
        description: Fixed discount amount of the promotion (requires 'type' param - 'fix')
        format: float
        type: number
      discount_amount_percent:
        description: >-
          Percentual discount amount of the promotion (requires 'type' param -
          'percentage')
        format: float
        type: number
      discount_target:
        description: >-
          Where the promotion will be applied ('order', 'shipping',
          'categories', 'buy_x_get_y)
        type: string
      enabled:
        default: true
        description: If the promotion is to be temporarily disabled
        type: boolean
      expires_at:
        description: Expiration date of the promotion (requires 'lasts' param - 'date')
        type: string
      lasts:
        description: >-
          Controls when the promotion will expire ('none', 'date',
          'max_times_used')
        type: string
      max_times_used:
        description: >-
          Maximum amount a promotion can be used (requires 'lasts' param -
          'max_times_used')
        format: int32
        type: integer
      name:
        description: Name of the product
        type: string
      products:
        description: >-
          Products where the promotion will be applied (requires
          'discount_target' param - 'categories' or 'buy_x_get_y')
        items:
          $ref: '#/definitions/Id'
        type: array
      products_x:
        description: >-
          Products required to apply the promotion (requires 'discount_target'
          param - 'buy_x_get_y')
        items:
          $ref: '#/definitions/Id'
        type: array
      quantity_x:
        description: >-
          Number of sets of products_x needed to be able to apply the promotion
          (requires 'discount_target' param - 'buy_x_get_y')
        format: int32
        type: integer
      type:
        description: 'Controls if the discount will be a fixed area (''fix'', ''percentage'')'
        type: string
    type: object
  PromotionFields:
    properties:
      begins_at:
        description: Creation date of the promotion (requires 'lasts' param - 'date')
        type: string
      categories:
        description: >-
          Products Categories where the promotion will be applied (requires
          'discount_target' param - 'categories')
        items:
          $ref: '#/definitions/Id'
        type: array
      code:
        description: Code of the promotion
        type: string
      condition_price:
        description: Minimum order amount to validate the promotion
        format: float
        type: number
      condition_qty:
        description: Minimum quantity of ordered itens to validate the promotion
        format: int32
        type: integer
      cumulative:
        default: false
        description: True if the promotion can be acumulated with others
        type: boolean
      customer_categories:
        description: >-
          Customer Categories to whom the promotion will be applied (requires
          'customers' param - 'categories')
        items:
          $ref: '#/definitions/Id'
        type: array
      discount_amount_fix:
        description: Fixed discount amount of the promotion
        format: float
        type: number
      discount_amount_percent:
        description: Percentual discount amount of the promotion
        format: float
        type: number
      discount_target:
        description: >-
          Where the promotion will be applied ('order', 'shipping',
          'categories', 'buy_x_get_y)
        type: string
      enabled:
        default: true
        description: If the promotion is currently enabled
        type: boolean
      expires_at:
        description: Expiration date of the promotion (requires 'lasts' param - 'date')
        type: string
      id:
        description: Unique identifier of the product
        format: int32
        type: integer
      lasts:
        description: >-
          Controls when the promotion will expire ('none', 'date',
          'max_times_used')
        type: string
      max_times_used:
        description: >-
          Maximum amount a promotion can be used (requires 'lasts' param -
          'max_times_used')
        format: int32
        type: integer
      name:
        description: Name of the product
        type: string
      products:
        description: >-
          Products where the promotion will be applied (requires
          'discount_target' param - 'categories' or 'buy_x_get_y')
        items:
          $ref: '#/definitions/Id'
        type: array
      products_x:
        description: >-
          Products required to apply the promotion (requires 'discount_target'
          param - 'buy_x_get_y')
        items:
          $ref: '#/definitions/Id'
        type: array
      quantity_x:
        description: >-
          Number of sets of products_x needed to be able to apply the promotion
          (requires 'discount_target' param - 'buy_x_get_y')
        format: int32
        type: integer
      status:
        description: 'Status of the promotion (''active'', ''expired'')'
        type: string
      times_used:
        description: Amount of times the promotion was used
        format: int32
        type: integer
    type: object
  Referrer:
    properties:
      count:
        type: integer
        x-descriprtion: Number of times referrer source was used.
      source:
        type: string
        x-descriprtion: Referrer source.
    type: object
  Region:
    properties:
      code:
        type: string
      name:
        type: string
  RegionOrders:
    properties:
      city:
        type: string
        x-descriprtion: City name.
      code:
        type: integer
        x-descriprtion: Region code.
      country:
        type: integer
        x-descriprtion: Number of region orders.
    type: object
  ShippingAddress:
    properties:
      address:
        description: Address of the Customer's Shipping Address
        type: string
      city:
        description: City of the Customer's Shipping Address
        type: string
      country:
        description: Country code of the Customer's Shipping Address (ISO 3166-1 alpha-2)
        type: string
      municipality:
        description: Municipality of the Customer's Shipping Address
        type: string
      name:
        description: Name of the Customer's Shipping Address
        type: string
      postal:
        description: Postal code of the Customer's Shipping Address
        type: string
      region:
        description: >-
          Region code of the Customer's Shipping Address (Use the FIPS standard
          - http://www.geonames.org/countries/)
        type: string
      surname:
        description: Surname of the Customer's Shipping Address
        type: string
  ShippingMethod:
    properties:
      shipping_method:
        $ref: '#/definitions/ShippingMethodFields'
    type: object
  ShippingMethodEdit:
    properties:
      shipping_method:
        properties:
          callback_url:
            description: URL that receives the shipping data and returns rates
            type: string
          city:
            description: City/Municipality name of origin
            type: string
          fetch_services_url:
            description: URL that returns available shipping services
            type: string
          name:
            description: Name of the Shipping Method
            type: string
          postal:
            description: Postal/Zipcode of origin
            type: string
          state:
            description: State/Region code of origin
            type: string
          token:
            description: Token used to authentica on the the fetch_services_url
            type: string
        type: object
    type: object
  ShippingMethodFields:
    properties:
      callback_url:
        description: URL that receives the shipping data and returns rates
        type: string
      city:
        description: City/Municipality name of origin
        type: string
      fetch_services_url:
        description: URL that returns available shipping services
        type: string
      id:
        description: Unique identifier of the Shipping Method
        format: int32
        type: integer
      name:
        description: Name of the Shipping Method
        type: string
      postal:
        description: Postal/Zipcode of origin
        type: string
      services:
        items:
          $ref: '#/definitions/ShippingService'
        type: array
      state:
        description: State/Region code of origin
        type: string
      type:
        description: Type of the Shipping Method
        enum:
          - free
          - tables
          - correiosbr
          - correos_chile
          - chilexpress
          - flat
          - ups
          - external
        type: string
    type: object
  ShippingMethodFreq:
    properties:
      count:
        type: string
        x-descriprtion: Number of times shipping method was used.
      name:
        type: string
        x-descriprtion: Shipping method name.
    type: object
  ShippingService:
    properties:
      id:
        description: Unique identifier of the Shipping Service
        format: int32
        type: integer
      name:
        description: Name of the Shipping Service
        type: string
      service_code:
        description: Code of the Shipping Service
        type: string
    type: object
  StatusInvalid:
    properties:
      message:
        type: string
  Store:
    properties:
      address:
        $ref: '#/definitions/StoreAddress'
      code:
        description: Store Code
        type: string
      country:
        description: Store Country
        type: string
      currency:
        description: Store Currency
        type: string
      email:
        description: Store Admin Email
        type: string
      hooks_token:
        description: Store Hooks Auth token
        type: string
      logo:
        description: Store Logo URL
        type: string
      name:
        description: Store Name
        type: string
      timezone:
        description: Store Timezone
        type: string
      url:
        description: Store URL
        type: string
      weight_unit:
        description: Store Weight Unit
        type: string
    type: object
  StoreAddress:
    properties:
      address:
        description: Address of the Store's Address
        type: string
      city:
        description: City of the Store's Address
        type: string
      country:
        description: Country of the Store's Address (ISO 3166-1 alpha-2)
        type: string
      country_code:
        description: Country code of the Store's Address
        type: string
      postal:
        description: Postal code of the Store's Address
        type: string
      region:
        description: Region of the Store's Address
        type: string
      region_code:
        description: Region code of the Store's Address
        type: string
  StoreStats:
    properties:
      best_sold:
        description: Top 10 best sold products.
        items:
          $ref: '#/definitions/BestSold'
        type: array
      conversions:
        properties:
          added_to_cart:
            description: Total add to cart conversions.
            format: float
            type: number
          checkout:
            description: Total checkout conversions.
            format: float
            type: number
          paid:
            description: Total paid conversions.
            format: float
            type: number
        type: object
      currency:
        description: Store currency.
        type: string
      daily_visits:
        description: Visits per day.
        items:
          $ref: '#/definitions/DailyVisits'
        type: array
      from:
        description: Statistics start date.
        type: string
        x-fromat: iso8601
      new_vs_returning_customers:
        properties:
          global:
            description: Global percentage of new vs returning customers.
            type: integer
          per_day:
            description: Numbers of new and returning customers per day.
            items:
              $ref: '#/definitions/NewVsReturning'
            type: array
        type: object
      new_vs_returning_orders:
        properties:
          global:
            description: Global percentage of new vs returning customers.
            type: integer
          per_day:
            description: Numbers of new and returning customers per day.
            items:
              $ref: '#/definitions/NewVsReturning'
            type: array
        type: object
      orders:
        properties:
          average:
            description: Average order amount.
            format: float
            type: number
          count:
            description: Total number of orders.
            type: integer
          data:
            description: Orders data.
            items:
              $ref: '#/definitions/OrdersData'
            type: array
          total:
            description: Total amount from all orders.
            format: float
            type: number
        type: object
      payment_methods:
        description: Store payment methods and their frequency.
        items:
          $ref: '#/definitions/PaymentMethodFreq'
        type: array
      referrers:
        description: Top 10 referrer sources and their frequency.
        items:
          $ref: '#/definitions/Referrer'
        type: array
      region_orders:
        properties:
          display_mode:
            description: Can be 'regions' when orders are specific of 1 country or 'auto'.
            type: string
          regions_orders:
            description: Orders per country and region(inside the country).
            items:
              $ref: '#/definitions/CountryOrders'
            type: array
        type: object
      search_frequencies_all:
        description: >-
          Number of times each search was conducted under the form of an
          aggregation query.
        items: {}
        type: array
      search_frequencies_without_results:
        description: >-
          Number of times each search with zero results was conducted under the
          form of an aggregation query.
        items: {}
        type: array
      shipping_methods:
        description: Store shipping methods and their frequency.
        items:
          $ref: '#/definitions/ShippingMethodFreq'
        type: array
      to:
        description: Statistics end date.
        type: string
        x-fromat: iso8601
      traffic_type:
        description: Type of store traffic and its frequency.
        items:
          $ref: '#/definitions/TrafficType'
        type: array
      visits:
        description: Total number of visits.
        type: integer
    type: object
  Tax:
    properties:
      tax:
        $ref: '#/definitions/TaxFields'
    type: object
  TaxEdit:
    properties:
      tax:
        $ref: '#/definitions/TaxEditFields'
    type: object
  TaxEditFields:
    properties:
      category_id:
        description: Unique identifier of the category of the Tax
        format: int32
        type: integer
      country:
        description: Country where the Tax applies
        type: string
      fixed:
        default: false
        description: True if the tax has a fixed valued amount
        type: boolean
      name:
        description: Name that identifies tax
        type: string
      region:
        description: Region where the Tax applies
        type: string
      shipping:
        default: false
        description: True if the tax should be applied to shipping costs
        type: boolean
      tax:
        description: Tax value for the given Tax
        format: float
        type: number
    type: object
  TaxFields:
    properties:
      category_id:
        description: Unique identifier of the category of the Tax
        format: int32
        type: integer
      country:
        description: Country name where the Tax applies
        type: string
      fixed:
        default: false
        description: True if the tax has a fixed valued amount
        type: boolean
      id:
        description: Unique identifier of the Tax
        format: int32
        type: integer
      name:
        description: Name that identifies tax
        type: string
      region:
        description: Region name where the Tax applies
        type: string
      shipping:
        default: false
        description: True if the tax should be applied to shipping costs
        type: boolean
      tax_amount:
        description: Tax value for the given Tax
        format: float
        type: number
    type: object
  TrafficSource:
    properties:
      campaign:
        description: The campaign that referred the customer to the checkout
        type: string
      first_page_visited:
        description: The first url visited by the customer
        type: string
      first_page_visited_at:
        description: The date when the customer visited the first page
        type: string
      medium:
        description: The medium that referred the customer to the checkout
        type: string
      referral_code:
        description: The code that referred the customer to the checkout
        type: string
      referral_source:
        description: The source that referred the customer to the website
        type: string
      referral_url:
        description: The website that referred the customer to the checkout
        type: string
      source_name:
        description: Where the checkout originated
        type: string
      user_agent:
        description: User agent of the referred request to checkout
        type: string
  TrafficType:
    properties:
      count:
        type: integer
        x-descriprtion: Frequency of the specified traffic type.
      name:
        type: string
        x-descriprtion: Traffic name.
    type: object
  Variant:
    properties:
      variant:
        $ref: '#/definitions/VariantFields'
    type: object
  VariantEdit:
    properties:
      variant:
        $ref: '#/definitions/VariantEditFields'
    type: object
  VariantEditFields:
    properties:
      image_id:
        description: Unique identifier of the product image to associate with this variant
        format: int32
        type: integer
      options:
        items:
          $ref: '#/definitions/ProductOptionVariantEdit'
        type: array
      price:
        description: Price of the product
        format: float
        type: number
      sku:
        description: Stock Keeping Unit of the Product's Variant
        type: string
      stock:
        default: 100
        description: Quantity in stock for the Product's Variant
        format: int32
        type: integer
      stock_unlimited:
        description: True if the Product's Variant has unlimited stock
        type: boolean
    type: object
  VariantFields:
    properties:
      id:
        description: Unique identifier of the product
        format: int32
        type: integer
      image:
        $ref: '#/definitions/ImageFields'
      options:
        items:
          $ref: '#/definitions/ProductOptionVariantEdit'
        type: array
      price:
        description: Price of the product
        format: float
        type: number
      sku:
        description: Stock Keeping Unit of the Product's Variant
        type: string
      stock:
        default: 100
        description: Quantity in stock for the Product's Variant
        format: int32
        type: integer
      stock_unlimited:
        description: True if the Product's Variant has unlimited stock
        type: boolean
    type: object
  type:
    properties:
      code:
        description: Store code.
        type: string
      stats:
        $ref: '#/definitions/StoreStats'
    type: object
host: api.jumpseller.com
info:
  contact:
    x-twitter: jumpseller
  description: >
    # Endpoint Structure


    All URLs are in the format: 


    ```text

    https://api.jumpseller.com/v1/path.json?login=XXXXXX&authtoken=storetoken  

    ```


    The path is prefixed by the API version and the URL takes as parameters the
    login (your store specific API login) and your authentication token.

    <br/><br/>

    ***


    # Version


    The current version of the API is **v1**.  

    If we change the API in backward-incompatible ways, we'll increase the
    version number and maintain stable support for the old urls.

    <br/><br/>

    ***


    # Authentication


    The API uses a token-based authentication with a combination of a login key
    and an auth token. **Both parameters can be found on the left sidebar of the
    Account section, accessed from the main menu of your Admin Panel**. The auth
    token of the user can be reset on the same page.


    ![Store Login](/images/support/api/apilogin.png)


    The auth token is a **32 characters** string.


    If you are developing a Jumpseller App, the authentication should be done
    using [OAuth-2](/support/oauth-2). Please read the article [Build an
    App](/support/apps) for more information.

    <br/><br/>

    ***


    # Curl Examples


    To request all the products at your store, you would append the products
    index path to the base url to create an URL with the format:  


    ```text

    https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX

    ```


    In curl, you can invoque that URL with:  


    ```text

    curl -X GET
    "https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX"

    ```


    To create a product, you will include the JSON data and specify the MIME
    Type:  


    ```text

    curl -X POST -d '{ "product" : {"name": "My new Product!", "price": 100} }'
    "https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX"
    -H "Content-Type:application/json"

    ```


    and to update the product identified with 123:  


    ```text

    curl -X PUT -d '{ "product" : {"name": "My updated Product!", "price": 99}
    }'
    "https://api.jumpseller.com/v1/products/123.json?login=XXXXXX&authtoken=XXXXX"
    -H "Content-Type:application/json"

    ```


    or delete it:  


    ```text

    curl -X DELETE
    "https://api.jumpseller.com/v1/products/123.json?login=XXXXXX&authtoken=XXXXX"
    -H "Content-Type:application/json"

    ```

    <br/><br/>

    ***


    # PHP Examples


    Create a new Product (POST method)


    ```php

    $url =
    'https://api.jumpseller.com/v1/products.json?login=XXXXX&authtoken=XXXXX;

    $ch = curl_init($url);

    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type:
    application/json'));


    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST"); //post method

    curl_setopt($ch, CURLOPT_POSTFIELDS, '{ "product" : {"name": "My updated
    Product!", "price": 99} }');


    $result = curl_exec($ch);

    print_r($result);

    curl_close($ch);

    ```

    <br/><br/>

    ***


    # Plain JSON only. No XML.


    * We only support JSON for data serialization.

    * Our node format has no root element.  

    * We use snake_case to describe attribute keys (like "created_at").  

    * All empty value are replaced with **null** strings.

    * All API URLs end in .json to indicate that they accept and return JSON.

    * POST and PUT methods require you to explicitly state the MIME type of your
    request's body content as **"application/json"**.

    <br/><br/>

    ***


    # Rate Limit

    You can perform a maximum of:


    + 240 (two hundred forty) requests per minute and

    + 8 (eight) requests per second 


    If you exceed this limit, you'll get a 403 Forbidden (Rate Limit Exceeded)
    response for subsequent requests.  


    The rate limits apply by IP address and by store. This means that multiple
    requests on different stores are not counted towards the same rate limit.


    This limits are necessary to ensure resources are correctly used. Your
    application should be aware of this limits and retry any unsuccessful
    request, check the following Ruby stub:


    ```ruby

    tries = 0; max_tries = 3;

    begin
      HTTParty.send(method, uri) # perform an API call.
      sleep 0.5
      tries += 1
    rescue
      unless tries >= max_tries
        sleep 1.0 # wait the necessary time before retrying the call again.
        retry
      end
    end

    ```


    Finally, you can review the Response Headers of each request:


    ```text

    Jumpseller-PerMinuteRateLimit-Limit: 60  

    Jumpseller-PerMinuteRateLimit-Remaining: 59 # requests available on the
    per-second interval  

    Jumpseller-PerSecondRateLimit-Limit: 2  

    Jumpseller-PerSecondRateLimit-Remaining: 1 # requests available on the
    per-second interval

    ``` 


    to better model your application requests intervals.


    In the event of getting your IP banned, the Response Header
    `Jumpseller-BannedByRateLimit-Reset` informs you the time when will your ban
    be reseted.

    <br/><br/>

    ***


    # Pagination


    By default we will return 50 objects (products, orders, etc) per page. There
    is a maximum of 100, using a query string `&limit=100`.

    If the result set gets paginated it is your responsibility to check the next
    page for more objects -- you do this by using query strings `&page=2`,
    `&page=3` and so on.


    ```text

    https://api.jumpseller.com/v1/products.json?login=XXXXXX&authtoken=XXXXX&page=3&limit=100

    ```

    <br/><br/>

    ***


    # More

    * [Jumpseller API wrapper](https://gitlab.com/jumpseller-api/ruby) provides
    a public Ruby abstraction over our API;

    * [Apps Page](/apps) showcases external integrations with Jumpseller done by
    technical experts;

    * [Imgbb API](https://api.imgbb.com/) provides an easy way to upload and
    temporaly host for images and files.

    <br/><br/>

    ***

    <br/><br/>
  title: Jumpseller API
  version: 1.0.0
  x-apisguru-categories:
    - ecommerce
  x-logo:
    altText: Jumpseller logo
    href: /
    url: 'https://twitter.com/jumpseller/profile_image?size=original'
  x-origin:
    - format: openapi
      url: 'https://api.jumpseller.com/swagger.json'
      version: '3.0'
  x-providerName: jumpseller.com
paths:
  /categories.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Category'
      summary: Retrieve all Categories.
      tags:
        - Categories
    post:
      consumes:
        - application/json
      description: >-
        Category's permalink is automatically generated from the given
        category's name.
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Category parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CategoryEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Category'
      summary: Create a new Category.
      tags:
        - Categories
  /categories/count.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
      summary: Count all Categories.
      tags:
        - Categories
  '/categories/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Category
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Category Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Category.
      tags:
        - Categories
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Category
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: The selected Category.
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Category Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Category.
      tags:
        - Categories
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Category
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Category parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CategoryEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Category Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Modify an existing Category.
      tags:
        - Categories
  /checkout_custom_fields.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Checkout Custom Fields
          schema:
            items:
              $ref: '#/definitions/CheckoutCustomField'
            type: array
      summary: Retrieve all Checkout Custom Fields.
      tags:
        - Checkout Custom Fields
    post:
      consumes:
        - application/json
      description: >-
        Type values can be: input, selection, checkbox, date or text. Area
        values can be: contact, billing_shipping or other.
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: CheckoutCustomField parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CheckoutCustomFieldEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckoutCustomField'
        '404':
          description: CheckoutCustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new CheckoutCustomField.
      tags:
        - Checkout Custom Fields
  '/checkout_custom_fields/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CheckoutCustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: CheckoutCustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing CheckoutCustomField.
      tags:
        - Checkout Custom Fields
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CheckoutCustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckoutCustomField'
        '404':
          description: CheckoutCustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single CheckoutCustomField.
      tags:
        - Checkout Custom Fields
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CheckoutCustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: CheckoutCustomField parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CheckoutCustomFieldEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CheckoutCustomField'
        '404':
          description: CheckoutCustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a CheckoutCustomField.
      tags:
        - Checkout Custom Fields
  /countries.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of Countries
          schema:
            items:
              $ref: '#/definitions/Country'
            type: array
      summary: Retrieve all Countries.
      tags:
        - Countries
  '/countries/{country_code}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ISO3166 Country Code
          format: string
          in: path
          name: country_code
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A Country information object
          schema:
            $ref: '#/definitions/Country'
        '404':
          description: Country Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Country information.
      tags:
        - Countries
  '/countries/{country_code}/regions.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ISO3166 Country Code
          format: string
          in: path
          name: country_code
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of Regions from a single Country
          schema:
            items:
              $ref: '#/definitions/Region'
            type: array
        '404':
          description: Country Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Regions from a single Country.
      tags:
        - Countries
        - Regions
  '/countries/{country_code}/regions/{region_code}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ISO3166 Country Code
          format: string
          in: path
          name: country_code
          required: true
          type: string
        - description: Region Code
          format: string
          in: path
          name: region_code
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: A Region information object
          schema:
            $ref: '#/definitions/Region'
        '404':
          description: Country or Region not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Region information object.
      tags:
        - Countries
        - Regions
  /custom_fields.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of Custom Fields
          schema:
            items:
              $ref: '#/definitions/CustomField'
            type: array
      summary: Retrieve all Store's Custom Fields.
      tags:
        - Custom Fields
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Custom Field parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomFieldEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomField'
      summary: Create a new Custom Field.
      tags:
        - Custom Fields
  '/custom_fields/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: CustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing CustomField.
      tags:
        - Custom Fields
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomField'
        '404':
          description: CustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single CustomField.
      tags:
        - Custom Fields
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: CustomField parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomFieldEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomField'
        '404':
          description: CustomField Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a CustomField.
      tags:
        - Custom Fields
  '/custom_fields/{id}/select_options.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Custom Fields Select Options
          schema:
            items:
              $ref: '#/definitions/CustomFieldSelectOption'
            type: array
      summary: Retrieve all Store's Custom Fields.
      tags:
        - Custom Field Select Options
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Automatically added
          in: path
          name: id
          required: true
          type: string
        - description: Custom Field Select Option parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomFieldSelectOptionEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomFieldSelectOption'
      summary: Create a new Custom Field Select Option.
      tags:
        - Custom Field Select Options
  '/custom_fields/{id}/select_options/{custom_field_select_option_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the CustomFieldSelectOption
          format: int32
          in: path
          name: custom_field_select_option_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: CustomFieldSelectOption Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing CustomFieldSelectOption.
      tags:
        - Custom Fields
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the CustomFieldSelectOption
          format: int32
          in: path
          name: custom_field_select_option_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomFieldSelectOption'
        '404':
          description: CustomFieldSelectOption Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single SelectOption from a CustomField.
      tags:
        - Custom Field Select Options
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomField
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the CustomFieldSelectOption
          format: int32
          in: path
          name: custom_field_select_option_id
          required: true
          type: integer
        - description: CustomFieldSelectOption parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomFieldSelectOptionEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomFieldSelectOption'
        '404':
          description: CustomFieldSelectOption Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a SelectOption from a CustomField.
      tags:
        - Custom Field Select Options
  /customer_categories.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Customer Categories
          schema:
            items:
              $ref: '#/definitions/CustomerCategory'
            type: array
      summary: Retrieve all Customer Categories.
      tags:
        - Customer Categories
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: CustomerCategory parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerCategoryEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerCategory'
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new CustomerCategory.
      tags:
        - Customer Categories
  '/customer_categories/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomerCategory
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing CustomerCategory.
      tags:
        - Customer Categories
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomerCategory
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerCategory'
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single CustomerCategory.
      tags:
        - Customer Categories
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomerCategory
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: CustomerCategory parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerCategoryEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerCategory'
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a CustomerCategory.
      tags:
        - Customer Categories
  '/customer_categories/{id}/customers.json':
    delete:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomerCategory
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Customer parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomersToCustomerCategory'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete Customers from an existing CustomerCategory.
      tags:
        - Customer Categories
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomerCategory
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Customer'
            type: array
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieves the customers in a CustomerCategory.
      tags:
        - Customer Categories
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the CustomerCategory
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Customer parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomersToCustomerCategory'
      produces:
        - application/json
      responses:
        '200':
          description: Array of Customers in the Customer Category
          schema:
            items:
              $ref: '#/definitions/Customer'
            type: array
        '404':
          description: CustomerCategory Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Adds Customers to a CustomerCategory.
      tags:
        - Customer Categories
  /customers.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Orders
          schema:
            items:
              $ref: '#/definitions/Customer'
            type: array
      summary: Retrieve all Customers.
      tags:
        - Customers
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Customer parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerWithPasswordNoID'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new Customer.
      tags:
        - Customers
  /customers/count.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
      summary: Count all Customers.
      tags:
        - Customers
  '/customers/email/{email}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Email of the Customer
          in: path
          name: email
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Customer by email.
      tags:
        - Customers
  '/customers/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Customer.
      tags:
        - Customers
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Customer by id.
      tags:
        - Customers
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Customer parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerWithPasswordNoID'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a new Customer.
      tags:
        - Customers
  '/customers/{id}/fields':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/CustomerAdditionalField'
            type: array
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieves the Customer Additional Field of a Customer.
      tags:
        - Customer Additional Fields
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Customer Additional Field parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAdditionalFieldEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerAdditionalField'
        '404':
          description: Customer Additional Field Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Adds Customer Additional Fields to a Customer.
      tags:
        - Customer Additional Fields
  '/customers/{id}/fields/{field_id}':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Customer Additional Field
          format: int32
          in: path
          name: field_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Customer Additional Field.
      tags:
        - Customer Additional Fields
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Customer Additional Field
          format: int32
          in: path
          name: field_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerAdditionalField'
        '404':
          description: Customer Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Customer Additional Field.
      tags:
        - Customer Additional Fields
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Customer
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Customer Additional Field
          format: int32
          in: path
          name: field_id
          required: true
          type: integer
        - description: Customer Additional Field parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAdditionalFieldEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerAdditionalField'
        '400':
          description: Customer Additional Field Bad Parameters.
          schema:
            $ref: '#/definitions/BadParams'
        '404':
          description: Customer Additional Field Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Customer Additional Field.
      tags:
        - Customer Additional Fields
  /fulfillments.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Fulfillments
          schema:
            items:
              $ref: '#/definitions/Fulfillment'
            type: array
      summary: Retrieve all Fulfillments.
      tags:
        - Fulfillments
  /fulfillments/count.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
      summary: Count all Fulfillments.
      tags:
        - Fulfillments
  '/fulfillments/{id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Fulfillment
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Fulfillment'
        '404':
          description: Fulfillment Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Fulfillment.
      tags:
        - Fulfillments
  /hooks.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Hooks
          schema:
            items:
              $ref: '#/definitions/Hook'
            type: array
      summary: Retrieve all Hooks.
      tags:
        - Hooks
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Hook parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HookEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Hook'
        '404':
          description: Hook Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new Hook.
      tags:
        - Hooks
  '/hooks/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Hook
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Hook Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Hook.
      tags:
        - Hooks
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Hook
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Hook'
        '404':
          description: Hook Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Hook.
      tags:
        - Hooks
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Hook
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Hook parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HookEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Hook'
        '404':
          description: Hook Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Hook.
      tags:
        - Hooks
  /jsapps.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/App'
      summary: Retrieve all the Store's JSApps.
      tags:
        - Apps
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: JSApp parameters to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JSAppEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JSApp'
      summary: Create a Store JSApp.
      tags:
        - Apps
  '/jsapps/{code}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Code of the App
          in: path
          name: code
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: App Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing JSApp.
      tags:
        - Apps
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Code of the App
          in: path
          name: code
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JSApp'
      summary: Retrieve a JSApp.
      tags:
        - Apps
  '/order/{id}/fulfillments.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Order
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Fulfillment'
            type: array
        '404':
          description: Fulfillment Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve the Fulfillments associated with the Order.
      tags:
        - Fulfillments
  /orders.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Orders
          schema:
            items:
              $ref: '#/definitions/Order'
            type: array
      summary: Retrieve all Orders.
      tags:
        - Orders
    post:
      consumes:
        - application/json
      description: >-
        Orders created externally keep the given order product's values
        (bypassing internal promotion or product amounts).
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Order parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderCreate'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
      summary: Create a new Order.
      tags:
        - Orders
  '/orders/after/{id}.json':
    get:
      description: >-
        For example the GET /orders/after/5000 will return Order 5001, 5002,
        5003, etc.
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Order
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '404':
          description: Order Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve orders filtered by Order Id.
      tags:
        - Orders
  /orders/count.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
      summary: Count all Orders.
      tags:
        - Orders
  '/orders/status/{status}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Status of the Order used as filter
          enum:
            - Abandoned
            - Canceled
            - Pending Payment
            - Paid
          in: path
          name: status
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Order'
            type: array
        '404':
          description: Status Invalid.
          schema:
            $ref: '#/definitions/StatusInvalid'
      summary: Retrieve orders filtered by status.
      tags:
        - Orders
  '/orders/{id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Order
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '404':
          description: Order Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Order.
      tags:
        - Orders
    put:
      consumes:
        - application/json
      description: >-
        Only `status`, `shipment_status`, `tracking_number`, `tracking_company`,
        `tracking_url`, `additional_information` and `additional_fields` are
        available for update. An email is send if `shipment_status` changes.
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Order
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Order parameters to change
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '404':
          description: Order Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Modify an existing Order.
      tags:
        - Orders
  '/orders/{id}/history.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Order
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array with Order History
          schema:
            items:
              $ref: '#/definitions/OrderHistory'
            type: array
      summary: Retrieve all Order History.
      tags:
        - Orders
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the OrderHistory
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Order History parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderHistoryEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderHistory'
      summary: Create a new Order History Entry.
      tags:
        - Orders
  /pages.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Pages
          schema:
            items:
              $ref: '#/definitions/Page'
            type: array
      summary: Retrieve all Pages.
      tags:
        - Pages
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Page parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PageModify'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page'
      summary: Create a new Page.
      tags:
        - Pages
  /pages/count.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Total number of pages
          schema:
            $ref: '#/definitions/Count'
      summary: Count all Pages.
      tags:
        - Pages
  '/pages/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Page
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Page Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Page.
      tags:
        - Pages
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Page
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page'
        '404':
          description: Page Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Page by id.
      tags:
        - Pages
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Page
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Page parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PageModify'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page'
        '404':
          description: Page Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Page.
      tags:
        - Pages
  /partners/stores.json:
    get:
      parameters:
        - description: Partner code.
          format: string
          in: query
          name: partner_code
          required: true
          type: string
        - description: Partner authentication token.
          format: string
          in: query
          name: auth_token
          required: true
          type: string
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
        - description: Statistics start date. Should be in format 'Y-m-d'.
          format: string
          in: query
          name: from
          required: true
          type: string
        - description: Statistics end date. Should be in format 'Y-m-d'.
          format: sting
          in: query
          name: to
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Array of partner stores statistics.
          schema:
            items:
              $ref: '#/definitions/type'
            type: array
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/PartnerError'
      summary: Retrieve statistics.
      tags:
        - Partners
  /payment_methods.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of Payment Methods
          schema:
            items:
              $ref: '#/definitions/PaymentMethod'
            type: array
      summary: Retrieve all Store's Payment Methods.
      tags:
        - Payment Methods
  '/payment_methods/{id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Payment Method
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PaymentMethod'
        '404':
          description: PaymentMethod Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Payment Method.
      tags:
        - Payment Methods
  /products.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - default: 50
          description: List restriction
          format: integer
          in: query
          maximum: 200
          name: limit
          required: false
          type: integer
        - default: 1
          description: List page
          format: integer
          in: query
          name: page
          required: false
          type: integer
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
      summary: Retrieve all Products.
      tags:
        - Products
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Product parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
      summary: Create a new Product.
      tags:
        - Products
  '/products/after/{id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieves Products after the given id.
      tags:
        - Products
  '/products/category/{category_id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Category ID of the Product used as filter
          format: int32
          in: path
          name: category_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve Products filtered by category.
      tags:
        - Products
  '/products/category/{category_id}/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Category ID of the Product used as filter
          format: int32
          in: path
          name: category_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Category Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count Products filtered by category.
      tags:
        - Products
  /products/count.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
      summary: Count all Products.
      tags:
        - Products
  /products/search.json:
    get:
      description: >-
        Endpoint example: 


        ```text

        https://api.jumpseller.com/v1/products/search.json?login=XXXXXX&authtoken=XXXXX&query=test&fields=name,description 

        ```
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Text to query for the Product
          format: string
          in: query
          name: query
          required: true
          type: string
        - description: Comma separated values of the fields to query for the Product
          enum:
            - sku
            - barcode
            - brand
            - name
            - description
            - variants
            - option_name
            - custom_fields
            - custom_fields_selects
          format: string
          in: query
          name: fields
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of products
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        '404':
          description: Invalid query.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a Product List from a query.
      tags:
        - Products
  '/products/status/{status}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Status of the Product used as filter
          enum:
            - available
            - not-available
            - disabled
          in: path
          name: status
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        '404':
          description: Status Invalid.
          schema:
            $ref: '#/definitions/StatusInvalid'
      summary: Retrieve Products filtered by status.
      tags:
        - Products
  '/products/status/{status}/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Status of the Product used as filter
          enum:
            - available
            - not-available
            - disabled
          in: path
          name: status
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Status Invalid.
          schema:
            $ref: '#/definitions/StatusInvalid'
      summary: Count Products filtered by status.
      tags:
        - Products
  '/products/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Product.
      tags:
        - Products
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product.
      tags:
        - Products
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Locale code of the translation
          format: string
          in: query
          name: locale
          required: false
          type: string
        - description: Product parameters to change
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Modify an existing Product.
      tags:
        - Products
  '/products/{id}/attachments.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Attachment'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product Attachments.
      tags:
        - Product Attachments
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Product Attachment parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachmentEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Attachment'
      summary: Create a new Product Attachment.
      tags:
        - Product Attachments
  '/products/{id}/attachments/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product Attachments.
      tags:
        - Product Attachments
  '/products/{id}/attachments/{attachment_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Attachment
          format: int32
          in: path
          name: attachment_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Product Attachment.
      tags:
        - Product Attachments
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Attachment
          format: int32
          in: path
          name: attachment_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Attachment'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product Attachment.
      tags:
        - Product Attachments
  '/products/{id}/digital_products.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/DigitalProduct'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product DigitalProducts.
      tags:
        - Product DigitalProducts
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Product DigitalProduct parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DigitalProductEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DigitalProduct'
      summary: Create a new Product DigitalProduct.
      tags:
        - Product DigitalProducts
  '/products/{id}/digital_products/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product DigitalProducts.
      tags:
        - Product DigitalProducts
  '/products/{id}/digital_products/{digital_product_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product DigitalProduct
          format: int32
          in: path
          name: digital_product_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Product DigitalProduct.
      tags:
        - Product DigitalProducts
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product DigitalProduct
          format: int32
          in: path
          name: digital_product_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DigitalProduct'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product DigitalProduct.
      tags:
        - Product DigitalProducts
  '/products/{id}/fields.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProductCustomField'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product Custom Fields
      tags:
        - Product Custom Fields
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Product Custom Field parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AddProductCustomField'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Add an existing Custom Field to a Product.
      tags:
        - Product Custom Fields
  '/products/{id}/fields/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product Custom Fields.
      tags:
        - Product Custom Fields
  '/products/{id}/images.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Image'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product Images.
      tags:
        - Product Images
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Product Image parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ImageEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Image'
      summary: Create a new Product Image.
      tags:
        - Product Images
  '/products/{id}/images/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product Images.
      tags:
        - Product Images
  '/products/{id}/images/{image_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Image
          format: int32
          in: path
          name: image_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Product Image.
      tags:
        - Product Images
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Image
          format: int32
          in: path
          name: image_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Image'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product Image.
      tags:
        - Product Images
  '/products/{id}/options.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProductOption'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product Options.
      tags:
        - Product Options
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Product Option parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductOption'
      summary: Create a new Product Option.
      tags:
        - Product Options
  '/products/{id}/options/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product Options.
      tags:
        - Product Options
  '/products/{id}/options/{option_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Product Option.
      tags:
        - Product Options
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductOption'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product Option.
      tags:
        - Product Options
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
        - description: Product option parameters to change
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductOption'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Modify an existing Product Option.
      tags:
        - Product Options
  '/products/{id}/options/{option_id}/values.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: ID of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ProductOptionValue'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product Option Values.
      tags:
        - Product Option Values
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
        - description: Product Option Value parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionValueEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductOptionValue'
      summary: Create a new Product Option Value.
      tags:
        - Product Option Values
  '/products/{id}/options/{option_id}/values/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: ID of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product Option Values.
      tags:
        - Product Option Values
  '/products/{id}/options/{option_id}/values/{value_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
        - description: ID of the Product Option Value
          format: int32
          in: path
          name: value_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Product Option Value.
      tags:
        - Product Option Values
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
        - description: ID of the Product Option Value
          format: int32
          in: path
          name: value_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductOptionValue'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product Option Value.
      tags:
        - Product Option Values
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Option
          format: int32
          in: path
          name: option_id
          required: true
          type: integer
        - description: Id of the Product Option Value
          format: int32
          in: path
          name: value_id
          required: true
          type: integer
        - description: Product option value parameters to change
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductOptionValueEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductOptionValue'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Modify an existing Product Option Value.
      tags:
        - Product Option Values
  '/products/{id}/variants.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Variant'
            type: array
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve all Product Variants.
      tags:
        - Product Variants
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Product Variant parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VariantEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Variant'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new Product Variant.
      tags:
        - Product Variants
  '/products/{id}/variants/count.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: ID of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Count'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Count all Product Variants.
      tags:
        - Product Variants
  '/products/{id}/variants/{variant_id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Variant
          format: int32
          in: path
          name: variant_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Variant'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Product Variant.
      tags:
        - Product Variants
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Id of the Product Variant
          format: int32
          in: path
          name: variant_id
          required: true
          type: integer
        - description: Product Variant parameters to change
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VariantEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Variant'
        '404':
          description: Product Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Modify an existing Product Variant.
      tags:
        - Product Variants
  '/products/{product_id}/fields/{field_id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product.
          format: int32
          in: path
          name: product_id
          required: true
          type: integer
        - description: Id of the Custom Field Value.
          format: int32
          in: path
          name: field_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageObject'
        '404':
          description: Product or Custom Field Value Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete value of Product Custom Field
      tags:
        - Product Custom Fields
    put:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Product.
          format: int32
          in: path
          name: product_id
          required: true
          type: integer
        - description: Id of the Custom Field Value.
          format: int32
          in: path
          name: field_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductCustomField'
        '404':
          description: Product or Custom Field Value Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update value of Product Custom Field
      tags:
        - Product Custom Fields
  /promotions.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: 'Promotions'' list restriction (default: 50 | max: 200).'
          format: integer
          in: query
          name: limit
          required: false
          type: integer
        - description: 'Promotions'' list page (default: 1).'
          format: integer
          in: query
          name: page
          required: false
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: An array of Promotions
          schema:
            items:
              $ref: '#/definitions/Promotion'
            type: array
      summary: Retrieve all Promotions.
      tags:
        - Promotions
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Promotion parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PromotionEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Promotion'
        '404':
          description: Promotion Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new Promotion.
      tags:
        - Promotions
  '/promotions/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Promotion
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Promotion Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Promotion.
      tags:
        - Promotions
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Promotion
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Promotion'
        '404':
          description: Promotion Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Promotion.
      tags:
        - Promotions
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Promotion
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Promotion parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PromotionEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Promotion'
        '404':
          description: Promotion Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Promotion.
      tags:
        - Promotions
  /shipping_methods.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of Shipping Methods
          schema:
            items:
              $ref: '#/definitions/ShippingMethod'
            type: array
      summary: Retrieve all Store's Shipping Methods.
      tags:
        - Shipping Methods
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Shipping Method parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ShippingMethodEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShippingMethod'
        '404':
          description: ShippingMethod Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Creates a Shipping Method.
      tags:
        - Shipping Methods
  '/shipping_methods/{id}.json':
    delete:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Shipping Method
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '404':
          description: Shipping Method Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete an existing Shipping Method.
      tags:
        - Shipping Methods
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Shipping Method
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShippingMethod'
        '404':
          description: ShippingMethod Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Shipping Method.
      tags:
        - Shipping Methods
    put:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Shipping Method
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Shipping Method parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ShippingMethodEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShippingMethod'
        '404':
          description: Shipping Method Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Shipping Method.
      tags:
        - Shipping Methods
  /store/check_status.json:
    get:
      parameters:
        - description: Partner code.
          format: string
          in: query
          name: partner_code
          required: true
          type: string
        - description: Partner authentication token.
          format: string
          in: query
          name: auth_token
          required: true
          type: string
        - description: Store Code
          format: string
          in: query
          name: store_code
          required: true
          type: string
        - default: en
          description: ISO 3166-2 code of the language used in the response messages.
          format: string
          in: query
          name: locale
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: >-
            A Store status object if creation is still in progress. A new
            Partner Store object when creation is done.
          schema: {}
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/PartnerError'
      summary: Retrive store creation status.
      tags:
        - Partners
  /store/create.json:
    post:
      consumes:
        - application/json
      parameters:
        - description: Partner code.
          format: string
          in: query
          name: partner_code
          required: true
          type: string
        - description: Partner authentication token.
          format: string
          in: query
          name: auth_token
          required: true
          type: string
        - description: New partnered Store parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PartnerStoreCreate'
      produces:
        - application/json
      responses:
        '200':
          description: A Partner Store object.
          schema:
            $ref: '#/definitions/PartnerStoreCode'
        '400':
          description: Bad Request.
          schema:
            $ref: '#/definitions/PartnerError'
      summary: Create a Partnered Store
      tags:
        - Partners
  /store/info.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Store'
      summary: Retrieve Store Information.
      tags:
        - Stores
  /store/languages.json:
    get:
      description: ''
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Language'
            type: array
      summary: Retrieve Store Languages.
      tags:
        - Stores
  /taxes.json:
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: An array of Taxes
          schema:
            items:
              $ref: '#/definitions/Tax'
            type: array
      summary: Retrieve all Taxes.
      tags:
        - Taxes
    post:
      consumes:
        - application/json
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Tax parameters.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TaxEdit'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Tax'
        '404':
          description: Tax Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a new Tax.
      tags:
        - Taxes
  '/taxes/{id}.json':
    get:
      parameters:
        - description: API OAuth login.
          format: string
          in: query
          name: login
          required: true
          type: string
        - description: API OAuth token.
          format: string
          in: query
          name: authtoken
          required: true
          type: string
        - description: Id of the Tax
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: A Tax information object
          schema:
            $ref: '#/definitions/Tax'
        '404':
          description: Tax Not Found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Retrieve a single Tax information.
      tags:
        - Taxes
schemes:
  - https
swagger: '2.0'
x-components:
  parameters:
    AuthtokenParam:
      description: API OAuth token.
      format: string
      in: query
      name: authtoken
      required: true
      type: string
    CustomerIDParam:
      description: Id of the Customer
      format: int32
      in: path
      name: id
      required: true
      type: integer
    LimitParam:
      default: 50
      description: List restriction
      format: integer
      in: query
      maximum: 200
      name: limit
      required: false
      type: integer
    LocaleParam:
      description: Locale code of the translation
      format: string
      in: query
      name: locale
      required: false
      type: string
    LoginParam:
      description: API OAuth login.
      format: string
      in: query
      name: login
      required: true
      type: string
    PageParam:
      default: 1
      description: List page
      format: integer
      in: query
      name: page
      required: false
      type: integer
    PartnerAuthtokenParam:
      description: Partner authentication token.
      format: string
      in: query
      name: auth_token
      required: true
      type: string
    PartnerCodeParam:
      description: Partner code.
      format: string
      in: query
      name: partner_code
      required: true
      type: string
    ProductIDParam:
      description: Id of the Product
      format: int32
      in: path
      name: id
      required: true
      type: integer
  requestBodies:
    CategoryEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CategoryEdit'
      description: Category parameters.
      required: true
    CheckoutCustomFieldEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CheckoutCustomFieldEdit'
      description: CheckoutCustomField parameters.
      required: true
    CustomerAdditionalFieldEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CustomerAdditionalFieldEdit'
      description: Customer Additional Field parameters.
      required: true
    CustomerCategoryEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CustomerCategoryEdit'
      description: CustomerCategory parameters.
      required: true
    CustomerWithPasswordNoID:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CustomerWithPasswordNoID'
      description: Customer parameters.
      required: true
    CustomersToCustomerCategory:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CustomersToCustomerCategory'
      description: Customer parameters.
      required: true
    HookEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/HookEdit'
      description: Hook parameters.
      required: true
    PageModify:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PageModify'
      description: Page parameters.
      required: true
    PromotionEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PromotionEdit'
      description: Promotion parameters.
      required: true
    ShippingMethodEdit:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ShippingMethodEdit'
      description: Shipping Method parameters.
      required: true

