definitions:
  AddressInputModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
    type: object
  AddressUpdateModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
    type: object
  AppointmentAuditViewModel:
    additionalProperties: false
    properties:
      appointmentId:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      modificationType:
        type: string
        x-nullable: true
      modifiedBy:
        type: string
        x-nullable: true
      modifiedOn:
        format: date-time
        type: string
        x-nullable: true
      notesAfter:
        type: string
        x-nullable: true
      notesBefore:
        type: string
        x-nullable: true
      statusAfter:
        type: string
        x-nullable: true
      statusBefore:
        type: string
        x-nullable: true
    type: object
  AppointmentCustomerViewModel:
    additionalProperties: false
    properties:
      appointmentId:
        type: string
        x-nullable: true
      customerId:
        type: string
        x-nullable: true
    type: object
  AppointmentListViewModel:
    additionalProperties: false
    type: object
  AppointmentResourceViewModel:
    additionalProperties: false
    properties:
      appointmentId:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
    type: object
  AppointmentViewModel:
    additionalProperties: false
    properties:
      auditTrail:
        items:
          $ref: '#/definitions/AppointmentAuditViewModel'
        type: array
        x-nullable: true
      bookedBy:
        type: string
        x-nullable: true
      businessName:
        type: string
        x-nullable: true
      calendarId:
        type: string
        x-nullable: true
      confirmationNumber:
        type: string
        x-nullable: true
      confirmed:
        type: boolean
      createDate:
        type: string
        x-nullable: true
      customFields:
        additionalProperties:
          $ref: '#/definitions/CustomFieldViewModel'
        type: object
        x-nullable: true
      customerId:
        type: string
        x-nullable: true
      customerMessage:
        type: string
        x-nullable: true
      customers:
        items:
          $ref: '#/definitions/AppointmentCustomerViewModel'
        type: array
        x-nullable: true
      date:
        type: string
        x-nullable: true
      dateInternational:
        type: string
        x-nullable: true
      downloadIcsUrl:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
      email:
        type: string
        x-nullable: true
      emailConfirmationSent:
        type: string
        x-nullable: true
      emailReminderSent:
        type: string
        x-nullable: true
      endDateTime:
        type: string
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      groupSize:
        format: int32
        type: integer
        x-nullable: true
      id:
        type: string
        x-nullable: true
      ipAddress:
        type: string
        x-nullable: true
      lastModifiedBy:
        type: string
        x-nullable: true
      lastModifiedOn:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      latitude:
        type: string
        x-nullable: true
      location:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      longitude:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notes:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      onlineBooking:
        type: boolean
        x-nullable: true
      paymentStatus:
        format: int32
        type: integer
      phone:
        type: string
        x-nullable: true
      phoneExt:
        type: string
        x-nullable: true
      phoneType:
        type: string
        x-nullable: true
      rescheduledId:
        type: string
        x-nullable: true
      resourceGroupId:
        type: string
        x-nullable: true
      resourceGroupName:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceImageUrl:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      resources:
        items:
          $ref: '#/definitions/AppointmentResourceViewModel'
        type: array
        x-nullable: true
      serviceAllocationId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      serviceImageUrl:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      smsConfirmationSent:
        type: string
        x-nullable: true
      smsReminderSent:
        type: string
        x-nullable: true
      startDateTime:
        type: string
        x-nullable: true
      status:
        type: string
        x-nullable: true
      stripeChargeId:
        type: string
        x-nullable: true
      stripeRefundId:
        type: string
        x-nullable: true
      time:
        format: int32
        type: integer
      timezone:
        format: int32
        type: integer
        x-nullable: true
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
    type: object
  AuthorizedCompanyListViewModel:
    additionalProperties: false
    properties:
      email:
        type: string
        x-nullable: true
    type: object
  AvailabilityInputModel:
    additionalProperties: false
    properties:
      fri:
        $ref: '#/definitions/WeekDayInputModel'
      mon:
        $ref: '#/definitions/WeekDayInputModel'
      sat:
        $ref: '#/definitions/WeekDayInputModel'
      sun:
        $ref: '#/definitions/WeekDayInputModel'
      thu:
        $ref: '#/definitions/WeekDayInputModel'
      tue:
        $ref: '#/definitions/WeekDayInputModel'
      wed:
        $ref: '#/definitions/WeekDayInputModel'
    type: object
  BookingWindowInputModel:
    additionalProperties: false
    properties:
      fromTime:
        format: int32
        type: integer
      maxBookings:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      toTime:
        format: int32
        type: integer
    type: object
  BookingWindowUpdateModel:
    additionalProperties: false
    properties:
      fromTime:
        format: int32
        type: integer
      maxBookings:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      toTime:
        format: int32
        type: integer
    type: object
  BookingWindowViewModel:
    additionalProperties: false
    properties:
      fromTime:
        format: int32
        type: integer
      id:
        type: string
        x-nullable: true
      maxBookings:
        format: int32
        type: integer
      objectName:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      toTime:
        format: int32
        type: integer
    type: object
  BusinessDefaultsInputModel:
    additionalProperties: false
    properties:
      autoUpdateCustomer:
        type: boolean
        x-nullable: true
      businessNotification:
        type: boolean
        x-nullable: true
      customerCity:
        type: boolean
        x-nullable: true
      customerState:
        type: boolean
        x-nullable: true
      emailInfo:
        type: boolean
        x-nullable: true
      enableUtcTimezone:
        type: boolean
        x-nullable: true
    type: object
  BusinessDefaultsUpdateModel:
    additionalProperties: false
    properties:
      autoUpdateCustomer:
        type: boolean
        x-nullable: true
      businessNotification:
        type: boolean
        x-nullable: true
      customerCity:
        type: boolean
        x-nullable: true
      customerState:
        type: boolean
        x-nullable: true
      emailInfo:
        type: boolean
        x-nullable: true
      enableUtcTimezone:
        type: boolean
        x-nullable: true
    type: object
  BusinessHourInputModel:
    additionalProperties: false
    properties:
      endTime:
        description: "endTime is entered in military format. e.g. 1800 = 6pm end, 2400 = midnight end of day.\r\nFor 24 hours enter startTime = 0 and endTime = 2400"
        format: int32
        type: integer
      is24Hours:
        description: >-
          If true then available for 24 hours. startTime must be zero and
          endTime must be 2400.
        type: boolean
      isOpen:
        description: >-
          If false, then not available entire day, starTime and endTime must
          both be zero. If true, then available between startTime and endTime.
        type: boolean
      startTime:
        description: >-
          startTime is entered in military format. e.g. 0 = midnight start, 900
          = 9am start
        format: int32
        type: integer
    type: object
  BusinessHoursInputModel:
    additionalProperties: false
    properties:
      fri:
        $ref: '#/definitions/BusinessHourInputModel'
      mon:
        $ref: '#/definitions/BusinessHourInputModel'
      sat:
        $ref: '#/definitions/BusinessHourInputModel'
      sun:
        $ref: '#/definitions/BusinessHourInputModel'
      thu:
        $ref: '#/definitions/BusinessHourInputModel'
      tue:
        $ref: '#/definitions/BusinessHourInputModel'
      wed:
        $ref: '#/definitions/BusinessHourInputModel'
    type: object
  BusinessHoursUpdateModel:
    additionalProperties: false
    properties:
      fri:
        $ref: '#/definitions/BusinessHourInputModel'
      mon:
        $ref: '#/definitions/BusinessHourInputModel'
      sat:
        $ref: '#/definitions/BusinessHourInputModel'
      sun:
        $ref: '#/definitions/BusinessHourInputModel'
      thu:
        $ref: '#/definitions/BusinessHourInputModel'
      tue:
        $ref: '#/definitions/BusinessHourInputModel'
      wed:
        $ref: '#/definitions/BusinessHourInputModel'
    type: object
  BusinessPermissionListViewModel:
    additionalProperties: false
    type: object
  BusinessServiceListViewModel:
    additionalProperties: false
    type: object
  BusinessServiceViewModel:
    additionalProperties: false
    properties:
      id:
        format: int32
        type: integer
      objectName:
        type: string
        x-nullable: true
      serviceId:
        format: int32
        type: integer
      serviceName:
        type: string
        x-nullable: true
    type: object
  BusinessUserInputModel:
    additionalProperties: false
    properties:
      email:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      role:
        type: string
        x-nullable: true
      sendRegistrationInvite:
        type: boolean
    type: object
  BusinessUserListViewModel:
    additionalProperties: false
    type: object
  BusinessUserUpdateModel:
    additionalProperties: false
    properties:
      email:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      role:
        type: string
        x-nullable: true
      sendRegistrationInvite:
        type: boolean
    type: object
  BusinessUserViewModel:
    additionalProperties: false
    properties:
      accountId:
        format: uuid
        type: string
        x-nullable: true
      businessName:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      identityAccount:
        type: boolean
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      role:
        type: string
        x-nullable: true
    type: object
  CalendarAuthViewModel:
    additionalProperties: false
    properties:
      calendarAuthUrl:
        type: string
        x-nullable: true
      calendarId:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  CalendarBlockInputModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  CalendarBlockListViewModel:
    additionalProperties: false
    type: object
  CalendarBlockViewModel:
    additionalProperties: false
    properties:
      calendarId:
        type: string
        x-nullable: true
      endDate:
        format: date-time
        type: string
      endTime:
        format: int32
        type: integer
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatViewModel'
      repeats:
        type: boolean
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  CompanyDomainInputModel:
    additionalProperties: false
    properties:
      domain:
        type: string
        x-nullable: true
    type: object
  CompanyDomainListViewModel:
    additionalProperties: false
    properties:
      data:
        items:
          $ref: '#/definitions/CompanyDomainViewModel'
        type: array
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      url:
        type: string
        x-nullable: true
    type: object
  CompanyDomainUpdateModel:
    additionalProperties: false
    properties:
      domain:
        type: string
        x-nullable: true
    type: object
  CompanyDomainViewModel:
    additionalProperties: false
    properties:
      domain:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  CompanyInputModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      bookingWebhookUrl:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      customerWebhookUrl:
        type: string
        x-nullable: true
      disableEmailAndSmsNotifications:
        type: boolean
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationFromEmailAddress:
        type: string
        x-nullable: true
      notificationFromName:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      registrationEmail:
        type: string
        x-nullable: true
      reminderWebhookUrl:
        type: string
        x-nullable: true
      resourceWebhookUrl:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
      timezoneName:
        type: string
        x-nullable: true
      webhookSignatureHash:
        type: string
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  CompanyUpdateModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      bookingWebhookUrl:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      customerWebhookUrl:
        type: string
        x-nullable: true
      disableEmailAndSmsNotifications:
        type: boolean
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationFromEmailAddress:
        type: string
        x-nullable: true
      notificationFromName:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      registrationEmail:
        type: string
        x-nullable: true
      reminderWebhookUrl:
        type: string
        x-nullable: true
      resourceWebhookUrl:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
      timezoneName:
        type: string
        x-nullable: true
      webhookSignatureHash:
        type: string
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  CompanyViewModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      bookingWebhookUrl:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      clientId:
        type: string
        x-nullable: true
      clientSecret:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      customerWebhookUrl:
        type: string
        x-nullable: true
      deletedStatus:
        type: boolean
      deletedTime:
        type: string
        x-nullable: true
      disableEmailAndSmsNotifications:
        type: boolean
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationFromEmailAddress:
        type: string
        x-nullable: true
      notificationFromName:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      registrationDate:
        type: string
        x-nullable: true
      registrationEmail:
        type: string
        x-nullable: true
      reminderWebhookUrl:
        type: string
        x-nullable: true
      resourceWebhookUrl:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  ContactInputModel:
    additionalProperties: false
    properties:
      businessPhone:
        type: string
        x-nullable: true
      businessPhoneExt:
        type: string
        x-nullable: true
      conferenceInfo:
        type: string
        x-nullable: true
      homePhone:
        type: string
        x-nullable: true
      mobilePhone:
        type: string
        x-nullable: true
      preferredPhoneType:
        type: string
        x-nullable: true
      skypeUsername:
        type: string
        x-nullable: true
    type: object
  ContactUpdateModel:
    additionalProperties: false
    properties:
      businessPhone:
        type: string
        x-nullable: true
      businessPhoneExt:
        type: string
        x-nullable: true
      conferenceInfo:
        type: string
        x-nullable: true
      homePhone:
        type: string
        x-nullable: true
      mobilePhone:
        type: string
        x-nullable: true
      preferredPhoneType:
        type: string
        x-nullable: true
      skypeUsername:
        type: string
        x-nullable: true
    type: object
  ContentResult:
    additionalProperties: false
    properties:
      content:
        type: string
        x-nullable: true
      contentType:
        type: string
        x-nullable: true
      statusCode:
        format: int32
        type: integer
        x-nullable: true
    type: object
  CustomFieldInputModel:
    additionalProperties: false
    properties:
      field1:
        type: string
        x-nullable: true
      field10:
        type: string
        x-nullable: true
      field2:
        type: string
        x-nullable: true
      field3:
        type: string
        x-nullable: true
      field4:
        type: string
        x-nullable: true
      field5:
        type: string
        x-nullable: true
      field6:
        type: string
        x-nullable: true
      field7:
        type: string
        x-nullable: true
      field8:
        type: string
        x-nullable: true
      field9:
        type: string
        x-nullable: true
    type: object
  CustomFieldUpdateModel:
    additionalProperties: false
    properties:
      field1:
        type: string
        x-nullable: true
      field10:
        type: string
        x-nullable: true
      field2:
        type: string
        x-nullable: true
      field3:
        type: string
        x-nullable: true
      field4:
        type: string
        x-nullable: true
      field5:
        type: string
        x-nullable: true
      field6:
        type: string
        x-nullable: true
      field7:
        type: string
        x-nullable: true
      field8:
        type: string
        x-nullable: true
      field9:
        type: string
        x-nullable: true
    type: object
  CustomFieldViewModel:
    additionalProperties: false
    properties:
      name:
        type: string
        x-nullable: true
      value:
        type: string
        x-nullable: true
    type: object
  CustomerListViewModel:
    additionalProperties: false
    type: object
  CustomerPrivacyViewModel:
    additionalProperties: false
    type: object
  CustomerViewModel:
    additionalProperties: false
    properties:
      birthdate:
        type: string
        x-nullable: true
      businessName:
        type: string
        x-nullable: true
      companyName:
        type: string
        x-nullable: true
      createdBy:
        type: string
        x-nullable: true
      createdOn:
        type: string
        x-nullable: true
      deletedStatus:
        type: boolean
      deletedTime:
        type: string
        x-nullable: true
      disabled:
        type: boolean
        x-nullable: true
      email:
        type: string
        x-nullable: true
      emailInfo:
        type: boolean
        x-nullable: true
      emailPromotion:
        type: boolean
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      gender:
        type: string
        x-nullable: true
      groupId:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      inviteEmailSent:
        type: string
        x-nullable: true
      lastVisitDate:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      latitude:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      longitude:
        type: string
        x-nullable: true
      modifiedBy:
        type: string
        x-nullable: true
      modifiedOn:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationType:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      registeredBy:
        type: string
        x-nullable: true
      registrationDate:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      stripeCustomerId:
        type: string
        x-nullable: true
      subscriptionId:
        type: string
        x-nullable: true
      verificationDate:
        type: string
        x-nullable: true
      verifiedBy:
        type: string
        x-nullable: true
      welcomeEmailSent:
        type: string
        x-nullable: true
    type: object
  EmailTemplateInputModel:
    additionalProperties: false
    type: object
  EmailTemplateListViewModel:
    additionalProperties: false
    type: object
  GoogleServiceAccountCreds:
    additionalProperties: false
    properties:
      auth_provider_x509_cert_url:
        type: string
        x-nullable: true
      auth_uri:
        type: string
        x-nullable: true
      client_email:
        type: string
        x-nullable: true
      client_id:
        type: string
        x-nullable: true
      client_x509_cert_url:
        type: string
        x-nullable: true
      private_key:
        type: string
        x-nullable: true
      private_key_id:
        type: string
        x-nullable: true
      project_id:
        type: string
        x-nullable: true
      token_uri:
        type: string
        x-nullable: true
      type:
        type: string
        x-nullable: true
    type: object
  LocationInputModel:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressInputModel'
      adminEmail:
        description: Field is required.
        type: string
        x-nullable: true
      adminName:
        description: This field is no longer required and has been deprecated.
        type: string
        x-nullable: true
      businessHours:
        $ref: '#/definitions/BusinessHoursInputModel'
      defaults:
        $ref: '#/definitions/BusinessDefaultsInputModel'
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      friendlyId:
        description: "Use the friendlyId as an alternative to the assigned locationId\r\nChoose something easy and meaningful. Must be unique within your company.\r\nFriendlyId's are limited to maximum of 64 characters."
        type: string
        x-nullable: true
      maxCapacity:
        format: int32
        type: integer
        x-nullable: true
      maxGroupSize:
        description: "GroupSize Limits the number of people that can come\r\nalong on a single appointment"
        format: int32
        type: integer
        x-nullable: true
      name:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      regionId:
        type: string
        x-nullable: true
      settings:
        $ref: '#/definitions/OnlineSettingsInputModel'
      timezoneName:
        description: >-
          Field is required. It is in Iana format. e.g. America/New_York. Use
          moment.js in your client for ease of timezone detection and selection
        type: string
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  LocationListViewModel:
    additionalProperties: false
    type: object
  LocationUpdateModel:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressUpdateModel'
      adminEmail:
        type: string
        x-nullable: true
      adminName:
        type: string
        x-nullable: true
      businessHours:
        $ref: '#/definitions/BusinessHoursUpdateModel'
      defaults:
        $ref: '#/definitions/BusinessDefaultsUpdateModel'
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      friendlyId:
        type: string
        x-nullable: true
      maxCapacity:
        format: int32
        type: integer
        x-nullable: true
      maxGroupSize:
        format: int32
        type: integer
        x-nullable: true
      name:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      regionId:
        type: string
        x-nullable: true
      settings:
        $ref: '#/definitions/OnlineSettingsUpdateModel'
      timezoneName:
        type: string
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  LocationViewModel:
    additionalProperties: false
    properties:
      adminEmail:
        type: string
        x-nullable: true
      adminName:
        type: string
        x-nullable: true
      companyId:
        type: string
        x-nullable: true
      companyName:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      friendlyId:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      imageUrl:
        type: string
        x-nullable: true
      latitude:
        format: double
        type: number
      logo:
        type: string
        x-nullable: true
      longitude:
        format: double
        type: number
      maxCapacity:
        format: int32
        type: integer
      maxGroupSize:
        format: int32
        type: integer
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      primaryBusiness:
        type: boolean
      primaryCalendarId:
        type: string
        x-nullable: true
      regionId:
        type: string
        x-nullable: true
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
      timezoneOffset:
        format: int32
        type: integer
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  LocationsInputModel:
    additionalProperties: false
    type: object
  MasterEmailTemplateSettingsViewModel:
    additionalProperties: false
    properties:
      centerEmailContent:
        type: boolean
      centerEmailContentPanel:
        type: boolean
      centerEmailFooter:
        type: boolean
      contentBackgroundColor:
        type: string
        x-nullable: true
      contentColor:
        type: string
        x-nullable: true
      contentLinkColor:
        type: string
        x-nullable: true
      emailBackgroundColor:
        type: string
        x-nullable: true
      emailColor:
        type: string
        x-nullable: true
      emailLinkColor:
        type: string
        x-nullable: true
      footerFontSize:
        type: string
        x-nullable: true
      footerLogoHeight:
        type: string
        x-nullable: true
      footerLogoPadding:
        type: string
        x-nullable: true
      footerPanelEmailContact:
        type: boolean
      footerPanelPhoneContact:
        type: boolean
      footerPanelWebsiteContact:
        type: boolean
      headerLogoHeight:
        type: string
        x-nullable: true
      headerLogoPadding:
        type: string
        x-nullable: true
      panelBackgroundColor:
        type: string
        x-nullable: true
      panelColor:
        type: string
        x-nullable: true
      panelLinkColor:
        type: string
        x-nullable: true
      privacyPolicyLink:
        type: string
        x-nullable: true
      showContentPanel:
        type: boolean
      showFooterLogo:
        type: boolean
      showFooterPanel:
        type: boolean
      showHeaderLogo:
        type: boolean
      showHeaderPanel:
        type: boolean
      version:
        type: string
        x-nullable: true
    type: object
  MasterTemplateSettingsInputModel:
    additionalProperties: false
    properties:
      centerEmailContent:
        type: boolean
        x-nullable: true
      centerEmailContentPanel:
        type: boolean
        x-nullable: true
      centerEmailFooter:
        type: boolean
        x-nullable: true
      contentBackgroundColor:
        type: string
        x-nullable: true
      contentColor:
        type: string
        x-nullable: true
      contentLinkColor:
        type: string
        x-nullable: true
      emailBackgroundColor:
        type: string
        x-nullable: true
      emailColor:
        type: string
        x-nullable: true
      emailLinkColor:
        type: string
        x-nullable: true
      footerFontSize:
        type: string
        x-nullable: true
      footerLogoHeight:
        type: string
        x-nullable: true
      footerLogoPadding:
        type: string
        x-nullable: true
      footerPanelEmailContact:
        type: boolean
        x-nullable: true
      footerPanelPhoneContact:
        type: boolean
        x-nullable: true
      footerPanelWebsiteContact:
        type: boolean
        x-nullable: true
      headerLogoHeight:
        type: string
        x-nullable: true
      headerLogoPadding:
        type: string
        x-nullable: true
      panelBackgroundColor:
        type: string
        x-nullable: true
      panelColor:
        type: string
        x-nullable: true
      panelLinkColor:
        type: string
        x-nullable: true
      privacyPolicyLink:
        type: string
        x-nullable: true
      showContentPanel:
        type: boolean
        x-nullable: true
      showFooterLogo:
        type: boolean
        x-nullable: true
      showFooterPanel:
        type: boolean
        x-nullable: true
      showHeaderLogo:
        type: boolean
        x-nullable: true
      showHeaderPanel:
        type: boolean
        x-nullable: true
    type: object
  OnlineSettingsInputModel:
    additionalProperties: false
    properties:
      bookAheadUnit:
        format: int32
        type: integer
        x-nullable: true
      bookAheadValue:
        format: int32
        type: integer
        x-nullable: true
      bookInAdvance:
        format: int32
        type: integer
        x-nullable: true
      bookingTimerMins:
        format: int32
        type: integer
        x-nullable: true
      customerBookingsPerDay:
        format: int32
        type: integer
        x-nullable: true
      enableWorldTimezones:
        type: boolean
        x-nullable: true
    type: object
  OnlineSettingsUpdateModel:
    additionalProperties: false
    properties:
      bookAheadUnit:
        format: int32
        type: integer
        x-nullable: true
      bookAheadValue:
        format: int32
        type: integer
        x-nullable: true
      bookInAdvance:
        format: int32
        type: integer
        x-nullable: true
      bookingTimerMins:
        format: int32
        type: integer
        x-nullable: true
      customerBookingsPerDay:
        format: int32
        type: integer
        x-nullable: true
      enableWorldTimezones:
        type: boolean
        x-nullable: true
    type: object
  RegionInputModel:
    additionalProperties: false
    properties:
      name:
        type: string
        x-nullable: true
    type: object
  RegionListViewModel:
    additionalProperties: false
    type: object
  RegionUpdateModel:
    additionalProperties: false
    properties:
      name:
        type: string
        x-nullable: true
    type: object
  RegionViewModel:
    additionalProperties: false
    properties:
      id:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  RepeatInputModel:
    additionalProperties: false
    properties:
      frequency:
        type: string
        x-nullable: true
      interval:
        format: int32
        type: integer
        x-nullable: true
      monthDay:
        format: int32
        type: integer
        x-nullable: true
      monthType:
        type: string
        x-nullable: true
      weekdays:
        type: string
        x-nullable: true
    type: object
  RepeatUpdateModel:
    additionalProperties: false
    properties:
      frequency:
        type: string
        x-nullable: true
      interval:
        format: int32
        type: integer
        x-nullable: true
      monthDay:
        format: int32
        type: integer
        x-nullable: true
      monthType:
        type: string
        x-nullable: true
      weekdays:
        type: string
        x-nullable: true
    type: object
  RepeatViewModel:
    additionalProperties: false
    properties:
      frequency:
        type: string
        x-nullable: true
      interval:
        format: int32
        type: integer
      monthDay:
        type: string
        x-nullable: true
      monthType:
        type: string
        x-nullable: true
      weekdays:
        type: string
        x-nullable: true
    type: object
  ResourceAllocationInputModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      startDate:
        format: date-time
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
    type: object
  ResourceAllocationListViewModel:
    additionalProperties: false
    type: object
  ResourceAllocationUpdateModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      startDate:
        format: date-time
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
    type: object
  ResourceAllocationViewModel:
    additionalProperties: false
    properties:
      businessId:
        format: int32
        type: integer
      endDate:
        format: date-time
        type: string
      endTime:
        format: int32
        type: integer
      id:
        format: int32
        type: integer
      objectName:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatViewModel'
      repeats:
        type: boolean
      resourceId:
        format: int32
        type: integer
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  ResourceAvailabilityViewModel:
    additionalProperties: false
    properties:
      businessId:
        format: int32
        type: integer
      ignoreBusinessHours:
        type: boolean
      resourceId:
        format: int32
        type: integer
      resourceName:
        type: string
        x-nullable: true
      resourceTzo:
        format: int32
        type: integer
    type: object
  ResourceBlockInputModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      startDate:
        format: date-time
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
    type: object
  ResourceBlockListViewModel:
    additionalProperties: false
    type: object
  ResourceBlockUpdateModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      startDate:
        format: date-time
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
    type: object
  ResourceBlockViewModel:
    additionalProperties: false
    properties:
      businessId:
        format: int32
        type: integer
      endDate:
        format: date-time
        type: string
      endTime:
        format: int32
        type: integer
      id:
        format: int32
        type: integer
      objectName:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatViewModel'
      repeats:
        type: boolean
      resourceId:
        format: int32
        type: integer
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  ResourceGroupInputModel:
    additionalProperties: false
    properties:
      description:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
    type: object
  ResourceGroupListViewModel:
    additionalProperties: false
    type: object
  ResourceGroupUpdateModel:
    additionalProperties: false
    properties:
      description:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
    type: object
  ResourceGroupViewModel:
    additionalProperties: false
    properties:
      bookingNotification:
        format: int32
        type: integer
      deletedStatus:
        type: boolean
      deletedTime:
        format: date-time
        type: string
        x-nullable: true
      description:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  ResourceImageInputModel:
    additionalProperties: false
    properties:
      imageFileData:
        type: string
        x-nullable: true
      imageFileName:
        type: string
        x-nullable: true
    type: object
  ResourceInputModel:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressInputModel'
      availability:
        $ref: '#/definitions/AvailabilityInputModel'
      contact:
        $ref: '#/definitions/ContactInputModel'
      customFields:
        $ref: '#/definitions/CustomFieldInputModel'
      description:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      groupId:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      options:
        $ref: '#/definitions/ResourceOptionsInputModel'
      serviceIds:
        items:
          type: string
        type: array
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
    type: object
  ResourceListViewModel:
    additionalProperties: false
    type: object
  ResourceOptionsInputModel:
    additionalProperties: false
    description: Options for the new resource
    properties:
      bioLink:
        type: string
        x-nullable: true
      bookingNotification:
        format: int32
        type: integer
        x-nullable: true
      calendarAvailability:
        description: '0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar'
        format: int32
        type: integer
        x-nullable: true
      displayColor:
        type: string
        x-nullable: true
      effectiveDate:
        format: date-time
        type: string
        x-nullable: true
      gender:
        type: string
        x-nullable: true
      googleCalendarId:
        type: string
        x-nullable: true
      hourly:
        format: double
        type: number
        x-nullable: true
      ignoreBusinessHours:
        type: boolean
        x-nullable: true
      notificationType:
        description: '0 = None, 1=Online Bookings 2=All Bookings.'
        format: int32
        type: integer
        x-nullable: true
      outlookCalendarId:
        type: string
        x-nullable: true
      sortKey:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ResourceOptionsUpdateModel:
    additionalProperties: false
    properties:
      bioLink:
        type: string
        x-nullable: true
      bookingNotification:
        format: int32
        type: integer
        x-nullable: true
      calendarAvailability:
        description: '0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar'
        format: int32
        type: integer
        x-nullable: true
      displayColor:
        type: string
        x-nullable: true
      effectiveDate:
        format: date-time
        type: string
        x-nullable: true
      gender:
        type: string
        x-nullable: true
      googleCalendarId:
        type: string
        x-nullable: true
      hourly:
        format: double
        type: number
        x-nullable: true
      ignoreBusinessHours:
        type: boolean
        x-nullable: true
      notificationType:
        description: '0 = None, 1=Online Bookings 2=All Bookings.'
        format: int32
        type: integer
        x-nullable: true
      outlookCalendarId:
        type: string
        x-nullable: true
      sortKey:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ResourceUpdateModel:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressUpdateModel'
      availability:
        $ref: '#/definitions/AvailabilityInputModel'
      contact:
        $ref: '#/definitions/ContactUpdateModel'
      customFields:
        $ref: '#/definitions/CustomFieldUpdateModel'
      description:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      groupId:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      options:
        $ref: '#/definitions/ResourceOptionsUpdateModel'
      serviceIds:
        items:
          type: string
        type: array
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
    type: object
  ResourceViewModel:
    additionalProperties: false
    properties:
      bioLink:
        type: string
        x-nullable: true
      bookingNotification:
        format: int32
        type: integer
      calendarAvailability:
        format: int32
        type: integer
      deletedStatus:
        type: boolean
      deletedTime:
        format: date-time
        type: string
        x-nullable: true
      description:
        type: string
        x-nullable: true
      effectiveDate:
        format: date-time
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      gender:
        type: string
        x-nullable: true
      googleCalendarAuthUrl:
        type: string
        x-nullable: true
      googleCalendarAuthorized:
        type: boolean
      googleCalendarId:
        type: string
        x-nullable: true
      groupId:
        format: int32
        type: integer
        x-nullable: true
      hourly:
        format: double
        type: number
        x-nullable: true
      id:
        type: string
        x-nullable: true
      ignoreBusinessHours:
        type: boolean
      imageUrl:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationType:
        format: int32
        type: integer
      objectName:
        type: string
        x-nullable: true
      outlookCalendarAuthUrl:
        type: string
        x-nullable: true
      outlookCalendarAuthorized:
        type: boolean
      outlookCalendarId:
        type: string
        x-nullable: true
      skypeName:
        type: string
        x-nullable: true
      sortKey:
        format: int32
        type: integer
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
      timezoneOffset:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ResourcesInputModel:
    additionalProperties: false
    type: object
  ResourcesUpdateModel:
    additionalProperties: false
    type: object
  ScheduleInputModel:
    additionalProperties: false
    properties:
      availability:
        $ref: '#/definitions/AvailabilityInputModel'
      bookingsPerSlot:
        format: int32
        type: integer
      interval:
        format: int32
        type: integer
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      resourceGroupId:
        type: string
        x-nullable: true
      type:
        type: string
        x-nullable: true
    type: object
  ScheduleListViewModel:
    additionalProperties: false
    type: object
  ScheduleUpdateModel:
    additionalProperties: false
    properties:
      availability:
        $ref: '#/definitions/AvailabilityInputModel'
      bookingsPerSlot:
        format: int32
        type: integer
      interval:
        format: int32
        type: integer
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      resourceGroupId:
        type: string
        x-nullable: true
      type:
        type: string
        x-nullable: true
    type: object
  ScheduleViewModel:
    additionalProperties: false
    properties:
      bookingsPerSlot:
        format: int32
        type: integer
      deletedStatus:
        type: boolean
      deletedTime:
        format: date-time
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      interval:
        format: int32
        type: integer
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      primary:
        type: boolean
      resourceGroupId:
        type: string
        x-nullable: true
      type:
        type: string
        x-nullable: true
    type: object
  ServiceAllocationInputModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      bookingLimit:
        format: int32
        type: integer
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      locationId:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  ServiceAllocationListViewModel:
    additionalProperties: false
    type: object
  ServiceAllocationUpdateModel:
    additionalProperties: false
    properties:
      allDay:
        type: boolean
        x-nullable: true
      bookingLimit:
        format: int32
        type: integer
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      locationId:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeats:
        type: boolean
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  ServiceAllocationViewModel:
    additionalProperties: false
    properties:
      bookingCount:
        format: int32
        type: integer
      bookingLimit:
        format: int32
        type: integer
      endDate:
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatViewModel'
      repeats:
        type: boolean
      resourceDescription:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceImageUrl:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      serviceDescription:
        type: string
        x-nullable: true
      serviceDuration:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      serviceImageUrl:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      startDate:
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
      timezoneName:
        type: string
        x-nullable: true
      timezoneOffset:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceAllocationsInputModel:
    additionalProperties: false
    type: object
  ServiceAvailabilityViewModel:
    additionalProperties: false
    properties:
      ignoreBusinessHours:
        type: boolean
      serviceId:
        format: int32
        type: integer
      serviceName:
        type: string
        x-nullable: true
    type: object
  ServiceBlockInputModel:
    additionalProperties: false
    properties:
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      locationId:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatInputModel'
      repeats:
        type: boolean
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  ServiceBlockListViewModel:
    additionalProperties: false
    type: object
  ServiceBlockUpdateModel:
    additionalProperties: false
    properties:
      endDate:
        format: date-time
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatUpdateModel'
      repeats:
        type: boolean
        x-nullable: true
      startDate:
        format: date-time
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceBlockViewModel:
    additionalProperties: false
    properties:
      deletedStatus:
        type: boolean
      deletedTime:
        type: string
        x-nullable: true
      endDate:
        format: date-time
        type: string
      endTime:
        format: int32
        type: integer
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatViewModel'
      repeats:
        type: boolean
      serviceId:
        type: string
        x-nullable: true
      startDate:
        format: date-time
        type: string
      startTime:
        format: int32
        type: integer
    type: object
  ServiceCalendarInputModel:
    additionalProperties: false
    properties:
      calendarId:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
    type: object
  ServiceCalendarViewModel:
    additionalProperties: false
    properties:
      calendarId:
        type: string
        x-nullable: true
      calendarName:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
    type: object
  ServiceFeesInputModel:
    additionalProperties: false
    properties:
      cancellationFeeAmount:
        format: double
        type: number
      cancellationFeeTaxable:
        type: boolean
      feeAmount:
        format: double
        type: number
      feeTaxable:
        type: boolean
      nonRefundable:
        type: boolean
    type: object
  ServiceFeesUpdateModel:
    additionalProperties: false
    properties:
      cancellationFeeAmount:
        format: double
        type: number
        x-nullable: true
      cancellationFeeTaxable:
        type: boolean
        x-nullable: true
      feeAmount:
        format: double
        type: number
        x-nullable: true
      feeTaxable:
        type: boolean
        x-nullable: true
      nonRefundable:
        type: boolean
        x-nullable: true
    type: object
  ServiceImageInputModel:
    additionalProperties: false
    properties:
      imageFileData:
        type: string
        x-nullable: true
      imageFileName:
        type: string
        x-nullable: true
    type: object
  ServiceInputModel:
    additionalProperties: false
    properties:
      availability:
        $ref: '#/definitions/AvailabilityInputModel'
      bookingInterval:
        format: int32
        type: integer
      bookingLimit:
        format: int32
        type: integer
      description:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
      fees:
        $ref: '#/definitions/ServiceFeesInputModel'
      locationId:
        type: string
        x-nullable: true
      maxCapacity:
        format: int32
        type: integer
      maxGroupSize:
        format: int32
        type: integer
      mediaPageUrl:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      options:
        $ref: '#/definitions/ServiceOptionsInputModel'
      public:
        type: boolean
      serviceGroupId:
        type: string
        x-nullable: true
      settings:
        $ref: '#/definitions/ServiceSettingsInputModel'
      type:
        type: string
        x-nullable: true
    type: object
  ServiceListViewModel:
    additionalProperties: false
    type: object
  ServiceOptionsInputModel:
    additionalProperties: false
    properties:
      consumerPadding:
        type: boolean
        x-nullable: true
      defaultService:
        type: boolean
        x-nullable: true
      durationInterval:
        format: int32
        type: integer
        x-nullable: true
      durationMax:
        format: int32
        type: integer
        x-nullable: true
      durationMin:
        format: int32
        type: integer
        x-nullable: true
      durationSelect:
        type: boolean
        x-nullable: true
      padding:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceOptionsUpdateModel:
    additionalProperties: false
    properties:
      consumerPadding:
        type: boolean
        x-nullable: true
      defaultService:
        type: boolean
        x-nullable: true
      durationInterval:
        format: int32
        type: integer
        x-nullable: true
      durationMax:
        format: int32
        type: integer
        x-nullable: true
      durationMin:
        format: int32
        type: integer
        x-nullable: true
      durationSelect:
        type: boolean
        x-nullable: true
      padding:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceSettingsInputModel:
    additionalProperties: false
    properties:
      bookAheadUnit:
        format: int32
        type: integer
        x-nullable: true
      bookAheadValue:
        format: int32
        type: integer
        x-nullable: true
      bookInAdvance:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceSettingsUpdateModel:
    additionalProperties: false
    properties:
      bookAheadUnit:
        format: int32
        type: integer
        x-nullable: true
      bookAheadValue:
        format: int32
        type: integer
        x-nullable: true
      bookInAdvance:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceUpdateModel:
    additionalProperties: false
    properties:
      availability:
        $ref: '#/definitions/AvailabilityInputModel'
      bookingInterval:
        format: int32
        type: integer
        x-nullable: true
      bookingLimit:
        format: int32
        type: integer
        x-nullable: true
      description:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
        x-nullable: true
      fees:
        $ref: '#/definitions/ServiceFeesUpdateModel'
      locationId:
        type: string
        x-nullable: true
      maxCapacity:
        format: int32
        type: integer
        x-nullable: true
      maxGroupSize:
        format: int32
        type: integer
        x-nullable: true
      mediaPageUrl:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      options:
        $ref: '#/definitions/ServiceOptionsUpdateModel'
      public:
        type: boolean
        x-nullable: true
      serviceGroupId:
        type: string
        x-nullable: true
      settings:
        $ref: '#/definitions/ServiceSettingsUpdateModel'
      type:
        type: string
        x-nullable: true
    type: object
  ServiceViewModel:
    additionalProperties: false
    properties:
      bookAheadUnit:
        format: int32
        type: integer
      bookAheadValue:
        format: int32
        type: integer
      bookInAdvance:
        format: int32
        type: integer
      bookingInterval:
        format: int32
        type: integer
      bookingLimit:
        format: int32
        type: integer
      calendarId:
        type: string
        x-nullable: true
      calendarResourceGroupId:
        type: string
        x-nullable: true
      cancellationFeeAmount:
        format: double
        type: number
      cancellationFeeTaxable:
        type: boolean
      companyId:
        type: string
        x-nullable: true
      consumerPadding:
        type: boolean
      dailyBookingLimitCount:
        format: int32
        type: integer
      dailyBookingLimitMinutes:
        format: int32
        type: integer
      defaultService:
        type: boolean
      description:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
      durationInterval:
        format: int32
        type: integer
      durationMax:
        format: int32
        type: integer
      durationMin:
        format: int32
        type: integer
      durationSelect:
        type: boolean
      feeAmount:
        format: double
        type: number
      feeTaxable:
        type: boolean
      id:
        type: string
        x-nullable: true
      imageUrl:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      maxBookingLimit:
        format: int32
        type: integer
      maxCapacity:
        format: int32
        type: integer
      maxGroupSize:
        format: int32
        type: integer
      maxResourceBookingLimit:
        format: int32
        type: integer
      mediaPageUrl:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      nonRefundable:
        type: boolean
      objectName:
        type: string
        x-nullable: true
      padding:
        format: int32
        type: integer
      roundRobin:
        format: int32
        type: integer
      serviceGroupId:
        format: int32
        type: integer
        x-nullable: true
      serviceGroupName:
        type: string
        x-nullable: true
      showOnline:
        type: boolean
      type:
        type: string
        x-nullable: true
    type: object
  SystemTimezoneViewModel:
    additionalProperties: false
    properties:
      baseUtcOffset:
        format: int32
        type: integer
      daylightName:
        type: string
        x-nullable: true
      displayName:
        type: string
        x-nullable: true
      standardName:
        type: string
        x-nullable: true
      supportsDaylightSavingTime:
        type: boolean
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
    type: object
  TimezoneViewModel:
    additionalProperties: false
    properties:
      regions:
        items:
          type: string
        type: array
        x-nullable: true
      timezones:
        items:
          $ref: '#/definitions/TimezonesViewModel'
        type: array
        x-nullable: true
    type: object
  TimezonesViewModel:
    additionalProperties: false
    properties:
      name:
        type: string
        x-nullable: true
      region:
        type: string
        x-nullable: true
      timezoneIanna:
        type: string
        x-nullable: true
      tzOffset:
        format: int32
        type: integer
    type: object
  WeekDayInputModel:
    additionalProperties: false
    properties:
      endTime:
        format: int32
        type: integer
      startTime:
        format: int32
        type: integer
    type: object
info:
  description: "Build secure and scalable custom apps for onboarding and setup. Our flexible API provides many options for configuration.\r\n<br><br>\r\nTake the API for a test drive. Just click on the Authorize button below and authenticate. \r\nYou can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.\r\n<br><br>\r\nThe API has two interfaces, consumer and setup. \r\n<ul>\r\n<li>\r\nThe consumer interface provides all the endpoints required for implementing consumer booking flows.\r\n</li>\r\n<li>\r\nThe setup interface provides endpoints for profile configuration and setup.\r\n</li>\r\n</ul>\r\nToggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.\r\n"
  title: OnSched API
  version: v1
  x-apisguru-categories:
    - collaboration
  x-logo:
    url: 'https://onsched.com/img/apple-touch-icon-57x57-precomposed.ico'
  x-origin:
    - format: openapi
      url: 'https://sandbox-api.onsched.com/swagger/setup/swagger.json'
      version: '3.0'
  x-providerName: onsched.com
  x-serviceName: setup
paths:
  /setup/v1/appointments:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Leave blank for company wide
            search.
          in: query
          name: locationId
          type: string
        - description: Filter appointments by email address.
          in: query
          name: email
          type: string
        - description: Filter appointments by lastname or part of.
          in: query
          name: lastname
          type: string
        - description: Filter appointments by service.
          in: query
          name: serviceId
          type: string
        - description: Filter appointments by calendar.
          in: query
          name: calendarId
          type: string
        - description: Filter appointments by resource.
          in: query
          name: resourceId
          type: string
        - description: Filter appointments by customer.
          in: query
          name: customerId
          type: string
        - description: Filter appointments by service allocation.
          in: query
          name: serviceAllocationId
          type: string
        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate.
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Filter appointments by status: IN, BK, CN, RE, RS.'
          in: query
          name: status
          type: string
        - description: Filter appointments by user email who booked.
          in: query
          name: bookedBy
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentListViewModel'
      summary: Returns a list of appointments.
      tags:
        - Appointments
  '/setup/v1/appointments/{id}':
    get:
      description: "The result returned is a single appointment object. A valid id is required to find the appointment. \r\n\r\nFind appointment id's using the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the appointment object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Returns an appointment object.
      tags:
        - Appointments
  '/setup/v1/appointments/{id}/reassign/resource/{resourceId}':
    put:
      description: "The result returned is a single appointment object. A valid id is required to find the appointment. \r\n\r\nFind appointment id's using the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the appointment object.
          in: path
          name: id
          required: true
          type: string
        - description: The id target resource.
          in: path
          name: resourceId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Reassigns the appointment to the supplied resourceId
      tags:
        - Appointments
  /setup/v1/businessusers:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter businessUsers by email address.
          in: query
          name: email
          type: string
        - description: Filter businessUsers by user role.
          in: query
          name: role
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BusinessUserListViewModel'
      summary: Returns a list of business users.
      tags:
        - BusinessUsers
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new businessUser. If not specified the business location id defaults to the first location in the company.\r\nName, Email Address and role are required for creating a new businessUser. If the businessUser is a bookable resource then resourceId is required. \r\nFor role, use one of the values listed below. Do not include what is shown in brackets, this is there for description of the role only.\r\n\r\nBusiness Roles:\r\nbizowner (Business Owner)\r\nbizadmin (Business Administrator)\r\nbizresource (Business User - Bookable Resource)\r\nbizclerk (Business User - Portal Booking Privileges)\r\nbizuser (Business User - Portal View Only Privileges)"
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BusinessUserInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BusinessUserViewModel'
      summary: Creates a new businessUser object.
      tags:
        - BusinessUsers
  /setup/v1/businessusers/permissions:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: Filter permissions by role.
          in: query
          name: role
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BusinessPermissionListViewModel'
      summary: Returns a list of system roles and permission.
      tags:
        - BusinessUsers
  '/setup/v1/businessusers/{email}/companies':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: Email address business user.
          in: path
          name: email
          required: true
          type: string
        - description: All or part of company name.
          in: query
          name: searchText
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizedCompanyListViewModel'
      summary: Returns a list of companies for the business user.
      tags:
        - BusinessUsers
  '/setup/v1/businessusers/{id}':
    delete:
      description: Use this endpoint to permanently delete a businessUser.
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success
      summary: Permanently deletes businessUser object.
      tags:
        - BusinessUsers
    get:
      description: >-
        The result returned is a single businessUser object. An id is required
        to find the businessUser. Find businessUser id's using the GET
        setup/v1/businessuserts end point,
      parameters:
        - description: The id of the businessUser object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BusinessUserViewModel'
      summary: Returns a businessUser object.
      tags:
        - BusinessUsers
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to update a businessUser.
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BusinessUserUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BusinessUserViewModel'
      summary: Updates a businessUser object.
      tags:
        - BusinessUsers
  /setup/v1/calendars:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter by deleted status
          in: query
          name: deleted
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleListViewModel'
      summary: Returns a list of calendars.
      tags:
        - Calendars
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create an additional calendar. If not specified, the business location id defaults to the primary location of the company.<br /><br />\r\nNote: Every location has a primary calendar. All appointments will be booked to that calendar unless otherwise specified with a linked service.<br /><br />\r\nname is a required parameter<br /><br />\r\ntype is a required parameter with a value of “resource”<br /><br />\r\ninterval is a required parameter with a value of 1,5,10,15,20,30,60<br /><br />\r\nbookingsPerSlot is a required parameter with a value between 1 and 20<br /><br />\r\nscheduleGroupId is an optional parameter.If supplied, it must be a valid Resource Group Id<br /><br />\r\nweekly availability is optional.If this element is not populated, then weekly availability defaults to the business hours<br /><br />"
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ScheduleInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleViewModel'
      summary: Creates a new calendar object.
      tags:
        - Calendars
  '/setup/v1/calendars/block/{id}':
    delete:
      description: Deletes a calendar block.
      parameters:
        - description: Valid id of a schedule block object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CalendarBlockViewModel'
      summary: Delete a calendar block object
      tags:
        - Calendars
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: >-
        Updates a calendar block. Refer to the details in the POST calendar
        block for setting each of the required parameters.
      parameters:
        - description: Valid id of a schedule block object
          in: path
          name: id
          required: true
          type: string
        - description: Resource Block input model
          in: body
          name: body
          schema:
            $ref: '#/definitions/CalendarBlockInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CalendarBlockViewModel'
      summary: Update a calendar block
      tags:
        - Calendars
  '/setup/v1/calendars/blocks/{id}':
    get:
      description: ''
      parameters:
        - description: Valid id of a calendar block object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CalendarBlockViewModel'
      summary: Update a calendar block
      tags:
        - Calendars
  '/setup/v1/calendars/{id}':
    delete:
      description: >-
        Use this endpoint to delete a calendar. The calendar is not permanently
        deleted and can be recovered.
      parameters:
        - description: The id of the calendar to delete
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleViewModel'
      summary: Deletes a calendar object.
      tags:
        - Calendars
    get:
      description: >-
        The result returned is a single calendar object. An id is required to
        find the calendar.
      parameters:
        - description: The id of the calendar object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleViewModel'
      summary: Returns a calendar object.
      tags:
        - Calendars
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update a calendar. \r\nCalendar availability is optional. If this element is not populated then weekly availability is not updated"
      parameters:
        - description: Id of the calendar object.
          in: path
          name: id
          required: true
          type: string
        - description: Input model for the calendar object.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ScheduleUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleViewModel'
      summary: Updates a calendar object.
      tags:
        - Calendars
  '/setup/v1/calendars/{id}/block':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates a new calendar block. You must specify a StartDateTime and EndDateTime.\r\nA reason for the block is also required. This reason will display in the OnSched Portal Calendar.\r\n\r\nCalendar blocks can be set to specific time ranges or for the whole day. \r\n\r\nCalendar blocks can be for a specific date range instance or set to repeat at a specified frequency.\r\nThe frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r\n\r\nDaily blocks will repeat for each day of the week for the date range specified.\r\n\r\nWeekly blocks will repeat only on the specified days of the week for the date range specified. For a weekly block\r\nyou must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r\nof the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r\nFor example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r\n\r\nUse the interval property to specify the interval that the block repeats. For example an interval of 2 for a weekly block means that\r\nthe block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r\nrepeat every 10 days. The interval property applies to all repeat frequencies.\r\n\r\nMonthly blocks repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r\nthe start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r\n\r\nRepeat blocks will end on the date specified by the end date. You can specify never in the EndDateTime field to indicate the repeating block\r\nshould continue indefinitely."
      parameters:
        - description: Valid id of a calendar object
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/CalendarBlockInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Create a new calendar block
      tags:
        - Calendars
  '/setup/v1/calendars/{id}/blocks':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the calendar to list blocks
          in: path
          name: id
          required: true
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Valid response
          schema:
            $ref: '#/definitions/CalendarBlockListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Resource was not found
      summary: Returns a list of calendar blocks.
      tags:
        - Calendars
  '/setup/v1/calendars/{id}/recover':
    put:
      description: Use this endpoint to recover a deleted calendar.
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScheduleViewModel'
      summary: Recovers a calendar object.
      tags:
        - Calendars
  '/setup/v1/calendars/{id}/services':
    get:
      description: >-
        The result returned is a list of services. An id is required to find the
        service. Find calendar id's using either the GET setup/v1/calendars end
        point
      parameters:
        - description: The id of the calendar object.
          in: path
          name: id
          required: true
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceListViewModel'
      summary: Returns a list of services linked to a calendar.
      tags:
        - Calendars
  /setup/v1/companies:
    get:
      description: ''
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyViewModel'
      summary: Returns a company profile information of the authorized company
      tags:
        - Companies
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new Company Profile. \r\nThis endpoint is restricted by scope and limited to use by OnSched internal apps\r\n\r\nThe timezoneName can be expressed as an Iana Timezone e.g. America/New_York\r\nor a Microsoft Timezone e.g. Eastern Standard Time"
      parameters:
        - description: Company Input Model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CompanyInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyViewModel'
      summary: Creates a company profile.
      tags:
        - Companies
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update the authorized company. \r\n\r\nYour client credentials resolve to a single company.\r\n\r\nThe timezoneName can be expressed as an Iana Timezone e.g. America/New_York\r\nor a Microsoft Timezone e.g. Eastern Standard Time"
      parameters:
        - description: Company Update Model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CompanyUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyViewModel'
      summary: Updates a company object.
      tags:
        - Companies
  /setup/v1/companies/domains:
    get:
      description: ''
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyDomainListViewModel'
      summary: Returns a list of whitelisted domains for the authorized company
      tags:
        - Companies
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: ''
      parameters:
        - description: Company Domain Input Model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CompanyDomainInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyDomainViewModel'
      summary: "Creates a whitelisted domain for the authorized company\r\nReturns view of domain created"
      tags:
        - Companies
  '/setup/v1/companies/domains/{id}':
    delete:
      description: ''
      parameters:
        - description: Valid id of companyDomain object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyDomainViewModel'
      summary: "Deletes a whitelisted domain for the authorized company\r\nReturns view of domain deleted"
      tags:
        - Companies
    get:
      description: ''
      parameters:
        - description: Valid id of companyDomain object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyDomainViewModel'
      summary: Returns a whitelisted domain for the authorized company
      tags:
        - Companies
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: ''
      parameters:
        - description: Valid id of companyDomain object.
          in: path
          name: id
          required: true
          type: string
        - description: Company Domain Update Model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CompanyDomainUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CompanyDomainViewModel'
      summary: "Updates a whitelisted domain for the authorized company\r\nReturns view of domain updated"
      tags:
        - Companies
  /setup/v1/companies/email/templates:
    get:
      description: "Returns a list of email templates that may be customized\r\nIf the template has been customized, the customized property is true.\r\nThe scope parameter indicates if the email template has been customized\r\nat Business Location level or Company level.\r\nThis endpoint returns only company level templates so the scope is always company"
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EmailTemplateListViewModel'
      summary: Returns email template list from the authorized company
      tags:
        - Companies
  /setup/v1/companies/email/templates/master:
    delete:
      description: "Settings exist for showing or hiding panels\r\nand for changing color schemes"
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MasterEmailTemplateSettingsViewModel'
      summary: Deletes custom master email template settings reverting to the default
      tags:
        - Companies
    get:
      description: "Settings exist for showing or hiding panels\r\nand for changing color schemes"
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MasterEmailTemplateSettingsViewModel'
      summary: Returns master email template settings
      tags:
        - Companies
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Settings exist for showing or hiding panels\r\nand for changing color schemes"
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/MasterTemplateSettingsInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MasterEmailTemplateSettingsViewModel'
      summary: Updates / creates custom master email template settings
      tags:
        - Companies
  '/setup/v1/companies/email/templates/{templateName}':
    get:
      description: "The default email template is returned when a custom template is not found\r\nThe response content is in html format."
      parameters:
        - description: Email template name
          in: path
          name: templateName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ContentResult'
      summary: Returns default or custom email template from the authorized company
      tags:
        - Companies
  /setup/v1/companies/regions:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: region object's
          schema:
            $ref: '#/definitions/RegionListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Resource was not found
      summary: Returns a list of regions.
      tags:
        - Companies
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates a new region.\r\n\r\nRegions can be mapped to business locations. Locations can be filtered by region id"
      parameters:
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/RegionInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegionViewModel'
      summary: Create a new region
      tags:
        - Companies
  '/setup/v1/companies/regions/{id}':
    delete:
      description: "Deletes a region.\r\n\r\nIf the region is related to any business locations it cannot be deleted"
      parameters:
        - description: Valid Id of Region
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegionViewModel'
      summary: Delete a region
      tags:
        - Companies
    get:
      description: ''
      parameters:
        - description: Valid id of a region object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegionViewModel'
      summary: Get a Region
      tags:
        - Companies
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Updates a region.\r\n\r\nRegions can be mapped to business locations. Locations can be filtered by region id."
      parameters:
        - description: Valid Id of Region
          in: path
          name: id
          required: true
          type: string
        - description: Region Update Model
          in: body
          name: body
          schema:
            $ref: '#/definitions/RegionUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegionViewModel'
      summary: Update a region
      tags:
        - Companies
  '/setup/v1/companies/timezones/{date}':
    get:
      description: >-
        The result returned is a single location object. An id is required to
        find the location. Find location id's using the GET
        consumer/v1/locations end point,
      parameters:
        - description: The date the.
          format: date-time
          in: path
          name: date
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TimezoneViewModel'
      summary: Returns timezone information for all supported Timezone's
      tags:
        - Companies
  /setup/v1/customers:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter customers by group.
          in: query
          name: groupId
          type: string
        - description: Filter customers by email address.
          in: query
          name: email
          type: string
        - description: Search customers by lastname.
          in: query
          name: lastname
          type: string
        - description: Filter customers by deleted status.
          in: query
          name: deleted
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerListViewModel'
      summary: Returns a list of customers.
      tags:
        - Customers
  '/setup/v1/customers/{id}':
    get:
      description: "The result returned is a single customer object. An id is required to find the customer. Find customer id's using either the GET consumer/v1/customers end point,\r\nor the GET consumer/v1/appointments end point. A customer object is automatically created with the first booking if it doesn't already exist."
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerViewModel'
      summary: Returns a customer object.
      tags:
        - Customers
  '/setup/v1/customers/{id}/privacy':
    get:
      description: >-
        The result returned contains customer data and customer appointments
        data
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerPrivacyViewModel'
      summary: Returns a customer privacy report data.
      tags:
        - Customers
  /setup/v1/locations:
    get:
      description: "Use this api end point if you have multiple business locations in your company.\r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: Location name(full or partial) to filter on
          in: query
          name: name
          type: string
        - description: Find locations that offer this service
          in: query
          name: serviceId
          type: string
        - description: Filter locations on deleted status
          in: query
          name: deleted
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationListViewModel'
      summary: Returns a list of business locations.
      tags:
        - Locations
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new business location.\r\n\r\nSettings can be scoped to company or location. You can have all locations use the defined company settings or individual locations\r\ncan define their own settings that override the company level settings.\r\n\r\nIf you wish to update settings then pass in the settings element in the input.\r\nWhen you are working with the Primary location, then the settings will update the company level settings.\r\nOtherwise, the settings will update business location settings.\r\n\r\nIf you wish to create a new location and want to just use the company wide settings, don't pass in the settings element in the input."
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LocationInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Creates a new location object.
      tags:
        - Locations
  /setup/v1/locations/bulk:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create new business locations. The incoming list of \r\nlocations cannot exceed 100 location objects for performance purposes.\r\n\r\nEach location object may consist of:\r\nName: The Name of the location.\r\nAdminName: The Name of the location admin.\r\nAdminEmail: The email address of the location admin.\r\nTimezoneName: The IANA formatted name of the locations timezone.\r\nFriendlyId: A friendly id to use to refer to the location.\r\nAddress: The physical address of the location.\r\nBusinessHours: The hours of operation of the location.\r\nSettings: Additional location options that can affect things like \r\nthe book ahead restrictions, customer bookings per day, etc."
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LocationsInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/LocationViewModel'
            type: array
      summary: Creates new location objects.
      tags:
        - Locations
  '/setup/v1/locations/services/{id}':
    delete:
      description: Use this endpoint to delete a location service for a location
      parameters:
        - description: Valid id of a location service object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Deletes a location service from the specified location
      tags:
        - Locations
    get:
      description: ''
      parameters:
        - description: The id of the location service object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: location service objects
          schema:
            $ref: '#/definitions/BusinessServiceViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Location was not found
      summary: Returns a single location services.
      tags:
        - Locations
  '/setup/v1/locations/{id}':
    delete:
      description: >-
        Use this endpoint to delete a location. The location is not permanently
        deleted and can be recovered.
      parameters:
        - description: The id of the location
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Deletes a location object.
      tags:
        - Locations
    get:
      description: >-
        The result returned is a single location object. An id is required to
        find the location. Find location id's using the GET
        consumer/v1/locations end point,
      parameters:
        - description: The id of the business location object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Returns a business location object.
      tags:
        - Locations
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update a business location. \r\n\r\nThe optional removeRegion query parameter is used to remove the region relationship from the location\r\n\r\nIf the settings element is populated the scope will be set to location with the settings supplied, otherwise it will be company scope.\r\n\r\nIf all your settings are uniform across all locations then do not pass settings and the location will use the settings\r\ndefined on the primary location. This is company scope. Settings cascade down to the locations. You can override any location\r\nthat needs different settings by providing settings in the update model."
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: query
          name: removeRegion
          type: boolean
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LocationUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Use this endpoint to change the scope of online booking settings
      tags:
        - Locations
  '/setup/v1/locations/{id}/deleteallimages':
    delete:
      description: "An option exists to use upper case for matching the subdirectory name\r\nLegacy apps stored pics using upper case externalId. Api uses lower case names."
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: query
          name: uppercase
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: boolean
      summary: Deletes all images from location blob storage container
      tags:
        - Locations
  '/setup/v1/locations/{id}/deleteimage':
    delete:
      description: Use this endpoint to delete a previously uploaded location image.
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Removes a location image
      tags:
        - Locations
  '/setup/v1/locations/{id}/email/templates':
    get:
      description: "Returns a list of email templates that may be customized\r\nIf the template has been customized, the customized property is true.\r\nThe scope parameter indicates if the email template has been customized\r\nat Business Location level or Company level.\r\nOnly when querying the primary business location will company scope\r\ncustomized templates display. Otherwise, the scope shows if a template has been customized\r\nat the business location level."
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EmailTemplateListViewModel'
      summary: Returns email template list from the authorized company
      tags:
        - Locations
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to a create a custom email template. You must convert the content to a base64 encoded string.\r\nUpdates to the primary business location create company scoped custom templates\r\nUpdates to non primary business locations create business location scoped custom templates\r\nThe master template cannot be updated with this endpoint."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
        - description: Input model for email template
          in: body
          name: body
          schema:
            $ref: '#/definitions/EmailTemplateInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ContentResult'
      summary: Uploads a custom email template
      tags:
        - Locations
  '/setup/v1/locations/{id}/email/templates/master':
    delete:
      description: "Settings exist for showing or hiding panels\r\nand for changing color schemes"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MasterEmailTemplateSettingsViewModel'
      summary: Deletes custom master email template settings reverting to the default
      tags:
        - Locations
    get:
      description: "Settings exist for showing or hiding panels\r\nand for changing color schemes"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MasterEmailTemplateSettingsViewModel'
      summary: Returns master email template settings
      tags:
        - Locations
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to a customize the master email template settings. \r\nUpdates to the primary business location create company scoped master email template custom settings\r\nUpdates to non primary business locations create business location scoped master email template custom settings"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
        - description: Input model for master email template settings
          in: body
          name: body
          schema:
            $ref: '#/definitions/MasterTemplateSettingsInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MasterEmailTemplateSettingsViewModel'
      summary: Saves settings for the master email template
      tags:
        - Locations
  '/setup/v1/locations/{id}/email/templates/{templateName}':
    delete:
      description: "Use this endpoint to remove a custom email template. \r\n\r\nCustom email templates created in the primary location are company scope and inherited by all locations\r\nunless overriden in a location. Templates created in any location other than the primary apply to that location only."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
        - description: Name of the email template
          in: path
          name: templateName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ContentResult'
      summary: Deletes a custom email template
      tags:
        - Locations
    get:
      description: "These are custom email templates defined with Business Scope at a location other than the primary.\r\nThe default email template is returned when a custom email template is not found."
      parameters:
        - description: The id of the business location object or "default" as id.
          in: path
          name: id
          required: true
          type: string
        - description: The name of the email template.
          in: path
          name: templateName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ContentResult'
      summary: >-
        Returns company default or custom email template from the specified
        location
      tags:
        - Locations
  '/setup/v1/locations/{id}/google/service/account':
    delete:
      description: "Use this endpoint to remove authorized access to all google calendar users.\r\nCalendars will no longer be synced for resources"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success
      summary: Remove authorized access to all google calendar users in an organization
      tags:
        - Locations
    get:
      description: This endpoint will not go to production. It is temporary.
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GoogleServiceAccountCreds'
      summary: Returns google service account info
      tags:
        - Locations
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to authorize access to all google calendar users.\r\nYou must create a Google Service account as an admin of your GSuite,\r\nthen save credentials as a Json Key file"
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
        - description: Generated Json Key file from Google
          in: body
          name: body
          schema:
            $ref: '#/definitions/GoogleServiceAccountCreds'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GoogleServiceAccountCreds'
      summary: Authorize access to all google calendar users in an organization
      tags:
        - Locations
  '/setup/v1/locations/{id}/holidays/{holidayId}/{closed}':
    put:
      description: "Use this endpoint to set business holidays to open or closed. \r\n\r\nIf you pass in an asterisk for the holidayId then all business holidays\r\nwill be set to the valaue"
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: holidayId
          required: true
          type: string
        - in: path
          name: closed
          required: true
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Sets a business holiday to open or closed.
      tags:
        - Locations
  '/setup/v1/locations/{id}/recover':
    put:
      description: Use this endpoint to recover a deleted business location.
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Recovers a location object.
      tags:
        - Locations
  '/setup/v1/locations/{id}/services':
    delete:
      description: Use this endpoint to delete all location services for a location
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Deletes all location services from the specified location
      tags:
        - Locations
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the location
          in: path
          name: id
          required: true
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: location service objects
          schema:
            $ref: '#/definitions/BusinessServiceListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Location was not found
      summary: Returns a list of location services.
      tags:
        - Locations
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to explicitly define what company scoped services\r\nat this location are offered. GET locations allows serviceId as a \r\nsearch parameter."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
        - description: Array of valid service object id's
          in: body
          name: body
          schema:
            items:
              type: string
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Adds location services to the specified location
      tags:
        - Locations
  '/setup/v1/locations/{id}/settings/scope/{settingsScope}':
    put:
      description: "Use this endpoint to update a business location. \r\n\r\nsettingsScope values are 0 = company scope, 1 = business location scope\r\nif you wish to inherit the online settings defined in the primary location then use value 0 for company scope.\r\nOtherwise if you wish to override the settings for a specific location then use value = 1 for business location scope\r\n///"
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: settingsScope
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Changes the scope of OnlineBooking Settings.
      tags:
        - Locations
  '/setup/v1/locations/{id}/uploadimage':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to upload a location image. You must convert the image to a base64 encoded string\r\nand pass that string as input along with your filename."
      parameters:
        - description: Valid id of a location object
          in: path
          name: id
          required: true
          type: string
        - description: Input model for image upload
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceImageInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Uploads a location image
      tags:
        - Locations
  /setup/v1/resourcegroups:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter results by deleted status.
          in: query
          name: deleted
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceGroupListViewModel'
      summary: Returns a list of resourcegroups.
      tags:
        - ResourceGroups
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new resource. If not specified the business location id defaults to the first location in the company.\r\nEmail Address and a Name are required for creating a new resource."
      parameters:
        - description: Resource input model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceGroupInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceGroupViewModel'
      summary: Creates a new resource group object.
      tags:
        - ResourceGroups
  '/setup/v1/resourcegroups/{id}':
    delete:
      description: >-
        Use this endpoint to delete a resource group. The resource group is not
        permanently deleted and can be recovered.
      parameters:
        - description: The id of the resource group to delete
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceGroupViewModel'
      summary: Deletes a resource group object.
      tags:
        - ResourceGroups
    get:
      description: >-
        The result returned is a single resourceGroup object. An id is required
        to find the service. Find resourceGroup id's using the GET
        setup/v1/resourceGroups end point
      parameters:
        - description: The id of the resourceGroup object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceGroupViewModel'
      summary: Returns a resourceGroup object.
      tags:
        - ResourceGroups
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to update a resource group.
      parameters:
        - description: Id of the resource group object.
          in: path
          name: id
          required: true
          type: string
        - description: Resource Group Update Model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceGroupUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceGroupViewModel'
      summary: Updates a resource group object.
      tags:
        - ResourceGroups
  '/setup/v1/resourcegroups/{id}/recover':
    put:
      description: Use this endpoint to recover a deleted resource group.
      parameters:
        - description: Id of the resource group object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Recovers a resource group object.
      tags:
        - ResourceGroups
  /setup/v1/resources:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter resources by group.
          in: query
          name: resourceGroupId
          type: string
        - description: Filter resources by email address.
          in: query
          name: email
          type: string
        - description: Search resources by name.
          in: query
          name: name
          type: string
        - description: Show resources by deleted status. Default is false.
          in: query
          name: deleted
          type: boolean
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: resource object
          schema:
            $ref: '#/definitions/ResourceListViewModel'
        '400':
          description: Missing or invalid values in the request
        '404':
          description: Resource was not found
      summary: Returns a list of resources.
      tags:
        - Resources
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new resource. If not specified, the business location id defaults to the first location in the company.<br /><br /> \r\nEmail Address and a Name are required for creating a new resource. <br /><br />\r\nPassing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the resource, \r\nwhile passing in an empty array will result in all services being selected. This includes company and business scoped services. <br /><br />"
      parameters:
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
        - description: Resource input model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Creates a new resource object.
      tags:
        - Resources
  '/setup/v1/resources/allocations/{id}':
    delete:
      description: Deletes a resource allocation.
      parameters:
        - description: Valid id of a resource allocation object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Delete a resource allocation object
      tags:
        - Resources
    get:
      description: ''
      parameters:
        - description: Valid id of a resource allocation object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceAllocationViewModel'
      summary: Update a resource allocation
      tags:
        - Resources
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: >-
        Updates a resource allocation. Refer to the details in the POST resource
        allocation for setting each of the required parameters.
      parameters:
        - description: Valid id of a resource allocation object
          in: path
          name: id
          required: true
          type: string
        - description: Resource allocation update model
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceAllocationUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Update a resource allocation
      tags:
        - Resources
  '/setup/v1/resources/block/{id}':
    delete:
      description: Deletes a resource block.
      parameters:
        - description: Valid id of a resource block object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Delete a resource block object
      tags:
        - Resources
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: >-
        Updates a resource block. Refer to the details in the POST resource
        block for setting each of the required parameters.
      parameters:
        - description: Valid id of a resource block object
          in: path
          name: id
          required: true
          type: string
        - description: Resource Block update model
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceBlockUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Update a resource block
      tags:
        - Resources
  '/setup/v1/resources/blocks/{id}':
    get:
      description: ''
      parameters:
        - description: Valid id of a resource block object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Update a resource block
      tags:
        - Resources
  /setup/v1/resources/bulk:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create new resources. If not specified the business location id defaults to the first location in the company.<br /><br />\r\nEmail Address and a Name are required for creating each new resource.<br /><br />\r\nPassing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the resources,\r\nwhile passing in an empty array will result in all services being selected. This includes company and business scoped services.<br /><br />"
      parameters:
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
        - description: Resources input model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourcesInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ResourceViewModel'
            type: array
      summary: Creates new resource objects.
      tags:
        - Resources
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update multiple resources.<br /><br /> \r\nPassing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the each resource, \r\nwhile passing in an empty array will result in all services being selected. This includes company and business scoped services.<br /><br />"
      parameters:
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
        - description: Resources update model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourcesUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ResourceViewModel'
            type: array
      summary: Updates resource objects.
      tags:
        - Resources
  /setup/v1/resources/timezones:
    get:
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SystemTimezoneViewModel'
      tags:
        - Resources
  '/setup/v1/resources/{id}':
    delete:
      description: >-
        Use this endpoint to delete a resource. The resource is not permanently
        deleted and can be recovered.
      parameters:
        - description: The id of the resource to delete
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Deletes a resource object.
      tags:
        - Resources
    get:
      description: "The result returned is a single resource object. An id is required to find the resource. Find customer id's using either the GET consumer/v1/resources end point,\r\nor the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the resource object.
          in: path
          name: id
          required: true
          type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Returns a resource object.
      tags:
        - Resources
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update a resource. <br /><br />\r\nPassing in a single or many serviceId(s) in the service array will result in those service(s) being associated with the resource,\r\nwhile passing in an empty array will result in all services being selected. This includes company and business scoped services.<br /><br />"
      parameters:
        - description: Id of the resource object.
          in: path
          name: id
          required: true
          type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
        - description: Resource Update Model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Updates a resource object.
      tags:
        - Resources
  '/setup/v1/resources/{id}/allocations':
    get:
      description: "Resource allocations allow you to specify explicitly the times you are available as opposed to \r\ngenerating resource availability from the times that are not unavailable.\r\n\r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the resource to list allocations
          in: path
          name: id
          required: true
          type: string
        - description: Format yyyy-mm-dd. Filter allocations on/after startDate
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format yyyy-mm-dd. Filter on/before endDate
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: resource allocation objects
          schema:
            $ref: '#/definitions/ResourceAllocationListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Resource was not found
      summary: Returns a list of resource allocations.
      tags:
        - Resources
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates a new resource allocation. You must specify a StartDateTime and EndDateTime.\r\nA reason for the block is optional. This reason will display in the OnSched Portal Calendar.\r\n\r\nResource allocations can be set to specific time ranges or for the whole day. \r\n\r\nResource allocations can repeat for a specific date range instance or set to repeat at a specified frequency.\r\nThe frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r\n\r\nDaily allocations will repeat for each day of the week for the date range specified.\r\n\r\nWeekly allocations will repeat only on the specified days of the week for the date range specified. For a weekly block\r\nyou must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r\nof the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r\nFor example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r\n\r\nUse the interval property to specify the interval that the allocation repeats. For example an interval of 2 for a weekly allocation means that\r\nthe allocation will repeat every second week beginning at the day specified. A daily allocation with an interval of 10 means the allocation will\r\nrepeat every 10 days. The interval property applies to all repeat frequencies.\r\n\r\nMonthly allocations repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r\nthe start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r\n\r\nRepeat allocations will end on the date specified by the end date. You can specify 9999-12-31 in \r\nthe EndDate field to indicate the repeating block should continue indefinitely."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceAllocationInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Create a new resource allocation
      tags:
        - Resources
  '/setup/v1/resources/{id}/availability':
    get:
      description: "Use this endpoint to get weekly availability for a resource. The displayed\r\navailable times represent the resource timezone. The resource timezone can\r\nbe set to any world timezone. By default it is set to the Business timezone."
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceAvailabilityViewModel'
      summary: Returns a list of weekly availability
      tags:
        - Resources
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update resource availability. The Id parameter specifies the resource\r\nfor which you are updating availability. Availability day entries do not need to be created. \r\nThe availbility day entries are created when a resource object is created. They default to\r\nthe business hours.\r\n\r\nCreate an entry for each weekday you wish to update. Days are defined as sun,mon,tue,wed,thu,fri,sat.\r\nStart and End Times are entered in miltary format. e.g 2230 is 10:30pm. \r\n\r\nOnSched API provides support for 24 hour availability. For midnight start of day use 0. For midnight end of day use 2400.\r\n\r\nTo set a day as unavailable, set both the StartTime and EndTime to 0. If you require times in between specified hours\r\nto be unavailable, use the resource blocks endpoints. \r\n\r\nTimes entered represent the\r\ntimezone of the resource. Resources can belong to any world timezone."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
        - description: Resource Availability Input Model
          in: body
          name: body
          schema:
            $ref: '#/definitions/AvailabilityInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceAvailabilityViewModel'
      summary: Updates Weekly Availability
      tags:
        - Resources
  '/setup/v1/resources/{id}/block':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates a new resource block. You must specify a StartDateTime and EndDateTime.\r\nA reason for the block is also required. This reason will display in the OnSched Portal Calendar.\r\n\r\nResource blocks can be set to specific time ranges or for the whole day. Use the AllDay setting to create an all day block.\r\n\r\nResource blocks can be for a specific date range instance or set to repeat at a specified frequency.\r\nThe frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r\n\r\nDaily blocks will repeat for each day of the week for the date range specified.\r\n\r\nWeekly blocks will repeat only on the specified days of the week for the date range specified. For a weekly block\r\nyou must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r\nof the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r\nFor example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r\n\r\nUse the interval property to specify the interval that the block repeats. For example an interval of 2 for a weekly block means that\r\nthe block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r\nrepeat every 10 days. The interval property applies to all repeat frequencies.\r\n\r\nMonthly blocks repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r\nthe start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r\n\r\nRepeat blocks will end on the date specified by the end date. You can specify 9999-12-31 in \r\nthe EndDate field to indicate the repeating block should continue indefinitely."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceBlockInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Create a new resource block
      tags:
        - Resources
  '/setup/v1/resources/{id}/blocks':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the resource to list blocks
          in: path
          name: id
          required: true
          type: string
        - description: Format YYYY-MM-DD. Filter blocks on/after startDate
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Filter on/before endDate
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: resource block object's
          schema:
            $ref: '#/definitions/ResourceBlockListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Resource was not found
      summary: Returns a list of resource blocks.
      tags:
        - Resources
  '/setup/v1/resources/{id}/calendar/auth/google/{googleEmailAddress}':
    get:
      description: The result returned contains the google calendar authorization url
      parameters:
        - description: The id of the resource object.
          in: path
          name: id
          required: true
          type: string
        - description: The email address of Google Calendar.
          in: path
          name: googleEmailAddress
          required: true
          type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CalendarAuthViewModel'
      summary: Returns a resource object.
      tags:
        - Resources
  '/setup/v1/resources/{id}/calendar/auth/outlook/{outlookEmailAddress}':
    get:
      description: The result returned contains the outlook calendar authorization url
      parameters:
        - description: The id of the resource object.
          in: path
          name: id
          required: true
          type: string
        - description: The email address of Outlook Calendar.
          in: path
          name: outlookEmailAddress
          required: true
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CalendarAuthViewModel'
      summary: Returns a resource object.
      tags:
        - Resources
  '/setup/v1/resources/{id}/deleteimage':
    delete:
      description: Use this endpoint to delete a previously uploaded resource image.
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Removes a resource image
      tags:
        - Resources
  '/setup/v1/resources/{id}/reassign/appointments/{resourceId}':
    put:
      description: "Use this endpoint to reassign appointments from one resource to another.\r\nIf the startDate is not supplied, the default is today's date + 1 day;\r\nIf the endDate is not supplied, all future appointments from the start date will be reassigned\r\nIf the calendarId is not supplied the default is the primary calendar of the location."
      parameters:
        - description: Id of the source resource object.
          in: path
          name: id
          required: true
          type: string
        - description: Id of the target resource object.
          in: path
          name: resourceId
          required: true
          type: string
        - description: Format YYYY-MM-DD. Appointment start date range.
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Appointment end date range.
          format: date-time
          in: query
          name: endDate
          type: string
        - description: CalendarId of calendar containing appointments.
          in: query
          name: calendarId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AppointmentViewModel'
            type: array
      summary: Reassigns appointments to another resource
      tags:
        - Resources
  '/setup/v1/resources/{id}/recover':
    put:
      description: Use this endpoint to recover a deleted resource.
      parameters:
        - description: Id of the resource object.
          in: path
          name: id
          required: true
          type: string
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Recovers a resource object.
      tags:
        - Resources
  '/setup/v1/resources/{id}/services':
    delete:
      description: Use this endpoint to delete all resource services for a resource
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Deletes resource services from the specified resource
      tags:
        - Resources
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to add resource services
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
        - description: Array of valid service object id's
          in: body
          name: body
          schema:
            items:
              type: string
            type: array
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Adds resource services to the specified resource
      tags:
        - Resources
  '/setup/v1/resources/{id}/uploadimage':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to upload a resource image. You must convert the image to a base64 encoded string\r\nand pass that string as input along with your filename."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
        - description: Input model for image upload
          in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceImageInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Uploads a resource image
      tags:
        - Resources
  /setup/v1/services:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter services by group.
          format: int32
          in: query
          name: serviceGroupId
          type: integer
        - description: Filter services by deleted status.
          in: query
          name: deleted
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceListViewModel'
      summary: Returns a list of services.
      tags:
        - Services
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new service. If not specified the business location id defaults to the first location in the company.\r\nThe service Type defaults to 1 if not entered.\r\nThe service Type can be one of the following values:\r\n1 = Appointment\r\n2 = Event\r\n3 = Meeting"
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Creates a new service object.
      tags:
        - Services
  '/setup/v1/services/allocations/{id}':
    delete:
      description: Deletes a service allocation.
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAllocationViewModel'
      summary: Delete a service allocation object
      tags:
        - Services
    get:
      description: ''
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAllocationViewModel'
      summary: Get a service allocation
      tags:
        - Services
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: >-
        Updates a service allocation. Refer to the details in the POST service
        allocation for setting each of the required parameters.
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          type: string
        - description: Service allocation update model
          in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceAllocationUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAllocationViewModel'
      summary: Update a service allocation
      tags:
        - Services
  '/setup/v1/services/block/{id}':
    delete:
      description: Deletes a service block.
      parameters:
        - description: Valid id of a service block object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Delete a service block object
      tags:
        - Services
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: >-
        Updates a resource block. Refer to the details in the POST resource
        block for setting each of the required parameters.
      parameters:
        - description: Valid id of a service block object
          in: path
          name: id
          required: true
          type: string
        - description: Service Block update model
          in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceBlockUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceBlockViewModel'
      summary: Update a service block
      tags:
        - Services
  '/setup/v1/services/blocks/{id}':
    get:
      description: ''
      parameters:
        - description: Valid id of a service block object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceBlockViewModel'
      summary: Get a service block
      tags:
        - Services
  /setup/v1/services/bookingwindows:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to create a new bookingWindow.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BookingWindowInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BookingWindowViewModel'
      summary: Creates a new bookingWindow object.
      tags:
        - Services
  '/setup/v1/services/bookingwindows/{id}':
    delete:
      description: Use this endpoint to permanently delete a bookingWindow.
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success
      summary: Permanently deletes bookingWindow object.
      tags:
        - Services
    get:
      description: ''
      parameters:
        - description: Valid id of a booking window object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BookingWindowViewModel'
      summary: Get a booking window
      tags:
        - Services
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to update a booking window
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BookingWindowUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BookingWindowViewModel'
      summary: Updates a bookingWindow object.
      tags:
        - Services
  /setup/v1/services/calendar:
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to link a service to a calendar.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceCalendarInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceCalendarViewModel'
      summary: Links the service to a calendar
      tags:
        - Services
  '/setup/v1/services/calendar/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceCalendarViewModel'
      tags:
        - Services
  '/setup/v1/services/{id}':
    delete:
      description: >-
        Use this endpoint to delete a service. The service is not permanently
        deleted and can be recovered.
      parameters:
        - description: The id of the service object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Deletes a service object.
      tags:
        - Services
    get:
      description: "The result returned is a single service object. An id is required to find the service. Find service id's using either the GET consumer/v1/service end point,\r\nor the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the service object.
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Returns a service object.
      tags:
        - Services
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to update a service.
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceUpdateModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Updates a service object.
      tags:
        - Services
  '/setup/v1/services/{id}/allocations':
    get:
      description: "This endpoint is used primarily for event booking. When you create service type events, you allocation specific occurrences of the event \r\nagainst the service. \r\n\r\nYou can retrieve all allocations for a location by passing in zero as the service id. Otherwise, to get allocations for a specific service\r\npass in the service id.\r\n\r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list allocations. Zero for all allocations.
          in: path
          name: id
          required: true
          type: string
        - description: The id of the location. Defaults to the primary location.
          in: query
          name: locationId
          type: string
        - description: The id of the resource to filter on.
          in: query
          name: resourceId
          type: string
        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: service alloaction object
          schema:
            $ref: '#/definitions/ServiceAllocationListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Service was not found
      summary: Returns a list of service allocations.
      tags:
        - Services
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates a new service allocation. You must specify a StartDate and EndDate.\r\nA reason for the allocation is also required. This reason will display in the OnSched Portal Calendar.\r\n\r\nService allocations are used primarily for event type services. The allocation represents an occurrence of an allocation.\r\n\r\nService allocations can be set to specific time ranges or for the whole day. Use the AllDay setting to create an all day block.\r\n\r\nService allocations can be for a specific date range instance or set to repeat at a specified frequency.\r\nThe frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r\n\r\nDaily allocations will repeat for each day of the week for the date range specified.\r\n\r\nWeekly allocations will repeat only on the specified days of the week for the date range specified. For a weekly block\r\nyou must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r\nof the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r\nFor example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r\n\r\nUse the interval property to specify the interval that the allocation repeats. For example an interval of 2 for a weekly block means that\r\nthe block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r\nrepeat every 10 days. The interval property applies to all repeat frequencies.\r\n\r\nMonthly allocations repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r\nthe start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r\n\r\nRepeat allocations will end on the date specified by the end date. You can specify 9999-12-31 in the EndDate field to indicate the repeating block\r\nshould continue indefinitely."
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceAllocationInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAllocationViewModel'
      summary: Create a new service allocation
      tags:
        - Services
  '/setup/v1/services/{id}/allocations/bulk':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates new service allocations in bulk. Refer to documentation\r\nfor creating a single Service Allocation POST /setup/v1/services/{id}/allocations\r\nfor understanding how to populate the properties\r\n\r\nUse this endpoint only if you need to POST multiple allocations in one call"
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceAllocationsInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ServiceAllocationViewModel'
            type: array
      summary: Create new service allocations in bulk
      tags:
        - Services
  '/setup/v1/services/{id}/availability':
    get:
      description: Use this endpoint to get weekly availability for a service.
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAvailabilityViewModel'
      summary: Returns a list of weekly availability
      tags:
        - Services
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update service availability. The Id parameter specifies the service\r\nfor which you are updating availability. Availability day entries do not need to be created. \r\nThe availbility day entries are created when a service object is created. They default to\r\nthe business hours.\r\n\r\nCreate an entry for each weekday you wish to update. Days are defined as sun,mon,tue,wed,thu,fri,sat.\r\nStart and End Times are entered in miltary format. e.g 2230 is 10:30pm. \r\n\r\nOnSched API provides support for 24 hour availability. For midnight start of day use 0. For midnight end of day use 2400.\r\n\r\nTo set a day as unavailable, set both the StartTime and EndTime to 0. If you require times in between specified hours\r\nto be unavailable, use the resource blocks endpoints. \r\n\r\nTimes entered represent the timezone of the business location."
      parameters:
        - description: Valid id of a resource object
          in: path
          name: id
          required: true
          type: string
        - description: Service Availability Input Model
          in: body
          name: body
          schema:
            $ref: '#/definitions/AvailabilityInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAvailabilityViewModel'
      summary: Updates Weekly Availability
      tags:
        - Services
  '/setup/v1/services/{id}/block':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Creates a new service block. You must specify a StartDateTime and EndDateTime.\r\nA reason for the block is also required. This reason will display in the OnSched Portal Calendar.\r\n\r\nService blocks can be set to specific time ranges or for the whole day. Use the AllDay setting to create an all day block.\r\n\r\nService blocks can be for a specific date range instance or set to repeat at a specified frequency.\r\nThe frequency can be set to a value of D,W,M,Y for Day, Week, Month, or Year respecitively. \r\n\r\nDaily blocks will repeat for each day of the week for the date range specified.\r\n\r\nWeekly blocks will repeat only on the specified days of the week for the date range specified. For a weekly block\r\nyou must also specify the weekdays. Weekdays are expressed as a string of digits with each single digit in the string representing a day\r\nof the week. The possible values are 0,1,2,3,4,5,6 where 0=Sunday, 1=Monday, 2=Tuesday, 3=Wed, 4=Thursday, 5=Friday, 6=Saturday.\r\nFor example a repeat weekly entry with weekdays 24 repeats each week on Tuesday and Thursday.\r\n\r\nUse the interval property to specify the interval that the block repeats. For example an interval of 2 for a weekly block means that\r\nthe block will repeat every second week beginning at the day specified. A daily block with an interval of 10 means the block will\r\nrepeat every 10 days. The interval property applies to all repeat frequencies.\r\n\r\nMonthly blocks repeat either on the day of the month specified in the month day property or on the day of the week and week of the month specified by\r\nthe start date. For example, repeat every 3rd friday of each month, repeat on the 21st day of the month.\r\n\r\nRepeat blocks will end on the date specified by the end date. You can specify 9999-12-31 in \r\nthe EndDate field to indicate the repeating block should continue indefinitely."
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceBlockInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceBlockViewModel'
      summary: Create a new service block
      tags:
        - Services
  '/setup/v1/services/{id}/blocks':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list blocks
          in: path
          name: id
          required: true
          type: string
        - description: Format YYYY-MM-DD. Filter blocks on/after startDate
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Filter on/before endDate
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: service block object's
          schema:
            $ref: '#/definitions/ServiceBlockListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Service was not found
      summary: Returns a list of service blocks.
      tags:
        - Services
  '/setup/v1/services/{id}/bookingwindows':
    get:
      description: "This endpoint is used to retrieve any booking windows related to the service\r\n\r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list booking windows
          in: path
          name: id
          required: true
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: service alloaction object
          schema:
            $ref: '#/definitions/BookingWindowViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Service was not found
      summary: Returns a list of service booking windows.
      tags:
        - Services
  '/setup/v1/services/{id}/calendar':
    get:
      description: "Use this endpoint to get the linked calendar for the service.\r\nA service can only be linked to one calendar in a location."
      parameters:
        - description: Id of the Service object
          in: path
          name: id
          required: true
          type: string
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceCalendarViewModel'
      summary: Returns the linked calendar for the service
      tags:
        - Services
  '/setup/v1/services/{id}/deleteimage':
    delete:
      description: Use this endpoint to delete a previously uploaded service image.
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Removes a service image
      tags:
        - Services
  '/setup/v1/services/{id}/recover':
    put:
      description: Use this endpoint to recover a deleted service.
      parameters:
        - in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Recovers a service object.
      tags:
        - Services
  '/setup/v1/services/{id}/resources':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service object.
          in: path
          name: id
          required: true
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
        - description: Google calendar authorization returns to this url.
          in: query
          name: googleAuthReturnUrl
          type: string
        - description: Outlook calendar authorization returns to this url.
          in: query
          name: outlookAuthReturnUrl
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceListViewModel'
      summary: Returns a list of resources for the specified service.
      tags:
        - Services
  '/setup/v1/services/{id}/uploadimage':
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to upload a service image. You must convert the image to a base64 encoded string\r\nand pass that string as input along with your filename."
      parameters:
        - description: Valid id of a service object
          in: path
          name: id
          required: true
          type: string
        - description: Input model for image upload
          in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceImageInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Uploads a service image
      tags:
        - Services
  '/{planId}':
    get:
      parameters:
        - in: path
          name: planId
          required: true
          type: string
        - in: query
          name: locationId
          type: string
      responses:
        '200':
          description: Success
      tags:
        - StripePlans
security:
  - oauth2:
      - OnSchedApi
securityDefinitions:
  oauth2:
    flow: application
    scopes:
      OnSchedApi: Consumer and Setup Interface
    tokenUrl: 'https://sandbox-identity.onsched.com/connect/token'
    type: oauth2
swagger: '2.0'
x-components: {}

