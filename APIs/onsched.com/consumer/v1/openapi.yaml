definitions:
  AddressInputModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
    type: object
  AddressUpdateModel:
    additionalProperties: false
    properties:
      addressLine1:
        type: string
        x-nullable: true
      addressLine2:
        type: string
        x-nullable: true
      city:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      postalCode:
        type: string
        x-nullable: true
      state:
        type: string
        x-nullable: true
    type: object
  AppointmentAuditViewModel:
    additionalProperties: false
    properties:
      appointmentId:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      modificationType:
        type: string
        x-nullable: true
      modifiedBy:
        type: string
        x-nullable: true
      modifiedOn:
        format: date-time
        type: string
        x-nullable: true
      notesAfter:
        type: string
        x-nullable: true
      notesBefore:
        type: string
        x-nullable: true
      statusAfter:
        type: string
        x-nullable: true
      statusBefore:
        type: string
        x-nullable: true
    type: object
  AppointmentBookModel:
    additionalProperties: false
    properties:
      customerMessage:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      groupSize:
        format: int32
        type: integer
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notes:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      phoneExt:
        type: string
        x-nullable: true
      phoneType:
        type: string
        x-nullable: true
    type: object
  AppointmentCustomerViewModel:
    additionalProperties: false
    properties:
      appointmentId:
        type: string
        x-nullable: true
      customerId:
        type: string
        x-nullable: true
    type: object
  AppointmentInitialModel:
    additionalProperties: false
    properties:
      bookedBy:
        type: string
        x-nullable: true
      bookingWindowId:
        type: string
        x-nullable: true
      calendarId:
        type: string
        x-nullable: true
      customerId:
        type: string
        x-nullable: true
      customerMessage:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      endDateTime:
        format: date-time
        type: string
      groupSize:
        format: int32
        type: integer
        x-nullable: true
      location:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notes:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      phoneType:
        type: string
        x-nullable: true
      resourceGroupId:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceIds:
        type: string
        x-nullable: true
      serviceAllocationId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      startDateTime:
        format: date-time
        type: string
      timezoneName:
        type: string
        x-nullable: true
      travelAppointmentId:
        type: string
        x-nullable: true
      travelTimeMins:
        format: int32
        type: integer
    type: object
  AppointmentInitialViewModel:
    additionalProperties: false
    properties:
      auditTrail:
        items:
          $ref: '#/definitions/AppointmentAuditViewModel'
        type: array
        x-nullable: true
      bookedBy:
        type: string
        x-nullable: true
      businessName:
        type: string
        x-nullable: true
      calendarId:
        type: string
        x-nullable: true
      confirmationNumber:
        type: string
        x-nullable: true
      confirmed:
        type: boolean
      createDate:
        type: string
        x-nullable: true
      customFields:
        additionalProperties:
          $ref: '#/definitions/CustomFieldViewModel'
        type: object
        x-nullable: true
      customerId:
        type: string
        x-nullable: true
      customerMessage:
        type: string
        x-nullable: true
      customers:
        items:
          $ref: '#/definitions/AppointmentCustomerViewModel'
        type: array
        x-nullable: true
      date:
        type: string
        x-nullable: true
      dateInternational:
        type: string
        x-nullable: true
      downloadIcsUrl:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
      email:
        type: string
        x-nullable: true
      emailConfirmationSent:
        type: string
        x-nullable: true
      emailReminderSent:
        type: string
        x-nullable: true
      endDateTime:
        type: string
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      groupSize:
        format: int32
        type: integer
        x-nullable: true
      id:
        type: string
        x-nullable: true
      ipAddress:
        type: string
        x-nullable: true
      lastModifiedBy:
        type: string
        x-nullable: true
      lastModifiedOn:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      latitude:
        type: string
        x-nullable: true
      location:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      longitude:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notes:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      onlineBooking:
        type: boolean
        x-nullable: true
      paymentStatus:
        format: int32
        type: integer
      phone:
        type: string
        x-nullable: true
      phoneExt:
        type: string
        x-nullable: true
      phoneType:
        type: string
        x-nullable: true
      rescheduledId:
        type: string
        x-nullable: true
      resourceGroupId:
        type: string
        x-nullable: true
      resourceGroupName:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceImageUrl:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      resources:
        items:
          $ref: '#/definitions/AppointmentResourceViewModel'
        type: array
        x-nullable: true
      serviceAllocationId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      serviceImageUrl:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      smsConfirmationSent:
        type: string
        x-nullable: true
      smsReminderSent:
        type: string
        x-nullable: true
      startDateTime:
        type: string
        x-nullable: true
      status:
        type: string
        x-nullable: true
      stripeChargeId:
        type: string
        x-nullable: true
      stripeRefundId:
        type: string
        x-nullable: true
      time:
        format: int32
        type: integer
      timezone:
        format: int32
        type: integer
        x-nullable: true
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
    type: object
  AppointmentListViewModel:
    additionalProperties: false
    type: object
  AppointmentNoShowModel:
    additionalProperties: false
    type: object
  AppointmentRescheduleModel:
    additionalProperties: false
    properties:
      endDateTime:
        format: date-time
        type: string
      resourceId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      startDateTime:
        format: date-time
        type: string
      travelAppointmentId:
        type: string
        x-nullable: true
      travelTimeMins:
        format: int32
        type: integer
    type: object
  AppointmentReserveModel:
    additionalProperties: false
    properties:
      customerMessage:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notes:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      phoneExt:
        type: string
        x-nullable: true
      phoneType:
        type: string
        x-nullable: true
    type: object
  AppointmentResourceViewModel:
    additionalProperties: false
    properties:
      appointmentId:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
    type: object
  AppointmentViewModel:
    additionalProperties: false
    properties:
      auditTrail:
        items:
          $ref: '#/definitions/AppointmentAuditViewModel'
        type: array
        x-nullable: true
      bookedBy:
        type: string
        x-nullable: true
      businessName:
        type: string
        x-nullable: true
      calendarId:
        type: string
        x-nullable: true
      confirmationNumber:
        type: string
        x-nullable: true
      confirmed:
        type: boolean
      createDate:
        type: string
        x-nullable: true
      customFields:
        additionalProperties:
          $ref: '#/definitions/CustomFieldViewModel'
        type: object
        x-nullable: true
      customerId:
        type: string
        x-nullable: true
      customerMessage:
        type: string
        x-nullable: true
      customers:
        items:
          $ref: '#/definitions/AppointmentCustomerViewModel'
        type: array
        x-nullable: true
      date:
        type: string
        x-nullable: true
      dateInternational:
        type: string
        x-nullable: true
      downloadIcsUrl:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
      email:
        type: string
        x-nullable: true
      emailConfirmationSent:
        type: string
        x-nullable: true
      emailReminderSent:
        type: string
        x-nullable: true
      endDateTime:
        type: string
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      groupSize:
        format: int32
        type: integer
        x-nullable: true
      id:
        type: string
        x-nullable: true
      ipAddress:
        type: string
        x-nullable: true
      lastModifiedBy:
        type: string
        x-nullable: true
      lastModifiedOn:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      latitude:
        type: string
        x-nullable: true
      location:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      longitude:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notes:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      onlineBooking:
        type: boolean
        x-nullable: true
      paymentStatus:
        format: int32
        type: integer
      phone:
        type: string
        x-nullable: true
      phoneExt:
        type: string
        x-nullable: true
      phoneType:
        type: string
        x-nullable: true
      rescheduledId:
        type: string
        x-nullable: true
      resourceGroupId:
        type: string
        x-nullable: true
      resourceGroupName:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceImageUrl:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      resources:
        items:
          $ref: '#/definitions/AppointmentResourceViewModel'
        type: array
        x-nullable: true
      serviceAllocationId:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      serviceImageUrl:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      smsConfirmationSent:
        type: string
        x-nullable: true
      smsReminderSent:
        type: string
        x-nullable: true
      startDateTime:
        type: string
        x-nullable: true
      status:
        type: string
        x-nullable: true
      stripeChargeId:
        type: string
        x-nullable: true
      stripeRefundId:
        type: string
        x-nullable: true
      time:
        format: int32
        type: integer
      timezone:
        format: int32
        type: integer
        x-nullable: true
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
    type: object
  Availability3ViewModel:
    additionalProperties: false
    properties:
      businessName:
        type: string
        x-nullable: true
      firstAvailableDate:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      resourceDescription:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceIds:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      serviceDescription:
        type: string
        x-nullable: true
      serviceDuration:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      tzRequested:
        format: int32
        type: integer
        x-nullable: true
    type: object
  AvailabilityDayViewModel:
    additionalProperties: false
    properties:
      objectName:
        type: string
        x-nullable: true
      resourceDescription:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      serviceDescription:
        type: string
        x-nullable: true
      serviceId:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      tzRequested:
        format: int32
        type: integer
        x-nullable: true
    type: object
  AvailabilityViewModel:
    additionalProperties: false
    properties:
      businessName:
        type: string
        x-nullable: true
      calendarId:
        type: string
        x-nullable: true
      calendarResourceGroupId:
        type: string
        x-nullable: true
      endDate:
        type: string
        x-nullable: true
      firstAvailableDate:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      resourceDescription:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceIds:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      serviceDescription:
        type: string
        x-nullable: true
      serviceDuration:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      startDate:
        type: string
        x-nullable: true
      tzRequested:
        format: int32
        type: integer
        x-nullable: true
    type: object
  BookingFieldListViewModel:
    additionalProperties: false
    properties:
      objectName:
        type: string
        x-nullable: true
      total:
        format: int32
        type: integer
    type: object
  ContactInputModel:
    additionalProperties: false
    properties:
      businessPhone:
        type: string
        x-nullable: true
      businessPhoneExt:
        type: string
        x-nullable: true
      conferenceInfo:
        type: string
        x-nullable: true
      homePhone:
        type: string
        x-nullable: true
      mobilePhone:
        type: string
        x-nullable: true
      preferredPhoneType:
        type: string
        x-nullable: true
      skypeUsername:
        type: string
        x-nullable: true
    type: object
  ContactUpdateModel:
    additionalProperties: false
    properties:
      businessPhone:
        type: string
        x-nullable: true
      businessPhoneExt:
        type: string
        x-nullable: true
      conferenceInfo:
        type: string
        x-nullable: true
      homePhone:
        type: string
        x-nullable: true
      mobilePhone:
        type: string
        x-nullable: true
      preferredPhoneType:
        type: string
        x-nullable: true
      skypeUsername:
        type: string
        x-nullable: true
    type: object
  CountryViewModel:
    additionalProperties: false
    description: View model for country objects
    properties:
      code:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  CustomFieldDefinitionListViewModel:
    additionalProperties: false
    properties:
      objectName:
        type: string
        x-nullable: true
      total:
        format: int32
        type: integer
    type: object
  CustomFieldInputModel:
    additionalProperties: false
    properties:
      field1:
        type: string
        x-nullable: true
      field10:
        type: string
        x-nullable: true
      field2:
        type: string
        x-nullable: true
      field3:
        type: string
        x-nullable: true
      field4:
        type: string
        x-nullable: true
      field5:
        type: string
        x-nullable: true
      field6:
        type: string
        x-nullable: true
      field7:
        type: string
        x-nullable: true
      field8:
        type: string
        x-nullable: true
      field9:
        type: string
        x-nullable: true
    type: object
  CustomFieldUpdateModel:
    additionalProperties: false
    properties:
      field1:
        type: string
        x-nullable: true
      field10:
        type: string
        x-nullable: true
      field2:
        type: string
        x-nullable: true
      field3:
        type: string
        x-nullable: true
      field4:
        type: string
        x-nullable: true
      field5:
        type: string
        x-nullable: true
      field6:
        type: string
        x-nullable: true
      field7:
        type: string
        x-nullable: true
      field8:
        type: string
        x-nullable: true
      field9:
        type: string
        x-nullable: true
    type: object
  CustomFieldViewModel:
    additionalProperties: false
    properties:
      name:
        type: string
        x-nullable: true
      value:
        type: string
        x-nullable: true
    type: object
  CustomerInputModel:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressInputModel'
      contact:
        $ref: '#/definitions/ContactInputModel'
      customFields:
        $ref: '#/definitions/CustomFieldInputModel'
      email:
        type: string
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      locationId:
        description: ''
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationType:
        description: '0 = default(Email), 1 = Email, 2 = SMS, 3 = Email and SMS'
        type: string
        x-nullable: true
      sendLeadNotification:
        type: boolean
      stripeCustomerId:
        type: string
        x-nullable: true
      type:
        format: int32
        type: integer
        x-nullable: true
    type: object
  CustomerListViewModel:
    additionalProperties: false
    type: object
  CustomerPlanListViewModel:
    additionalProperties: false
    type: object
  CustomerPlanViewModel:
    additionalProperties: false
    properties:
      created:
        format: date-time
        type: string
      description:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      serviceGroupId:
        type: string
        x-nullable: true
      stripePlanId:
        type: string
        x-nullable: true
      uid:
        type: string
        x-nullable: true
    type: object
  CustomerSubscriptionInputModel:
    additionalProperties: false
    properties:
      customerPlanId:
        type: string
        x-nullable: true
      planStart:
        format: date-time
        type: string
      trialPeriodEnd:
        format: date-time
        type: string
        x-nullable: true
    type: object
  CustomerSubscriptionListViewModel:
    additionalProperties: false
    type: object
  CustomerSubscriptionUpdateModel:
    additionalProperties: false
    properties:
      customerPlanId:
        type: string
        x-nullable: true
      planStart:
        format: date-time
        type: string
        x-nullable: true
      trialPeriodEnd:
        format: date-time
        type: string
        x-nullable: true
    type: object
  CustomerSubscriptionViewModel:
    additionalProperties: false
    properties:
      customerId:
        type: string
        x-nullable: true
      customerPlanId:
        type: string
        x-nullable: true
      customerPlanName:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      planStart:
        format: date-time
        type: string
      trialPeriodEnd:
        format: date-time
        type: string
        x-nullable: true
      trialPeriodStart:
        format: date-time
        type: string
        x-nullable: true
    type: object
  CustomerUpdateModel:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/AddressUpdateModel'
      contact:
        $ref: '#/definitions/ContactUpdateModel'
      customFields:
        $ref: '#/definitions/CustomFieldUpdateModel'
      email:
        type: string
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationType:
        description: '0 = default(Email), 1 = Email, 2 = SMS, 3 = Email and SMS'
        type: string
        x-nullable: true
      stripeCustomerId:
        type: string
        x-nullable: true
      type:
        format: int32
        type: integer
        x-nullable: true
    type: object
  CustomerViewModel:
    additionalProperties: false
    properties:
      birthdate:
        type: string
        x-nullable: true
      businessName:
        type: string
        x-nullable: true
      companyName:
        type: string
        x-nullable: true
      createdBy:
        type: string
        x-nullable: true
      createdOn:
        type: string
        x-nullable: true
      deletedStatus:
        type: boolean
      deletedTime:
        type: string
        x-nullable: true
      disabled:
        type: boolean
        x-nullable: true
      email:
        type: string
        x-nullable: true
      emailInfo:
        type: boolean
        x-nullable: true
      emailPromotion:
        type: boolean
        x-nullable: true
      firstname:
        type: string
        x-nullable: true
      gender:
        type: string
        x-nullable: true
      groupId:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      inviteEmailSent:
        type: string
        x-nullable: true
      lastVisitDate:
        type: string
        x-nullable: true
      lastname:
        type: string
        x-nullable: true
      latitude:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      longitude:
        type: string
        x-nullable: true
      modifiedBy:
        type: string
        x-nullable: true
      modifiedOn:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationType:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      registeredBy:
        type: string
        x-nullable: true
      registrationDate:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      stripeCustomerId:
        type: string
        x-nullable: true
      subscriptionId:
        type: string
        x-nullable: true
      verificationDate:
        type: string
        x-nullable: true
      verifiedBy:
        type: string
        x-nullable: true
      welcomeEmailSent:
        type: string
        x-nullable: true
    type: object
  LocationListViewModel:
    additionalProperties: false
    type: object
  LocationViewModel:
    additionalProperties: false
    properties:
      adminEmail:
        type: string
        x-nullable: true
      adminName:
        type: string
        x-nullable: true
      companyId:
        type: string
        x-nullable: true
      companyName:
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      fax:
        type: string
        x-nullable: true
      friendlyId:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      imageUrl:
        type: string
        x-nullable: true
      latitude:
        format: double
        type: number
      logo:
        type: string
        x-nullable: true
      longitude:
        format: double
        type: number
      maxCapacity:
        format: int32
        type: integer
      maxGroupSize:
        format: int32
        type: integer
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      phone:
        type: string
        x-nullable: true
      primaryBusiness:
        type: boolean
      primaryCalendarId:
        type: string
        x-nullable: true
      regionId:
        type: string
        x-nullable: true
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
      timezoneOffset:
        format: int32
        type: integer
        x-nullable: true
      website:
        type: string
        x-nullable: true
    type: object
  OnlineSettingsViewModel:
    additionalProperties: false
    properties:
      availabilityForm:
        format: int32
        type: integer
      bookAheadUnit:
        format: int32
        type: integer
      bookAheadValue:
        format: int32
        type: integer
      bookInAdvance:
        format: int32
        type: integer
      bookWithAccount:
        type: boolean
      bookingConfirmationMessage:
        type: string
        x-nullable: true
      bookingMessage:
        type: string
        x-nullable: true
      bookingPolicy:
        type: string
        x-nullable: true
      bookingTimerMins:
        format: int32
        type: integer
      businessId:
        type: string
        x-nullable: true
      companyId:
        type: string
        x-nullable: true
      customerBookingsPerDay:
        format: int32
        type: integer
      customerVerification:
        type: boolean
      defaultService:
        type: boolean
        x-nullable: true
      defaultToCustomerTimezone:
        type: boolean
      disableAuthorization:
        type: boolean
        x-nullable: true
      enableWorldTimezones:
        type: boolean
        x-nullable: true
      enabled:
        type: boolean
      familyMembersEnabled:
        type: boolean
      firstAvailable:
        type: boolean
        x-nullable: true
      formFlow:
        format: int32
        type: integer
      hideBreadCrumbNav:
        type: boolean
      hideContinueBooking:
        type: boolean
        x-nullable: true
      hideLocationNav:
        type: boolean
        x-nullable: true
      hideNavBar:
        type: boolean
        x-nullable: true
      hideServiceGroupsNav:
        type: boolean
        x-nullable: true
      hideServicesNav:
        type: boolean
        x-nullable: true
      id:
        format: int32
        type: integer
      lateCancelAction:
        format: int32
        type: integer
      lateCancelHours:
        format: int32
        type: integer
      lateRescheduleAction:
        format: int32
        type: integer
      lateRescheduleHours:
        format: int32
        type: integer
      liveMode:
        type: boolean
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      resourceAnyLabel:
        type: string
        x-nullable: true
      resourceLabel:
        type: string
        x-nullable: true
      resourceSelection:
        type: boolean
      returnToAvailability:
        type: boolean
      returnToService:
        type: boolean
      serviceLabel:
        type: string
        x-nullable: true
      showBusinessLogo:
        type: boolean
      showOnSchedLogo:
        type: boolean
      showServiceGroups:
        type: boolean
    type: object
  PlanLimitListViewModel:
    additionalProperties: false
    type: object
  RepeatViewModel:
    additionalProperties: false
    properties:
      frequency:
        type: string
        x-nullable: true
      interval:
        format: int32
        type: integer
      monthDay:
        type: string
        x-nullable: true
      monthType:
        type: string
        x-nullable: true
      weekdays:
        type: string
        x-nullable: true
    type: object
  ResourceListViewModel:
    additionalProperties: false
    type: object
  ResourceServiceListViewModel:
    additionalProperties: false
    type: object
  ResourceViewModel:
    additionalProperties: false
    properties:
      bioLink:
        type: string
        x-nullable: true
      bookingNotification:
        format: int32
        type: integer
      calendarAvailability:
        format: int32
        type: integer
      deletedStatus:
        type: boolean
      deletedTime:
        format: date-time
        type: string
        x-nullable: true
      description:
        type: string
        x-nullable: true
      effectiveDate:
        format: date-time
        type: string
        x-nullable: true
      email:
        type: string
        x-nullable: true
      gender:
        type: string
        x-nullable: true
      googleCalendarId:
        type: string
        x-nullable: true
      groupId:
        type: string
        x-nullable: true
      hourly:
        format: double
        type: number
        x-nullable: true
      id:
        type: string
        x-nullable: true
      ignoreBusinessHours:
        type: boolean
      imageUrl:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      notificationType:
        format: int32
        type: integer
      objectName:
        type: string
        x-nullable: true
      outlookCalendarId:
        type: string
        x-nullable: true
      skypeName:
        type: string
        x-nullable: true
      sortKey:
        format: int32
        type: integer
      timezoneIana:
        type: string
        x-nullable: true
      timezoneId:
        type: string
        x-nullable: true
      timezoneOffset:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceAllocationListViewModel:
    additionalProperties: false
    type: object
  ServiceAllocationViewModel:
    additionalProperties: false
    properties:
      bookingCount:
        format: int32
        type: integer
      bookingLimit:
        format: int32
        type: integer
      endDate:
        type: string
        x-nullable: true
      endTime:
        format: int32
        type: integer
      id:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      reason:
        type: string
        x-nullable: true
      repeat:
        $ref: '#/definitions/RepeatViewModel'
      repeats:
        type: boolean
      resourceDescription:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceImageUrl:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      serviceDescription:
        type: string
        x-nullable: true
      serviceDuration:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      serviceImageUrl:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      startDate:
        type: string
        x-nullable: true
      startTime:
        format: int32
        type: integer
      timezoneName:
        type: string
        x-nullable: true
      timezoneOffset:
        format: int32
        type: integer
        x-nullable: true
    type: object
  ServiceGroupListViewModel:
    additionalProperties: false
    type: object
  ServiceGroupViewModel:
    additionalProperties: false
    properties:
      companyId:
        type: string
        x-nullable: true
      description:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      imageUrl:
        type: string
        x-nullable: true
      label:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  ServiceListViewModel:
    additionalProperties: false
    type: object
  ServiceSortOrder:
    enum:
      - 0
      - 1
    format: int32
    type: integer
  ServiceViewModel:
    additionalProperties: false
    properties:
      bookAheadUnit:
        format: int32
        type: integer
      bookAheadValue:
        format: int32
        type: integer
      bookInAdvance:
        format: int32
        type: integer
      bookingInterval:
        format: int32
        type: integer
      bookingLimit:
        format: int32
        type: integer
      calendarId:
        type: string
        x-nullable: true
      calendarResourceGroupId:
        type: string
        x-nullable: true
      cancellationFeeAmount:
        format: double
        type: number
      cancellationFeeTaxable:
        type: boolean
      companyId:
        type: string
        x-nullable: true
      consumerPadding:
        type: boolean
      dailyBookingLimitCount:
        format: int32
        type: integer
      dailyBookingLimitMinutes:
        format: int32
        type: integer
      defaultService:
        type: boolean
      description:
        type: string
        x-nullable: true
      duration:
        format: int32
        type: integer
      durationInterval:
        format: int32
        type: integer
      durationMax:
        format: int32
        type: integer
      durationMin:
        format: int32
        type: integer
      durationSelect:
        type: boolean
      feeAmount:
        format: double
        type: number
      feeTaxable:
        type: boolean
      id:
        type: string
        x-nullable: true
      imageUrl:
        type: string
        x-nullable: true
      locationId:
        type: string
        x-nullable: true
      maxBookingLimit:
        format: int32
        type: integer
      maxCapacity:
        format: int32
        type: integer
      maxGroupSize:
        format: int32
        type: integer
      maxResourceBookingLimit:
        format: int32
        type: integer
      mediaPageUrl:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      nonRefundable:
        type: boolean
      objectName:
        type: string
        x-nullable: true
      padding:
        format: int32
        type: integer
      roundRobin:
        format: int32
        type: integer
      serviceGroupId:
        format: int32
        type: integer
        x-nullable: true
      serviceGroupName:
        type: string
        x-nullable: true
      showOnline:
        type: boolean
      type:
        type: string
        x-nullable: true
    type: object
  ServicesScope:
    enum:
      - 0
      - 1
      - 2
    format: int32
    type: integer
  StateViewModel:
    additionalProperties: false
    description: View model for state object
    properties:
      code:
        type: string
        x-nullable: true
      country:
        type: string
        x-nullable: true
      countryName:
        type: string
        x-nullable: true
      name:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
    type: object
  UnavailableTimeListViewModel:
    additionalProperties: false
    type: object
  WindowAvailabilityViewModel:
    additionalProperties: false
    properties:
      businessName:
        type: string
        x-nullable: true
      objectName:
        type: string
        x-nullable: true
      resourceDescription:
        type: string
        x-nullable: true
      resourceId:
        type: string
        x-nullable: true
      resourceName:
        type: string
        x-nullable: true
      serviceDescription:
        type: string
        x-nullable: true
      serviceDuration:
        format: int32
        type: integer
      serviceId:
        type: string
        x-nullable: true
      serviceName:
        type: string
        x-nullable: true
      tzRequested:
        format: int32
        type: integer
        x-nullable: true
    type: object
info:
  description: "Build secure and scalable custom apps for Online Booking. Our flexible API provides many options for availability and booking.\r\n<br><br>\r\nTake the API for a test drive. Just click on the Authorize button below and authenticate. \r\nYou can access our demo company profile if you are not a customer, or your own profile by using your assigned ClientId and Secret.\r\n<br><br>\r\nThe API has two interfaces, consumer and setup. \r\n<ul>\r\n<li>\r\nThe consumer interface provides all the endpoints required for implementing consumer booking flows.\r\n</li>\r\n<li>\r\nThe setup interface provides endpoints for profile configuration and setup.\r\n</li>\r\n</ul>\r\nToggle freely between the two interfaces using the swagger tool bar option labelled 'Select a definition'.\r\n"
  title: OnSched API
  version: v1
  x-apisguru-categories:
    - collaboration
  x-logo:
    url: 'https://onsched.com/img/apple-touch-icon-57x57-precomposed.ico'
  x-origin:
    - format: openapi
      url: 'https://sandbox-api.onsched.com/swagger/consumer/swagger.json'
      version: '3.0'
  x-providerName: onsched.com
  x-serviceName: consumer
paths:
  /consumer/v1/appointments:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.<br /><br />\r\nUse the other query parameters to optionally filter the list by using the query parameters. <br /><br />\r\nThis endpoint returns appoinments using paging. <br /><br />\r\nSee more information at <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointments Overview</a>"
      parameters:
        - description: >-
            The id of the business location. Leave blank for company wide
            search.
          in: query
          name: locationId
          type: string
        - description: Filter appointments by email address.
          in: query
          name: email
          type: string
        - description: Filter appointments by lastname or part of.
          in: query
          name: lastname
          type: string
        - description: Filter appointments by phone number or par of it.
          in: query
          name: phone
          type: string
        - description: Filter appointments by service.
          in: query
          name: serviceId
          type: string
        - description: Filter appointments by calendar.
          in: query
          name: calendarId
          type: string
        - description: Filter appointments by resource.
          in: query
          name: resourceId
          type: string
        - description: Filter appointments by customer.
          in: query
          name: customerId
          type: string
        - description: Filter appointments by service allocation.
          in: query
          name: serviceAllocationId
          type: string
        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate.
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Filter appointments by status: IN, BK, CN, RE, RS.'
          in: query
          name: status
          type: string
        - description: Filter appointments by user email who booked.
          in: query
          name: bookedBy
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentListViewModel'
      summary: Returns a list of appointments.
      tags:
        - Appointments
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "<p>This end point creates a new appointment in an Initial \"IN\" status. The exception is if completeBooking parameter set.</p>\r\n<br />\r\n<p>If you supply a valid customerId in the body, then the POST will create either a booking or reservation using the customer data.</p>\r\n<br />\r\n<p> A valid serviceId is required. Use GET consumer/v1/services to retrieve a list of your services.</p>\r\n<br />\r\n<p> A valid resourceId is required if your calendar is a resource based calendar and you are booking single resource appointments. </p>\r\n<br />\r\n<p> Use consumer/v1/resources to retrieve a list of your resources or use a resourceId returned from the /availability endpoints. </p>\r\n<br />\r\n<p> The resourceIds parameter is required for multi-resource appointments. Pass in comma separated valid resourceIds. This is beta until we update the notifications.</p>\r\n<br />\r\n<p> The customerIds parameter is required for multi-customer appointments. Pass in comma separated valid customerIds. This is beta until we update the notifications.</p>\r\n<br />\r\n<p> The locationId is optional. If the locationId is not passed, the system will default to the primary company location. </p>\r\n<br />\r\n<p> ServiceId provided must be valid for the location being searched. A valid serviceId is one that is scoped to \r\n             Primary Company Location or is associated with that business LocationId</p>\r\n<br />\r\n<p> The customerId is optional. If supplied you can use the completeBooking option and skip the PUT /book step. </p>\r\n<br />\r\n<p> The completeBooking option provides a mechanism for immediate booking with a POST. Applies if you have enough customer information\r\n             to complete the booking. Either supply email and name or customerId with required information.\r\n             Normally, completeBooking is for the BK or RS status, however IN is included to support payment flows.</p>\r\n<br />\r\n<p> The email, name and phone fields are only used with the completeBooking option. As with customerId you can\r\n             skip the PUT /book step. This endpoint completes the booking, and sends notifications.</p>\r\n<br />\r\n<p> A bookingWindowId is required if you are booking appointments into a defined booking window on the service.</p>\r\n<br />\r\n<p> BookedBy is an optional parameter. If it is not supplied the email address of the booked appointment is used or the ip address if no email address is\r\n             used in the /appointment/book endpoint. Booked by is used in the Appointment Audit trail which can be viewed in the Admin Portal.</p>\r\n<br />\r\n<p> Location is optional. This is a string representing the location of the actual appointment, not to be confused with a Business Location.</p>\r\n<br />\r\n<p>Timezone name is optional. The Timezone name is in Iana format e.g. America/New_York. This is the timezone where the appointment was booked. Populating\r\n             this information can help later in situations where appointments are booked before a Daylight Savings change.</p>\r\n<br />\r\n<p>StartDateTime and EndDateTime are required. Use the ISO 8601 format for DateTime Timezone. e.g. 2016-10-30T09:00:00-5:00</p>\r\n<br />\r\n<p>TravelTimeMins and TravelAppointmentId are optional. These are important if you factor in Travel Time for resources to move between appointments.</p>\r\n<br />\r\n<p>This information is returned from the availability/times endpoint. <br /><br />\r\n             See more information at <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointments Overview</a></p>\r\n<br />"
      parameters:
        - description: >-
            Status of BK, RS or IN. Only applies if customerId or name and email
            are supplied.
          in: query
          name: completeBooking
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AppointmentInitialModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentInitialViewModel'
      summary: Returns an appointment object
      tags:
        - Appointments
  /consumer/v1/appointments/bookingfields:
    get:
      description: "This end point returns Booking Field definitions.<br></br>\r\n\r\nAppointment booking fields are different than Customer booking fields. Appointment booking fields are\r\nstored with each appointment. They are used when the information collected during the booking is specific\r\nto a particular visit.<br></br>\r\n\r\nUse the field, and type to determine how to update field values\r\nin PUT /consumer/v1/appointments/bookingfields.<br></br>\r\n\r\nBooking Fields include any custom appointment fields you wish to capture with the Booking and also\r\nmiscellaneous appointment attributes including address information.<br></br>\r\nFor more information see <a href=\"https://onsched.readme.io/docs/custom-booking-fields\">Appointment booking fields</a>"
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BookingFieldListViewModel'
      summary: Returns a list of appointment booking fields
      tags:
        - Appointments
  /consumer/v1/appointments/customfields:
    get:
      description: "This end point returns your Appointment custom field definitions.<br /><br />\r\n\r\nAppointment custom fields are different than Customer custom fields. Appointment custom fields are\r\nstored with each appointment. They are used when the information collected during the booking is specific\r\nto a particular visit.<br /><br />\r\n\r\nUse the field, and type to determine how to update field values\r\nin PUT /consumer/v1/appointments/customfields <br /><br />\r\nFor more information see <a href=\"https://onsched.readme.io/docs/custom-booking-fields\">Appointment booking fields</a>"
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomFieldDefinitionListViewModel'
      summary: Returns a list of appointment custom field definitions
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}':
    delete:
      description: "This end point deletes a booking. Only appointments in a \"IN\" initial status can be deleted.\r\nPast dated appointments cannot be cancelled.<br /><br />\r\n\r\nA valid appointment id is required. You can use the appointmentId returned from GET /consumer/v1/appointments. <br /><br />\r\nFor more information see <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointment Overview</a>"
      parameters:
        - description: Valid Appointment id for the location specified.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Returns an appointment object
      tags:
        - Appointments
    get:
      description: "The result returned is a single appointment object. A valid id is required to find the appointment. <br /><br />\r\n\r\nSee more information at <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointments Overview</a>"
      parameters:
        - description: The id of the appointment object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Returns an appointment object.
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}/book':
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "This end point completes a new booking. Only appointments in the \"IN\" initial status can be booked.\r\nby saving all the relevant details of the booking. <br /><br />\r\n\r\nA valid appointment id is required. Use the appointmentId returned from POST /consumer/v1/appointments.  <br /><br />\r\n\r\nTo update appointment custom field values, use the GET /consumer/v1/appointments/customfields information.  <br /><br />\r\nto understand your definitions of custom fields and what key and values to update. <br /><br />\r\nSee more information at <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointments Overview</a> and \r\n<a href=\"https://onsched.readme.io/docs/custom-booking-fields\">Custom Booking Fields</a>"
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AppointmentBookModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Returns an appointment object
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}/cancel':
    put:
      description: "This end point cancels a booking or reservation. Only appointments in a \"BK\" booked, or \"RS\" reserved status can be cancelled.\r\nPast dated appointments cannot be cancelled. <br /><br />\r\n\r\nA valid appointment id is required. Use the appointmentId returned from POST /consumer/v1/appointments. <br /><br />\r\nFor more information see <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointment Overview</a>"
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Returns an appointment object
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}/confirm':
    put:
      parameters:
        - description: Id of the Appointment Object
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: Use this parameter to undo the confirmed status.
          in: query
          name: undo
          type: boolean
      responses:
        '200':
          description: Success
      summary: Set the Appointment Confirm property to true or false
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}/noshow':
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: >-
        For more information see <a
        href="https://onsched.readme.io/docs/appointments-overview">Appointment
        Overview</a>
      parameters:
        - description: ''
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AppointmentNoShowModel'
      responses:
        '200':
          description: Success
      summary: ''
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}/reschedule':
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "This end point reschedules a booking. Only appointments in a \"BK\" booked status can be rescheduled.\r\nPast dated appointments cannot be cancelled.<br /><br />\r\n\r\nA valid appointment id is required. Use the appointmentId returned from GET /consumer/v1/appointments.<br /><br />\r\n\r\nStartDateTime and EndDateTime are required. Use the ISO 8601 format for DateTime Timezone. e.g. 2016-10-30T09:00:00-5:00<br /><br />\r\n\r\nThe serviceId is optional. If you want your users to change the service on a reschedule, include the new serviceId. \r\nThe new serviceId's StartDateTime and EndDateTime must match your service's duration.<br /><br />\r\n\r\nUse the GET /consumer/v1/availability/{id}/reschedule endpoint to display a list of available times\r\nfor the end user to choose from to reschedule the original appointment.<br /><br />\r\n\r\nYou cannot reschedule an appointment to a different location. You can cancel and reschedule to a different location.\r\n\r\nFor more information see <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointment Overview</a>"
      parameters:
        - description: appointment id
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AppointmentRescheduleModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppointmentViewModel'
      summary: Returns an appointment object
      tags:
        - Appointments
  '/consumer/v1/appointments/{id}/reserve':
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "This end point completes a new reservation. Only appointments in the \"IN\" initial status can be booked.\r\nby saving all the relevant details of the booking.<br /><br />\r\n\r\nNOTE - appointment reservations are different than appointment bookings. Reservations are a two step booking process.\r\nAn appointment is reserved but may not be completed as a booking until other business conditions have been met. For example\r\nan appointment may be reserved that is not yet assigned to a resource.<br /><br />\r\n\r\nNOTE 2 - this endpoint is new as of April 21, 2019. OnSched will be adding a new Email template for appointment reservations expected by the end of April.\r\nThis will allow you to notify your customer of a reservation versus a booking and customize if required to indicate what conditions will the reservation\r\nbecome a booking.<br /><br />\r\n\r\nA valid appointment id is required. Use the appointmentId returned from POST /consumer/v1/appointments.<br /><br />\r\n\r\nTo update appointment custom field values, use the GET /consumer/v1/appointments/customfields information.\r\nto understand your definitions of custom fields and what key and values to update. <br /><br />\r\nSee more information at <a href=\"https://onsched.readme.io/docs/appointments-overview\">Appointments Overview</a><br /><br />"
      parameters:
        - description: ''
          in: path
          name: id
          required: true
          type: string
        - description: ''
          in: query
          name: sendNotifications
          type: boolean
        - description: ''
          in: body
          name: body
          schema:
            $ref: '#/definitions/AppointmentReserveModel'
      responses:
        '200':
          description: Success
      summary: Returns an appointment object
      tags:
        - Appointments
  '/consumer/v1/availability/{serviceId}/{startDate}/{endDate}':
    get:
      description: "Choose your search criteria carefully. Availability is an expensive call. If you search availability for all resources\r\nthen you should only do so for a single date. If you decide to search availability for multiple dates you should only do so\r\nfor a specific resource by specifying the optional resourceId parameter.<br /><br />\r\n\r\nStart and End times are specified as military times e.g. 800 = 8:00am, 2230 = 10:30pm. \r\nYou will only see availability within the boundary of your business start and end times.<br /><br />\r\n\r\n\r\ndayAvailability will return day availablility for the number of days requested from the start date.<br /><br />\r\n\r\n\r\nfirstDayAvailable only works with day availability. If set to true it will look for the first day available within the range specified\r\nby the dayAvailability parameter. The two parameters together can be a clever way to display availability for a week or month.\r\nTip - pass in the beginning of the week or month, and available times are displayed for the first available date if exists.<br /><br />\r\n\r\nYou should only specify the duration parameter if you let your customers choose the duration of the appointment. e.g. from a list.<br /><br />\r\n\r\n\r\nThe tz parameter allows you to select a suitable timezone for the customer to book in. Your app should be timezone aware if you \r\nuse this option. The requested timezone is specified as an offset(plus or minus) from GMT time.<br /><br />\r\n\r\nAvailabity can be complex. We provided an endpoint help you troubleshoot:\r\n/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/unavailable. \r\nThis endpoint will show you all the blocks for a given date range. Available times are created from any unblocked time periods.<br /><br />\r\n\r\n\r\nSee more information at <a href=\"https://onsched.readme.io/docs/availability-overview\">Availability Overview</a>"
      parameters:
        - description: Service Id for availability search.
          in: path
          name: serviceId
          required: true
          type: string
        - description: >-
            Format YYYY-MM-DD. Start Date for availability search. Use format
            YYYY-MM-DD
          format: date-time
          in: path
          name: startDate
          required: true
          type: string
        - description: >-
            Format YYYY-MM-DD. End Date for availability search. Use format
            YYYY-MM-DD
          format: date-time
          in: path
          name: endDate
          required: true
          type: string
        - description: >-
            Format Military Time.Start Time for availability search. Defaults to
            Business Hours Start.
          format: int32
          in: query
          name: startTime
          type: integer
        - description: >-
            Format Military Time.End Time for availability search. Defaults to
            Business Hours End.
          format: int32
          in: query
          name: endTime
          type: integer
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Resource Id for availability search.
          in: query
          name: resourceId
          type: string
        - description: Resource Group Id for availability search.
          in: query
          name: resourceGroupId
          type: string
        - description: Comma separated Resource Id's for availability search.
          in: query
          name: resourceIds
          type: string
        - description: 'Round robin choice 0=none, 1=random, 2=balanced.'
          in: query
          name: roundRobin
          type: string
        - description: Duration of the service if different than the default.
          format: int32
          in: query
          name: duration
          type: integer
        - description: Booking Interval if different than the default.
          format: int32
          in: query
          name: interval
          type: integer
        - description: Request timezone offset to view availability.
          format: int32
          in: query
          name: tzOffset
          type: integer
        - description: For calculating travel based availability. Requires distance scope.
          in: query
          name: destination
          type: string
        - description: >-
            Format YYYY-DD-YY. Start date for day availability. Defaults to
            startDate.
          format: date-time
          in: query
          name: dayAvailabilityStartDate
          type: string
        - description: Number of days of day availability to return.
          format: int32
          in: query
          name: dayAvailability
          type: integer
        - description: Return available times for the first available day.
          in: query
          name: firstDayAvailable
          type: boolean
        - description: >-
            Try the full server based availability beta. Will be faster when
            caching implmented.
          in: query
          name: fullServerBasedAvailability
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AvailabilityViewModel'
      summary: Returns a list of available times.
      tags:
        - Availability
  '/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/days':
    get:
      description: "This end point is used to show day level availability. For example if the business is closed, or there is a public holiday.\r\n\r\nDay level availability is a good way to restrict your choices of dates in your app and improve usability."
      parameters:
        - description: Service Id for availability search.
          in: path
          name: serviceId
          required: true
          type: string
        - description: Format Format YYYY-MM-DD. Start Date for availability search.
          format: date-time
          in: path
          name: startDate
          required: true
          type: string
        - description: Format Format YYYY-MM-DD. End Date for availability search.
          format: date-time
          in: path
          name: endDate
          required: true
          type: string
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Resource Id to filter on.
          in: query
          name: resourceId
          type: string
        - description: Request timezone offset to view availability.
          format: int32
          in: query
          name: tzOffset
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AvailabilityDayViewModel'
      summary: Returns a list of available days.
      tags:
        - Availability
  '/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/times':
    get:
      description: "<b>Deprecation Notice</b> : This endpoint is no longer being maintained and will be deprecated in a future release.        \r\n            Use the /consumer/v1/availability{serviceId}/{startDate}/{endDate} endpoint instead."
      parameters:
        - description: Service Id for availability search.
          in: path
          name: serviceId
          required: true
          type: string
        - description: Format YYYY-MM-DD. Start Date for availability search.
          format: date-time
          in: path
          name: startDate
          required: true
          type: string
        - description: Format YYYY-MM-DD. End Date for availability search.
          format: date-time
          in: path
          name: endDate
          required: true
          type: string
        - description: >-
            Format Military Time. Start Time for availability search. Defaults
            to Business Hours Start.
          format: int32
          in: query
          name: startTime
          type: integer
        - description: >-
            Format Military Time. End Time for availability search. Defaults to
            Business Hours End.
          format: int32
          in: query
          name: endTime
          type: integer
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Destination address to calculate travel times.
          in: query
          name: destination
          type: string
        - description: Resource Id to filter on.
          in: query
          name: resourceId
          type: string
        - description: Comma separated list of Resource Id's to filter on.
          in: query
          name: resourceIds
          type: string
        - description: Resource Group Id to filter on.
          in: query
          name: resourceGroupId
          type: string
        - description: >-
            Round robin choice 0=none, 1=random, 2=balanced, 3=score,
            4=distance.
          in: query
          name: roundRobin
          type: string
        - description: Duration of the service if different than the default.
          format: int32
          in: query
          name: duration
          type: integer
        - description: Booking Interval if different than the default.
          format: int32
          in: query
          name: interval
          type: integer
        - description: Request timezone offset to view unavailable times.
          format: int32
          in: query
          name: tzOffset
          type: integer
        - description: >-
            Format YYYY-DD-YY. Start date for day availability. Defaults to
            startDate.
          format: date-time
          in: query
          name: dayAvailabilityStartDate
          type: string
        - description: Number of days of day availability to return.
          format: int32
          in: query
          name: dayAvailability
          type: integer
        - description: Return available times for the first available day.
          in: query
          name: firstDayAvailable
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Availability3ViewModel'
      summary: Returns a list of available times.
      tags:
        - Availability
  '/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/unavailable':
    get:
      description: >-
        This endpoint is used to show unavailable times and provides information
        why the time is unavailable.
      parameters:
        - description: Service Id for availability search.
          in: path
          name: serviceId
          required: true
          type: string
        - description: Format YYYY-MM-DD. Start Date for unavailable time search.
          format: date-time
          in: path
          name: startDate
          required: true
          type: string
        - description: Format YYYY-MM-DD. End Date for unavailable time search.
          format: date-time
          in: path
          name: endDate
          required: true
          type: string
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Resource Id to filter on.
          in: query
          name: resourceId
          type: string
        - description: Duration of the service if different than the default.
          format: int32
          in: query
          name: duration
          type: integer
        - description: Request timezone offset to view unavailable times.
          format: int32
          in: query
          name: tzOffset
          type: integer
        - description: >-
            Try the full server based availability beta. Will be faster when
            caching implmented.
          in: query
          name: fullServerBasedAvailability
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnavailableTimeListViewModel'
      summary: Returns a list of unavailable times.
      tags:
        - Availability
  '/consumer/v1/availability/{serviceId}/{startDate}/{endDate}/windows':
    get:
      description: "This end point may be removed in the next release. It is used for server based availability from UnavailableTimes.\r\nUse the v1/consumer/availability{serviceId}/{startDate}/{endDate} endpoint instead."
      parameters:
        - description: Service Id for availability search.
          in: path
          name: serviceId
          required: true
          type: string
        - description: Format YYYY-MM-DD. Start Date for availability search.
          format: date-time
          in: path
          name: startDate
          required: true
          type: string
        - description: Format YYYY-MM-DD. End Date for availability search.
          format: date-time
          in: path
          name: endDate
          required: true
          type: string
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Destination address to calculate travel times.
          in: query
          name: destination
          type: string
        - description: Resource Id to filter on.
          in: query
          name: resourceId
          type: string
        - description: Comma separated list of Resource Id's to filter on.
          in: query
          name: resourceIds
          type: string
        - description: Resource Group Id to filter on.
          in: query
          name: resourceGroupId
          type: string
        - description: 'Round robin choice 0=none, 1=random, 2=balanced.'
          in: query
          name: roundRobin
          type: string
        - description: Duration of the service if different than the default.
          format: int32
          in: query
          name: duration
          type: integer
        - description: Booking Interval if different than the default.
          format: int32
          in: query
          name: interval
          type: integer
        - description: Request timezone offset to view unavailable times.
          format: int32
          in: query
          name: tzOffset
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/WindowAvailabilityViewModel'
      summary: Returns a list of available booking window times.
      tags:
        - Availability
  /consumer/v1/customers:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter customers by group.
          in: query
          name: groupId
          type: string
        - description: Filter customers by email address.
          in: query
          name: email
          type: string
        - description: Search customers by lastname.
          in: query
          name: lastname
          type: string
        - description: Filter customers by deleted status.
          in: query
          name: deleted
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerListViewModel'
      summary: Returns a list of customers.
      tags:
        - Customers
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to create a new customer. If not specified the business location id defaults to the first location in the company.\r\nEmail Address and a lastname are required for creating a new customer.\r\nType 0 = Person, Type 1 = Business\r\nFor type 0, the firstname and lastname fields are used. For type 1, the Name field is used and the name field is also used to populate the lastname."
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerViewModel'
      summary: Creates a new customer object.
      tags:
        - Customers
  /consumer/v1/customers/bookingfields:
    get:
      description: "This end point returns Booking Field definitions.\r\n\r\nCustomer booking fields are different than Appointment booking fields. Customer booking fields are\r\nstored with each customer. They are used when the information collected during the booking is specific\r\nto a particular visit.\r\n\r\nUse the field, and type to determine how to update field values\r\nin PUT /consumer/v1/appointments/{id}/book\r\n\r\nCustomer Booking Fields include any custom customer fields you wish to capture with the Booking and also\r\nmiscellaneous customer attributes including Company Name, Customer Demographic information and Address information."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BookingFieldListViewModel'
      summary: Returns a list of customer booking fields
      tags:
        - Customers
  /consumer/v1/customers/countries:
    get:
      description: >-
        Returns a list of countries with the associated country code. Country
        codes are based on the 2 character ANSI standard.
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/CountryViewModel'
            type: array
      summary: Returns a list of country objects
      tags:
        - Customers
  /consumer/v1/customers/customfields:
    get:
      description: "This end point returns your Customer custom field definitions.\r\n\r\nCustomer custom fields are different than Appointment custom fields. Appointment custom fields are\r\nstored with each appointment. They are used when the information collected during the booking is specific\r\nto a particular visit, where as Customer custom fields are stored with the customer profile. \r\n\r\nUse the key field, and type to determine how to update field values\r\nin POST /consumer/v1/customers and PUT /consumer/v1/customers/{id}"
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: >-
            A true/false indicator to filter on custom fields used for lead
            questions.
          in: query
          name: leadQuestions
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomFieldDefinitionListViewModel'
      summary: Returns a list of customField objects
      tags:
        - Customers
  /consumer/v1/customers/plans:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter customers by group.
          in: query
          name: groupId
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerPlanListViewModel'
      summary: Returns a list of customers.
      tags:
        - Customers
  '/consumer/v1/customers/plans/{id}':
    get:
      description: "The result returned is a single customer object. An id is required to find the customer. Find customer id's using either the GET consumer/v1/customers end point,\r\nor the GET consumer/v1/appointments end point. A customer object is automatically created with the first booking if it doesn't already exist."
      parameters:
        - description: The id of the customer plan object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerPlanViewModel'
      summary: Returns a customer object.
      tags:
        - Customers
  /consumer/v1/customers/states:
    get:
      description: "Returns a list of states with the associated state code and country. \r\n\r\nContact us if states for your countries of operation are not currently loaded."
      parameters:
        - in: query
          name: country
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/StateViewModel'
            type: array
      summary: Returns a list of state objects
      tags:
        - Customers
  /consumer/v1/customers/subscriptions:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerSubscriptionListViewModel'
      summary: Returns a list of customer subscriptions.
      tags:
        - Customers
  '/consumer/v1/customers/subscriptions/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success
      tags:
        - Customers
    get:
      description: The result returned is a single customer subscription object.
      parameters:
        - description: The id of the customer subscription object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerSubscriptionViewModel'
      summary: Returns a customer subscription object.
      tags:
        - Customers
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to update customer subscription information.
      parameters:
        - description: The id of the customer subscription object.
          in: path
          name: id
          required: true
          type: string
        - description: Customer subscription update model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerSubscriptionUpdateModel'
      responses:
        '200':
          description: Success
      summary: Updates a customer subscription object.
      tags:
        - Customers
  '/consumer/v1/customers/{id}':
    delete:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success
      tags:
        - Customers
    get:
      description: "The result returned is a single customer object. An id is required to find the customer. Find customer id's using either the GET consumer/v1/customers end point,\r\nor the GET consumer/v1/appointments end point. A customer object is automatically created with the first booking if it doesn't already exist."
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerViewModel'
      summary: Returns a customer object.
      tags:
        - Customers
    put:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: "Use this endpoint to update customer information. If not specified the business location id defaults to the first location in the company.\r\nBlank fields are not changed"
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerUpdateModel'
      responses:
        '200':
          description: Success
      summary: Updates a customer object.
      tags:
        - Customers
  '/consumer/v1/customers/{id}/planlimits/{serviceId}/{resourceId}/{dateTimeTz}':
    get:
      description: "The result returned is list of limit rules as defined by the subscribed customer plan along with Booking Counts/Minutes\r\nThe results indicate the remaining bookings count / minutes. Use the results in your app to determine if the customer should continue booking.\r\nYou can enforce Limits in periods: Daily,Weekly,Monthly and for maximum total limits. Maximum total limits is based on six months prior to\r\nthe DateTimeTz and six months after the DateTimeTz. Daily, Weekly and Monthly limits are based on the calculated period relative to the\r\nsubscription plan start. Daily,Weekly and Monthly limits can be setup on a per interval basis e.g. to biweekly, or daily every 10 days.\r\nSee customer plans setup in the Portal for more information.\r\nAll parameters are required. If resourceId is not applicable for a non-resource calendar, pass zero.\r\nFormat of the dateTimeTz field is 2018-10-30T10:00-5:00"
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          type: string
        - description: The id of the service object.
          in: path
          name: serviceId
          required: true
          type: string
        - description: The id of the resource object.
          in: path
          name: resourceId
          required: true
          type: string
        - description: The DateTimeTz to check
          format: date-time
          in: path
          name: dateTimeTz
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PlanLimitListViewModel'
      summary: Returns a list of customer booking limits.
      tags:
        - Customers
  '/consumer/v1/customers/{id}/subscriptions':
    get:
      description: >-
        The result returned is a single customer subscription object. A customer
        can only be subsribed to a single Customer Plan
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerSubscriptionViewModel'
      summary: Returns a customer subscription object.
      tags:
        - Customers
    post:
      consumes:
        - application/json
        - application/json-patch+json
        - text/json
      description: Use this endpoint to create a new customer subscription.
      parameters:
        - description: The id of the customer object.
          in: path
          name: id
          required: true
          type: string
        - description: The subscription input model.
          in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerSubscriptionInputModel'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerSubscriptionViewModel'
      summary: Creates a new customer subscription object.
      tags:
        - Customers
  /consumer/v1/locations:
    get:
      description: "Use this api end point if you have multiple business locations in your company.\r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list.\r\n\r\nTo leverage the search by serviceId, setup locationService's see endpoints in this controller.\r\nLocation services allow you to exclude company scoped services for locations that do not offer them.\r\nYou can explicitly define which services are offered or if none are defined then all services are offererd"
      parameters:
        - description: Location name(full or partial) to filter on
          in: query
          name: name
          type: string
        - description: 'Search by distance nearest Geocoords, City, Postal/Zip Code'
          in: query
          name: nearestTo
          type: string
        - description: Maximum distance to display
          format: int32
          in: query
          name: proximity
          type: integer
        - description: 'Distance either imperial(miles), metric(kilometers)'
          in: query
          name: units
          type: string
        - description: Locations that offer this service
          in: query
          name: serviceId
          type: string
        - description: Locations within a specific region
          in: query
          name: regionId
          type: string
        - description: Don't include the Primary Location
          in: query
          name: ignorePrimary
          type: boolean
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationListViewModel'
      summary: Returns a list of business locations.
      tags:
        - Locations
  '/consumer/v1/locations/{id}':
    get:
      description: >-
        The result returned is a single location object. An id is required to
        find the location. Find location id's using the GET
        consumer/v1/locations end point,
      parameters:
        - description: The id of the business location object.
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LocationViewModel'
      summary: Returns a business location object.
      tags:
        - Locations
  /consumer/v1/resources:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter resources by group.
          format: int32
          in: query
          name: resourceGroupId
          type: integer
        - description: Filter resources by email address.
          in: query
          name: email
          type: string
        - description: Search resources by name.
          in: query
          name: name
          type: string
        - description: Specify sort order of response.
          in: query
          name: sortOrder
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: resource object
          schema:
            $ref: '#/definitions/ResourceListViewModel'
        '400':
          description: Missing or invalid values in the request
        '404':
          description: Resource was not found
      summary: Returns a list of resources.
      tags:
        - Resources
  '/consumer/v1/resources/{id}':
    get:
      description: "The result returned is a single resource object. An id is required to find the resource. Find customer id's using either the GET consumer/v1/resources end point,\r\nor the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the resource object.
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceViewModel'
      summary: Returns a resource object.
      tags:
        - Resources
  '/consumer/v1/resources/{id}/services':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list.\r\nResource services are used to explicitly define the services that can be booked for a resource. If no resource services are defined then by\r\ndefault all services can be booked for the resource."
      parameters:
        - description: The id of the resource object.
          format: int32
          in: path
          name: id
          required: true
          type: integer
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: list of resource services
          schema:
            $ref: '#/definitions/ResourceServiceListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Unauthorized request
        '404':
          description: Resource was not found
      summary: Returns a list of resource services.
      tags:
        - Resources
  /consumer/v1/servicegroups:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceGroupListViewModel'
      summary: Returns a list of service groups.
      tags:
        - ServiceGroups
  '/consumer/v1/servicegroups/{id}':
    get:
      description: "The result returned is a single serviceGroup object. An id is required to find the serviceGroup. Find serviceGroup id's using \r\nthe GET consumer/v1/servicegroups end point,"
      parameters:
        - description: The id of the serviceGroup object.
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceGroupViewModel'
      summary: Returns a serviceGroup object.
      tags:
        - ServiceGroups
  /consumer/v1/services:
    get:
      description: "Use this endpoint to get services available at your business location and/or company. If no locationId is provided the primary company will be queried. \r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size.\r\nDefault offset is <b>0</b>, and limit is <b>20</b>. Use the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. defaults to first business
            location.
          in: query
          name: locationId
          type: string
        - description: Filter services by group.
          format: int32
          in: query
          name: serviceGroupId
          type: integer
        - description: Filter services by default service.
          in: query
          name: defaultService
          type: boolean
        - description: 'Search on all Locations, default is <b>false</b>'
          in: query
          name: allLocations
          type: boolean
        - description: >-
            Filter Services by Scope, company, location or all, default is
            <b>all</b>.
          enum:
            - 0
            - 1
            - 2
          format: int32
          in: query
          name: scope
          type: integer
        - description: Filter Services using Service Names. Supports Partial name search
          in: query
          name: name
          type: string
        - description: >-
            Filter based on ServiceId. Using this parameter would ignore all
            other parameters
          in: query
          name: serviceId
          type: string
        - description: 'Starting row of page, default <b>0</b>'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default <b>20</b>. Maximum <b>500</b>.'
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            Sort Results using Natural Sort or Sorted alphabetically along
            Service Names, default is <b>natural</b>
          enum:
            - 0
            - 1
          format: int32
          in: query
          name: sortOrder
          type: integer
        - description: Sort Result in Descending Order. default <b>true</b>
          in: query
          name: sortDescending
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceListViewModel'
      summary: Returns a list of services.
      tags:
        - Services
  '/consumer/v1/services/allocations/{id}':
    get:
      description: ''
      parameters:
        - description: Valid id of a service allocation object
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceAllocationViewModel'
      summary: Get a service allocation
      tags:
        - Services
  '/consumer/v1/services/{id}':
    get:
      description: "The result returned is a single service object. An id is required to find the service. Find service id's using either the GET consumer/v1/service end point,\r\nor the GET consumer/v1/appointments end point."
      parameters:
        - description: The id of the service object.
          format: int32
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ServiceViewModel'
      summary: Returns a service object.
      tags:
        - Services
  '/consumer/v1/services/{id}/allocations':
    get:
      description: "This endpoint is used primarily for event booking. When you create service type events, you allocation specific occurrences of the event \r\nagainst the service. \r\n\r\nYou can retrieve all allocations for a location by passing in zero as the service id. Otherwise, to get allocations for a specific service\r\npass in the service id.\r\n\r\nThe results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service to list allocations. Zero for all allocations.
          in: path
          name: id
          required: true
          type: string
        - description: The id of the location. Defaults to the primary location.
          in: query
          name: locationId
          type: string
        - description: The id of the resource to filter on.
          in: query
          name: resourceId
          type: string
        - description: Format YYYY-MM-DD. Filter appointments by on/after startDate
          format: date-time
          in: query
          name: startDate
          type: string
        - description: Format YYYY-MM-DD. Filter appointments on/before endDate.
          format: date-time
          in: query
          name: endDate
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: service alloaction object
          schema:
            $ref: '#/definitions/ServiceAllocationListViewModel'
        '400':
          description: Missing or invalid values in the request
        '401':
          description: Authorization error.
        '404':
          description: Service was not found
      summary: Returns a list of service allocations.
      tags:
        - Services
  '/consumer/v1/services/{id}/resources':
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: The id of the service object.
          in: path
          name: id
          required: true
          type: string
        - description: >-
            The id of the business location. Defaults to primary business
            location.
          in: query
          name: locationId
          type: string
        - description: 'Starting row of page, default 0'
          format: int32
          in: query
          name: offset
          type: integer
        - description: 'Page limit, default 20. Maximum 100.'
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResourceListViewModel'
      summary: Returns a list of resources.
      tags:
        - Services
  /consumer/v1/settings:
    get:
      description: "The results are returned in pages. Use the offset and limit parameters to control the page start and size. Default offset is 0, and limit is 20.\r\nUse the other query parameters to optionally filter the results list."
      parameters:
        - description: >-
            The id of the business location. Defaults to first business
            location.
          in: query
          name: locationId
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OnlineSettingsViewModel'
      summary: Returns a list of customers.
      tags:
        - Settings
  '/{planId}':
    get:
      parameters:
        - in: path
          name: planId
          required: true
          type: string
        - in: query
          name: locationId
          type: string
      responses:
        '200':
          description: Success
      tags:
        - StripePlans
security:
  - oauth2:
      - OnSchedApi
securityDefinitions:
  oauth2:
    flow: application
    scopes:
      OnSchedApi: Consumer and Setup Interface
    tokenUrl: 'https://sandbox-identity.onsched.com/connect/token'
    type: oauth2
swagger: '2.0'
x-components: {}

