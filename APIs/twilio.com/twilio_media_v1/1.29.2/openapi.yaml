basePath: /
definitions:
  media.v1.media_processor:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The ISO 8601 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The ISO 8601 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      ended_reason:
        description: The reason why a MediaProcessor ended
        type: string
        x-nullable: true
      extension:
        description: The Media Extension name or URL
        type: string
        x-nullable: true
      extension_context:
        description: The Media Extension context
        type: string
        x-nullable: true
      max_duration:
        description: Maximum MediaProcessor duration in seconds
        type: integer
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^ZX[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      status:
        description: The status of the MediaProcessor
        enum:
          - failed
          - started
          - ended
        type: string
        x-nullable: true
      status_callback:
        description: The URL to which Twilio will send MediaProcessor event updates
        format: uri
        type: string
        x-nullable: true
      status_callback_method:
        description: The HTTP method Twilio should use to call the `status_callback` URL
        enum:
          - HEAD
          - GET
          - POST
          - PATCH
          - PUT
          - DELETE
        format: http-method
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the resource
        format: uri
        type: string
        x-nullable: true
    type: object
  media.v1.media_recording:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      bitrate:
        description: The bitrate of the media
        type: integer
        x-nullable: true
      date_created:
        description: The ISO 8601 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The ISO 8601 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      duration:
        description: The duration of the MediaRecording
        type: integer
        x-nullable: true
      format:
        description: The format of the MediaRecording
        enum:
          - mp4
          - webm
        type: string
        x-nullable: true
      links:
        description: The URLs of related resources
        format: uri-map
        type: object
        x-nullable: true
      media_size:
        description: The size of the recording media
        type: integer
        x-nullable: true
      processor_sid:
        description: The SID of the MediaProcessor
        maxLength: 34
        minLength: 34
        pattern: '^ZX[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      resolution:
        description: The dimensions of the video image in pixels
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^KV[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      source_sid:
        description: The SID of the resource that generated the original media
        maxLength: 34
        minLength: 34
        pattern: '^[a-zA-Z]{2}[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      status:
        description: The status of the MediaRecording
        enum:
          - processing
          - completed
          - deleted
          - failed
        type: string
        x-nullable: true
      status_callback:
        description: The URL to which Twilio will send MediaRecording event updates
        format: uri
        type: string
        x-nullable: true
      status_callback_method:
        description: The HTTP method Twilio should use to call the `status_callback` URL
        enum:
          - HEAD
          - GET
          - POST
          - PATCH
          - PUT
          - DELETE
        format: http-method
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the resource
        format: uri
        type: string
        x-nullable: true
    type: object
  media.v1.player_streamer:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The ISO 8601 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The ISO 8601 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      ended_reason:
        description: The reason why a PlayerStreamer ended
        enum:
          - ended-via-api
          - max-duration-exceeded
          - stream-disconnected-by-source
          - unexpected-failure
        type: string
        x-nullable: true
      links:
        description: The URLs of related resources
        format: uri-map
        type: object
        x-nullable: true
      max_duration:
        description: Maximum PlayerStreamer duration in seconds
        type: integer
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^VJ[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      status:
        description: The status of the PlayerStreamer
        enum:
          - created
          - started
          - ended
          - failed
        type: string
        x-nullable: true
      status_callback:
        description: The URL to which Twilio will send PlayerStreamer event updates
        format: uri
        type: string
        x-nullable: true
      status_callback_method:
        description: The HTTP method Twilio should use to call the `status_callback` URL
        enum:
          - HEAD
          - GET
          - POST
          - PATCH
          - PUT
          - DELETE
        format: http-method
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the resource
        format: uri
        type: string
        x-nullable: true
      video:
        description: Whether the PlayerStreamer is configured to stream video
        type: boolean
        x-nullable: true
    type: object
  media.v1.player_streamer.player_streamer_playback_grant:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The ISO 8601 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      grant:
        description: The grant that authorizes the player sdk to connect to the livestream
        x-nullable: true
      sid:
        description: >-
          The unique string that identifies the PlayerStreamer associated with
          this PlaybackGrant.
        maxLength: 34
        minLength: 34
        pattern: '^VJ[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the resource
        format: uri
        type: string
        x-nullable: true
    type: object
host: media.twilio.com
info:
  contact:
    email: support@twilio.com
    name: Twilio Support
    url: 'https://support.twilio.com'
  description: This is the public Twilio REST API.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'https://www.twilio.com/legal/tos'
  title: Twilio - Media
  version: 1.29.2
  x-apisguru-categories:
    - telecom
    - messaging
  x-logo:
    url: >-
      https://static1.twilio.com/marketing/bundles/marketing/img/logos/wordmark-red.svg
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/twilio/twilio-oai/main/spec/json/twilio_media_v1.json
      version: '3.0'
  x-providerName: twilio.com
  x-serviceName: twilio_media_v1
paths:
  /v1/MediaProcessors:
    description: >-
      A MediaProcessor resource provides the ability to capture content from a
      web application with a Twilio Media Extension to create a livestream.
    get:
      description: Returns a list of MediaProcessors.
      operationId: ListMediaProcessor
      parameters:
        - description: >-
            The sort order of the list by `date_created`. Can be: `asc`
            (ascending) or `desc` (descending) with `desc` as the default.
          enum:
            - asc
            - desc
          in: query
          name: Order
          type: string
        - description: >-
            Status to filter by, with possible values `started`, `ended` or
            `failed`.
          enum:
            - failed
            - started
            - ended
          in: query
          name: Status
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              media_processors:
                items:
                  $ref: '#/definitions/media.v1.media_processor'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListMediaProcessorResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateMediaProcessor
      parameters:
        - description: >-
            The [Media Extension](/docs/live/api/media-extensions-overview) name
            or URL. Ex: `video-composer-v2`
          in: formData
          name: Extension
          required: true
          type: string
        - description: >-
            The context of the Media Extension, represented as a JSON
            dictionary. See the documentation for the specific [Media
            Extension](/docs/live/api/media-extensions-overview) you are using
            for more information about the context to send.
          in: formData
          name: ExtensionContext
          required: true
          type: string
        - description: >-
            User-defined environment variables for the Media Extension,
            represented as a JSON dictionary of key/value strings. See the
            documentation for the specific [Media
            Extension](/docs/live/api/media-extensions-overview) you are using
            for more information about whether you need to provide this.
          in: formData
          name: ExtensionEnvironment
        - description: >-
            The maximum time, in seconds, that the MediaProcessor can run before
            automatically ends. The default value is 300 seconds, and the
            maximum value is 90000 seconds. Once this maximum duration is
            reached, Twilio will end the MediaProcessor, regardless of whether
            media is still streaming.
          in: formData
          name: MaxDuration
          type: integer
        - description: >-
            The URL to which Twilio will send asynchronous webhook requests for
            every MediaProcessor event. See [Status
            Callbacks](/docs/live/status-callbacks) for details.
          format: uri
          in: formData
          name: StatusCallback
          type: string
        - description: >-
            The HTTP method Twilio should use to call the `status_callback` URL.
            Can be `POST` or `GET` and the default is `POST`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: StatusCallbackMethod
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/media.v1.media_processor'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - status
        - extension
        - extension_context
      pathType: list
  '/v1/MediaProcessors/{Sid}':
    description: >-
      A MediaProcessor resource provides the ability to capture content from a
      web application with a Twilio Media Extension to create a livestream.
    get:
      description: Returns a single MediaProcessor resource identified by a SID.
      operationId: FetchMediaProcessor
      parameters:
        - description: The SID of the MediaProcessor resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^ZX[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/media.v1.media_processor'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Updates a MediaProcessor resource identified by a SID.
      operationId: UpdateMediaProcessor
      parameters:
        - description: The SID of the MediaProcessor resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^ZX[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: The status of the MediaProcessor. Can be `ended`.
          enum:
            - ended
          in: formData
          name: Status
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/media.v1.media_processor'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - status
        - extension
        - extension_context
      pathType: instance
  /v1/MediaRecordings:
    description: >-
      A MediaRecording resource exposes recording metadata and allows the
      deletion of a particular recording.
    get:
      description: Returns a list of MediaRecordings.
      operationId: ListMediaRecording
      parameters:
        - description: >-
            The sort order of the list by `date_created`. Can be: `asc`
            (ascending) or `desc` (descending) with `desc` as the default.
          enum:
            - asc
            - desc
          in: query
          name: Order
          type: string
        - description: >-
            Status to filter by, with possible values `processing`, `completed`,
            `deleted`, or `failed`.
          enum:
            - processing
            - completed
            - deleted
            - failed
          in: query
          name: Status
          type: string
        - description: SID of a MediaProcessor to filter by.
          in: query
          maxLength: 34
          minLength: 34
          name: ProcessorSid
          pattern: '^ZX[0-9a-fA-F]{32}$'
          type: string
        - description: SID of a MediaRecording source to filter by.
          in: query
          maxLength: 34
          minLength: 34
          name: SourceSid
          pattern: '^[a-zA-Z]{2}[0-9a-fA-F]{32}$'
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              media_recordings:
                items:
                  $ref: '#/definitions/media.v1.media_recording'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListMediaRecordingResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - Preview
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - status
      pathType: list
  '/v1/MediaRecordings/{Sid}':
    delete:
      description: Deletes a MediaRecording resource identified by a SID.
      operationId: DeleteMediaRecording
      parameters:
        - description: The SID of the MediaRecording resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^KV[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - Preview
    description: >-
      A MediaRecording resource exposes recording metadata and allows the
      deletion of a particular recording.
    get:
      description: Returns a single MediaRecording resource identified by a SID.
      operationId: FetchMediaRecording
      parameters:
        - description: The SID of the MediaRecording resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^KV[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/media.v1.media_recording'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Preview
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - status
      pathType: instance
  /v1/PlayerStreamers:
    description: >-
      A PlayerStreamer resource provides the ability to send a livestream to a
      JavaScript, iOS, or Android Player SDK.
    get:
      description: Returns a list of PlayerStreamers.
      operationId: ListPlayerStreamer
      parameters:
        - description: >-
            The sort order of the list by `date_created`. Can be: `asc`
            (ascending) or `desc` (descending) with `desc` as the default.
          enum:
            - asc
            - desc
          in: query
          name: Order
          type: string
        - description: >-
            Status to filter by, with possible values `created`, `started`,
            `ended`, or `failed`.
          enum:
            - created
            - started
            - ended
            - failed
          in: query
          name: Status
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              player_streamers:
                items:
                  $ref: '#/definitions/media.v1.player_streamer'
                type: array
            title: ListPlayerStreamerResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreatePlayerStreamer
      parameters:
        - description: >-
            The maximum time, in seconds, that the PlayerStreamer can run before
            automatically ends. The default value is 300 seconds, and the
            maximum value is 90000 seconds. Once this maximum duration is
            reached, Twilio will end the PlayerStreamer, regardless of whether
            media is still streaming.
          in: formData
          name: MaxDuration
          type: integer
        - description: >-
            The URL to which Twilio will send asynchronous webhook requests for
            every PlayerStreamer event. See [Status
            Callbacks](/docs/live/status-callbacks) for more details.
          format: uri
          in: formData
          name: StatusCallback
          type: string
        - description: >-
            The HTTP method Twilio should use to call the `status_callback` URL.
            Can be `POST` or `GET` and the default is `POST`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: StatusCallbackMethod
          type: string
        - description: >-
            Specifies whether the PlayerStreamer is configured to stream video.
            Defaults to `true`.
          in: formData
          name: Video
          type: boolean
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/media.v1.player_streamer'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - status
      pathType: list
  '/v1/PlayerStreamers/{Sid}':
    description: >-
      A PlayerStreamer resource provides the ability to send a livestream to a
      JavaScript, iOS, or Android Player SDK.
    get:
      description: Returns a single PlayerStreamer resource identified by a SID.
      operationId: FetchPlayerStreamer
      parameters:
        - description: The SID of the PlayerStreamer resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^VJ[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/media.v1.player_streamer'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Updates a PlayerStreamer resource identified by a SID.
      operationId: UpdatePlayerStreamer
      parameters:
        - description: The SID of the PlayerStreamer resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^VJ[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The status the PlayerStreamer should be transitioned to. Can be:
            `ended`.
          enum:
            - ended
          in: formData
          name: Status
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/media.v1.player_streamer'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - status
      pathType: instance
  '/v1/PlayerStreamers/{Sid}/PlaybackGrant':
    description: >-
      A PlaybackGrant resource allows developers to generate a grant to
      initialize the Twilio Live Player SDK and connect to a livestream.
    get:
      description: >-
        **This method is not enabled.** Returns a single PlaybackGrant resource
        identified by a SID.
      operationId: FetchPlayerStreamerPlaybackGrant
      parameters:
        - description: The SID of the PlayerStreamer resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^VJ[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/media.v1.player_streamer.player_streamer_playback_grant
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreatePlayerStreamerPlaybackGrant
      parameters:
        - description: >-
            The unique string generated to identify the PlayerStreamer resource
            associated with this PlaybackGrant
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^VJ[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The full origin URL where the livestream can be streamed. If this is
            not provided, it can be streamed from any domain.
          in: formData
          name: AccessControlAllowOrigin
          type: string
        - description: >-
            The time to live of the PlaybackGrant. Default value is 15 seconds.
            Maximum value is 60 seconds.
          in: formData
          name: Ttl
          type: integer
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: >-
              #/definitions/media.v1.player_streamer.player_streamer_playback_grant
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://media.twilio.com'
    x-twilio:
      defaultOutputProperties: []
      parent: /PlayerStreamers
      pathType: instance
schemes:
  - https
securityDefinitions:
  accountSid_authToken:
    type: basic
swagger: '2.0'
x-components: {}
x-maturity:
  - description: This product is Generally Available.
    name: GA
  - description: >-
      PLEASE NOTE that this is a Preview product that is subject to change. Use
      it with caution. If you currently do not have developer preview access,
      please contact help@twilio.com.
    name: Preview

