basePath: /
definitions:
  events.v1.event_type:
    properties:
      date_created:
        description: The date this Event Type was created.
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The date this Event Type was updated.
        format: date-time
        type: string
        x-nullable: true
      description:
        description: Event Type description.
        type: string
        x-nullable: true
      links:
        format: uri-map
        type: object
        x-nullable: true
      schema_id:
        description: The Schema identifier for this Event Type.
        type: string
        x-nullable: true
      type:
        description: The Event Type identifier.
        type: string
        x-nullable: true
      url:
        description: The URL of this resource.
        format: uri
        type: string
        x-nullable: true
    type: object
  events.v1.schema:
    properties:
      id:
        description: Schema Identifier.
        type: string
        x-nullable: true
      latest_version:
        description: Latest schema version.
        type: integer
        x-nullable: true
      latest_version_date_created:
        description: The date that the latest schema version was created.
        format: date-time
        type: string
        x-nullable: true
      links:
        description: Nested resource URLs.
        format: uri-map
        type: object
        x-nullable: true
      url:
        description: The URL of this resource.
        format: uri
        type: string
        x-nullable: true
    type: object
  events.v1.schema.schema_version:
    properties:
      date_created:
        description: The date the schema version was created.
        format: date-time
        type: string
        x-nullable: true
      id:
        description: The unique identifier of the schema.
        type: string
        x-nullable: true
      raw:
        format: uri
        type: string
        x-nullable: true
      schema_version:
        description: The version of this schema.
        type: integer
        x-nullable: true
      url:
        description: The URL of this resource.
        format: uri
        type: string
        x-nullable: true
    type: object
  events.v1.sink:
    properties:
      date_created:
        description: The date this Sink was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The date this Sink was updated
        format: date-time
        type: string
        x-nullable: true
      description:
        description: Sink Description
        type: string
        x-nullable: true
      links:
        description: Nested resource URLs.
        format: uri-map
        type: object
        x-nullable: true
      sid:
        description: A string that uniquely identifies this Sink.
        maxLength: 34
        minLength: 34
        pattern: '^DG[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sink_configuration:
        description: JSON Sink configuration.
        x-nullable: true
      sink_type:
        description: Sink type.
        enum:
          - kinesis
          - webhook
          - segment
        type: string
        x-nullable: true
      status:
        description: The Status of this Sink
        enum:
          - initialized
          - validating
          - active
          - failed
        type: string
        x-nullable: true
      url:
        description: The URL of this resource.
        format: uri
        type: string
        x-nullable: true
    type: object
  events.v1.sink.sink_test:
    properties:
      result:
        description: Feedback indicating whether the test event was generated.
        type: string
        x-nullable: true
    type: object
  events.v1.sink.sink_validate:
    properties:
      result:
        description: Feedback indicating whether the given Sink was validated.
        type: string
        x-nullable: true
    type: object
  events.v1.subscription:
    properties:
      account_sid:
        description: Account SID.
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The date this Subscription was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The date this Subscription was updated
        format: date-time
        type: string
        x-nullable: true
      description:
        description: Subscription description
        type: string
        x-nullable: true
      links:
        description: Nested resource URLs.
        format: uri-map
        type: object
        x-nullable: true
      sid:
        description: A string that uniquely identifies this Subscription.
        maxLength: 34
        minLength: 34
        pattern: '^DF[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sink_sid:
        description: Sink SID.
        maxLength: 34
        minLength: 34
        pattern: '^DG[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      url:
        description: The URL of this resource.
        format: uri
        type: string
        x-nullable: true
    type: object
  events.v1.subscription.subscribed_event:
    properties:
      account_sid:
        description: Account SID.
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      schema_version:
        description: The schema version that the subscription should use.
        type: integer
        x-nullable: true
      subscription_sid:
        description: Subscription SID.
        maxLength: 34
        minLength: 34
        pattern: '^DF[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      type:
        description: Type of event being subscribed to.
        type: string
        x-nullable: true
      url:
        description: The URL of this resource.
        format: uri
        type: string
        x-nullable: true
    type: object
host: events.twilio.com
info:
  contact:
    email: support@twilio.com
    name: Twilio Support
    url: 'https://support.twilio.com'
  description: This is the public Twilio REST API.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'https://www.twilio.com/legal/tos'
  title: Twilio - Events
  version: 1.29.2
  x-apisguru-categories:
    - telecom
    - messaging
  x-logo:
    url: >-
      https://static1.twilio.com/marketing/bundles/marketing/img/logos/wordmark-red.svg
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/twilio/twilio-oai/main/spec/json/twilio_events_v1.json
      version: '3.0'
  x-providerName: twilio.com
  x-serviceName: twilio_events_v1
paths:
  '/v1/Schemas/{Id}':
    description: Versioned Schema definitions for Event Types
    get:
      description: Fetch a specific schema with its nested versions.
      operationId: FetchSchema
      parameters:
        - description: >-
            The unique identifier of the schema. Each schema can have multiple
            versions, that share the same id.
          in: path
          name: Id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.schema'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - id
      pathType: instance
  '/v1/Schemas/{Id}/Versions':
    description: Version of the Schema
    get:
      description: Retrieve a paginated list of versions of the schema.
      operationId: ListSchemaVersion
      parameters:
        - description: >-
            The unique identifier of the schema. Each schema can have multiple
            versions, that share the same id.
          in: path
          name: Id
          required: true
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              schema_versions:
                items:
                  $ref: '#/definitions/events.v1.schema.schema_version'
                type: array
            title: ListSchemaVersionResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      className: schema_version
      defaultOutputProperties:
        - id
        - schema_version
        - date_created
      parent: /Schemas
      pathType: list
  '/v1/Schemas/{Id}/Versions/{SchemaVersion}':
    description: Version of the Schema
    get:
      description: Fetch a specific schema and version.
      operationId: FetchSchemaVersion
      parameters:
        - description: >-
            The unique identifier of the schema. Each schema can have multiple
            versions, that share the same id.
          in: path
          name: Id
          required: true
          type: string
        - description: The version of the schema
          in: path
          name: SchemaVersion
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.schema.schema_version'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      className: schema_version
      defaultOutputProperties:
        - id
        - schema_version
        - date_created
      parent: /Schemas
      pathType: instance
  /v1/Sinks:
    description: Sink destination to send events to
    get:
      description: >-
        Retrieve a paginated list of Sinks belonging to the account used to make
        the request.
      operationId: ListSink
      parameters:
        - description: >-
            A boolean query parameter filtering the results to return sinks
            used/not used by a subscription.
          in: query
          name: InUse
          type: boolean
        - description: >-
            A String query parameter filtering the results by status
            `initialized`, `validating`, `active` or `failed`.
          in: query
          name: Status
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              sinks:
                items:
                  $ref: '#/definitions/events.v1.sink'
                type: array
            title: ListSinkResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create a new Sink
      operationId: CreateSink
      parameters:
        - description: >-
            A human readable description for the Sink **This value should not
            contain PII.**
          in: formData
          name: Description
          required: true
          type: string
        - description: >-
            The information required for Twilio to connect to the provided Sink
            encoded as JSON.
          in: formData
          name: SinkConfiguration
          required: true
        - description: The Sink type. Can only be "kinesis" or "webhook" currently.
          enum:
            - kinesis
            - webhook
            - segment
          in: formData
          name: SinkType
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/events.v1.sink'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - date_created
        - date_updated
        - description
        - sid
        - sink_configuration
        - sink_type
        - status
      pathType: list
  '/v1/Sinks/{Sid}':
    delete:
      description: Delete a specific Sink.
      operationId: DeleteSink
      parameters:
        - description: A 34 character string that uniquely identifies this Sink.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DG[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    description: Sink destination to send events to
    get:
      description: Fetch a specific Sink.
      operationId: FetchSink
      parameters:
        - description: A 34 character string that uniquely identifies this Sink.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DG[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.sink'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Update a specific Sink
      operationId: UpdateSink
      parameters:
        - description: A 34 character string that uniquely identifies this Sink.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DG[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            A human readable description for the Sink **This value should not
            contain PII.**
          in: formData
          name: Description
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.sink'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - date_created
        - date_updated
        - description
        - sid
        - sink_configuration
        - sink_type
        - status
      pathType: instance
  '/v1/Sinks/{Sid}/Test':
    description: Test sink
    post:
      description: Create a new Sink Test Event for the given Sink.
      operationId: CreateSinkTest
      parameters:
        - description: >-
            A 34 character string that uniquely identifies the Sink to be
            Tested.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DG[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/events.v1.sink.sink_test'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      className: sink_test
      defaultOutputProperties:
        - result
      parent: /Sinks
      pathType: list
  '/v1/Sinks/{Sid}/Validate':
    description: Validate sink
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Validate that a test event for a Sink was received.
      operationId: CreateSinkValidate
      parameters:
        - description: >-
            A 34 character string that uniquely identifies the Sink being
            validated.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DG[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            A 34 character string that uniquely identifies the test event for a
            Sink being validated.
          in: formData
          name: TestId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/events.v1.sink.sink_validate'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      className: sink_validate
      defaultOutputProperties:
        - result
      parent: /Sinks
      pathType: list
  /v1/Subscriptions:
    description: Subscription to send Event Types to a Sink
    get:
      description: >-
        Retrieve a paginated list of Subscriptions belonging to the account used
        to make the request.
      operationId: ListSubscription
      parameters:
        - description: >-
            The SID of the sink that the list of Subscriptions should be
            filtered by.
          in: query
          maxLength: 34
          minLength: 34
          name: SinkSid
          pattern: '^DG[0-9a-fA-F]{32}$'
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              subscriptions:
                items:
                  $ref: '#/definitions/events.v1.subscription'
                type: array
            title: ListSubscriptionResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create a new Subscription.
      operationId: CreateSubscription
      parameters:
        - description: >-
            A human readable description for the Subscription **This value
            should not contain PII.**
          in: formData
          name: Description
          required: true
          type: string
        - description: >-
            The SID of the sink that events selected by this subscription should
            be sent to. Sink must be active for the subscription to be created.
          in: formData
          maxLength: 34
          minLength: 34
          name: SinkSid
          pattern: '^DG[0-9a-fA-F]{32}$'
          required: true
          type: string
        - collectionFormat: csv
          description: An array of objects containing the subscribed Event Types
          in: formData
          items: {}
          name: Types
          required: true
          type: array
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/events.v1.subscription'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - account_sid
        - sid
        - sink_sid
        - date_created
        - date_updated
      pathType: list
  '/v1/Subscriptions/{Sid}':
    delete:
      description: Delete a specific Subscription.
      operationId: DeleteSubscription
      parameters:
        - description: A 34 character string that uniquely identifies this Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    description: Subscription to send Event Types to a Sink
    get:
      description: Fetch a specific Subscription.
      operationId: FetchSubscription
      parameters:
        - description: A 34 character string that uniquely identifies this Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.subscription'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Update a Subscription.
      operationId: UpdateSubscription
      parameters:
        - description: A 34 character string that uniquely identifies this Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: A human readable description for the Subscription.
          in: formData
          name: Description
          type: string
        - description: >-
            The SID of the sink that events selected by this subscription should
            be sent to. Sink must be active for the subscription to be created.
          in: formData
          maxLength: 34
          minLength: 34
          name: SinkSid
          pattern: '^DG[0-9a-fA-F]{32}$'
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.subscription'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - account_sid
        - sid
        - sink_sid
        - date_created
        - date_updated
      pathType: instance
  '/v1/Subscriptions/{SubscriptionSid}/SubscribedEvents':
    description: Event subscribed to in the parent subscription
    get:
      description: Retrieve a list of all Subscribed Event types for a Subscription.
      operationId: ListSubscribedEvent
      parameters:
        - description: The unique SID identifier of the Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: SubscriptionSid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              types:
                items:
                  $ref: '#/definitions/events.v1.subscription.subscribed_event'
                type: array
            title: ListSubscribedEventResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Create a new Subscribed Event type for the subscription
      operationId: CreateSubscribedEvent
      parameters:
        - description: The unique SID identifier of the Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: SubscriptionSid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: The schema version that the subscription should use.
          in: formData
          name: SchemaVersion
          type: integer
        - description: Type of event being subscribed to.
          in: formData
          name: Type
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/events.v1.subscription.subscribed_event'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - type
        - schema_version
        - account_sid
        - subscription_sid
      parent: /Subscriptions
      pathType: list
  '/v1/Subscriptions/{SubscriptionSid}/SubscribedEvents/{Type}':
    delete:
      description: Remove an event type from a subscription.
      operationId: DeleteSubscribedEvent
      parameters:
        - description: The unique SID identifier of the Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: SubscriptionSid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: Type of event being subscribed to.
          in: path
          name: Type
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    description: Event subscribed to in the parent subscription
    get:
      description: Read an Event for a Subscription.
      operationId: FetchSubscribedEvent
      parameters:
        - description: The unique SID identifier of the Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: SubscriptionSid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: Type of event being subscribed to.
          in: path
          name: Type
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.subscription.subscribed_event'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: Update an Event for a Subscription.
      operationId: UpdateSubscribedEvent
      parameters:
        - description: The unique SID identifier of the Subscription.
          in: path
          maxLength: 34
          minLength: 34
          name: SubscriptionSid
          pattern: '^DF[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: Type of event being subscribed to.
          in: path
          name: Type
          required: true
          type: string
        - description: The schema version that the subscription should use.
          in: formData
          name: SchemaVersion
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.subscription.subscribed_event'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - type
        - schema_version
        - account_sid
        - subscription_sid
      parent: /Subscriptions
      pathType: instance
  /v1/Types:
    description: Event Types available
    get:
      description: Retrieve a paginated list of all the available Event Types.
      operationId: ListEventType
      parameters:
        - description: >-
            A string parameter filtering the results to return only the Event
            Types using a given schema.
          in: query
          name: SchemaId
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              types:
                items:
                  $ref: '#/definitions/events.v1.event_type'
                type: array
            title: ListEventTypeResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      className: event_type
      defaultOutputProperties:
        - type
        - schema_id
        - description
      pathType: list
  '/v1/Types/{Type}':
    description: Event Types available
    get:
      description: Fetch a specific Event Type.
      operationId: FetchEventType
      parameters:
        - description: A string that uniquely identifies this Event Type.
          in: path
          name: Type
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/events.v1.event_type'
      security:
        - accountSid_authToken: []
      x-maturity:
        - Beta
    servers:
      - url: 'https://events.twilio.com'
    x-twilio:
      className: event_type
      defaultOutputProperties:
        - type
        - schema_id
        - description
      pathType: instance
schemes:
  - https
securityDefinitions:
  accountSid_authToken:
    type: basic
swagger: '2.0'
x-components: {}
x-maturity:
  - description: >-
      PLEASE NOTE that this is a Beta product that is subject to change. Use it
      with caution.
    name: Beta

