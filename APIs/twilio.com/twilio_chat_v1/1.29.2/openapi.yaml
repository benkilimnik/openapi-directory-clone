basePath: /
definitions:
  chat.v1.credential:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      friendly_name:
        description: The string that you assigned to describe the resource
        type: string
        x-nullable: true
      sandbox:
        description: '[APN only] Whether to send the credential to sandbox APNs'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^CR[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      type:
        description: The type of push-notification service the credential is for
        enum:
          - gcm
          - apn
          - fcm
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the Credential resource
        format: uri
        type: string
        x-nullable: true
    type: object
  chat.v1.service:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      consumption_report_interval:
        description: DEPRECATED
        type: integer
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      default_channel_creator_role_sid:
        description: >-
          The channel role assigned to a channel creator when they join a new
          channel
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      default_channel_role_sid:
        description: The channel role assigned to users when they are added to a channel
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      default_service_role_sid:
        description: The service role assigned to users when they are added to the service
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      friendly_name:
        description: The string that you assigned to describe the resource
        type: string
        x-nullable: true
      limits:
        description: An object that describes the limits of the service instance
        x-nullable: true
      links:
        description: 'The absolute URLs of the Service''s Channels, Roles, and Users'
        format: uri-map
        type: object
        x-nullable: true
      notifications:
        description: The notification configuration for the Service instance
        x-nullable: true
      post_webhook_url:
        description: The URL for post-event webhooks
        type: string
        x-nullable: true
      pre_webhook_url:
        description: The webhook URL for pre-event webhooks
        type: string
        x-nullable: true
      reachability_enabled:
        description: >-
          Whether the Reachability Indicator feature is enabled for this Service
          instance
        type: boolean
        x-nullable: true
      read_status_enabled:
        description: Whether the Message Consumption Horizon feature is enabled
        type: boolean
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      typing_indicator_timeout:
        description: >-
          How long in seconds to wait before assuming the user is no longer
          typing
        type: integer
        x-nullable: true
      url:
        description: The absolute URL of the Service resource
        format: uri
        type: string
        x-nullable: true
      webhook_filters:
        description: The list of WebHook events that are enabled for this Service instance
        items:
          type: string
        type: array
        x-nullable: true
      webhook_method:
        description: The HTTP method  to use for both PRE and POST webhooks
        type: string
        x-nullable: true
      webhooks:
        description: >-
          An object that contains information about the webhooks configured for
          this service
        x-nullable: true
    type: object
  chat.v1.service.channel:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      attributes:
        description: The JSON string that stores application-specific data
        type: string
        x-nullable: true
      created_by:
        description: The identity of the User that created the channel
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      friendly_name:
        description: The string that you assigned to describe the resource
        type: string
        x-nullable: true
      links:
        description: >-
          Absolute URLs to access the Members, Messages , Invites and, if it
          exists, the last Message for the Channel
        format: uri-map
        type: object
        x-nullable: true
      members_count:
        description: The number of Members in the Channel
        type: integer
        x-nullable: true
      messages_count:
        description: The number of Messages in the Channel
        type: integer
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^CH[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      type:
        description: 'The visibility of the channel. Can be: `public` or `private`'
        enum:
          - public
          - private
        type: string
        x-nullable: true
      unique_name:
        description: An application-defined string that uniquely identifies the resource
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the Channel resource
        format: uri
        type: string
        x-nullable: true
    type: object
  chat.v1.service.channel.invite:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      channel_sid:
        description: The SID of the Channel the new resource belongs to
        maxLength: 34
        minLength: 34
        pattern: '^CH[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      created_by:
        description: The identity of the User that created the invite
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      identity:
        description: The string that identifies the resource's User
        type: string
        x-nullable: true
      role_sid:
        description: The SID of the Role assigned to the member
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^IN[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the Invite resource
        format: uri
        type: string
        x-nullable: true
    type: object
  chat.v1.service.channel.member:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      channel_sid:
        description: The unique ID of the Channel for the member
        maxLength: 34
        minLength: 34
        pattern: '^CH[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      identity:
        description: The string that identifies the resource's User
        type: string
        x-nullable: true
      last_consumed_message_index:
        description: >-
          The index of the last Message that the Member has read within the
          Channel
        type: integer
        x-nullable: true
      last_consumption_timestamp:
        description: >-
          The ISO 8601 based timestamp string that represents the date-time of
          the last Message read event for the Member within the Channel
        format: date-time
        type: string
        x-nullable: true
      role_sid:
        description: The SID of the Role assigned to the member
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^MB[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the Member resource
        format: uri
        type: string
        x-nullable: true
    type: object
  chat.v1.service.channel.message:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      attributes:
        description: The JSON string that stores application-specific data
        type: string
        x-nullable: true
      body:
        description: The content of the message
        type: string
        x-nullable: true
      channel_sid:
        description: The unique ID of the Channel the Message resource belongs to
        maxLength: 34
        minLength: 34
        pattern: '^CH[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      from:
        description: The identity of the message's author
        type: string
        x-nullable: true
      index:
        description: The index of the message within the Channel
        type: integer
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^IM[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      to:
        description: The SID of the Channel that the message was sent to
        maxLength: 34
        minLength: 34
        pattern: '^CH[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the Message resource
        format: uri
        type: string
        x-nullable: true
      was_edited:
        description: Whether the message has been edited since  it was created
        type: boolean
        x-nullable: true
    type: object
  chat.v1.service.role:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      friendly_name:
        description: The string that you assigned to describe the resource
        type: string
        x-nullable: true
      permissions:
        description: An array of the permissions the role has been granted
        items:
          type: string
        type: array
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      type:
        description: The type of role
        enum:
          - channel
          - deployment
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the Role resource
        format: uri
        type: string
        x-nullable: true
    type: object
  chat.v1.service.user:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      attributes:
        description: The JSON string that stores application-specific data
        type: string
        x-nullable: true
      date_created:
        description: The RFC 2822 date and time in GMT when the resource was created
        format: date-time
        type: string
        x-nullable: true
      date_updated:
        description: The RFC 2822 date and time in GMT when the resource was last updated
        format: date-time
        type: string
        x-nullable: true
      friendly_name:
        description: The string that you assigned to describe the resource
        type: string
        x-nullable: true
      identity:
        description: The string that identifies the resource's User
        type: string
        x-nullable: true
      is_notifiable:
        description: >-
          Whether the User has a potentially valid Push Notification
          registration for the Service instance
        type: boolean
        x-nullable: true
      is_online:
        description: >-
          Whether the User is actively connected to the Service instance and
          online
        type: boolean
        x-nullable: true
      joined_channels_count:
        description: The number of Channels this User is a Member of
        type: integer
        x-nullable: true
      links:
        description: >-
          The absolute URLs of the Channel and Binding resources related to the
          user
        format: uri-map
        type: object
        x-nullable: true
      role_sid:
        description: The SID of the assigned to the user
        maxLength: 34
        minLength: 34
        pattern: '^RL[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      sid:
        description: The unique string that identifies the resource
        maxLength: 34
        minLength: 34
        pattern: '^US[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      url:
        description: The absolute URL of the User resource
        format: uri
        type: string
        x-nullable: true
    type: object
  chat.v1.service.user.user_channel:
    properties:
      account_sid:
        description: The SID of the Account that created the resource
        maxLength: 34
        minLength: 34
        pattern: '^AC[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      channel_sid:
        description: The SID of the Channel the resource belongs to
        maxLength: 34
        minLength: 34
        pattern: '^CH[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      last_consumed_message_index:
        description: The index of the last Message in the Channel the Member has read
        type: integer
        x-nullable: true
      links:
        description: >-
          Absolute URLs to access the Members, Messages , Invites and, if it
          exists, the last Message for the Channel
        format: uri-map
        type: object
        x-nullable: true
      member_sid:
        description: The SID of the User as a Member in the Channel
        maxLength: 34
        minLength: 34
        pattern: '^MB[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      service_sid:
        description: The SID of the Service that the resource is associated with
        maxLength: 34
        minLength: 34
        pattern: '^IS[0-9a-fA-F]{32}$'
        type: string
        x-nullable: true
      status:
        description: The status of the User on the Channel
        enum:
          - joined
          - invited
          - not_participating
        type: string
        x-nullable: true
      unread_messages_count:
        description: The number of unread Messages in the Channel for the User
        type: integer
        x-nullable: true
    type: object
host: chat.twilio.com
info:
  contact:
    email: support@twilio.com
    name: Twilio Support
    url: 'https://support.twilio.com'
  description: This is the public Twilio REST API.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'https://www.twilio.com/legal/tos'
  title: Twilio - Chat
  version: 1.29.2
  x-apisguru-categories:
    - telecom
    - messaging
  x-logo:
    url: >-
      https://static1.twilio.com/marketing/bundles/marketing/img/logos/wordmark-red.svg
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/twilio/twilio-oai/main/spec/json/twilio_chat_v1.json
      version: '3.0'
  x-providerName: twilio.com
  x-serviceName: twilio_chat_v1
paths:
  /v1/Credentials:
    description: Credentials for push notifications channels
    get:
      description: ''
      operationId: ListCredential
      parameters:
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              credentials:
                items:
                  $ref: '#/definitions/chat.v1.credential'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListCredentialResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateCredential
      parameters:
        - description: >-
            [GCM only] The API key for the project that was obtained from the
            Google Developer console for your GCM Service application
            credential.
          in: formData
          name: ApiKey
          type: string
        - description: >-
            [APN only] The URL encoded representation of the certificate. For
            example, 

            `-----BEGIN CERTIFICATE-----

            MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==

            -----END CERTIFICATE-----`
          in: formData
          name: Certificate
          type: string
        - description: >-
            A descriptive string that you create to describe the new resource.
            It can be up to 64 characters long.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            [APN only] The URL encoded representation of the private key. For
            example,

            `-----BEGIN RSA PRIVATE KEY-----

            MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.

            -----END RSA PRIVATE KEY-----`
          in: formData
          name: PrivateKey
          type: string
        - description: >-
            [APN only] Whether to send the credential to sandbox APNs. Can be
            `true` to send to sandbox APNs or `false` to send to production.
          in: formData
          name: Sandbox
          type: boolean
        - description: >-
            [FCM only] The **Server key** of your project from the Firebase
            console, found under Settings / Cloud messaging.
          in: formData
          name: Secret
          type: string
        - description: >-
            The type of push-notification service the credential is for. Can be:
            `gcm`, `fcm`, or `apn`.
          enum:
            - gcm
            - apn
            - fcm
          in: formData
          name: Type
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.credential'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      pathType: list
  '/v1/Credentials/{Sid}':
    delete:
      description: ''
      operationId: DeleteCredential
      parameters:
        - description: >-
            The Twilio-provided string that uniquely identifies the Credential
            resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^CR[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Credentials for push notifications channels
    get:
      description: ''
      operationId: FetchCredential
      parameters:
        - description: >-
            The Twilio-provided string that uniquely identifies the Credential
            resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^CR[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.credential'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateCredential
      parameters:
        - description: >-
            The Twilio-provided string that uniquely identifies the Credential
            resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^CR[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            [GCM only] The API key for the project that was obtained from the
            Google Developer console for your GCM Service application
            credential.
          in: formData
          name: ApiKey
          type: string
        - description: >-
            [APN only] The URL encoded representation of the certificate. For
            example, 

            `-----BEGIN CERTIFICATE-----

            MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==

            -----END CERTIFICATE-----`
          in: formData
          name: Certificate
          type: string
        - description: >-
            A descriptive string that you create to describe the resource. It
            can be up to 64 characters long.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            [APN only] The URL encoded representation of the private key. For
            example,

            `-----BEGIN RSA PRIVATE KEY-----

            MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.

            -----END RSA PRIVATE KEY-----`
          in: formData
          name: PrivateKey
          type: string
        - description: >-
            [APN only] Whether to send the credential to sandbox APNs. Can be
            `true` to send to sandbox APNs or `false` to send to production.
          in: formData
          name: Sandbox
          type: boolean
        - description: >-
            [FCM only] The **Server key** of your project from the Firebase
            console, found under Settings / Cloud messaging.
          in: formData
          name: Secret
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.credential'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      pathType: instance
  /v1/Services:
    description: Top level scope for all chat resources
    get:
      description: ''
      operationId: ListService
      parameters:
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              services:
                items:
                  $ref: '#/definitions/chat.v1.service'
                type: array
            title: ListServiceResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateService
      parameters:
        - description: >-
            A descriptive string that you create to describe the resource. It
            can be up to 64 characters long.
          in: formData
          name: FriendlyName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      pathType: list
  '/v1/Services/{ServiceSid}/Channels':
    description: Channels represent chat rooms
    get:
      description: ''
      operationId: ListChannel
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            The visibility of the Channels to read. Can be: `public` or
            `private` and defaults to `public`.
          in: query
          items:
            enum:
              - public
              - private
            type: string
          name: Type
          type: array
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              channels:
                items:
                  $ref: '#/definitions/chat.v1.service.channel'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListChannelResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateChannel
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            create the resource under.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: A valid JSON string that contains application-specific data.
          in: formData
          name: Attributes
          type: string
        - description: >-
            A descriptive string that you create to describe the new resource.
            It can be up to 64 characters long.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            The visibility of the channel. Can be: `public` or `private` and
            defaults to `public`.
          enum:
            - public
            - private
          in: formData
          name: Type
          type: string
        - description: >-
            An application-defined string that uniquely identifies the resource.
            It can be used to address the resource in place of the resource's
            `sid` in the URL. This value must be 64 characters or less in length
            and be unique within the Service.
          in: formData
          name: UniqueName
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service.channel'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - unique_name
        - friendly_name
      parent: /Services
      pathType: list
  '/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites':
    description: Pending invitations to users to become channel members
    get:
      description: ''
      operationId: ListInvite
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The SID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            resources to read belong to.
          in: path
          name: ChannelSid
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            The [User](https://www.twilio.com/docs/api/chat/rest/v1/user)'s
            `identity` value of the resources to read. See [access
            tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)
            for more details.
          in: query
          items:
            type: string
          name: Identity
          type: array
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              invites:
                items:
                  $ref: '#/definitions/chat.v1.service.channel.invite'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListInviteResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateInvite
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            create the resource under.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The SID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            new resource belongs to.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The `identity` value that uniquely identifies the new resource's
            [User](https://www.twilio.com/docs/api/chat/rest/v1/user) within the
            [Service](https://www.twilio.com/docs/api/chat/rest/v1/service). See
            [access
            tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)
            for more info.
          in: formData
          name: Identity
          required: true
          type: string
        - description: >-
            The SID of the
            [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to
            the new member.
          in: formData
          maxLength: 34
          minLength: 34
          name: RoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service.channel.invite'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: '/Services/{ServiceSid}/Channels'
      pathType: list
  '/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}':
    delete:
      description: ''
      operationId: DeleteInvite
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            delete the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The SID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            resource to delete belongs to.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Invite
            resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IN[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Pending invitations to users to become channel members
    get:
      description: ''
      operationId: FetchInvite
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            fetch the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The SID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            resource to fetch belongs to.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Invite
            resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IN[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel.invite'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: '/Services/{ServiceSid}/Channels'
      pathType: instance
  '/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members':
    description: Users joined to specific channels
    get:
      description: ''
      operationId: ListMember
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            members to read belong to. Can be the Channel resource's `sid` or
            `unique_name` value.
          in: path
          name: ChannelSid
          required: true
          type: string
        - collectionFormat: multi
          description: >-
            The [User](https://www.twilio.com/docs/api/chat/rest/v1/user)'s
            `identity` value of the resources to read. See [access
            tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)
            for more details.
          in: query
          items:
            type: string
          name: Identity
          type: array
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              members:
                items:
                  $ref: '#/definitions/chat.v1.service.channel.member'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListMemberResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateMember
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            create the resource under.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            new member belongs to. Can be the Channel resource's `sid` or
            `unique_name`.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The `identity` value that uniquely identifies the new resource's
            [User](https://www.twilio.com/docs/api/chat/rest/v1/user) within the
            [Service](https://www.twilio.com/docs/api/chat/rest/services). See
            [access
            tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens)
            for more details.
          in: formData
          name: Identity
          required: true
          type: string
        - description: >-
            The SID of the
            [Role](https://www.twilio.com/docs/api/chat/rest/roles) to assign to
            the member. The default roles are those specified on the
            [Service](https://www.twilio.com/docs/chat/api/services).
          in: formData
          maxLength: 34
          minLength: 34
          name: RoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service.channel.member'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: '/Services/{ServiceSid}/Channels'
      pathType: list
  '/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}':
    delete:
      description: ''
      operationId: DeleteMember
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            delete the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            message belongs to.  Can be the Channel's `sid` or `unique_name`.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Member
            resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^MB[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Users joined to specific channels
    get:
      description: ''
      operationId: FetchMember
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            fetch the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            member to fetch belongs to. Can be the Channel resource's `sid` or
            `unique_name` value.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Member
            resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^MB[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel.member'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateMember
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            update the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            member to update belongs to. Can be the Channel resource's `sid` or
            `unique_name`.
          in: path
          name: ChannelSid
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Member
            resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^MB[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The index of the last
            [Message](https://www.twilio.com/docs/api/chat/rest/messages) that
            the Member has read within the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels).
          in: formData
          name: LastConsumedMessageIndex
          type: integer
          x-nullable: true
        - description: >-
            The SID of the
            [Role](https://www.twilio.com/docs/api/chat/rest/roles) to assign to
            the member. The default roles are those specified on the
            [Service](https://www.twilio.com/docs/chat/api/services).
          in: formData
          maxLength: 34
          minLength: 34
          name: RoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel.member'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - identity
        - date_created
      parent: '/Services/{ServiceSid}/Channels'
      pathType: instance
  '/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages':
    description: Individual chat messages
    get:
      description: ''
      operationId: ListMessage
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            message to read belongs to. Can be the Channel's `sid` or
            `unique_name`.
          in: path
          maxLength: 34
          minLength: 34
          name: ChannelSid
          pattern: '^CH[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The sort order of the returned messages. Can be: `asc` (ascending)
            or `desc` (descending) with `asc` as the default.
          enum:
            - asc
            - desc
          in: query
          name: Order
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              messages:
                items:
                  $ref: '#/definitions/chat.v1.service.channel.message'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListMessageResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateMessage
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            create the resource under.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            new resource belongs to. Can be the Channel resource's `sid` or
            `unique_name`.
          in: path
          maxLength: 34
          minLength: 34
          name: ChannelSid
          pattern: '^CH[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: A valid JSON string that contains application-specific data.
          in: formData
          name: Attributes
          type: string
        - description: >-
            The message to send to the channel. Can also be an empty string or
            `null`, which sets the value as an empty string. You can send
            structured data in the body by serializing it as a string.
          in: formData
          name: Body
          required: true
          type: string
        - description: >-
            The [identity](https://www.twilio.com/docs/api/chat/guides/identity)
            of the new message's author. The default value is `system`.
          in: formData
          name: From
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service.channel.message'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - from
        - to
        - date_created
      parent: '/Services/{ServiceSid}/Channels'
      pathType: list
  '/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}':
    delete:
      description: ''
      operationId: DeleteMessage
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            delete the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            message to delete belongs to.  Can be the Channel resource's `sid`
            or `unique_name`.
          in: path
          maxLength: 34
          minLength: 34
          name: ChannelSid
          pattern: '^CH[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Message
            resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IM[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Individual chat messages
    get:
      description: ''
      operationId: FetchMessage
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            fetch the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            message to fetch belongs to. Can be the Channel's `sid` or
            `unique_name`.
          in: path
          maxLength: 34
          minLength: 34
          name: ChannelSid
          pattern: '^CH[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Message
            resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IM[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel.message'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateMessage
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            update the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The unique ID of the
            [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the
            message belongs to. Can be the Channel's `sid` or `unique_name`.
          in: path
          maxLength: 34
          minLength: 34
          name: ChannelSid
          pattern: '^CH[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Message
            resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IM[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: A valid JSON string that contains application-specific data.
          in: formData
          name: Attributes
          type: string
        - description: >-
            The message to send to the channel. Can also be an empty string or
            `null`, which sets the value as an empty string. You can send
            structured data in the body by serializing it as a string.
          in: formData
          name: Body
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel.message'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - from
        - to
        - date_created
      parent: '/Services/{ServiceSid}/Channels'
      pathType: instance
  '/v1/Services/{ServiceSid}/Channels/{Sid}':
    delete:
      description: ''
      operationId: DeleteChannel
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            delete the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Channel
            resource to delete.
          in: path
          name: Sid
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Channels represent chat rooms
    get:
      description: ''
      operationId: FetchChannel
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            fetch the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Channel
            resource to fetch.
          in: path
          name: Sid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateChannel
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            update the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Channel
            resource to update.
          in: path
          name: Sid
          required: true
          type: string
        - description: A valid JSON string that contains application-specific data.
          in: formData
          name: Attributes
          type: string
        - description: >-
            A descriptive string that you create to describe the resource. It
            can be up to 64 characters long.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            An application-defined string that uniquely identifies the resource.
            It can be used to address the resource in place of the resource's
            `sid` in the URL. This value must be 64 characters or less in length
            and be unique within the Service.
          in: formData
          name: UniqueName
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.channel'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - unique_name
        - friendly_name
      parent: /Services
      pathType: instance
  '/v1/Services/{ServiceSid}/Roles':
    description: Roles determining user or member permissions
    get:
      description: ''
      operationId: ListRole
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              roles:
                items:
                  $ref: '#/definitions/chat.v1.service.role'
                type: array
            title: ListRoleResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateRole
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            create the resource under.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            A descriptive string that you create to describe the new resource.
            It can be up to 64 characters long.
          in: formData
          name: FriendlyName
          required: true
          type: string
        - collectionFormat: csv
          description: >-
            A permission that you grant to the new role. Only one permission can
            be granted per parameter. To assign more than one permission, repeat
            this parameter for each permission value. The values for this
            parameter depend on the role's `type` and are described in the
            documentation.
          in: formData
          items:
            type: string
          name: Permission
          required: true
          type: array
        - description: >-
            The type of role. Can be: `channel` for
            [Channel](https://www.twilio.com/docs/chat/api/channels) roles or
            `deployment` for
            [Service](https://www.twilio.com/docs/chat/api/services) roles.
          enum:
            - channel
            - deployment
          in: formData
          name: Type
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service.role'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      parent: /Services
      pathType: list
  '/v1/Services/{ServiceSid}/Roles/{Sid}':
    delete:
      description: ''
      operationId: DeleteRole
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            delete the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Role
            resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^RL[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Roles determining user or member permissions
    get:
      description: ''
      operationId: FetchRole
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            fetch the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Role
            resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^RL[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.role'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateRole
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            update the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the Role
            resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^RL[0-9a-fA-F]{32}$'
          required: true
          type: string
        - collectionFormat: csv
          description: >-
            A permission that you grant to the role. Only one permission can be
            granted per parameter. To assign more than one permission, repeat
            this parameter for each permission value. The values for this
            parameter depend on the role's `type` and are described in the
            documentation.
          in: formData
          items:
            type: string
          name: Permission
          required: true
          type: array
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.role'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - type
      parent: /Services
      pathType: instance
  '/v1/Services/{ServiceSid}/Users':
    description: Unique chat users within a chat service
    get:
      description: ''
      operationId: ListUser
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
              users:
                items:
                  $ref: '#/definitions/chat.v1.service.user'
                type: array
            title: ListUserResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: CreateUser
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            create the resource under.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: A valid JSON string that contains application-specific data.
          in: formData
          name: Attributes
          type: string
        - description: >-
            A descriptive string that you create to describe the new resource.
            This value is often used for display purposes.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            The `identity` value that uniquely identifies the new resource's
            [User](https://www.twilio.com/docs/api/chat/rest/v1/user) within the
            [Service](https://www.twilio.com/docs/api/chat/rest/v1/service).
            This value is often a username or email address. See the Identity
            documentation for more details.
          in: formData
          name: Identity
          required: true
          type: string
        - description: >-
            The SID of the
            [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to
            the new User.
          in: formData
          maxLength: 34
          minLength: 34
          name: RoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/chat.v1.service.user'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      parent: /Services
      pathType: list
  '/v1/Services/{ServiceSid}/Users/{Sid}':
    delete:
      description: ''
      operationId: DeleteUser
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            delete the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the User
            resource to delete.
          in: path
          name: Sid
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Unique chat users within a chat service
    get:
      description: ''
      operationId: FetchUser
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            fetch the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the User
            resource to fetch.
          in: path
          name: Sid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.user'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateUser
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            update the resource from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The Twilio-provided string that uniquely identifies the User
            resource to update.
          in: path
          name: Sid
          required: true
          type: string
        - description: A valid JSON string that contains application-specific data.
          in: formData
          name: Attributes
          type: string
        - description: >-
            A descriptive string that you create to describe the resource. It is
            often used for display purposes.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            The SID of the
            [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to
            this user.
          in: formData
          maxLength: 34
          minLength: 34
          name: RoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service.user'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      parent: /Services
      pathType: instance
  '/v1/Services/{ServiceSid}/Users/{UserSid}/Channels':
    description: 'TODO: Resource-level docs'
    get:
      description: List all Channels for a given User.
      operationId: ListUserChannel
      parameters:
        - description: >-
            The SID of the
            [Service](https://www.twilio.com/docs/api/chat/rest/services) to
            read the resources from.
          in: path
          maxLength: 34
          minLength: 34
          name: ServiceSid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            The SID of the
            [User](https://www.twilio.com/docs/api/chat/rest/users) to read the
            User Channel resources from.
          in: path
          name: UserSid
          required: true
          type: string
        - description: >-
            How many resources to return in each list page. The default is 50,
            and the maximum is 1000.
          in: query
          maximum: 1000
          minimum: 1
          name: PageSize
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              channels:
                items:
                  $ref: '#/definitions/chat.v1.service.user.user_channel'
                type: array
              meta:
                properties:
                  first_page_url:
                    format: uri
                    type: string
                  key:
                    type: string
                  next_page_url:
                    format: uri
                    type: string
                  page:
                    type: integer
                  page_size:
                    type: integer
                  previous_page_url:
                    format: uri
                    type: string
                  url:
                    format: uri
                    type: string
                type: object
            title: ListUserChannelResponse
            type: object
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      className: user_channel
      defaultOutputProperties:
        - channel_sid
        - status
      parent: '/Services/{ServiceSid}/Users'
      pathType: list
  '/v1/Services/{Sid}':
    delete:
      description: ''
      operationId: DeleteService
      parameters:
        - description: >-
            The Twilio-provided string that uniquely identifies the Service
            resource to delete.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
      responses:
        '204':
          description: The resource was deleted successfully.
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    description: Top level scope for all chat resources
    get:
      description: ''
      operationId: FetchService
      parameters:
        - description: >-
            The Twilio-provided string that uniquely identifies the Service
            resource to fetch.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    post:
      consumes:
        - application/x-www-form-urlencoded
      description: ''
      operationId: UpdateService
      parameters:
        - description: >-
            The Twilio-provided string that uniquely identifies the Service
            resource to update.
          in: path
          maxLength: 34
          minLength: 34
          name: Sid
          pattern: '^IS[0-9a-fA-F]{32}$'
          required: true
          type: string
        - description: >-
            DEPRECATED. The interval in seconds between consumption reports
            submission batches from client endpoints.
          in: formData
          name: ConsumptionReportInterval
          type: integer
        - description: >-
            The channel role assigned to a channel creator when they join a new
            channel. See the [Roles
            endpoint](https://www.twilio.com/docs/chat/api/roles) for more
            details.
          in: formData
          maxLength: 34
          minLength: 34
          name: DefaultChannelCreatorRoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
        - description: >-
            The channel role assigned to users when they are added to a channel.
            See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles)
            for more details.
          in: formData
          maxLength: 34
          minLength: 34
          name: DefaultChannelRoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
        - description: >-
            The service role assigned to users when they are added to the
            service. See the [Roles
            endpoint](https://www.twilio.com/docs/chat/api/roles) for more
            details.
          in: formData
          maxLength: 34
          minLength: 34
          name: DefaultServiceRoleSid
          pattern: '^RL[0-9a-fA-F]{32}$'
          type: string
        - description: >-
            A descriptive string that you create to describe the resource. It
            can be up to 64 characters long.
          in: formData
          name: FriendlyName
          type: string
        - description: >-
            The maximum number of Members that can be added to Channels within
            this Service. Can be up to 1,000.
          in: formData
          name: Limits.ChannelMembers
          type: integer
        - description: >-
            The maximum number of Channels Users can be a Member of within this
            Service. Can be up to 1,000.
          in: formData
          name: Limits.UserChannels
          type: integer
        - description: >-
            Whether to send a notification when a member is added to a channel.
            Can be: `true` or `false` and the default is `false`.
          in: formData
          name: Notifications.AddedToChannel.Enabled
          type: boolean
        - description: >-
            The template to use to create the notification text displayed when a
            member is added to a channel and
            `notifications.added_to_channel.enabled` is `true`.
          in: formData
          name: Notifications.AddedToChannel.Template
          type: string
        - description: >-
            Whether to send a notification when a user is invited to a channel.
            Can be: `true` or `false` and the default is `false`.
          in: formData
          name: Notifications.InvitedToChannel.Enabled
          type: boolean
        - description: >-
            The template to use to create the notification text displayed when a
            user is invited to a channel and
            `notifications.invited_to_channel.enabled` is `true`.
          in: formData
          name: Notifications.InvitedToChannel.Template
          type: string
        - description: >-
            Whether to send a notification when a new message is added to a
            channel. Can be: `true` or `false` and the default is `false`.
          in: formData
          name: Notifications.NewMessage.Enabled
          type: boolean
        - description: >-
            The template to use to create the notification text displayed when a
            new message is added to a channel and
            `notifications.new_message.enabled` is `true`.
          in: formData
          name: Notifications.NewMessage.Template
          type: string
        - description: >-
            Whether to send a notification to a user when they are removed from
            a channel. Can be: `true` or `false` and the default is `false`.
          in: formData
          name: Notifications.RemovedFromChannel.Enabled
          type: boolean
        - description: >-
            The template to use to create the notification text displayed to a
            user when they are removed from a channel and
            `notifications.removed_from_channel.enabled` is `true`.
          in: formData
          name: Notifications.RemovedFromChannel.Template
          type: string
        - description: >-
            The URL for post-event webhooks, which are called by using the
            `webhook_method`. See [Webhook
            Events](https://www.twilio.com/docs/api/chat/webhooks) for more
            details.
          format: uri
          in: formData
          name: PostWebhookUrl
          type: string
        - description: >-
            The URL for pre-event webhooks, which are called by using the
            `webhook_method`. See [Webhook
            Events](https://www.twilio.com/docs/api/chat/webhooks) for more
            details.
          format: uri
          in: formData
          name: PreWebhookUrl
          type: string
        - description: >-
            Whether to enable the [Reachability
            Indicator](https://www.twilio.com/docs/chat/reachability-indicator)
            for this Service instance. The default is `false`.
          in: formData
          name: ReachabilityEnabled
          type: boolean
        - description: >-
            Whether to enable the [Message Consumption
            Horizon](https://www.twilio.com/docs/chat/consumption-horizon)
            feature. The default is `true`.
          in: formData
          name: ReadStatusEnabled
          type: boolean
        - description: >-
            How long in seconds after a `started typing` event until clients
            should assume that user is no longer typing, even if no `ended
            typing` message was received.  The default is 5 seconds.
          in: formData
          name: TypingIndicatorTimeout
          type: integer
        - collectionFormat: csv
          description: >-
            The list of WebHook events that are enabled for this Service
            instance. See [Webhook
            Events](https://www.twilio.com/docs/chat/webhook-events) for more
            details.
          in: formData
          items:
            type: string
          name: WebhookFilters
          type: array
        - description: >-
            The HTTP method to use for calls to the `pre_webhook_url` and
            `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the
            default is `POST`. See [Webhook
            Events](https://www.twilio.com/docs/chat/webhook-events) for more
            details.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: WebhookMethod
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_channel_add.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnChannelAdd.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_channel_add`
            event using the `webhooks.on_channel_add.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnChannelAdd.Url
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_channel_added`
            event`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnChannelAdded.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_channel_added`
            event using the `webhooks.on_channel_added.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnChannelAdded.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_channel_destroy.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnChannelDestroy.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_channel_destroy` event using the
            `webhooks.on_channel_destroy.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnChannelDestroy.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_channel_destroyed.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnChannelDestroyed.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_channel_added`
            event using the `webhooks.on_channel_destroyed.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnChannelDestroyed.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_channel_update.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnChannelUpdate.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_channel_update` event using the
            `webhooks.on_channel_update.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnChannelUpdate.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_channel_updated.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnChannelUpdated.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_channel_updated` event using the
            `webhooks.on_channel_updated.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnChannelUpdated.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_member_add.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMemberAdd.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_member_add`
            event using the `webhooks.on_member_add.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMemberAdd.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_channel_updated.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMemberAdded.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_channel_updated` event using the
            `webhooks.on_channel_updated.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMemberAdded.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_member_remove.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMemberRemove.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_member_remove`
            event using the `webhooks.on_member_remove.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMemberRemove.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_member_removed.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMemberRemoved.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_member_removed` event using the
            `webhooks.on_member_removed.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMemberRemoved.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_message_remove.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMessageRemove.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_message_remove` event using the
            `webhooks.on_message_remove.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMessageRemove.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_message_removed.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMessageRemoved.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_message_removed` event using the
            `webhooks.on_message_removed.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMessageRemoved.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_message_send.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMessageSend.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_message_send`
            event using the `webhooks.on_message_send.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMessageSend.Url
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_message_sent`
            event`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMessageSent.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the `on_message_sent`
            event using the `webhooks.on_message_sent.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMessageSent.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_message_update.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMessageUpdate.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_message_update` event using the
            `webhooks.on_message_update.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMessageUpdate.Url
          type: string
        - description: >-
            The HTTP method to use when calling the
            `webhooks.on_message_updated.url`.
          enum:
            - HEAD
            - GET
            - POST
            - PATCH
            - PUT
            - DELETE
          format: http-method
          in: formData
          name: Webhooks.OnMessageUpdated.Method
          type: string
        - description: >-
            The URL of the webhook to call in response to the
            `on_message_updated` event using the
            `webhooks.on_message_updated.method` HTTP method.
          format: uri
          in: formData
          name: Webhooks.OnMessageUpdated.Url
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chat.v1.service'
      security:
        - accountSid_authToken: []
      x-maturity:
        - GA
    servers:
      - url: 'https://chat.twilio.com'
    x-twilio:
      defaultOutputProperties:
        - sid
        - friendly_name
        - date_created
      pathType: instance
schemes:
  - https
securityDefinitions:
  accountSid_authToken:
    type: basic
swagger: '2.0'
x-components: {}
x-maturity:
  - description: This product is Generally Available.
    name: GA

