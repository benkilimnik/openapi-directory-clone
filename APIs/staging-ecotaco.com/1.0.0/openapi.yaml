basePath: /
definitions:
  Autocomplete_places: {}
  Autocomplete_places_details: {}
  Cancel_Ride: {}
  Cancel_fee: {}
  Catchement_Area: {}
  Collection_of_catchement_areas: {}
  Collection_of_products: {}
  Credit_card: {}
  Current_User: {}
  Endpoint: {}
  Estimate_Ride: {}
  Forget_password: {}
  Login: {}
  Password: {}
  Payment_Methods: {}
  Product: {}
  Register: {}
  Reserve_Ride: {}
  Settings: {}
  User_Credit_Cards: {}
  User_Promotional_Codes: {}
  User_Ride: {}
  User_Rides: {}
  Version: {}
host: api.staging-ecotaco.com
info:
  description: >-
    The API ecotaco allows you to connect, create an account,

    manage your credit cards and order rides.


    # Authentication


    Ecotaco API use a system of application key and authentification token.


    ## Application key :


    The application key is generated by Ecota.co and unique to an application.


    Before accessing EcoTa.co APIs, you need to register your application.
    Please supply the following information to dev@ecota.co:


    - Application name


    - Company (if appropriate)


    - Contact name, phone and address


    - Contact email


    - Is this a web application, a desktop application, or an application
    running on a device?


    - Short description of your application


    It **must** be passed on request : "accounts -> login", "accounts ->
    facebook login" and "accounts -> register" .


    ## Authentification token :


    The authentification token is retrieved at login or register of an user.


    It **must** be passed in request for authenticate action in Authorization
    HTTP header.


    Example :


    Authorization: Token
    token=e55887022c1aca4c86abcc49e85ceb8a0c855d2af4d9fac75c08040a583dcde4


    # Language


    On some of our resources, we filter the content displayed based on the
    Accept-Language header.

    If the language is not defined or if we don't use the language defined in
    this header, we automatically use French as the default language.

    EcoTa.co currently support two languages: English, French. ("en" and "fr")


    # Encoding


    All requests and answers on EcoTa.co are in UTF-8.
  title: api.ecota.co v2
  version: 1.0.0
  x-apisguru-categories:
    - location
  x-logo:
    backgroundColor: '#FFFFFF'
    url: >-
      https://pbs.twimg.com/profile_images/674904964125368320/5Z7DncLT_400x400.png
  x-origin:
    - converter:
        url: 'https://github.com/mermade/oas-kit'
        version: 7.0.4
      format: openapi
      url: 'https://ecotaco.docs.apiary.io/api-description-document'
      version: '3.0'
  x-providerName: staging-ecotaco.com
paths:
  /:
    get:
      description: ''
      operationId: Retrieve the version API
      parameters: []
      produces:
        - application/vnd.siren+json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Retrieve the version API
      tags:
        - EcoTa.co API Root
  /accounts:
    get:
      description: ''
      operationId: Get current user
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get current user
      tags:
        - Accounts
    post:
      description: ''
      operationId: Create a new account with an application key
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '201':
          description: Created
          headers: {}
      summary: Create a new account with an application key
      tags:
        - Accounts
    put:
      description: ''
      operationId: Update User
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Update User
      tags:
        - Accounts
  /accounts/password:
    post:
      description: ''
      operationId: Forget password with email
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      responses:
        '201':
          description: Created
          headers: {}
      summary: Forget password with email
      tags:
        - Accounts
  /accounts/payment_methods:
    get:
      description: ''
      operationId: Payment Methods
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Payment Methods
      tags:
        - Accounts
  /accounts/settings:
    post:
      description: ''
      operationId: Settings
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Settings
      tags:
        - Accounts
  /accounts/sign_in:
    post:
      description: ''
      operationId: 'Login with email, password and application key'
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: 'Login with email, password and application key'
      tags:
        - Accounts
  /accounts/update_password:
    put:
      description: ''
      operationId: Update Password
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Update Password
      tags:
        - Accounts
  /addresses/places_autocomplete:
    post:
      description: |-
        For searching places just send the following attributes :

        - **longitude** (optional, float) : The location longitude for the seach

        - **latitude** (optional, float) : The location latitude for the seach

        - **search** (required, string) : The search text (most than 3 char)
      operationId: Get autocomplete places
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get autocomplete places
      tags:
        - Adresses
  /addresses/places_details:
    post:
      description: ''
      operationId: Get autocomplete places details
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get autocomplete places details
      tags:
        - Adresses
  /catchement_areas:
    get:
      description: ''
      operationId: List all catchement areas
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/vnd.geo+json
      responses:
        '200':
          description: OK
          headers: {}
      summary: List all catchement areas
      tags:
        - Catchement Areas
  '/catchement_areas/{id}':
    get:
      description: ''
      operationId: Get a Catchement Area
      parameters:
        - description: Numeric `id` of the Catchement Area
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/vnd.geo+json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get a Catchement Area
      tags:
        - Catchement Areas
  /credit_cards:
    get:
      description: ''
      operationId: List all CreditCards for the current User
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      responses:
        '200':
          description: OK
          headers: {}
      summary: List all CreditCards for the current User
      tags:
        - CreditCards
  '/credit_cards/{id}':
    get:
      description: ''
      operationId: Get a CreditCard
      parameters:
        - description: Numeric `id` of the Credit Card
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get a CreditCard
      tags:
        - CreditCards
  /products:
    get:
      description: ''
      operationId: List all products
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: List all products
      tags:
        - Products
  '/products/{id}':
    get:
      description: ''
      operationId: Get a Product
      parameters:
        - description: Numeric `id` of the Product
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get a Product
      tags:
        - Products
  /promotional_codes:
    get:
      description: ''
      operationId: Get all promotional codes for user
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get all promotional codes for user
      tags:
        - Promotional Codes
    post:
      description: ''
      operationId: Add a promotional code
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
      responses:
        '201':
          description: Created
          headers: {}
      summary: Add a promotional code
      tags:
        - Promotional Codes
  '/rides/{id}':
    get:
      description: ''
      operationId: Get a ride
      parameters:
        - description: Numeric `id` of Ride
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Get a ride
      tags:
        - Rides
  '/rides/{id}/cancel':
    get:
      description: '**Must be authenticate**'
      operationId: Cancel a Ride
      parameters:
        - description: Numeric `id` of Ride
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Cancel a Ride
      tags:
        - Rides
  '/rides/{id}/cancel_fees':
    get:
      description: '**Must be authenticate**'
      operationId: Cancel fee of a Ride
      parameters:
        - description: Numeric `id` of Ride
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Cancel fee of a Ride
      tags:
        - Rides
  '/rides/{id}/estimate':
    get:
      description: ''
      operationId: Estimate a ride
      parameters:
        - description: Numeric `id` of Ride
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Estimate a ride
      tags:
        - Rides
  '/rides/{id}/reserve':
    post:
      description: >-
        To book, the ride must belong to the connected user. The ride must have
        a main passenger at least, the booking user id and the payment hash must
        be set.


        **Must be authenticate**
      operationId: Reserve a ride
      parameters:
        - description: Numeric `id` of Ride
          in: path
          name: id
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Reserve a ride
      tags:
        - Rides
  '/rides?page={page}&per_page={per_page}':
    get:
      description: ''
      operationId: Get all user rides
      parameters:
        - description: Number of the page to load
          in: path
          name: page
          required: true
          type: number
          x-example: '1'
        - description: Number of items per page to load
          in: path
          name: per_page
          required: true
          type: number
          x-example: '1'
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      responses:
        '200':
          description: OK
          headers:
            Current-Page:
              type: string
            Link:
              type: string
            Per-Page:
              type: string
            Total-Entries:
              type: string
            Total-Page:
              type: string
      summary: Get all user rides
      tags:
        - Rides
    post:
      description: ''
      operationId: Create a ride
      parameters:
        - description: e.g. application/json
          in: header
          name: Accept
          required: false
          type: string
          x-example: application/json
        - description: e.g. en
          in: header
          name: Accept-Language
          required: false
          type: string
          x-example: en
      produces:
        - application/json
      responses:
        '201':
          description: Created
          headers: {}
      summary: Create a ride
      tags:
        - Rides
  '/{version}':
    get:
      description: ''
      operationId: Retrieve the Entry Point on Version
      parameters:
        - description: Ecotaco API version
          in: path
          name: version
          required: true
          type: string
      produces:
        - application/vnd.siren+json
      responses:
        '200':
          description: OK
          headers: {}
      summary: Retrieve the Entry Point on Version
      tags:
        - EcoTa.co API Root
schemes:
  - http
swagger: '2.0'
tags:
  - name: EcoTa.co API Root
  - description: >-
      The account methods use the User ressource.


      The User ressource has the following attributes :


      - **id** (required, unique, integer) : ID of the User


      - **name** (required, string) : Name of the User


      - **first_name** (required, string) : First name of the User


      - **email** (required, unique, string) : Email of the User


      - **phone** (required, string) : Phone of the User


      - **birth_date** (optional, string) : Birth date of the User


      - **language** (required, string) : Language of the User (fixed by the
      application)


      - **referral_code** (optional, string) : Driver referal code


      - **avatar_url** (optional, string) : Avatar Url of the User (fixed by the
      application, gravatar or facebook)


      - **newsletter** (required, boolean) : True if User want to receive the
      newsletter


      - **addresses** : An Array of addresses (see *Addresses*)


      - **companies** : An Array of companies (see *Companies*)


      The User have a array of **Addresses** with the following attributes :


      - **city** (required, string) : City


      - **country** (required, string) : Country


      - **latitude** (required, float) : Latitude of the Address


      - **longitude** (required, float) : Longitude of the Address


      - **postal_code** (required, integer) : Postal Code


      - **type_address** (required, string) : Address Type (HOME of User)


      - **address_complement** (optional, string) : Address complement


      - **label** (optional, string) : Address Type (HOME of User)


      The User have a array of **Companies** with the following attributes :


      - **id** (required, string) : Id


      - **user_id** (required, string) : Id of user attached to the company


      - **type_relation** (required, float) : Relation and role in the company


      - **name** (required, float) : Name of company


      **type_relation** :


      - company_manager : Can manage user and reserve for others user with
      relation on the company


      - visitor : Visitor of the company


      - collaborator : Collaborator of the company
    name: Accounts
  - description: >-
      CreditCards resource


      The Credit Card ressource has the following attributes :


      - **id** (required, unique, integer) : ID of the credit card


      - **card_id** (required, string) : External stripe ID


      - **card_type** (required,string) : Card Type


      - **client** (required,string) : External stripe Customer ID


      - **expire_month** (required, integer) : Expire Mouth


      - **expire_year** (required, integer) : Expire Year


      - **label** (required, string) : Label of the Card


      - **last4** (required, string) : Last four digit in the card


      - **type_transaction** (required, string) : Type transaction (default :
      card)


      - **user_id** (required, integer) : ID of the User
    name: CreditCards
  - description: >-
      The Ride resource has the following attributes :


      - **id** (required, unique, integer) : ID of the Ride


      - **booking_user_id** (integer) : ID of user who have create the ride


      - **company_id** (integer) : ID of company who have create the ride


      - **requested_start** (required, date) : Requested date of the ride


      - **flight_number** (string) : Fligth number


      - **train_number**  (string) : Train number


      - **nb_passengers** (required, integer) : Number of passengers (de 1 à 8)


      - **pick_up_or_tacking_out** (boolean) : If pick up or tacking out in
      station or other


      - **comment** (string) : Comment of ride forward to driver


      - **points** : Array of Points (see *Points*)
       one start point and one end point is required to create a ride

      - **passengers** : Array of Passengers (see *Passengers*)
       One passenger (attribute main: true) is mandatory to book a ride

      - **distance** (float) : Distance in Km


      - **driver_arrival** (date) : Date of real driver arrival


      - **duration** (integer) : Duration of the Ride in seconds


      - **price** (float) : price of the ride (without promotion)


      - **total_price** (float) : total price of the Ride


      - **real_end** (date) : Date of real end of ride


      - **real_start** (date) : Date of real start of ride


      - **refused_label** (string) : Refused Label (see *REFUSED_LABELS*)


      - **status** (string) : Status of the ride (see *STATUSES*)


      - **eta** (integer) : Estimated Time of arrival


      - **driver** (hash) : Information about driver (see *Driver*)


      - **vehicle** (hash) : Information about vehicle (see *Vehicle*)


      - **estimated_start** (date) : Estimated Start date of the ride


      - **estimated_end** (date) : Estimated End date of the ride


      - **promotional_code_used** : Promotional code use if any


      **STATUSES** :


      - NONE = ''


      - REFUSED = 'refused'

      The ride can not be reserved


      - ESTIMATED = 'estimated'

      We have availability for the ride, it can be reserved


      - RESERVED = 'reserved'


      - AFFECTED = 'affected'


      - SENT = 'sent'


      - IN_PROGRESS = 'in_progress'


      - CANCELLED = 'cancelled'


      - CUSTOMER_MISSING = 'customer_missing'


      - FINISHED = 'finished'


      - FAILED = 'failed'


      **REFUSED_LABELS** :


      - NOT_IN_A_CATCHEMENT_AREA = 'not_in_a_catchement_area'


      - ROUTE_COULD_NOT_BE_CALCULATE = 'route_could_not_be_calculate'


      - NO_DRIVER_AVAILABLE_WITH_MORE_THAN_4_PLACES =
      'no_driver_available_with_vehicle_with_more_4_places'


      - NO_DRIVER_AVAILABLE = 'no_driver_available'


      - PLANNED_DRIVERS_BUT_NOT_CONNECTED = 'planned_drivers_but_not_conected'


      - ERROR_ON_ONLINE_AND_NEAR_OF = 'error_on_online_and_near_of'


      - TOMTOM_QUOTA_REACHED = 'tomtom_error_request_quota_reached'


      - AUTHORIZATION_REFUSED = 'authorization_refused'


      The Ride have a array of **Points** with the following attributes :


      Only one point with type start and only one point with type start


      - **id** (required, unique, integer) : ID of the Point


      - **longitude** (required, float) : Longitude of the Point


      - **latitude** (required, float) : Latitude of the Point


      - **type_point** (required, string) : Point Type ( 'start' or 'end' )


      - **address** (optional, string) : Address of the Point


      - **address_complement** (optional, string) : Address Complement of the
      Point


      - **postal_code** (optional, integer) : Postal Code of the Point


      - **city** (optional, string) : City of the Point


      - **country** (optional, string) : Country of the Point


      - **user_input** (optional, string) : User Input for the Point


      - **catchement_areas_id** (required, string) : Catchement Areas ID of the
      Point (fixed by the application)


      - **ride_id** (required, integer) : The Ride ID (fixed by the application)


      - **comment** (optional, string): Additionnals informations or comment


      - **contacts** (optional, array): Array of Contacts (see *Contacts*)


      The Point may have a array of **Contacts** with the following attributes :


      The contact on the pick up or drop off point


      - **email** (optional, string) : Email of the Contact


      - **first_name** (optional, string) : Fist Name of the Contact


      - **last_name** (optional, string) : Name of the Contact


      - **phone** (optional, string) : Phone number of the Contact


      The Ride have a array of **Passengers** with the following attributes :


      One main passenger (with main attribute at true) is required to book a
      ride


      - **main** (required, boolean) : If the passenger is the main passenger


      - **first_name** (optional, string) : Fist Name of the Passenger


      - **name** (optional, string) : Last Name of the Passenger


      - **phone** (optional, string) : Phone number of the Passenger (in
      international format)


      - **email** (optional, string) : Email of the Passenger (required for
      create user)


      - **user_id** (optional, integer) : The User ID related to the passenger
      if exist


      - **company_relation** (optional, integer) : The type of relation with the
      company for the passenger (if register is true)


      - **register** (optional, integer) : for register the passenger


      The Ride have a hash of **Driver** with the following attributes :


      This information is provided when the ride is in_progress status


      - **first_name** (optional, string) : Fist Name of the driver


      - **phone** (optional, string) : Phone number of the driver


      - **latitude** (optional, string) : Latitude of driver


      - **longitude** (optional, string) : Longitude of driver


      The Ride have a hash of **Vehicle** with the following attributes :


      This information is provided when the ride is in_progress status


      - **manufacturer** (optional, string) : Manufacturer of the vehicle


      - **color** (optional, string) : Color of the vehicle


      - **model** (optional, string) : Model of the vehicle
    name: Rides
  - description: >-
      Promotional Codes resource


      The Promotional Codes ressource has the following attributes :


      - **id** (required, unique, integer) : ID of the affected promotional code


      - **status** (required, string) : Status of the affected promotional code
      ('used' or 'notused')


      - **code** (required, string) : The code of the promotional code


      - **label** (required, string) : Label of the promotional code


      - **promotional_type** (required, string) : The type of promotional code
      ('pourcent', 'amount' or 'km')


      - **value** (required, float) : the value of the promotional code


      - **start_date** (required, date) : Start Date for the promotional code


      - **end_date** (required, date) : End Date for the promotional code
    name: Promotional Codes
  - description: >-
      The Addresses use google API for searching places, and also user favorite
      or best places.
    name: Adresses
  - description: >-
      Catchement area resource


      The catchement area ressource has the following attributes :


      - **id** (required, unique, integer) : ID of the catchement area


      - **label** (required, string) : Label


      - **launch_at** (required, date) : Launch date of catchement area


      - **coordinates** (required, array) : coordinates


      **Coordinates** :


      - **id** (required, unique, integer) : ID of the coordinates


      - **latitude** (required, float) : Latitude of the coordinates


      - **longitude** (required, float) : Longitude of the coordinates


      - **rank** (required, integer) : Rank to order coordinates of th
      catchement area


      We provide json or geojson format
    name: Catchement Areas
  - description: |-
      Product resource

      The product ressource has the following attributes :

      - **id** (required, unique, integer) : ID of the product

      - **product_type** (required, string) : Product type (See *TYPES*)

      - **name** (required, dastringte) : Name of product

      - **description** (required, string) : Description of product

      **TYPES** :

      - transport_person : On demand transport person

      - package_delivery : Package delivery
    name: Products
x-components: {}

