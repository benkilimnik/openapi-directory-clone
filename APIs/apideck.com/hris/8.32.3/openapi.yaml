basePath: /
definitions:
  Address:
    additionalProperties: false
    properties:
      city:
        description: Name of city.
        example: San Francisco
        type: string
        x-nullable: true
      contact_name:
        example: Elon Musk
        type: string
        x-nullable: true
      country:
        description: country code according to ISO 3166-1 alpha-2.
        example: US
        type: string
        x-nullable: true
      county:
        description: 'Address field that holds a sublocality, such as a county'
        example: Santa Clara
        type: string
        x-nullable: true
      email:
        example: elon@musk.com
        type: string
        x-nullable: true
      fax:
        example: 122-111-1111
        type: string
        x-nullable: true
      id:
        example: '123'
        type: string
        x-nullable: true
      latitude:
        example: '40.759211'
        type: string
        x-nullable: true
      line1:
        description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
        example: Main street
        type: string
        x-nullable: true
      line2:
        description: Line 2 of the address
        example: 'apt #'
        type: string
        x-nullable: true
      line3:
        description: Line 3 of the address
        example: 'Suite #'
        type: string
        x-nullable: true
      line4:
        description: Line 4 of the address
        example: delivery instructions
        type: string
        x-nullable: true
      longitude:
        example: '-73.984638'
        type: string
        x-nullable: true
      name:
        example: HQ US
        type: string
        x-nullable: true
      phone_number:
        example: 111-111-1111
        type: string
        x-nullable: true
      postal_code:
        description: Zip code or equivalent.
        example: '94104'
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      salutation:
        example: Mr
        type: string
        x-nullable: true
      state:
        description: Name of state
        example: CA
        type: string
        x-nullable: true
      street_number:
        description: Street number
        example: '25'
        type: string
        x-nullable: true
      string:
        example: '25 Spring Street, Blackburn, VIC 3130'
        title: The address string. Some APIs don't provide structured address data.
        type: string
        x-nullable: true
      type:
        enum:
          - primary
          - secondary
          - home
          - office
          - shipping
          - billing
          - other
        example: primary
        type: string
        x-graphql-type-name: AddressType
      website:
        example: 'https://elonmusk.com'
        type: string
        x-nullable: true
    type: object
  BadRequestResponse:
    properties:
      detail:
        anyOf:
          - example: Missing property foobar
            type: string
          - example:
              missing:
                - foobar: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestvalidationerror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestValidationError
        type: string
  Benefit:
    properties:
      employee_deduction:
        description: The amount deducted for benefit.
        example: 142.94
        type: number
      employer_contribution:
        description: The amount of employer contribution.
        example: 141.14
        type: number
      name:
        description: The name of the benefit.
        example: Health Insurance
        type: string
    type: object
  CompanyId:
    example: '23456'
    title: Company ID
    type: string
    x-nullable: true
  CompanyName:
    example: SpaceX
    title: Company name
    type: string
    x-nullable: true
  Compensation:
    additionalProperties: false
    properties:
      benefits:
        description: An array of employee benefits for the pay period.
        items:
          $ref: '#/definitions/Benefit'
        type: array
      deductions:
        description: An array of employee deductions for the pay period.
        items:
          $ref: '#/definitions/Deduction'
        type: array
      employee_id:
        $ref: '#/definitions/Id'
      gross_pay:
        description: >-
          The employee's gross pay. Only available when payroll has been
          processed
        example: 3000
        type: number
      net_pay:
        description: The employee's net pay. Only available when payroll has been processed
        example: 2199.93
        type: number
      taxes:
        description: An array of employer and employee taxes for the pay period.
        items:
          $ref: '#/definitions/Tax'
        type: array
    required:
      - employee_id
    type: object
  CreateDepartmentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Departments
        type: string
      service:
        description: Apideck ID of service provider
        example: workday
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateHrisCompanyResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreatedAt:
    example: '2020-09-30T07:43:32.000Z'
    format: date-time
    readOnly: true
    title: Created at (timestamp)
    type: string
  CreatedBy:
    example: '12345'
    readOnly: true
    title: Created by
    type: string
    x-nullable: true
  Currency:
    description: >-
      Indicates the associated currency for an amount of money. Values
      correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
    enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRC
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
    example: USD
    title: Currency
    type: string
    x-enum-elements:
      - description: Unknown currency
        name: UNKNOWN_CURRENCY
      - description: United Arab Emirates dirham
        name: AED
      - description: Afghan afghani
        name: AFN
      - description: Albanian lek
        name: ALL
      - description: Armenian dram
        name: AMD
      - description: Netherlands Antillean guilder
        name: ANG
      - description: Angolan kwanza
        name: AOA
      - description: Argentine peso
        name: ARS
      - description: Australian dollar
        name: AUD
      - description: Aruban florin
        name: AWG
      - description: Azerbaijani manat
        name: AZN
      - description: Bosnia and Herzegovina convertible mark
        name: BAM
      - description: Barbados dollar
        name: BBD
      - description: Bangladeshi taka
        name: BDT
      - description: Bulgarian lev
        name: BGN
      - description: Bahraini dinar
        name: BHD
      - description: Burundian franc
        name: BIF
      - description: Bermudian dollar
        name: BMD
      - description: Brunei dollar
        name: BND
      - description: Boliviano
        name: BOB
      - description: Bolivian Mvdol
        name: BOV
      - description: Brazilian real
        name: BRL
      - description: Bahamian dollar
        name: BSD
      - description: Bhutanese ngultrum
        name: BTN
      - description: Botswana pula
        name: BWP
      - description: Belarusian ruble
        name: BYR
      - description: Belize dollar
        name: BZD
      - description: Canadian dollar
        name: CAD
      - description: Congolese franc
        name: CDF
      - description: WIR Euro
        name: CHE
      - description: Swiss franc
        name: CHF
      - description: WIR Franc
        name: CHW
      - description: Unidad de Fomento
        name: CLF
      - description: Chilean peso
        name: CLP
      - description: Chinese yuan
        name: CNY
      - description: Colombian peso
        name: COP
      - description: Unidad de Valor Real
        name: COU
      - description: Costa Rican colon
        name: CRC
      - description: Cuban convertible peso
        name: CUC
      - description: Cuban peso
        name: CUP
      - description: Cape Verdean escudo
        name: CVE
      - description: Czech koruna
        name: CZK
      - description: Djiboutian franc
        name: DJF
      - description: Danish krone
        name: DKK
      - description: Dominican peso
        name: DOP
      - description: Algerian dinar
        name: DZD
      - description: Egyptian pound
        name: EGP
      - description: Eritrean nakfa
        name: ERN
      - description: Ethiopian birr
        name: ETB
      - description: Euro
        name: EUR
      - description: Fiji dollar
        name: FJD
      - description: Falkland Islands pound
        name: FKP
      - description: Pound sterling
        name: GBP
      - description: Georgian lari
        name: GEL
      - description: Ghanaian cedi
        name: GHS
      - description: Gibraltar pound
        name: GIP
      - description: Gambian dalasi
        name: GMD
      - description: Guinean franc
        name: GNF
      - description: Guatemalan quetzal
        name: GTQ
      - description: Guyanese dollar
        name: GYD
      - description: Hong Kong dollar
        name: HKD
      - description: Honduran lempira
        name: HNL
      - description: Croatian kuna
        name: HRK
      - description: Haitian gourde
        name: HTG
      - description: Hungarian forint
        name: HUF
      - description: Indonesian rupiah
        name: IDR
      - description: Israeli new shekel
        name: ILS
      - description: Indian rupee
        name: INR
      - description: Iraqi dinar
        name: IQD
      - description: Iranian rial
        name: IRR
      - description: Icelandic króna
        name: ISK
      - description: Jamaican dollar
        name: JMD
      - description: Jordanian dinar
        name: JOD
      - description: Japanese yen
        name: JPY
      - description: Kenyan shilling
        name: KES
      - description: Kyrgyzstani som
        name: KGS
      - description: Cambodian riel
        name: KHR
      - description: Comoro franc
        name: KMF
      - description: North Korean won
        name: KPW
      - description: South Korean won
        name: KRW
      - description: Kuwaiti dinar
        name: KWD
      - description: Cayman Islands dollar
        name: KYD
      - description: Kazakhstani tenge
        name: KZT
      - description: Lao kip
        name: LAK
      - description: Lebanese pound
        name: LBP
      - description: Sri Lankan rupee
        name: LKR
      - description: Liberian dollar
        name: LRD
      - description: Lesotho loti
        name: LSL
      - description: Lithuanian litas
        name: LTL
      - description: Latvian lats
        name: LVL
      - description: Libyan dinar
        name: LYD
      - description: Moroccan dirham
        name: MAD
      - description: Moldovan leu
        name: MDL
      - description: Malagasy ariary
        name: MGA
      - description: Macedonian denar
        name: MKD
      - description: Myanmar kyat
        name: MMK
      - description: Mongolian tögrög
        name: MNT
      - description: Macanese pataca
        name: MOP
      - description: Mauritanian ouguiya
        name: MRO
      - description: Mauritian rupee
        name: MUR
      - description: Maldivian rufiyaa
        name: MVR
      - description: Malawian kwacha
        name: MWK
      - description: Mexican peso
        name: MXN
      - description: Mexican Unidad de Inversion
        name: MXV
      - description: Malaysian ringgit
        name: MYR
      - description: Mozambican metical
        name: MZN
      - description: Namibian dollar
        name: NAD
      - description: Nigerian naira
        name: NGN
      - description: Nicaraguan córdoba
        name: NIO
      - description: Norwegian krone
        name: NOK
      - description: Nepalese rupee
        name: NPR
      - description: New Zealand dollar
        name: NZD
      - description: Omani rial
        name: OMR
      - description: Panamanian balboa
        name: PAB
      - description: Peruvian sol
        name: PEN
      - description: Papua New Guinean kina
        name: PGK
      - description: Philippine peso
        name: PHP
      - description: Pakistani rupee
        name: PKR
      - description: Polish złoty
        name: PLN
      - description: Paraguayan guaraní
        name: PYG
      - description: Qatari riyal
        name: QAR
      - description: Romanian leu
        name: RON
      - description: Serbian dinar
        name: RSD
      - description: Russian ruble
        name: RUB
      - description: Rwandan franc
        name: RWF
      - description: Saudi riyal
        name: SAR
      - description: Solomon Islands dollar
        name: SBD
      - description: Seychelles rupee
        name: SCR
      - description: Sudanese pound
        name: SDG
      - description: Swedish krona
        name: SEK
      - description: Singapore dollar
        name: SGD
      - description: Saint Helena pound
        name: SHP
      - description: Sierra Leonean leone
        name: SLL
      - description: Somali shilling
        name: SOS
      - description: Surinamese dollar
        name: SRD
      - description: South Sudanese pound
        name: SSP
      - description: São Tomé and Príncipe dobra
        name: STD
      - description: Salvadoran colón
        name: SVC
      - description: Syrian pound
        name: SYP
      - description: Swazi lilangeni
        name: SZL
      - description: Thai baht
        name: THB
      - description: Tajikstani somoni
        name: TJS
      - description: Turkmenistan manat
        name: TMT
      - description: Tunisian dinar
        name: TND
      - description: Tongan pa'anga
        name: TOP
      - description: Turkish lira
        name: TRY
      - description: Trinidad and Tobago dollar
        name: TTD
      - description: New Taiwan dollar
        name: TWD
      - description: Tanzanian shilling
        name: TZS
      - description: Ukrainian hryvnia
        name: UAH
      - description: Ugandan shilling
        name: UGX
      - description: United States dollar
        name: USD
      - description: United States dollar (next day)
        name: USN
      - description: United States dollar (same day)
        name: USS
      - description: Uruguay Peso en Unidedades Indexadas
        name: UYI
      - description: Uruguyan peso
        name: UYU
      - description: Uzbekistan som
        name: UZS
      - description: Venezuelan bolívar soberano
        name: VEF
      - description: Vietnamese đồng
        name: VND
      - description: Vanuatu vatu
        name: VUV
      - description: Samoan tala
        name: WST
      - description: CFA franc BEAC
        name: XAF
      - description: Silver
        name: XAG
      - description: Gold
        name: XAU
      - description: European Composite Unit
        name: XBA
      - description: European Monetary Unit
        name: XBB
      - description: European Unit of Account 9
        name: XBC
      - description: European Unit of Account 17
        name: XBD
      - description: East Caribbean dollar
        name: XCD
      - description: Special drawing rights (International Monetary Fund)
        name: XDR
      - description: CFA franc BCEAO
        name: XOF
      - description: Palladium
        name: XPD
      - description: CFP franc
        name: XPF
      - description: Platinum
        name: XPT
      - description: Code reserved for testing
        name: XTS
      - description: No currency
        name: XXX
      - description: Yemeni rial
        name: YER
      - description: South African rand
        name: ZAR
      - description: Zambian kwacha
        name: ZMK
      - description: Zambian kwacha
        name: ZMW
      - description: Bitcoin
        name: BTC
    x-nullable: true
  CustomField:
    additionalProperties: false
    properties:
      description:
        description: More information about the custom field
        example: Employee Level
        title: Description
        type: string
      id:
        example: '2389328923893298'
        title: ID
        type: string
      name:
        description: Name of the custom field.
        example: employee_level
        title: Name
        type: string
      value: {}
    required:
      - id
    type: object
  Deduction:
    properties:
      amount:
        description: The amount deducted.
        example: 10.97
        type: number
      name:
        description: The name of the deduction.
        example: Company Car
        type: string
    type: object
  DeleteDepartmentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Departments
        type: string
      service:
        description: Apideck ID of service provider
        example: workday
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteHrisCompanyResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  Department:
    additionalProperties: false
    properties:
      code:
        example: '2'
        title: Code
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      description:
        example: R&D
        title: Description
        type: string
        x-nullable: true
      id:
        $ref: '#/definitions/Id'
      name:
        description: Department name
        example: R&D
        title: Name
        type: string
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  Description:
    example: A description
    title: Description
    type: string
    x-nullable: true
  Division:
    description: The division the user is currently in.
    example: Europe
    title: Division
    type: string
    x-nullable: true
  Email:
    additionalProperties: false
    properties:
      email:
        example: elon@musk.com
        format: email
        minLength: 1
        type: string
      id:
        example: '123'
        type: string
      type:
        enum:
          - primary
          - secondary
          - work
          - personal
          - billing
          - other
        example: primary
        type: string
        x-graphql-type-name: EmailType
    required:
      - email
    type: object
  Employee:
    additionalProperties: false
    properties:
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      birthday:
        example: '2000-08-12T00:00:00.000Z'
        format: date
        type: string
        x-nullable: true
      company_id:
        $ref: '#/definitions/CompanyId'
      company_name:
        $ref: '#/definitions/CompanyName'
      compensations:
        items:
          example:
            effective_date: '2021-06-11T00:00:00.000Z'
            flsa_status: nonexempt
            id: '3404301363494309004'
            job_id: '3490439050957906679'
            payment_unit: hour
            rate: '50.00'
          properties:
            currency:
              $ref: '#/definitions/Currency'
            effective_date:
              description: The effective date for this compensation.
              example: '2020-08-12T00:00:00.000Z'
              readOnly: false
              type: string
            flsa_status:
              description: The FLSA status for this compensation.
              enum:
                - exempt
                - salaried-nonexempt
                - nonexempt
                - owner
              readOnly: false
              type: string
            id:
              $ref: '#/definitions/Id'
            job_id:
              description: The ID of the job to which the compensation belongs.
              example: '12345'
              readOnly: true
              type: string
            payment_unit:
              $ref: '#/definitions/PaymentUnit'
            rate:
              description: The amount paid per payment unit.
              example: 72000
              readOnly: false
              type: number
          type: object
        type: array
      country_of_birth:
        description: country code according to ISO 3166-1 alpha-2.
        example: US
        maxLength: 2
        minLength: 2
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      custom_fields:
        items:
          $ref: '#/definitions/CustomField'
        type: array
      deleted:
        example: true
        title: Deleted
        type: boolean
        x-nullable: true
      department:
        description: The department the user is currently in.
        example: R&D
        title: Department
        type: string
        x-nullable: true
      description:
        $ref: '#/definitions/Description'
      dietary_preference:
        description: Indicate the employee's dietary preference.
        example: Veggie
        title: Dietary preference
        type: string
        x-nullable: true
      direct_reports:
        example:
          - a0d636c6-43b3-4bde-8c70-85b707d992f4
          - a98lfd96-43b3-4bde-8c70-85b707d992e6
        items:
          type: string
        type: array
        x-nullable: true
      display_name:
        example: Technoking
        title: Display name
        type: string
        x-nullable: true
      division:
        $ref: '#/definitions/Division'
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      employee_number:
        $ref: '#/definitions/EmployeeNumber'
      employment_end_date:
        description: >-
          A Start Date is the date that the employee ended working at the
          company
        example: '2028-10-26T00:00:00.000Z'
        title: Employee end date
        type: string
        x-nullable: true
      employment_role:
        properties:
          sub_type:
            enum:
              - full_time
              - part_time
              - hourly
            type: string
            x-nullable: true
          type:
            enum:
              - contractor
              - employee
              - freelance
              - temp
              - intership
              - other
            type: string
            x-nullable: true
        type: object
      employment_start_date:
        description: >-
          A Start Date is the date that the employee started working at the
          company
        example: '2021-10-26T00:00:00.000Z'
        title: Employee start date
        type: string
        x-nullable: true
      employment_status:
        enum:
          - active
          - inactive
          - terminated
          - other
        example: active
        type: string
        x-nullable: true
      first_name:
        $ref: '#/definitions/FirstName'
      food_allergies:
        description: Indicate the employee's food allergies.
        example:
          - No allergies
        items:
          type: string
        title: Food allergies
        type: array
        x-nullable: true
      gender:
        $ref: '#/definitions/Gender'
      id:
        $ref: '#/definitions/Id'
      initials:
        example: EM
        title: Initials
        type: string
        x-nullable: true
      jobs:
        items:
          properties:
            compensation_rate:
              example: 72000
              title: The compensation rate of the job.
              type: number
            currency:
              $ref: '#/definitions/Currency'
            employee_id:
              $ref: '#/definitions/Id'
            hired_at:
              example: '2020-08-12T00:00:00.000Z'
              format: date
              type: string
              x-nullable: true
            id:
              $ref: '#/definitions/Id'
            is_primary:
              description: Indicates whether this the employee's primary job
              example: true
              title: Primary
              type: boolean
              x-nullable: true
            location:
              $ref: '#/definitions/Address'
            payment_unit:
              $ref: '#/definitions/PaymentUnit'
            role:
              example: Sales
              title: Job role
              type: string
              x-nullable: true
            title:
              $ref: '#/definitions/Title'
          type: object
        type: array
      languages:
        items:
          $ref: '#/definitions/Language'
        type: array
      last_name:
        $ref: '#/definitions/LastName'
      manager:
        properties:
          email:
            example: elon@musk.com
            format: email
            type: string
            x-nullable: true
          first_name:
            $ref: '#/definitions/FirstName'
          id:
            $ref: '#/definitions/Id'
          last_name:
            $ref: '#/definitions/LastName'
          name:
            example: Elon Musk
            title: Name
            type: string
            x-nullable: true
        type: object
      marital_status:
        example: married
        title: Marital status
        type: string
        x-nullable: true
      middle_name:
        $ref: '#/definitions/MiddleName'
      nationalities:
        items:
          description: country code according to ISO 3166-1 alpha-2.
          example: US
          title: Nationality
          type: string
          x-nullable: true
        type: array
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      photo_url:
        $ref: '#/definitions/PhotoUrl'
      preferred_language:
        $ref: '#/definitions/Language'
      preferred_name:
        example: Elon Musk
        title: Preferred name
        type: string
        x-nullable: true
      pronouns:
        example: 'she,her'
        title: Pronouns
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      salutation:
        example: Mr
        type: string
        x-nullable: true
      social_links:
        items:
          additionalProperties: false
          properties:
            id:
              example: '12345'
              type: string
              x-nullable: true
            type:
              example: twitter
              type: string
              x-nullable: true
            url:
              example: 'https://www.twitter.com/apideck-io'
              minLength: 1
              type: string
          required:
            - url
          type: object
        type: array
      social_security_number:
        example: '123456789'
        title: Social Security Number
        type: string
        x-nullable: true
      source:
        example: >-
          When the employee is imported as a new hire, this field indicates what
          system (e.g. the name of the ATS) this employee was imported from.
        title: Source
        type: string
        x-nullable: true
      source_id:
        example: >-
          Unique identifier of the employee in the system this employee was
          imported from (e.g. the ID in the ATS).
        title: Source ID
        type: string
        x-nullable: true
      tax_code:
        example: '1111'
        title: Tax Code
        type: string
        x-nullable: true
      tax_id:
        example: 234-32-0000
        title: Tax ID
        type: string
        x-nullable: true
      team:
        additionalProperties: false
        description: The team the user is currently in.
        properties:
          id:
            example: '1234'
            type: string
            x-nullable: true
          name:
            example: Full Stack Engineers
            type: string
            x-nullable: true
        type: object
        x-nullable: true
      timezone:
        example: Europe/London
        title: Timezone
        type: string
        x-nullable: true
      title:
        $ref: '#/definitions/Title'
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      works_remote:
        description: Indicates whether the employee works remote
        example: true
        title: Remote
        type: boolean
        x-nullable: true
    type: object
  EmployeeNumber:
    description: >-
      An Employee Number, Employee ID or Employee Code, is a unique number that
      has been assigned to each individual staff member within a company.
    example: 123456-AB
    title: Employee number
    type: string
    x-nullable: true
  EmployeePayroll:
    properties:
      employee:
        $ref: '#/definitions/Employee'
      payroll:
        $ref: '#/definitions/Payroll'
    type: object
  EmployeePayrolls:
    properties:
      employee:
        $ref: '#/definitions/Employee'
      payrolls:
        items:
          $ref: '#/definitions/Payroll'
        type: array
    type: object
  EmployeesFilter:
    additionalProperties: false
    example:
      company_id: '1234'
    properties:
      company_id:
        description: Company ID to filter on
        example: '1234'
        type: string
    type: object
    x-graphql-type-name: EmployeesFilter
  FirstName:
    example: Elon
    title: First name
    type: string
    x-nullable: true
  Gender:
    enum:
      - male
      - female
      - unisex
      - other
    example: male
    type: string
    x-nullable: true
  GetDepartmentResponse:
    properties:
      data:
        $ref: '#/definitions/Department'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Departments
        type: string
      service:
        description: Apideck ID of service provider
        example: workday
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Department
  GetDepartmentsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Department'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Departments
        type: string
      service:
        description: Apideck ID of service provider
        example: workday
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: DepartmentList
  GetEmployeePayrollResponse:
    properties:
      data:
        $ref: '#/definitions/EmployeePayroll'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: EmployeePayroll
  GetEmployeePayrollsResponse:
    properties:
      data:
        $ref: '#/definitions/EmployeePayrolls'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: EmployeePayrollList
  GetEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/Employee'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Employee
  GetEmployeesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Employee'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: EmployeeList
  GetHrisCompaniesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/HrisCompany'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: HrisCompanyList
  GetHrisCompanyResponse:
    properties:
      data:
        $ref: '#/definitions/HrisCompany'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: HrisCompany
  GetPayrollResponse:
    properties:
      data:
        $ref: '#/definitions/Payroll'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Payroll
  GetPayrollsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Payroll'
        type: array
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: PayrollList
  HrisCompany:
    additionalProperties: false
    properties:
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      company_number:
        description: >-
          An Company Number, Company ID or Company Code, is a unique number that
          has been assigned to each company.
        example: 123456-AB
        title: Company number
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      debtor_id:
        example: '12345'
        minLength: 1
        type: string
      deleted:
        example: false
        readOnly: true
        type: boolean
      display_name:
        example: SpaceX
        minLength: 1
        type: string
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      id:
        $ref: '#/definitions/Id'
      legal_name:
        example: SpaceX
        minLength: 1
        type: string
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      status:
        enum:
          - active
          - inactive
          - trial
          - other
        example: active
        type: string
      subdomain:
        example: company
        minLength: 1
        type: string
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      websites:
        items:
          $ref: '#/definitions/Website'
        type: array
    required:
      - legal_name
    type: object
  HrisEventType:
    enum:
      - '*'
      - hris.employee.created
      - hris.employee.updated
      - hris.employee.deleted
      - hris.company.created
      - hris.company.updated
      - hris.company.deleted
    example: hris.employee.created
    type: string
  Id:
    example: '12345'
    readOnly: true
    type: string
  Language:
    description: language code according to ISO 639-1. For the United States - EN
    example: EN
    type: string
    x-nullable: true
  LastName:
    example: Musk
    title: Last name
    type: string
    x-nullable: true
  Links:
    description: Links to navigate to previous or next pages through the API
    properties:
      current:
        description: Link to navigate to the current page through the API
        example: 'https://unify.apideck.com/crm/companies'
        type: string
      next:
        description: Link to navigate to the previous page through the API
        example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
        type: string
        x-nullable: true
      previous:
        description: Link to navigate to the previous page through the API
        example: >-
          https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        type: string
        x-nullable: true
    type: object
  Meta:
    description: Response metadata
    properties:
      cursors:
        description: Cursors to navigate to previous or next pages through the API
        properties:
          current:
            description: Cursor to navigate to the current page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjI=
            type: string
            x-nullable: true
          next:
            description: Cursor to navigate to the next page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjM=
            type: string
            x-nullable: true
          previous:
            description: Cursor to navigate to the previous page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjE=
            type: string
            x-nullable: true
        type: object
      items_on_page:
        description: Number of items returned in the data property of the response
        example: 50
        type: integer
    type: object
  MiddleName:
    example: D.
    title: Middle name
    type: string
    x-nullable: true
  NotFoundResponse:
    properties:
      detail:
        anyOf:
          - example: 'Could not find widget with id: ''123'''
            type: string
          - example:
              not_found:
                entity: widget
                id: '123'
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Found
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unknown Widget
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#entitynotfounderror'
        type: string
      status_code:
        description: HTTP status code
        example: 404
        type: number
      type_name:
        description: The type of error returned
        example: EntityNotFoundError
        type: string
  NotImplementedResponse:
    properties:
      detail:
        anyOf:
          - example: >-
              Failed to retrieve Widget tokenUrl from
              'components.securitySchemes.oauth2.flows'
            type: string
          - type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Implemented
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unmapped Attribute
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#mappingerror'
        type: string
      status_code:
        description: HTTP status code
        example: 501
        type: number
      type_name:
        description: The type of error returned
        example: MappingError
        type: string
  PaymentRequiredResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: You have reached your limit of 2000
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Payment Required
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Request Limit Reached
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestlimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 402
        type: number
      type_name:
        description: The type of error returned
        example: RequestLimitError
        type: string
  PaymentUnit:
    enum:
      - hour
      - week
      - month
      - year
      - paycheck
    example: year
    type: string
  Payroll:
    additionalProperties: false
    properties:
      check_date:
        description: The date on which employees will be paid for the payroll.
        example: '2022-04-08T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        type: string
      company_id:
        $ref: '#/definitions/CompanyId'
      compensations:
        description: An array of compensations for the payroll.
        items:
          $ref: '#/definitions/Compensation'
        type: array
      end_date:
        description: 'The end date, inclusive, of the pay period.'
        example: '2022-04-21T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        type: string
      id:
        $ref: '#/definitions/Id'
      processed:
        description: >-
          Whether or not the payroll has been successfully processed. Note that
          processed payrolls cannot be updated.
        example: false
        type: boolean
      processed_date:
        description: The date the payroll was processed.
        example: '2022-04-08T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        type: string
        x-nullable: true
      start_date:
        description: 'The start date, inclusive, of the pay period.'
        example: '2022-04-08T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        type: string
      totals:
        $ref: '#/definitions/PayrollTotals'
        description: The overview of the payroll totals.
        type: object
    required:
      - id
      - processed
      - check_date
      - start_date
      - end_date
    type: object
  PayrollTotals:
    properties:
      check_amount:
        description: The total check amount for the payroll.
        example: 27966.23
        type: number
      company_debit:
        description: The total company debit for the payroll.
        example: 27992.49
        type: number
      employee_benefit_deductions:
        description: The total amount of employee deducted benefits for the payroll.
        example: 0
        type: number
      employee_taxes:
        description: The total amount of employee paid taxes for the payroll.
        example: 6616.39
        type: number
      employer_benefit_contributions:
        description: The total amount of company contributed benefits for the payroll.
        example: 0
        type: number
      employer_taxes:
        description: The total amount of employer paid taxes for the payroll.
        example: 2038.93
        type: number
      gross_pay:
        description: The gross pay amount for the payroll.
        example: 27966.23
        type: number
      net_pay:
        description: The net pay amount for the payroll.
        example: 19337.17
        type: number
      tax_debit:
        description: The total tax debit for the payroll.
        example: 8655.32
        type: number
    type: object
  PayrollsFilter:
    additionalProperties: false
    example:
      end_date: '2022-04-21T00:00:00.000Z'
      start_date: '2022-04-08T00:00:00.000Z'
    properties:
      end_date:
        description: Return payrolls whose pay period is before the end date
        example: '2022-04-21T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        type: string
      start_date:
        description: Return payrolls whose pay period is after the start date
        example: '2022-04-08T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        type: string
    type: object
    x-graphql-type-name: PayrollsFilter
  PhoneNumber:
    additionalProperties: false
    properties:
      area_code:
        example: '323'
        title: Area code
        type: string
        x-nullable: true
      country_code:
        example: '1'
        title: Country code
        type: string
        x-nullable: true
      extension:
        example: '105'
        title: Phone extension
        type: string
        x-nullable: true
      id:
        example: '12345'
        type: string
        x-nullable: true
      number:
        example: 111-111-1111
        minLength: 1
        title: Phone number
        type: string
      type:
        enum:
          - primary
          - secondary
          - home
          - work
          - office
          - mobile
          - assistant
          - fax
          - direct-dial-in
          - personal
          - other
        example: primary
        type: string
        x-graphql-type-name: PhoneType
    required:
      - number
    type: object
  PhotoUrl:
    example: 'https://unavatar.io/elon-musk'
    title: Photo URL
    type: string
    x-nullable: true
  RowVersion:
    example: 1-12345
    title: Row version
    type: string
    x-nullable: true
  Tax:
    properties:
      amount:
        description: The amount of the tax.
        example: 1.97
        type: number
      employer:
        description: Paid by employer.
        example: false
        type: boolean
      name:
        description: The name of the tax.
        example: CA State Income Tax
        type: string
    type: object
  Title:
    example: CEO
    title: Job title
    type: string
    x-nullable: true
  TooManyRequestsResponse:
    properties:
      detail:
        properties:
          context:
            type: string
          error:
            additionalProperties: true
            type: object
        type: object
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 6585)
        example: Too Many Requests
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Connector Rate Limit Error
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#connectorratelimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 429
        type: number
      type_name:
        description: The type of error returned
        example: ConnectorRateLimitError
        type: string
  UnauthorizedResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: Failed to generate valid JWT Session. Verify applicationId is correct
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unauthorized
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unauthorized Request
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 401
        type: number
      type_name:
        description: The type of error returned
        example: UnauthorizedError
        type: string
  UnexpectedErrorResponse:
    properties:
      detail:
        anyOf:
          - example: 'Missing Header: x-apideck-consumer-id'
            type: string
          - example:
              missing:
                - x-apideck-consumer-id: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestHeadersValidationError
        type: string
  UnifiedId:
    properties:
      id:
        example: '12345'
        readOnly: true
        type: string
    required:
      - id
    title: UnifiedId
  UnprocessableResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: State did not include unified_api
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unprocessable Entity
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid State
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#invalidstateerror'
        type: string
      status_code:
        description: HTTP status code
        example: 422
        type: number
      type_name:
        description: The type of error returned
        example: InvalidStateError
        type: string
  UpdateDepartmentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Departments
        type: string
      service:
        description: Apideck ID of service provider
        example: workday
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateEmployeeResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Employees
        type: string
      service:
        description: Apideck ID of service provider
        example: sage-hr
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateHrisCompanyResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Companies
        type: string
      service:
        description: Apideck ID of service provider
        example: undefined
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdatedAt:
    example: '2020-09-30T07:43:32.000Z'
    format: date-time
    readOnly: true
    title: Updated at (timestamp)
    type: string
  UpdatedBy:
    example: '12345'
    readOnly: true
    type: string
    x-nullable: true
  WebhookEvent:
    allOf:
      - properties:
          entity_id:
            description: The service provider's ID of the entity that triggered this event
            example: 123456ASDF
            type: string
          entity_type:
            description: The type entity that triggered this event
            example: Company
            type: string
          entity_url:
            description: The url to retrieve entity detail.
            example: 'https://unify.apideck.com/crm/contacts/123456'
            type: string
          event_id:
            description: Unique reference to this request event
            example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
            type: string
          execution_attempt:
            description: The current count this request event has been attempted
            example: 2
            type: number
          occurred_at:
            description: ISO Datetime for when the original event occurred
            example: '2021-10-01T03:14:55.419Z'
            type: string
          service_id:
            description: Service provider identifier
            example: close
            type: string
        type: object
      - properties:
          event_type:
            $ref: '#/definitions/HrisEventType'
        type: object
    x-sdk-exclude: true
  Website:
    additionalProperties: false
    properties:
      id:
        example: '12345'
        type: string
        x-nullable: true
      type:
        enum:
          - primary
          - secondary
          - work
          - personal
          - other
        example: primary
        type: string
        x-graphql-type-name: WebsiteType
      url:
        example: 'http://example.com'
        minLength: 1
        type: string
    required:
      - url
    type: object
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
host: unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  description: "Welcome to the HRIS API.\n\nYou can use this API to access all HRIS API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## GraphQL\n\nUse the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n| x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n| Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Pagination\n\nAll API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\nTo fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\nIn the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n### Query Parameters\n\n| Name   | Type   | Required | Description                                                                                                        |\n| ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n| cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |\n| limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n### Response Body\n\n| Name                  | Type   | Description                                                        |\n| --------------------- | ------ | ------------------------------------------------------------------ |\n| meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n| meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n| meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n| meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n| links.previous        | String | Link to navigate to the previous page of results through the API   |\n| links.current         | String | Link to navigate to the current page of results through the API    |\n| links.next            | String | Link to navigate to the next page of results through the API       |\n\n⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n## SDKs and API Clients\n\nUpcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n## Debugging\n\nBecause of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n## Errors\n\nThe API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n| Code | Title                | Description                                                                                                                                                                                              |\n| ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n| 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n| 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n| 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n| 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n| 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n| 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n| 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n| 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n| 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n| 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n| 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n### Handling errors\n\nThe Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n### Error Types\n\n#### RequestValidationError\n\nRequest is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n#### UnsupportedFiltersError\n\nFilters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n#### UnsupportedSortFieldError\n\nSort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n#### InvalidCursorError\n\nPagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n#### ConnectorExecutionError\n\nA Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n#### UnauthorizedError\n\nWe were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n#### ConnectorCredentialsError\n\nA request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n#### ConnectorDisabledError\n\nA request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n#### ConnectorRateLimitError\n\nYou sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n#### RequestLimitError\n\nYou have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n#### EntityNotFoundError\n\nYou've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n#### OAuthCredentialsNotFoundError\n\nWhen adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n#### IntegrationNotFoundError\n\nThe requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n#### ConnectionNotFoundError\n\nA valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n#### ConnectionSettingsError\n\nThe connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n#### ConnectorNotFoundError\n\nA request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n#### OAuthRedirectUriError\n\nA request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n#### OAuthInvalidStateError\n\nThe state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n#### OAuthCodeExchangeError\n\nWhen attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n#### OAuthConnectorError\n\nIt seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### MappingError\n\nThere was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n#### ConnectorMappingNotFoundError\n\nIt seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorResponseMappingNotFoundError\n\nWe were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationMappingNotFoundError\n\nConnector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorWorkflowMappingError\n\nThe composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationUnsupportedError\n\nYou're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n#### PaginationNotSupportedError\n\nPagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n## API Design\n\n### API Styles and data formats\n\n#### REST API\n\nThe API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n##### Available HTTP methods\n\nThe Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n```\nPOST /messages\nGET /messages\nGET /messages/{messageId}\nPATCH /messages/{messageId}\nDELETE /messages/{messageId}\n```\n\nResponse bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n### Schema\n\nAll API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n### Meta\n\nMeta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n### Idempotence (upcoming)\n\nTo prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\nUniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n### Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n### Fixed field types\n\n#### Dates\n\nThe dates returned by the API are all represented in UTC (ISO8601 format).\n\nThis example\_`2019-11-14T00:55:31.820Z`\_is defined by the\_ISO 8601\_standard. The\_T\_in the middle separates the year-month-day portion from the hour-minute-second portion. The\_Z\_on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The\_Z\_is pronounced \"Zulu\" per military/aviation tradition.\n\nThe ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n#### Prices and Currencies\n\nAll prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\nFor zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\nAll currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n## Support\n\nIf you have problems or need help with your case, you can always reach out to our Support.\n\n"
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  title: HRIS API
  version: 8.32.3
  x-apideck-api: hris
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/hris.yml
      version: '3.0'
  x-providerName: apideck.com
  x-serviceName: hris
  x-tags:
    - partner
paths:
  /hris/companies:
    get:
      description: List Companies
      operationId: companiesAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Companies
          schema:
            $ref: '#/definitions/GetHrisCompaniesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Companies
      tags:
        - Companies
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.companiesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: hrisCompanies
    post:
      consumes:
        - application/json
      description: Create Company
      operationId: companiesAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HrisCompany'
      produces:
        - application/json
      responses:
        '201':
          description: Companies
          schema:
            $ref: '#/definitions/CreateHrisCompanyResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Company
      tags:
        - Companies
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              company: {
                legal_name: 'SpaceX',
                display_name: 'SpaceX',
                subdomain: 'company',
                status: 'active',
                company_number: '123456-AB',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                debtor_id: '12345'
              }
            }

            try {
              const { data } = await apideck.hris.companiesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/hris/companies/{id}':
    delete:
      description: Delete Company
      operationId: companiesDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Companies
          schema:
            $ref: '#/definitions/DeleteHrisCompanyResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Company
      tags:
        - Companies
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.companiesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Company
      operationId: companiesOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Company
          schema:
            $ref: '#/definitions/GetHrisCompanyResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Company
      tags:
        - Companies
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.companiesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Company
      operationId: companiesUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/HrisCompany'
      produces:
        - application/json
      responses:
        '200':
          description: Companies
          schema:
            $ref: '#/definitions/UpdateHrisCompanyResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Company
      tags:
        - Companies
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              company: {
                legal_name: 'SpaceX',
                display_name: 'SpaceX',
                subdomain: 'company',
                status: 'active',
                company_number: '123456-AB',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                debtor_id: '12345'
              }
            }

            try {
              const { data } = await apideck.hris.companiesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /hris/departments:
    get:
      description: List Departments
      operationId: departmentsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Departments
          schema:
            $ref: '#/definitions/GetDepartmentsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Departments
      tags:
        - Departments
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.departmentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: departments
    post:
      consumes:
        - application/json
      description: Create Department
      operationId: departmentsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Department'
      produces:
        - application/json
      responses:
        '201':
          description: Departments
          schema:
            $ref: '#/definitions/CreateDepartmentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Department
      tags:
        - Departments
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              department: {
                name: 'R&D',
                code: '2',
                description: 'R&D'
              }
            }

            try {
              const { data } = await apideck.hris.departmentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/hris/departments/{id}':
    delete:
      description: Delete Department
      operationId: departmentsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Departments
          schema:
            $ref: '#/definitions/DeleteDepartmentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Department
      tags:
        - Departments
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.departmentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Department
      operationId: departmentsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Departments
          schema:
            $ref: '#/definitions/GetDepartmentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Department
      tags:
        - Departments
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.departmentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Department
      operationId: departmentsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Department'
      produces:
        - application/json
      responses:
        '200':
          description: Departments
          schema:
            $ref: '#/definitions/UpdateDepartmentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Department
      tags:
        - Departments
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              department: {
                name: 'R&D',
                code: '2',
                description: 'R&D'
              }
            }

            try {
              const { data } = await apideck.hris.departmentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /hris/employees:
    get:
      description: List Employees
      operationId: employeesAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: EmployeesFilter
      produces:
        - application/json
      responses:
        '200':
          description: Employees
          schema:
            $ref: '#/definitions/GetEmployeesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Employees
      tags:
        - Employees
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: employees
    post:
      consumes:
        - application/json
      description: Create Employee
      operationId: employeesAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Employee'
      produces:
        - application/json
      responses:
        '201':
          description: Employees
          schema:
            $ref: '#/definitions/CreateEmployeeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Employee
      tags:
        - Employees
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              employee: {
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                display_name: 'Technoking',
                preferred_name: 'Elon Musk',
                initials: 'EM',
                salutation: 'Mr',
                title: 'CEO',
                marital_status: 'married',
                division: 'Europe',
                department: 'R&D',
                team: {
                  id: '1234',
                  name: 'Full Stack Engineers'
                },
                company_id: '23456',
                company_name: 'SpaceX',
                employment_start_date: '2021-10-26',
                employment_end_date: '2028-10-26',
                employee_number: '123456-AB',
                employment_status: 'active',
                employment_role: {
                  type: 'contractor',
                  sub_type: 'full_time'
                },
                manager: {
                  name: 'Elon Musk',
                  first_name: 'Elon',
                  last_name: 'Musk',
                  email: 'elon@musk.com'
                },
                direct_reports: [
                  'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                  'a98lfd96-43b3-4bde-8c70-85b707d992e6'
                ],
                social_security_number: '123456789',
                birthday: '2000-08-12',
                country_of_birth: 'US',
                description: 'A description',
                gender: 'male',
                pronouns: 'she,her',
                preferred_language: 'EN',
                languages: ['EN'],
                nationalities: ['US'],
                photo_url: 'https://unavatar.io/elon-musk',
                timezone: 'Europe/London',
                source:
                  'When the employee is imported as a new hire, this field indicates what system (e.g. the name of the ATS) this employee was imported from.',
                source_id:
                  'Unique identifier of the employee in the system this employee was imported from (e.g. the ID in the ATS).',
                jobs: [
                  {
                    title: 'CEO',
                    role: 'Sales',
                    compensation_rate: 72000,
                    currency: 'USD',
                    payment_unit: 'year',
                    hired_at: '2020-08-12',
                    is_primary: true,
                    location: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      row_version: '1-12345'
                    }
                  }
                ],
                compensations: [
                  {
                    id: '3404301363494309004',
                    job_id: '3490439050957906679',
                    rate: '50.00',
                    payment_unit: 'hour',
                    flsa_status: 'nonexempt',
                    effective_date: '2021-06-11'
                  }
                ],
                works_remote: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck-io',
                    type: 'twitter'
                  }
                ],
                tax_code: '1111',
                tax_id: '234-32-0000',
                dietary_preference: 'Veggie',
                food_allergies: ['No allergies'],
                row_version: '1-12345',
                deleted: true
              }
            }

            try {
              const { data } = await apideck.hris.employeesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/hris/employees/{id}':
    delete:
      description: Delete Employee
      operationId: employeesDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Employees
          schema:
            $ref: '#/definitions/DeleteEmployeeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Employee
      tags:
        - Employees
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Employee
      operationId: employeesOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Employees
          schema:
            $ref: '#/definitions/GetEmployeeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Employee
      tags:
        - Employees
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Employee
      operationId: employeesUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Employee'
      produces:
        - application/json
      responses:
        '200':
          description: Employees
          schema:
            $ref: '#/definitions/UpdateEmployeeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Employee
      tags:
        - Employees
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              employee: {
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                display_name: 'Technoking',
                preferred_name: 'Elon Musk',
                initials: 'EM',
                salutation: 'Mr',
                title: 'CEO',
                marital_status: 'married',
                division: 'Europe',
                department: 'R&D',
                team: {
                  id: '1234',
                  name: 'Full Stack Engineers'
                },
                company_id: '23456',
                company_name: 'SpaceX',
                employment_start_date: '2021-10-26',
                employment_end_date: '2028-10-26',
                employee_number: '123456-AB',
                employment_status: 'active',
                employment_role: {
                  type: 'contractor',
                  sub_type: 'full_time'
                },
                manager: {
                  name: 'Elon Musk',
                  first_name: 'Elon',
                  last_name: 'Musk',
                  email: 'elon@musk.com'
                },
                direct_reports: [
                  'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                  'a98lfd96-43b3-4bde-8c70-85b707d992e6'
                ],
                social_security_number: '123456789',
                birthday: '2000-08-12',
                country_of_birth: 'US',
                description: 'A description',
                gender: 'male',
                pronouns: 'she,her',
                preferred_language: 'EN',
                languages: ['EN'],
                nationalities: ['US'],
                photo_url: 'https://unavatar.io/elon-musk',
                timezone: 'Europe/London',
                source:
                  'When the employee is imported as a new hire, this field indicates what system (e.g. the name of the ATS) this employee was imported from.',
                source_id:
                  'Unique identifier of the employee in the system this employee was imported from (e.g. the ID in the ATS).',
                jobs: [
                  {
                    title: 'CEO',
                    role: 'Sales',
                    compensation_rate: 72000,
                    currency: 'USD',
                    payment_unit: 'year',
                    hired_at: '2020-08-12',
                    is_primary: true,
                    location: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      row_version: '1-12345'
                    }
                  }
                ],
                compensations: [
                  {
                    id: '3404301363494309004',
                    job_id: '3490439050957906679',
                    rate: '50.00',
                    payment_unit: 'hour',
                    flsa_status: 'nonexempt',
                    effective_date: '2021-06-11'
                  }
                ],
                works_remote: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck-io',
                    type: 'twitter'
                  }
                ],
                tax_code: '1111',
                tax_id: '234-32-0000',
                dietary_preference: 'Veggie',
                food_allergies: ['No allergies'],
                row_version: '1-12345',
                deleted: true
              }
            }

            try {
              const { data } = await apideck.hris.employeesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /hris/payrolls:
    get:
      description: List Payroll
      operationId: payrollsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: PayrollsFilter
      produces:
        - application/json
      responses:
        '200':
          description: Payrolls
          schema:
            $ref: '#/definitions/GetPayrollsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Payroll
      tags:
        - Payrolls
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.payrollsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: payrolls
  '/hris/payrolls/employees/{employee_id}':
    get:
      description: List payrolls for employee
      operationId: employeePayrollsAll
      parameters:
        - description: ID of the employee you are acting upon.
          in: path
          name: employee_id
          required: true
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: PayrollsFilter
      produces:
        - application/json
      responses:
        '200':
          description: EmployeePayrolls
          schema:
            $ref: '#/definitions/GetEmployeePayrollsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Employee Payrolls
      tags:
        - Employee Payrolls
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeePayrollsAll({
                employeeId: 'employee_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: employeePayrolls
  '/hris/payrolls/employees/{employee_id}/payrolls/{payroll_id}':
    get:
      description: Get payroll for employee
      operationId: employeePayrollsOne
      parameters:
        - description: ID of the payroll you are acting upon.
          in: path
          name: payroll_id
          required: true
          type: string
        - description: ID of the employee you are acting upon.
          in: path
          name: employee_id
          required: true
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Payrolls
          schema:
            $ref: '#/definitions/GetEmployeePayrollResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Employee Payroll
      tags:
        - Employee Payrolls
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              payrollId: 'payroll_id_example',
              employeeId: 'employee_id_example'
            }

            try {
              const { data } = await apideck.hris.employeePayrollsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: employeePayroll
  '/hris/payrolls/{payroll_id}':
    get:
      description: Get Payroll
      operationId: payrollsOne
      parameters:
        - description: ID of the payroll you are acting upon.
          in: path
          name: payroll_id
          required: true
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Payrolls
          schema:
            $ref: '#/definitions/GetPayrollResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Payroll
      tags:
        - Payrolls
      x-apideck-api: hris
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.payrollsOne({
                payrollId: 'payroll_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: payroll
schemes:
  - https
security:
  - apiKey: []
securityDefinitions:
  apiKey:
    description: >
      To use API you have to sign up and get your own API key. Unify API
      accounts have sandbox mode and live mode API keys. 

      To change modes just use the appropriate key to get a live or test object.
      You can find your API keys on the unify settings of your Apideck app.

      Your Apideck application_id can also be found on the same page.


      Authenticate your API requests by including your test or live secret API
      key in the request header. 


      - Bearer authorization header: `Authorization: Bearer
      <your-apideck-api-key>`

      - Application id header: `x-apideck-app-id: <your-apideck-app-id>`


      You should use the public keys on the SDKs and the secret keys to
      authenticate API requests.


      **Do not share or include your secret API keys on client side code.** Your
      API keys carry significant privileges. Please ensure to keep them 100%
      secure and be sure to not share your secret API keys in areas that are
      publicly accessible like GitHub.


      Learn how to set the Authorization header inside Postman
      https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key


      Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: ''
    name: Employees
    x-apideck-model:
      $ref: '#/definitions/Employee'
  - description: ''
    name: Companies
    x-apideck-model:
      $ref: '#/definitions/HrisCompany'
  - description: ''
    name: Departments
    x-apideck-model:
      $ref: '#/definitions/Department'
  - description: ''
    name: Payrolls
    x-apideck-model:
      $ref: '#/definitions/Payroll'
  - description: ''
    name: Employee Payrolls
    x-apideck-model:
      $ref: '#/definitions/EmployeePayroll'
x-components:
  parameters:
    applicationId:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      type: string
    companyId:
      description: ID of the company you are acting upon.
      in: path
      name: company_id
      required: true
      schema:
        type: string
    consumerId:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      type: string
    cursor:
      description: >-
        Cursor to start from. You can find cursors for next/previous pages in
        the meta.cursors property of the response.
      in: query
      name: cursor
      type: string
    employeeId:
      description: ID of the employee you are acting upon.
      in: path
      name: employee_id
      required: true
      type: string
    employeesFilter:
      description: Apply filters (beta)
      in: query
      name: filter
      type: object
      x-graphql-type-name: EmployeesFilter
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      type: string
    limit:
      default: 20
      description: Number of records to return
      in: query
      maximum: 200
      minimum: 1
      name: limit
      type: integer
    payrollId:
      description: ID of the payroll you are acting upon.
      in: path
      name: payroll_id
      required: true
      type: string
    payrollsFilter:
      description: Apply filters (beta)
      in: query
      name: filter
      type: object
      x-graphql-type-name: PayrollsFilter
    raw:
      default: false
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      type: boolean
    serviceId:
      description: >-
        Provide the service id you want to call (e.g., pipedrive). [See the full
        list in the connector section.](#section/Connectors) Only needed when a
        consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      type: string
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/BadRequestResponse'
      description: Bad Request
    CreateDepartmentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateDepartmentResponse'
      description: Departments
    CreateEmployeeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateEmployeeResponse'
      description: Employees
    CreateHrisCompanyResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateHrisCompanyResponse'
      description: Companies
    DeleteDepartmentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteDepartmentResponse'
      description: Departments
    DeleteEmployeeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteEmployeeResponse'
      description: Employees
    DeleteHrisCompanyResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteHrisCompanyResponse'
      description: Companies
    GetDepartmentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetDepartmentResponse'
      description: Departments
    GetDepartmentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetDepartmentsResponse'
      description: Departments
    GetEmployeePayrollResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetEmployeePayrollResponse'
      description: Payrolls
    GetEmployeePayrollsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetEmployeePayrollsResponse'
      description: EmployeePayrolls
    GetEmployeeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetEmployeeResponse'
      description: Employees
    GetEmployeesResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetEmployeesResponse'
      description: Employees
    GetHrisCompaniesResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetHrisCompaniesResponse'
      description: Companies
    GetHrisCompanyResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetHrisCompanyResponse'
      description: Company
    GetPayrollResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetPayrollResponse'
      description: Payrolls
    GetPayrollsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetPayrollsResponse'
      description: Payrolls
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotImplementedResponse'
      description: Not Implemented
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
      description: Payment Required
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/TooManyRequestsResponse'
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnprocessableResponse'
      description: Unprocessable
    UpdateDepartmentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateDepartmentResponse'
      description: Departments
    UpdateEmployeeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateEmployeeResponse'
      description: Employees
    UpdateHrisCompanyResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateHrisCompanyResponse'
      description: Companies
x-webhooks:
  CompanyCreated:
    post:
      description: Company created
      operationId: companyCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Company created
      tags:
        - Webhook Events
      x-apideck-event-type: hris.company.created
  CompanyDeleted:
    post:
      description: Company deleted
      operationId: companyDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Company deleted
      tags:
        - Webhook Events
      x-apideck-event-type: hris.company.deleted
  CompanyUpdated:
    post:
      description: Company updated
      operationId: companyUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Company updated
      tags:
        - Webhook Events
      x-apideck-event-type: hris.company.updated
  EmployeeCreated:
    post:
      description: Employee created
      operationId: employeeCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Employee created
      tags:
        - Webhook Events
      x-apideck-event-type: hris.employee.created
  EmployeeDeleted:
    post:
      description: Employee deleted
      operationId: employeeDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Employee deleted
      tags:
        - Webhook Events
      x-apideck-event-type: hris.employee.deleted
  EmployeeUpdated:
    post:
      description: Employee updated
      operationId: employeeUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/WebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Employee updated
      tags:
        - Webhook Events
      x-apideck-event-type: hris.employee.updated
  x-sdk-exclude: true

