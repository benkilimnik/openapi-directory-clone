basePath: /
definitions:
  Address:
    additionalProperties: false
    properties:
      city:
        description: Name of city.
        example: San Francisco
        type: string
        x-nullable: true
      contact_name:
        example: Elon Musk
        type: string
        x-nullable: true
      country:
        description: country code according to ISO 3166-1 alpha-2.
        example: US
        type: string
        x-nullable: true
      county:
        description: 'Address field that holds a sublocality, such as a county'
        example: Santa Clara
        type: string
        x-nullable: true
      email:
        example: elon@musk.com
        type: string
        x-nullable: true
      fax:
        example: 122-111-1111
        type: string
        x-nullable: true
      id:
        example: '123'
        type: string
        x-nullable: true
      latitude:
        example: '40.759211'
        type: string
        x-nullable: true
      line1:
        description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
        example: Main street
        type: string
        x-nullable: true
      line2:
        description: Line 2 of the address
        example: 'apt #'
        type: string
        x-nullable: true
      line3:
        description: Line 3 of the address
        example: 'Suite #'
        type: string
        x-nullable: true
      line4:
        description: Line 4 of the address
        example: delivery instructions
        type: string
        x-nullable: true
      longitude:
        example: '-73.984638'
        type: string
        x-nullable: true
      name:
        example: HQ US
        type: string
        x-nullable: true
      phone_number:
        example: 111-111-1111
        type: string
        x-nullable: true
      postal_code:
        description: Zip code or equivalent.
        example: '94104'
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      salutation:
        example: Mr
        type: string
        x-nullable: true
      state:
        description: Name of state
        example: CA
        type: string
        x-nullable: true
      street_number:
        description: Street number
        example: '25'
        type: string
        x-nullable: true
      string:
        example: '25 Spring Street, Blackburn, VIC 3130'
        title: The address string. Some APIs don't provide structured address data.
        type: string
        x-nullable: true
      type:
        enum:
          - primary
          - secondary
          - home
          - office
          - shipping
          - billing
          - other
        example: primary
        type: string
        x-graphql-type-name: AddressType
      website:
        example: 'https://elonmusk.com'
        type: string
        x-nullable: true
    type: object
  Available:
    example: true
    title: Available
    type: boolean
    x-nullable: true
  BadRequestResponse:
    properties:
      detail:
        anyOf:
          - example: Missing property foobar
            type: string
          - example:
              missing:
                - foobar: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestvalidationerror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestValidationError
        type: string
  CreateItemResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Items
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateLocationResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Locations
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateMerchantResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Merchants
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateModifierGroupResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ModifierGroups
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateModifierResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Modifiers
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateOrderResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Orders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateOrderTypeResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: OrderTypes
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreatePosPaymentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: PosPayments
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateTenderResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Tenders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreatedAt:
    example: '2020-09-30T07:43:32.000Z'
    format: date-time
    readOnly: true
    title: Created at (timestamp)
    type: string
  CreatedBy:
    example: '12345'
    readOnly: true
    title: Created by
    type: string
    x-nullable: true
  Currency:
    description: >-
      Indicates the associated currency for an amount of money. Values
      correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
    enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRC
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
    example: USD
    title: Currency
    type: string
    x-enum-elements:
      - description: Unknown currency
        name: UNKNOWN_CURRENCY
      - description: United Arab Emirates dirham
        name: AED
      - description: Afghan afghani
        name: AFN
      - description: Albanian lek
        name: ALL
      - description: Armenian dram
        name: AMD
      - description: Netherlands Antillean guilder
        name: ANG
      - description: Angolan kwanza
        name: AOA
      - description: Argentine peso
        name: ARS
      - description: Australian dollar
        name: AUD
      - description: Aruban florin
        name: AWG
      - description: Azerbaijani manat
        name: AZN
      - description: Bosnia and Herzegovina convertible mark
        name: BAM
      - description: Barbados dollar
        name: BBD
      - description: Bangladeshi taka
        name: BDT
      - description: Bulgarian lev
        name: BGN
      - description: Bahraini dinar
        name: BHD
      - description: Burundian franc
        name: BIF
      - description: Bermudian dollar
        name: BMD
      - description: Brunei dollar
        name: BND
      - description: Boliviano
        name: BOB
      - description: Bolivian Mvdol
        name: BOV
      - description: Brazilian real
        name: BRL
      - description: Bahamian dollar
        name: BSD
      - description: Bhutanese ngultrum
        name: BTN
      - description: Botswana pula
        name: BWP
      - description: Belarusian ruble
        name: BYR
      - description: Belize dollar
        name: BZD
      - description: Canadian dollar
        name: CAD
      - description: Congolese franc
        name: CDF
      - description: WIR Euro
        name: CHE
      - description: Swiss franc
        name: CHF
      - description: WIR Franc
        name: CHW
      - description: Unidad de Fomento
        name: CLF
      - description: Chilean peso
        name: CLP
      - description: Chinese yuan
        name: CNY
      - description: Colombian peso
        name: COP
      - description: Unidad de Valor Real
        name: COU
      - description: Costa Rican colon
        name: CRC
      - description: Cuban convertible peso
        name: CUC
      - description: Cuban peso
        name: CUP
      - description: Cape Verdean escudo
        name: CVE
      - description: Czech koruna
        name: CZK
      - description: Djiboutian franc
        name: DJF
      - description: Danish krone
        name: DKK
      - description: Dominican peso
        name: DOP
      - description: Algerian dinar
        name: DZD
      - description: Egyptian pound
        name: EGP
      - description: Eritrean nakfa
        name: ERN
      - description: Ethiopian birr
        name: ETB
      - description: Euro
        name: EUR
      - description: Fiji dollar
        name: FJD
      - description: Falkland Islands pound
        name: FKP
      - description: Pound sterling
        name: GBP
      - description: Georgian lari
        name: GEL
      - description: Ghanaian cedi
        name: GHS
      - description: Gibraltar pound
        name: GIP
      - description: Gambian dalasi
        name: GMD
      - description: Guinean franc
        name: GNF
      - description: Guatemalan quetzal
        name: GTQ
      - description: Guyanese dollar
        name: GYD
      - description: Hong Kong dollar
        name: HKD
      - description: Honduran lempira
        name: HNL
      - description: Croatian kuna
        name: HRK
      - description: Haitian gourde
        name: HTG
      - description: Hungarian forint
        name: HUF
      - description: Indonesian rupiah
        name: IDR
      - description: Israeli new shekel
        name: ILS
      - description: Indian rupee
        name: INR
      - description: Iraqi dinar
        name: IQD
      - description: Iranian rial
        name: IRR
      - description: Icelandic króna
        name: ISK
      - description: Jamaican dollar
        name: JMD
      - description: Jordanian dinar
        name: JOD
      - description: Japanese yen
        name: JPY
      - description: Kenyan shilling
        name: KES
      - description: Kyrgyzstani som
        name: KGS
      - description: Cambodian riel
        name: KHR
      - description: Comoro franc
        name: KMF
      - description: North Korean won
        name: KPW
      - description: South Korean won
        name: KRW
      - description: Kuwaiti dinar
        name: KWD
      - description: Cayman Islands dollar
        name: KYD
      - description: Kazakhstani tenge
        name: KZT
      - description: Lao kip
        name: LAK
      - description: Lebanese pound
        name: LBP
      - description: Sri Lankan rupee
        name: LKR
      - description: Liberian dollar
        name: LRD
      - description: Lesotho loti
        name: LSL
      - description: Lithuanian litas
        name: LTL
      - description: Latvian lats
        name: LVL
      - description: Libyan dinar
        name: LYD
      - description: Moroccan dirham
        name: MAD
      - description: Moldovan leu
        name: MDL
      - description: Malagasy ariary
        name: MGA
      - description: Macedonian denar
        name: MKD
      - description: Myanmar kyat
        name: MMK
      - description: Mongolian tögrög
        name: MNT
      - description: Macanese pataca
        name: MOP
      - description: Mauritanian ouguiya
        name: MRO
      - description: Mauritian rupee
        name: MUR
      - description: Maldivian rufiyaa
        name: MVR
      - description: Malawian kwacha
        name: MWK
      - description: Mexican peso
        name: MXN
      - description: Mexican Unidad de Inversion
        name: MXV
      - description: Malaysian ringgit
        name: MYR
      - description: Mozambican metical
        name: MZN
      - description: Namibian dollar
        name: NAD
      - description: Nigerian naira
        name: NGN
      - description: Nicaraguan córdoba
        name: NIO
      - description: Norwegian krone
        name: NOK
      - description: Nepalese rupee
        name: NPR
      - description: New Zealand dollar
        name: NZD
      - description: Omani rial
        name: OMR
      - description: Panamanian balboa
        name: PAB
      - description: Peruvian sol
        name: PEN
      - description: Papua New Guinean kina
        name: PGK
      - description: Philippine peso
        name: PHP
      - description: Pakistani rupee
        name: PKR
      - description: Polish złoty
        name: PLN
      - description: Paraguayan guaraní
        name: PYG
      - description: Qatari riyal
        name: QAR
      - description: Romanian leu
        name: RON
      - description: Serbian dinar
        name: RSD
      - description: Russian ruble
        name: RUB
      - description: Rwandan franc
        name: RWF
      - description: Saudi riyal
        name: SAR
      - description: Solomon Islands dollar
        name: SBD
      - description: Seychelles rupee
        name: SCR
      - description: Sudanese pound
        name: SDG
      - description: Swedish krona
        name: SEK
      - description: Singapore dollar
        name: SGD
      - description: Saint Helena pound
        name: SHP
      - description: Sierra Leonean leone
        name: SLL
      - description: Somali shilling
        name: SOS
      - description: Surinamese dollar
        name: SRD
      - description: South Sudanese pound
        name: SSP
      - description: São Tomé and Príncipe dobra
        name: STD
      - description: Salvadoran colón
        name: SVC
      - description: Syrian pound
        name: SYP
      - description: Swazi lilangeni
        name: SZL
      - description: Thai baht
        name: THB
      - description: Tajikstani somoni
        name: TJS
      - description: Turkmenistan manat
        name: TMT
      - description: Tunisian dinar
        name: TND
      - description: Tongan pa'anga
        name: TOP
      - description: Turkish lira
        name: TRY
      - description: Trinidad and Tobago dollar
        name: TTD
      - description: New Taiwan dollar
        name: TWD
      - description: Tanzanian shilling
        name: TZS
      - description: Ukrainian hryvnia
        name: UAH
      - description: Ugandan shilling
        name: UGX
      - description: United States dollar
        name: USD
      - description: United States dollar (next day)
        name: USN
      - description: United States dollar (same day)
        name: USS
      - description: Uruguay Peso en Unidedades Indexadas
        name: UYI
      - description: Uruguyan peso
        name: UYU
      - description: Uzbekistan som
        name: UZS
      - description: Venezuelan bolívar soberano
        name: VEF
      - description: Vietnamese đồng
        name: VND
      - description: Vanuatu vatu
        name: VUV
      - description: Samoan tala
        name: WST
      - description: CFA franc BEAC
        name: XAF
      - description: Silver
        name: XAG
      - description: Gold
        name: XAU
      - description: European Composite Unit
        name: XBA
      - description: European Monetary Unit
        name: XBB
      - description: European Unit of Account 9
        name: XBC
      - description: European Unit of Account 17
        name: XBD
      - description: East Caribbean dollar
        name: XCD
      - description: Special drawing rights (International Monetary Fund)
        name: XDR
      - description: CFA franc BCEAO
        name: XOF
      - description: Palladium
        name: XPD
      - description: CFP franc
        name: XPF
      - description: Platinum
        name: XPT
      - description: Code reserved for testing
        name: XTS
      - description: No currency
        name: XXX
      - description: Yemeni rial
        name: YER
      - description: South African rand
        name: ZAR
      - description: Zambian kwacha
        name: ZMK
      - description: Zambian kwacha
        name: ZMW
      - description: Bitcoin
        name: BTC
    x-nullable: true
  CustomField:
    additionalProperties: false
    properties:
      description:
        description: More information about the custom field
        example: Employee Level
        title: Description
        type: string
      id:
        example: '2389328923893298'
        title: ID
        type: string
      name:
        description: Name of the custom field.
        example: employee_level
        title: Name
        type: string
      value: {}
    required:
      - id
    type: object
  DeleteItemResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Items
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteLocationResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Locations
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteMerchantResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Merchants
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteModifierGroupResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ModifierGroups
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteModifierResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Modifiers
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteOrderResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Orders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteOrderTypeResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: OrderTypes
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeletePosPaymentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: PosPayments
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteTenderResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Tenders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  Deleted:
    example: true
    title: Deleted
    type: boolean
    x-nullable: true
  Email:
    additionalProperties: false
    properties:
      email:
        example: elon@musk.com
        format: email
        minLength: 1
        type: string
      id:
        example: '123'
        type: string
      type:
        enum:
          - primary
          - secondary
          - work
          - personal
          - billing
          - other
        example: primary
        type: string
        x-graphql-type-name: EmailType
    required:
      - email
    type: object
  GetItemResponse:
    properties:
      data:
        $ref: '#/definitions/Item'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Items
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Item
  GetItemsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Item'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Items
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: ItemList
  GetLocationResponse:
    properties:
      data:
        $ref: '#/definitions/Location'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Locations
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Location
  GetLocationsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Location'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Locations
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: LocationList
  GetMerchantResponse:
    properties:
      data:
        $ref: '#/definitions/Merchant'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Merchants
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Merchant
  GetMerchantsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Merchant'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Merchants
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: MerchantList
  GetModifierGroupResponse:
    properties:
      data:
        $ref: '#/definitions/ModifierGroup'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ModifierGroups
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: ModifierGroup
  GetModifierGroupsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/ModifierGroup'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ModifierGroups
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: ModifierGroupList
  GetModifierResponse:
    properties:
      data:
        $ref: '#/definitions/Modifier'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Modifiers
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Modifier
  GetModifiersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Modifier'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Modifiers
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: ModifierList
  GetOrderResponse:
    properties:
      data:
        $ref: '#/definitions/Order'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Orders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Order
  GetOrderTypeResponse:
    properties:
      data:
        $ref: '#/definitions/OrderType'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: OrderTypes
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: OrderType
  GetOrderTypesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/OrderType'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: OrderTypes
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: OrderTypeList
  GetOrdersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Order'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Orders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: OrderList
  GetPosPaymentResponse:
    properties:
      data:
        $ref: '#/definitions/PosPayment'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: PosPayments
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: PosPayment
  GetPosPaymentsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/PosPayment'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: PosPayments
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: PosPaymentList
  GetTenderResponse:
    properties:
      data:
        $ref: '#/definitions/Tender'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Tenders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Tender
  GetTendersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Tender'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Tenders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: TenderList
  Hidden:
    example: true
    title: Hidden
    type: boolean
    x-nullable: true
  Id:
    example: '12345'
    readOnly: true
    type: string
  IdempotencyKey:
    description: >-
      A value you specify that uniquely identifies this request among requests
      you have sent.
    example: random_string
    maxLength: 45
    type: string
  Item:
    additionalProperties: false
    properties:
      abbreviation:
        example: Ch
        title: Abbreviation
        type: string
      absent_at_location_ids:
        description: >-
          A list of locations where the object is not present, even if
          present_at_all_locations is true. This can include locations that are
          deactivated.
        example:
          - '12345'
          - '67890'
        items:
          type: string
        type: array
      available:
        $ref: '#/definitions/Available'
      categories:
        example:
          - id: '12345'
            image_ids:
              - '12345'
              - '67890'
            name: Food
        items:
          properties:
            id:
              $ref: '#/definitions/Id'
            image_ids:
              items:
                $ref: '#/definitions/Id'
              type: array
            name:
              type: string
        title: Categories
        type: array
      code:
        description: 'Product code, e.g. UPC or EAN'
        example: '11910345'
        title: SKU
        type: string
      cost:
        example: 2
        title: Cost
        type: number
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      deleted:
        $ref: '#/definitions/Deleted'
      description:
        example: Hot Chocolate
        title: Description
        type: string
      hidden:
        $ref: '#/definitions/Hidden'
      id:
        example: '#cocoa'
        type: string
      idempotency_key:
        $ref: '#/definitions/IdempotencyKey'
      name:
        example: Cocoa
        title: Name
        type: string
      options:
        description: List of options pertaining to this item's attribute variation
        items:
          properties:
            attribute_id:
              example: '12345'
              title: Attribute ID
              type: string
            id:
              example: '12345'
              type: string
            name:
              example: Option 1
              title: Name
              type: string
        type: array
      present_at_all_locations:
        example: false
        title: Present at all locations
        type: boolean
      price_amount:
        example: 10
        title: Price amount
        type: number
      price_currency:
        $ref: '#/definitions/Currency'
      pricing_type:
        enum:
          - fixed
          - variable
          - per_unit
          - other
        example: fixed
        title: Pricing type
        type: string
      product_type:
        enum:
          - regular
          - other
        example: regular
        title: Product type
        type: string
      sku:
        description: SKU of the item
        example: '11910345'
        title: SKU
        type: string
      tax_ids:
        description: A list of Tax IDs for the product.
        example:
          - '12345'
          - '67890'
        items:
          type: string
        title: Tax IDs
        type: array
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      variations:
        example:
          - id: '12345'
            image_ids:
              - '12345'
              - '67890'
            item_id: '12345'
            name: Food
            price_amount: 10
            price_currency: USD
            pricing_type: fixed
            sequence: 0
            sku: '11910345'
        items:
          properties:
            created_at:
              $ref: '#/definitions/CreatedAt'
            id:
              $ref: '#/definitions/Id'
            item_id:
              $ref: '#/definitions/Id'
            name:
              example: Variation
              title: Name
              type: string
            present_at_all_locations:
              example: false
              title: Present at all locations
              type: boolean
            price_amount:
              example: 10
              title: Price amount
              type: number
            price_currency:
              $ref: '#/definitions/Currency'
            pricing_type:
              enum:
                - fixed
                - variable
                - other
              example: fixed
              title: Pricing type
              type: string
            sequence:
              $ref: '#/definitions/Sequence'
            sku:
              example: '11910345'
              title: SKU
              type: string
            stockable:
              example: false
              title: Stockable
              type: boolean
            updated_at:
              $ref: '#/definitions/UpdatedAt'
            version:
              $ref: '#/definitions/UpdatedBy'
        title: Variations
        type: array
      version:
        $ref: '#/definitions/UpdatedBy'
    required:
      - name
    type: object
  Links:
    description: Links to navigate to previous or next pages through the API
    properties:
      current:
        description: Link to navigate to the current page through the API
        example: 'https://unify.apideck.com/crm/companies'
        type: string
      next:
        description: Link to navigate to the previous page through the API
        example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
        type: string
        x-nullable: true
      previous:
        description: Link to navigate to the previous page through the API
        example: >-
          https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        type: string
        x-nullable: true
    type: object
  Location:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/Address'
      business_name:
        description: The business name of the location
        example: Dunkin Donuts LLC
        title: name
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      id:
        $ref: '#/definitions/Id'
      merchant_id:
        example: '12345'
        type: string
      name:
        description: The name of the location
        example: Dunkin Donuts
        title: name
        type: string
        x-nullable: true
      status:
        description: Status of this location.
        enum:
          - active
          - inactive
          - other
        example: active
        title: Status
        type: string
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  Merchant:
    additionalProperties: false
    properties:
      address:
        $ref: '#/definitions/Address'
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      id:
        $ref: '#/definitions/Id'
      language:
        description: language code according to ISO 639-1. For the United States - EN
        example: EN
        type: string
        x-nullable: true
      main_location_id:
        description: The main location ID of the merchant
        example: '12345'
        title: Main location ID
        type: string
        x-nullable: true
      name:
        description: The name of the merchant
        example: Dunkin Donuts
        title: name
        type: string
        x-nullable: true
      owner_id:
        example: '12345'
        title: Owner ID
        type: string
      status:
        description: Status of this merchant.
        enum:
          - active
          - inactive
          - other
        example: active
        title: Status
        type: string
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  Meta:
    description: Response metadata
    properties:
      cursors:
        description: Cursors to navigate to previous or next pages through the API
        properties:
          current:
            description: Cursor to navigate to the current page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjI=
            type: string
            x-nullable: true
          next:
            description: Cursor to navigate to the next page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjM=
            type: string
            x-nullable: true
          previous:
            description: Cursor to navigate to the previous page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjE=
            type: string
            x-nullable: true
        type: object
      items_on_page:
        description: Number of items returned in the data property of the response
        example: 50
        type: integer
    type: object
  Modifier:
    additionalProperties: false
    properties:
      alternate_name:
        example: Modifier New
        title: Alternate name
        type: string
      available:
        $ref: '#/definitions/Available'
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      id:
        $ref: '#/definitions/Id'
      modifier_group_id:
        example:
          - '123'
        title: Modifier group ID
        type: string
      name:
        example: Modifier
        title: Name
        type: string
      price_amount:
        example: 10
        title: Price amount
        type: number
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    required:
      - name
      - modifier_group_id
    type: object
  ModifierGroup:
    additionalProperties: false
    properties:
      alternate_name:
        example: Modifier New
        title: Alternate name
        type: string
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      deleted:
        $ref: '#/definitions/Deleted'
      id:
        $ref: '#/definitions/Id'
      maximum_allowed:
        example: 5
        title: Maximum allowed
        type: integer
      minimum_required:
        example: 1
        title: Minimum required
        type: integer
      modifiers:
        items:
          properties:
            alternate_name:
              example: Modifier New
              title: Alternate name
              type: string
            available:
              $ref: '#/definitions/Available'
            currency:
              $ref: '#/definitions/Currency'
            id:
              example: '12345'
              title: ID
              type: string
            name:
              example: Modifier
              title: Name
              type: string
            price_amount:
              example: 10
              title: Price amount
              type: number
        type: array
      name:
        example: Modifier
        title: Name
        type: string
      present_at_all_locations:
        example: false
        title: Present at all locations
        type: boolean
      row_version:
        $ref: '#/definitions/RowVersion'
      selection_type:
        enum:
          - single
          - multiple
        example: single
        title: >-
          Indicates whether multiple options from the modifier group can be
          applied to a single or multiple modifiers
        type: string
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  ModifierGroupFilter:
    additionalProperties: false
    example:
      modifier_group_id: '1234'
    properties:
      modifier_group_id:
        description: Id of the job to filter on
        example: '1234'
        type: string
    type: object
    x-graphql-type-name: ModifierGroupFilter
  NotFoundResponse:
    properties:
      detail:
        anyOf:
          - example: 'Could not find widget with id: ''123'''
            type: string
          - example:
              not_found:
                entity: widget
                id: '123'
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Found
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unknown Widget
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#entitynotfounderror'
        type: string
      status_code:
        description: HTTP status code
        example: 404
        type: number
      type_name:
        description: The type of error returned
        example: EntityNotFoundError
        type: string
  NotImplementedResponse:
    properties:
      detail:
        anyOf:
          - example: >-
              Failed to retrieve Widget tokenUrl from
              'components.securitySchemes.oauth2.flows'
            type: string
          - type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Implemented
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unmapped Attribute
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#mappingerror'
        type: string
      status_code:
        description: HTTP status code
        example: 501
        type: number
      type_name:
        description: The type of error returned
        example: MappingError
        type: string
  Order:
    additionalProperties: false
    properties:
      closed_date:
        example: '2022-08-13T00:00:00.000Z'
        format: date
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      customer_id:
        example: '12345'
        type: string
      customers:
        items:
          properties:
            emails:
              items:
                $ref: '#/definitions/Email'
              type: array
            first_name:
              example: Elon
              type: string
              x-nullable: true
            last_name:
              example: Musk
              type: string
              x-nullable: true
            middle_name:
              example: D.
              type: string
              x-nullable: true
            phone_numbers:
              items:
                $ref: '#/definitions/PhoneNumber'
              type: array
          type: object
        type: array
      discounts:
        items:
          properties:
            amount:
              example: 27500
              type: number
            currency:
              $ref: '#/definitions/Currency'
            id:
              $ref: '#/definitions/Id'
            name:
              example: 10% off
              type: string
            product_id:
              $ref: '#/definitions/Id'
            scope:
              enum:
                - order
                - line_item
              example: order
              type: string
            type:
              enum:
                - fixed_percentage
              example: fixed_percentage
              type: string
          type: object
        type: array
      employee_id:
        example: '12345'
        type: string
      fulfillments:
        items:
          properties:
            id:
              example: '12345'
              type: string
            pickup_details:
              properties:
                accepted_at:
                  example: '2020-09-30T07:43:32.000Z'
                  format: date-time
                  readOnly: true
                  title: Accepted at (timestamp)
                  type: string
                  x-nullable: true
                auto_complete_duration:
                  description: >-
                    The duration of time after which an open and accepted pickup
                    fulfillment is automatically moved to the COMPLETED state.
                    The duration must be in RFC 3339 format (for example,
                    'P1W3D').
                  example: P1W3D
                  type: string
                  x-nullable: true
                cancel_reason:
                  description: A description of why the pickup was canceled.
                  example: Not hungry
                  type: string
                  x-nullable: true
                canceled_at:
                  description: >-
                    Indicating when the fulfillment was canceled. The timestamp
                    must be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z").
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                curbside_pickup_details:
                  description: Specific details for curbside pickup.
                  properties:
                    buyer_arrived_at:
                      description: >-
                        Indicating when the buyer arrived and is waiting for
                        pickup. The timestamp must be in RFC 3339 format

                        (for example, "2016-09-04T23:59:33.123Z").
                      example: '2016-09-04T23:59:33.123Z'
                      format: date-time
                      type: string
                    curbside_details:
                      description: >-
                        Specific details for curbside pickup, such as parking
                        number and vehicle model.
                      maxLength: 250
                      type: string
                  type: object
                expired_at:
                  description: >-
                    Indicating when the fulfillment expired. The timestamp must
                    be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z").
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                expires_at:
                  description: >-
                    Indicating when this fulfillment expires if it is not
                    accepted. The timestamp must be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z"). The expiration
                    time can only be set up to 7 days in the future.

                    If `expires_at` is not set, this pickup fulfillment is
                    automatically accepted when 

                    placed.
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                is_curbside_pickup:
                  description: >-
                    If set to `true`, indicates that this pickup order is for
                    curbside pickup, not in-store pickup.
                  type: boolean
                note:
                  description: >-
                    A note meant to provide additional instructions about the
                    pickup

                    fulfillment displayed in the Square Point of Sale
                    application and set by the API.
                  example: Pickup in the back.
                  type: string
                picked_up_at:
                  description: >-
                    Indicating when the fulfillment was picked up by the
                    recipient. The timestamp must be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z").
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                pickup_at:
                  description: >-
                    The timestamp that represents the start of the pickup
                    window. Must be in RFC 3339 timestamp format, e.g., 

                    "2016-09-04T23:59:33.123Z".


                    For fulfillments with the schedule type `ASAP`, this is
                    automatically set

                    to the current time plus the expected duration to prepare
                    the fulfillment.
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                pickup_window_duration:
                  description: >-
                    The window of time in which the order should be picked up
                    after the `pickup_at` timestamp.

                    Must be in RFC 3339 duration format, e.g., "P1W3D". Can be
                    used as an

                    informational guideline for merchants.
                  example: P1W3D
                  type: string
                placed_at:
                  description: >-
                    Indicating when the fulfillment was placed. The timestamp
                    must be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z").
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                prep_time_duration:
                  description: >-
                    The duration of time it takes to prepare this fulfillment.

                    The duration must be in RFC 3339 format (for example,
                    "P1W3D").
                  example: P1W3D
                  type: string
                ready_at:
                  description: >-
                    Indicating when the fulfillment is marked as ready for
                    pickup. The timestamp must be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z").
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                recipient:
                  properties:
                    address:
                      $ref: '#/definitions/Address'
                    customer_id:
                      example: '12345'
                      type: string
                    email:
                      $ref: '#/definitions/Email'
                    phone_number:
                      $ref: '#/definitions/PhoneNumber'
                  type: object
                rejected_at:
                  description: >-
                    Indicating when the fulfillment was rejected. The timestamp
                    must be in RFC 3339 format

                    (for example, "2016-09-04T23:59:33.123Z").
                  example: '2016-09-04T23:59:33.123Z'
                  format: date-time
                  type: string
                schedule_type:
                  description: The schedule type of the pickup fulfillment.
                  enum:
                    - scheduled
                  type: string
              type: object
            shipment_details:
              properties: {}
              type: object
            status:
              description: The state of the fulfillment.
              enum:
                - proposed
                - reserved
                - prepared
                - completed
                - cancelled
                - failed
                - other
              title: Fulfillment status
              type: string
            type:
              enum:
                - pickup
                - shipment
              example: shipment
              type: string
          type: object
        type: array
      id:
        $ref: '#/definitions/Id'
      line_items:
        items:
          properties:
            applied_discounts:
              items:
                properties:
                  amount:
                    example: 27500
                    type: number
                  currency:
                    $ref: '#/definitions/Currency'
                  discount_id:
                    example: '12345'
                    type: string
                  id:
                    $ref: '#/definitions/Id'
              type: array
            applied_taxes:
              items:
                properties:
                  amount:
                    example: 27500
                    type: number
                  currency:
                    $ref: '#/definitions/Currency'
                  id:
                    $ref: '#/definitions/Id'
                  tax_id:
                    example: sales-tax
                    type: string
              type: array
            id:
              $ref: '#/definitions/Id'
            item:
              properties:
                id:
                  $ref: '#/definitions/Id'
            modifiers:
              description: >-
                Customizable options – toppings, add-ons, or special requests –
                create item modifiers. Modifiers that are applied to items will
                display on your customers’ digital receipts
              items:
                properties:
                  amount:
                    example: 27500
                    type: number
                  currency:
                    $ref: '#/definitions/Currency'
                  name:
                    example: New York Strip Steak - no cheese
                    type: string
              type: array
            name:
              example: New York Strip Steak
              type: string
            quantity:
              $ref: '#/definitions/Quantity'
            total_amount:
              example: 27500
              title: Total amount
              type: number
              x-nullable: true
            total_discount:
              example: 3000
              title: Total discount amount
              type: number
              x-nullable: true
            total_tax:
              example: 2000
              title: Tax amount
              type: number
              x-nullable: true
            unit_price:
              $ref: '#/definitions/UnitPrice'
          type: object
        type: array
      location_id:
        example: '12345'
        type: string
      merchant_id:
        example: '12345'
        type: string
      note:
        description: >-
          A note with information about this order, may be printed on the order
          receipt and displayed in apps
        title: Note
        type: string
      order_date:
        example: '2022-08-12T00:00:00.000Z'
        format: date
        type: string
        x-nullable: true
      order_number:
        example: 1F
        type: string
      order_type_id:
        example: '12345'
        type: string
      payment_status:
        description: Is this order paid or not?
        enum:
          - open
          - paid
          - refunded
          - credited
          - partially_paid
          - partially_refunded
          - unknown
        example: open
        title: PosPayment status
        type: string
      payments:
        items:
          properties:
            amount:
              example: 27500
              type: number
            currency:
              $ref: '#/definitions/Currency'
            id:
              $ref: '#/definitions/Id'
          type: object
        type: array
      reference_id:
        description: >-
          An optional user-defined reference ID that associates this record with
          another entity in an external system. For example, a customer ID from
          an external customer management system.
        example: my-order-001
        title: Reference ID
        type: string
        x-nullable: true
      refunded:
        example: false
        type: boolean
      refunds:
        items:
          properties:
            amount:
              example: 27500
              type: number
            currency:
              $ref: '#/definitions/Currency'
            id:
              $ref: '#/definitions/Id'
            location_id:
              $ref: '#/definitions/Id'
            reason:
              example: The reason for the refund being issued.
              type: string
            status:
              enum:
                - pending
                - approved
                - rejected
                - failed
              type: string
            tender_id:
              $ref: '#/definitions/Id'
            transaction_id:
              $ref: '#/definitions/Id'
          type: object
        type: array
      seat:
        example: 23F
        type: string
      service_charges:
        $ref: '#/definitions/ServiceCharges'
      source:
        description: Source of order. Indicates the way that the order was placed.
        enum:
          - in-store
          - online
          - opt
          - api
          - kiosk
          - caller-id
          - google
          - invoice
        example: api
        readOnly: true
        type: string
        x-nullable: true
      state:
        description: >-
          A string describing the state of the order. Clover specific: If no
          value is set, the state defaults to null, which indicates a hidden
          order. A hidden order is not displayed in user interfaces and can only
          be retrieved by its id. When creating an order via the REST API the
          value must be manually set to 'open'. More info
          [https://docs.clover.com/reference/orderupdateorder]()
        example: open
        title: Status
        type: string
      status:
        enum:
          - open
          - draft
          - delivered
          - delayed
          - voided
          - completed
        example: open
        title: Status
        type: string
      table:
        example: 1F
        type: string
      taxes:
        items:
          properties:
            amount:
              example: 27500
              type: number
            auto_applied:
              description: >-
                Square-only: Determines whether the tax was automatically
                applied to the order based on the catalog configuration. For an
                example, see Automatically Apply Taxes to an Order.
                [https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes]()
              example: true
              type: boolean
            currency:
              $ref: '#/definitions/Currency'
            id:
              example: state-sales-tax
              type: string
            name:
              description: The tax's name.
              example: State Sales Tax
              type: string
            percentage:
              $ref: '#/definitions/Percentage'
            scope:
              enum:
                - order
                - line_item
              type: string
            type:
              enum:
                - unknown
                - additive
                - inclusive
              type: string
        type: array
      tenders:
        items:
          properties:
            amount:
              example: 27500
              type: number
            buyer_tendered_cash_amount:
              description: >-
                The amount of cash tendered by the buyer. Only applicable when
                the tender type is cash.
              example: 27500
              type: number
              x-nullable: true
            card:
              $ref: '#/definitions/PaymentCard'
            card_entry_method:
              description: >-
                The entry method of the card. Only applicable when the tender
                type is card.
              enum:
                - evm
                - swiped
                - keyed
                - on-file
                - contactless
              example: swiped
              type: string
              x-nullable: true
            card_status:
              description: >-
                The status of the card. Only applicable when the tender type is
                card.
              enum:
                - authorized
                - captured
                - failed
                - voided
              example: authorized
              type: string
              x-nullable: true
            change_back_cash_amount:
              description: >-
                The amount of cash returned to the buyer. Only applicable when
                the tender type is cash.
              example: 27500
              type: number
              x-nullable: true
            currency:
              $ref: '#/definitions/Currency'
            id:
              $ref: '#/definitions/Id'
            location_id:
              $ref: '#/definitions/Id'
            name:
              example: 10% off
              type: string
            note:
              example: >-
                An optional note associated with the tender at the time of
                payment.
              title: Note
              type: string
            payment_id:
              $ref: '#/definitions/Id'
            total_amount:
              example: 27.5
              title: Total amount
              type: number
              x-nullable: true
            total_discount:
              example: 3
              title: Total discount
              type: number
              x-nullable: true
            total_processing_fee:
              example: 0
              title: Total processing fee
              type: number
              x-nullable: true
            total_refund:
              example: 0
              title: Total refund
              type: number
              x-nullable: true
            total_service_charge:
              example: 0
              title: Total service charge
              type: number
              x-nullable: true
            total_tax:
              example: 2.75
              title: Total tax
              type: number
              x-nullable: true
            total_tip:
              example: 7
              title: Total tax
              type: number
              x-nullable: true
            transaction_id:
              $ref: '#/definitions/Id'
            type:
              enum:
                - cash
                - card
                - other
              example: cash
              type: string
          type: object
        type: array
      title:
        title: Title
        type: string
      total_amount:
        example: 27.5
        title: Total amount
        type: number
        x-nullable: true
      total_discount:
        example: 3
        title: Total discount
        type: number
        x-nullable: true
      total_refund:
        example: 0
        title: Total refund
        type: number
        x-nullable: true
      total_service_charge:
        example: 0
        title: Total service charge
        type: number
        x-nullable: true
      total_tax:
        example: 2.75
        title: Total tax
        type: number
        x-nullable: true
      total_tip:
        example: 7
        title: Total tax
        type: number
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      version:
        $ref: '#/definitions/Version'
      voided:
        example: false
        type: boolean
      voided_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        readOnly: true
        title: Updated at (timestamp)
        type: string
    required:
      - location_id
      - merchant_id
    type: object
  OrderType:
    additionalProperties: false
    properties:
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      default:
        example: true
        title: Default
        type: boolean
      id:
        $ref: '#/definitions/Id'
      name:
        example: Default order type
        title: Order type name
        type: string
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  PaymentCard:
    additionalProperties: false
    description: A card's non-confidential details.
    properties:
      billing_address:
        $ref: '#/definitions/Address'
      bin:
        description: >-
          The first six digits of the card number, known as the Bank
          Identification Number (BIN).
        example: '41111'
        type: string
        x-nullable: true
      card_brand:
        description: >-
          The first six digits of the card number, known as the Bank
          Identification Number (BIN).
        enum:
          - visa
          - mastercard
          - amex
          - discover
          - discover-diners
          - jcb
          - china-unionpay
          - square-gift-card
          - square-capital-card
          - interac
          - eftpos
          - felica
          - ebt
          - other
        type: string
        x-nullable: true
      card_type:
        enum:
          - credit
          - debit
          - prepaid
          - other
        example: credit
        type: string
        x-nullable: true
      cardholder_name:
        example: John Doe
        type: string
        x-nullable: true
      customer_id:
        example: '12345'
        type: string
        x-nullable: true
      enabled:
        description: Indicates whether or not a card can be used for payments.
        example: true
        type: boolean
        x-nullable: true
      exp_month:
        description: >-
          The expiration month of the associated card as an integer between 1
          and 12.
        example: 1
        maximum: 12
        minimum: 1
        type: integer
        x-nullable: true
      exp_year:
        description: The four-digit year of the card's expiration date.
        example: 2022
        type: integer
        x-nullable: true
      fingerprint:
        example: ' Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.'
        type: string
        x-nullable: true
      id:
        $ref: '#/definitions/Id'
      last_4:
        example: The last 4 digits of the card number.
        type: string
        x-nullable: true
      merchant_id:
        example: '12345'
        type: string
      prepaid_type:
        enum:
          - non-prepaid
          - prepaid
          - unknown
        example: prepaid
        type: string
        x-nullable: true
      reference_id:
        description: >-
          An optional user-defined reference ID that associates this record with
          another entity in an external system. For example, a customer ID from
          an external customer management system.
        example: card-001
        title: Reference ID
        type: string
        x-nullable: true
      version:
        $ref: '#/definitions/Version'
    type: object
    x-nullable: true
  PaymentRequiredResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: You have reached your limit of 2000
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Payment Required
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Request Limit Reached
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestlimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 402
        type: number
      type_name:
        description: The type of error returned
        example: RequestLimitError
        type: string
  Percentage:
    example: 15
    title: Percentage
    type: number
  PhoneNumber:
    additionalProperties: false
    properties:
      area_code:
        example: '323'
        title: Area code
        type: string
        x-nullable: true
      country_code:
        example: '1'
        title: Country code
        type: string
        x-nullable: true
      extension:
        example: '105'
        title: Phone extension
        type: string
        x-nullable: true
      id:
        example: '12345'
        type: string
        x-nullable: true
      number:
        example: 111-111-1111
        minLength: 1
        title: Phone number
        type: string
      type:
        enum:
          - primary
          - secondary
          - home
          - work
          - office
          - mobile
          - assistant
          - fax
          - direct-dial-in
          - personal
          - other
        example: primary
        type: string
        x-graphql-type-name: PhoneType
    required:
      - number
    type: object
  PosPayment:
    additionalProperties: false
    properties:
      amount:
        example: 27.5
        title: Amount
        type: number
      app_fee:
        description: >-
          The amount the developer is taking as a fee for facilitating the
          payment on behalf of the seller.
        example: 3
        title: App fee
        type: number
      approved:
        description: The initial amount of money approved for this payment.
        example: 37.5
        title: Approved amount
        type: number
      bank_account:
        description: >-
          Card details for this payment. This field is currently not available.
          Reach out to our team for more info.
        properties:
          account_ownership_type:
            description: |-
              The ownership type of the bank account performing the transfer.
              The type can be `INDIVIDUAL`, `COMPANY`, or `UNKNOWN`.
            maxLength: 50
            type: string
          ach_details:
            description: >-
              ACH-specific details about `BANK_ACCOUNT` type payments with the
              `transfer_type` of `ACH`.
            properties:
              account_number_suffix:
                description: The last few digits of the bank account number.
                maxLength: 4
                type: string
              account_type:
                description: >-
                  The type of the bank account performing the transfer. The
                  account type can be `CHECKING`,

                  `SAVINGS`, or `UNKNOWN`.
                maxLength: 50
                type: string
              routing_number:
                description: The routing number for the bank account.
                maxLength: 50
                type: string
            type: object
          bank_name:
            description: The name of the bank associated with the bank account.
            maxLength: 100
            type: string
          country:
            description: country code according to ISO 3166-1 alpha-2.
            example: US
            maxLength: 2
            minLength: 2
            type: string
            x-nullable: true
          fingerprint:
            description: >-
              Uniquely identifies the bank account for this seller and can be
              used

              to determine if payments are from the same bank account.
            maxLength: 255
            type: string
          statement_description:
            description: The statement description as sent to the bank.
            maxLength: 1000
            type: string
          transfer_type:
            description: The type of the bank transfer. The type can be `ACH` or `UNKNOWN`.
            maxLength: 50
            type: string
        title: Bank account
        type: object
      card_details:
        properties:
          card:
            $ref: '#/definitions/PaymentCard'
        type: object
      cash:
        description: Cash details for this payment
        properties:
          amount: {}
          charge_back_amount:
            description: >-
              The amount of change due back to the buyer. For Square: this
              read-only field is calculated from the amount_money and
              buyer_supplied_money fields.
        title: Cash details
        type: object
      change_back_cash_amount:
        example: 20
        title: Change back cash amount
        type: number
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      customer_id:
        example: '12345'
        type: string
      device_id:
        example: '12345'
        type: string
      employee_id:
        example: '12345'
        type: string
      external_details:
        description: Details about an external payment.
        properties:
          source:
            description: |-
              A description of the external payment source. For example, 
              "Food Delivery Service".
            maxLength: 255
            type: string
          source_fee_amount:
            description: >-
              The fees paid to the source. The amount minus this field is the
              net amount seller receives.
            example: 2.5
            title: Source fee
            type: number
          source_id:
            description: An ID to associate the payment to its originating source.
            maxLength: 255
            type: string
          type:
            description: >-
              The type of external payment the seller received. It can be one of
              the following:

              - CHECK - Paid using a physical check.

              - BANK_TRANSFER - Paid using external bank transfer.

              - OTHER\_GIFT\_CARD - Paid using a non-Square gift card.

              - CRYPTO - Paid using a crypto currency.

              - SQUARE_CASH - Paid using Square Cash App.

              - SOCIAL - Paid using peer-to-peer payment applications.

              - EXTERNAL - A third-party application gathered this payment
              outside of Square.

              - EMONEY - Paid using an E-money provider.

              - CARD - A credit or debit card that Square does not support.

              - STORED_BALANCE - Use for house accounts, store credit, and so
              forth.

              - FOOD_VOUCHER - Restaurant voucher provided by employers to
              employees to pay for meals

              - OTHER - A type not listed here.
            enum:
              - check
              - bank_transfer
              - other_gift_card
              - crypto
              - square_cash
              - social
              - external
              - emoney
              - card
              - stored_balance
              - food_voucher
              - other
            maxLength: 50
            type: string
        required:
          - type
          - source
        type: object
      external_payment_id:
        example: '12345'
        type: string
      id:
        $ref: '#/definitions/Id'
      idempotency_key:
        $ref: '#/definitions/IdempotencyKey'
      location_id:
        example: '12345'
        type: string
      merchant_id:
        example: '12345'
        type: string
      order_id:
        example: '12345'
        type: string
      processing_fees:
        example:
          - amount: 1.05
            effective_at: '2020-09-30T07:43:32.000Z'
            processing_type: initial
        items:
          properties:
            amount:
              example: 1.05
              title: Amount
              type: number
            effective_at:
              example: '2020-09-30T07:43:32.000Z'
              format: date-time
              title: Effective at (timestamp)
              type: string
            processing_type:
              enum:
                - initial
                - adjustment
              title: Type
              type: string
        type: array
      refunded:
        description: The initial amount of money approved for this payment.
        example: 37.5
        title: The total amount of the payment refunded to date.
        type: number
      service_charges:
        $ref: '#/definitions/ServiceCharges'
      source:
        description: Source of this payment.
        enum:
          - card
          - bank_account
          - wallet
          - bnpl
          - cash
          - external
          - other
        example: external
        type: string
      source_id:
        example: '12345'
        type: string
      status:
        description: Status of this payment.
        enum:
          - approved
          - pending
          - completed
          - canceled
          - failed
          - other
        example: approved
        title: Status
        type: string
        x-graphql-type-name: PosPosPaymentStatus
      tax:
        example: 20
        title: Tax amount
        type: number
      tender_id:
        example: '12345'
        type: string
      tip:
        example: 7
        title: Tip amount
        type: number
      total:
        example: 37.5
        title: Total amount
        type: number
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      wallet:
        description: >-
          Wallet details for this payment. This field is currently not
          available. Reach out to our team for more info.
        properties:
          status:
            description: >-
              The status of the wallet payment. The status can be AUTHORIZED,
              CAPTURED, VOIDED, or FAILED.
            enum:
              - authorized
              - captured
              - voided
              - failed
              - other
            maxLength: 50
            type: string
        title: Wallet details
        type: object
    required:
      - source_id
      - customer_id
      - amount
      - currency
      - order_id
      - tender_id
    type: object
  PosWebhookEvent:
    allOf:
      - properties:
          entity_id:
            description: The service provider's ID of the entity that triggered this event
            example: 123456ASDF
            type: string
          entity_type:
            description: The type entity that triggered this event
            example: Company
            type: string
          entity_url:
            description: The url to retrieve entity detail.
            example: 'https://unify.apideck.com/crm/contacts/123456'
            type: string
          event_id:
            description: Unique reference to this request event
            example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
            type: string
          execution_attempt:
            description: The current count this request event has been attempted
            example: 2
            type: number
          occurred_at:
            description: ISO Datetime for when the original event occurred
            example: '2021-10-01T03:14:55.419Z'
            type: string
          service_id:
            description: Service provider identifier
            example: close
            type: string
        type: object
      - properties:
          event_type:
            enum:
              - pos.order.created
              - pos.order.updated
              - pos.order.deleted
              - pos.payment.created
              - pos.payment.updated
              - pos.payment.deleted
              - pos.merchant.created
              - pos.merchant.updated
              - pos.merchant.deleted
              - pos.location.created
              - pos.location.updated
              - pos.location.deleted
              - pos.item.created
              - pos.item.updated
              - pos.item.deleted
              - pos.modifier.created
              - pos.modifier.updated
              - pos.modifier.deleted
              - pos.modifier-group.created
              - pos.modifier-group.updated
              - pos.modifier-group.deleted
            example: pos.order.created
            type: string
        type: object
    x-sdk-exclude: true
  Quantity:
    example: 1
    title: Quantity
    type: number
    x-nullable: true
  RowVersion:
    example: 1-12345
    title: Row version
    type: string
    x-nullable: true
  Sequence:
    example: 1
    title: Sequence
    type: number
    x-nullable: true
  ServiceCharges:
    description: Optional service charges or gratuity tip applied to the order.
    items:
      properties:
        amount:
          example: 27500
          type: number
        currency:
          $ref: '#/definitions/Currency'
        name:
          description: Service charge name
          example: Charge for delivery
          type: string
        percentage:
          description: >-
            Service charge percentage. Use this field to calculate the amount of
            the service charge. Only pass a percentage or amount, not both at
            the same time.
          example: 12.5
          type: number
        type:
          description: The type of the service charge.
          enum:
            - auto_gratuity
            - custom
          type: string
      type: object
    type: array
  SocialLink:
    additionalProperties: false
    properties:
      id:
        example: '12345'
        type: string
        x-nullable: true
      type:
        example: twitter
        type: string
        x-nullable: true
      url:
        example: 'https://www.twitter.com/apideck-io'
        minLength: 1
        type: string
    required:
      - url
    type: object
  Tags:
    example:
      - New
    items:
      type: string
    type: array
  Tender:
    additionalProperties: false
    properties:
      active:
        example: true
        title: Is active
        type: boolean
        x-nullable: true
      allows_tipping:
        default: true
        description: Allow tipping on payment from tender
        type: boolean
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      editable:
        $ref: '#/definitions/Hidden'
      hidden:
        $ref: '#/definitions/Hidden'
      id:
        $ref: '#/definitions/Id'
      key:
        example: com.clover.tender.cash
        type: string
        x-nullable: true
      label:
        example: Cash
        type: string
        x-nullable: true
      opens_cash_drawer:
        default: true
        description: If this tender opens the cash drawer
        type: boolean
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  TooManyRequestsResponse:
    properties:
      detail:
        properties:
          context:
            type: string
          error:
            additionalProperties: true
            type: object
        type: object
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 6585)
        example: Too Many Requests
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Connector Rate Limit Error
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#connectorratelimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 429
        type: number
      type_name:
        description: The type of error returned
        example: ConnectorRateLimitError
        type: string
  UnauthorizedResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: Failed to generate valid JWT Session. Verify applicationId is correct
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unauthorized
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unauthorized Request
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 401
        type: number
      type_name:
        description: The type of error returned
        example: UnauthorizedError
        type: string
  UnexpectedErrorResponse:
    properties:
      detail:
        anyOf:
          - example: 'Missing Header: x-apideck-consumer-id'
            type: string
          - example:
              missing:
                - x-apideck-consumer-id: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestHeadersValidationError
        type: string
  UnifiedId:
    properties:
      id:
        example: '12345'
        readOnly: true
        type: string
    required:
      - id
    title: UnifiedId
  UnitPrice:
    example: 27500.5
    title: Unit price
    type: number
    x-nullable: true
  UnprocessableResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: State did not include unified_api
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unprocessable Entity
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid State
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#invalidstateerror'
        type: string
      status_code:
        description: HTTP status code
        example: 422
        type: number
      type_name:
        description: The type of error returned
        example: InvalidStateError
        type: string
  UpdateItemResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Items
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateLocationResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Locations
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateMerchantResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Merchants
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateModifierGroupResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ModifierGroups
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateModifierResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Modifiers
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateOrderResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Orders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateOrderTypeResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: OrderTypes
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdatePosPaymentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: PosPayments
        type: string
      service:
        description: Apideck ID of service provider
        example: square
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateTenderResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: Tenders
        type: string
      service:
        description: Apideck ID of service provider
        example: clover
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdatedAt:
    example: '2020-09-30T07:43:32.000Z'
    format: date-time
    readOnly: true
    title: Updated at (timestamp)
    type: string
  UpdatedBy:
    example: '12345'
    readOnly: true
    type: string
    x-nullable: true
  Version:
    example: '230320320320'
    title: Version
    type: string
    x-nullable: true
  Website:
    additionalProperties: false
    properties:
      id:
        example: '12345'
        type: string
        x-nullable: true
      type:
        enum:
          - primary
          - secondary
          - work
          - personal
          - other
        example: primary
        type: string
        x-graphql-type-name: WebsiteType
      url:
        example: 'http://example.com'
        minLength: 1
        type: string
    required:
      - url
    type: object
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
host: unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  description: "Welcome to the POS API.\n\nYou can use this API to access all POS API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## GraphQL\n\nUse the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n| x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n| Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Pagination\n\nAll API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\nTo fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\nIn the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n### Query Parameters\n\n| Name   | Type   | Required | Description                                                                                                        |\n| ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n| cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |\n| limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n### Response Body\n\n| Name                  | Type   | Description                                                        |\n| --------------------- | ------ | ------------------------------------------------------------------ |\n| meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n| meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n| meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n| meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n| links.previous        | String | Link to navigate to the previous page of results through the API   |\n| links.current         | String | Link to navigate to the current page of results through the API    |\n| links.next            | String | Link to navigate to the next page of results through the API       |\n\n⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n## SDKs and API Clients\n\nUpcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n## Debugging\n\nBecause of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n## Errors\n\nThe API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n| Code | Title                | Description                                                                                                                                                                                              |\n| ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n| 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n| 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n| 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n| 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n| 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n| 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n| 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n| 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n| 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n| 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n| 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n### Handling errors\n\nThe Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n### Error Types\n\n#### RequestValidationError\n\nRequest is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n#### UnsupportedFiltersError\n\nFilters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n#### UnsupportedSortFieldError\n\nSort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n#### InvalidCursorError\n\nPagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n#### ConnectorExecutionError\n\nA Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n#### UnauthorizedError\n\nWe were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n#### ConnectorCredentialsError\n\nA request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n#### ConnectorDisabledError\n\nA request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n#### ConnectorRateLimitError\n\nYou sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n#### RequestLimitError\n\nYou have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n#### EntityNotFoundError\n\nYou've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n#### OAuthCredentialsNotFoundError\n\nWhen adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n#### IntegrationNotFoundError\n\nThe requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n#### ConnectionNotFoundError\n\nA valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n#### ConnectionSettingsError\n\nThe connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n#### ConnectorNotFoundError\n\nA request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n#### OAuthRedirectUriError\n\nA request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n#### OAuthInvalidStateError\n\nThe state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n#### OAuthCodeExchangeError\n\nWhen attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n#### OAuthConnectorError\n\nIt seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### MappingError\n\nThere was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n#### ConnectorMappingNotFoundError\n\nIt seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorResponseMappingNotFoundError\n\nWe were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationMappingNotFoundError\n\nConnector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorWorkflowMappingError\n\nThe composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationUnsupportedError\n\nYou're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n#### PaginationNotSupportedError\n\nPagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n## API Design\n\n### API Styles and data formats\n\n#### REST API\n\nThe API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n##### Available HTTP methods\n\nThe Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n```\nPOST /messages\nGET /messages\nGET /messages/{messageId}\nPATCH /messages/{messageId}\nDELETE /messages/{messageId}\n```\n\nResponse bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n### Schema\n\nAll API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n### Meta\n\nMeta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n### Idempotence (upcoming)\n\nTo prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\nUniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n### Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n### Fixed field types\n\n#### Dates\n\nThe dates returned by the API are all represented in UTC (ISO8601 format).\n\nThis example\_`2019-11-14T00:55:31.820Z`\_is defined by the\_ISO 8601\_standard. The\_T\_in the middle separates the year-month-day portion from the hour-minute-second portion. The\_Z\_on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The\_Z\_is pronounced \"Zulu\" per military/aviation tradition.\n\nThe ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n#### Prices and Currencies\n\nAll prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\nFor zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\nAll currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n## Support\n\nIf you have problems or need help with your case, you can always reach out to our Support.\n\n"
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  title: POS API
  version: 8.32.3
  x-apideck-api: pos
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/pos.yml
      version: '3.0'
  x-providerName: apideck.com
  x-serviceName: pos
  x-tags:
    - partner
paths:
  /pos/items:
    get:
      description: List Items
      operationId: itemsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Items
          schema:
            $ref: '#/definitions/GetItemsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Items
      tags:
        - Items
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.itemsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: items
    post:
      consumes:
        - application/json
      description: Create Item
      operationId: itemsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Item'
      produces:
        - application/json
      responses:
        '201':
          description: Items
          schema:
            $ref: '#/definitions/CreateItemResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Item
      tags:
        - Items
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              item: {
                id: '#cocoa',
                idempotency_key: 'random_string',
                name: 'Cocoa',
                description: 'Hot Chocolate',
                abbreviation: 'Ch',
                product_type: 'regular',
                price_amount: 10,
                pricing_type: 'fixed',
                price_currency: 'USD',
                cost: 2,
                tax_ids: ['12345', '67890'],
                absent_at_location_ids: ['12345', '67890'],
                present_at_all_locations: false,
                sku: '11910345',
                code: '11910345',
                categories: [
                  {
                    id: '12345',
                    name: 'Food',
                    image_ids: ['12345', '67890']
                  }
                ],
                options: [
                  {
                    id: '12345',
                    name: 'Option 1',
                    attribute_id: '12345'
                  }
                ],
                variations: [
                  {
                    id: '12345',
                    name: 'Food',
                    sku: '11910345',
                    item_id: '12345',
                    sequence: 0,
                    pricing_type: 'fixed',
                    price_amount: 10,
                    price_currency: 'USD',
                    image_ids: ['12345', '67890']
                  }
                ],
                available: true,
                hidden: true,
                deleted: true
              }
            }

            try {
              const { data } = await apideck.pos.itemsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/items/{id}':
    delete:
      description: Delete Item
      operationId: itemsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Items
          schema:
            $ref: '#/definitions/DeleteItemResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Item
      tags:
        - Items
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.itemsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Item
      operationId: itemsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Items
          schema:
            $ref: '#/definitions/GetItemResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Item
      tags:
        - Items
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.itemsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Item
      operationId: itemsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Item'
      produces:
        - application/json
      responses:
        '200':
          description: Items
          schema:
            $ref: '#/definitions/UpdateItemResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Item
      tags:
        - Items
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              item: {
                id: '#cocoa',
                idempotency_key: 'random_string',
                name: 'Cocoa',
                description: 'Hot Chocolate',
                abbreviation: 'Ch',
                product_type: 'regular',
                price_amount: 10,
                pricing_type: 'fixed',
                price_currency: 'USD',
                cost: 2,
                tax_ids: ['12345', '67890'],
                absent_at_location_ids: ['12345', '67890'],
                present_at_all_locations: false,
                sku: '11910345',
                code: '11910345',
                categories: [
                  {
                    id: '12345',
                    name: 'Food',
                    image_ids: ['12345', '67890']
                  }
                ],
                options: [
                  {
                    id: '12345',
                    name: 'Option 1',
                    attribute_id: '12345'
                  }
                ],
                variations: [
                  {
                    id: '12345',
                    name: 'Food',
                    sku: '11910345',
                    item_id: '12345',
                    sequence: 0,
                    pricing_type: 'fixed',
                    price_amount: 10,
                    price_currency: 'USD',
                    image_ids: ['12345', '67890']
                  }
                ],
                available: true,
                hidden: true,
                deleted: true
              }
            }

            try {
              const { data } = await apideck.pos.itemsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/locations:
    get:
      description: List Locations
      operationId: locationsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Locations
          schema:
            $ref: '#/definitions/GetLocationsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Locations
      tags:
        - Locations
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.locationsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: locations
    post:
      consumes:
        - application/json
      description: Create Location
      operationId: locationsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Location'
      produces:
        - application/json
      responses:
        '201':
          description: Locations
          schema:
            $ref: '#/definitions/CreateLocationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Location
      tags:
        - Locations
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              location: {
                name: 'Dunkin Donuts',
                business_name: 'Dunkin Donuts LLC',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                status: 'active',
                merchant_id: '12345',
                currency: 'USD'
              }
            }

            try {
              const { data } = await apideck.pos.locationsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/locations/{id}':
    delete:
      description: Delete Location
      operationId: locationsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Locations
          schema:
            $ref: '#/definitions/DeleteLocationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Location
      tags:
        - Locations
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.locationsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Location
      operationId: locationsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Locations
          schema:
            $ref: '#/definitions/GetLocationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Location
      tags:
        - Locations
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.locationsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Location
      operationId: locationsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Location'
      produces:
        - application/json
      responses:
        '200':
          description: Locations
          schema:
            $ref: '#/definitions/UpdateLocationResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Location
      tags:
        - Locations
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              location: {
                name: 'Dunkin Donuts',
                business_name: 'Dunkin Donuts LLC',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                status: 'active',
                merchant_id: '12345',
                currency: 'USD'
              }
            }

            try {
              const { data } = await apideck.pos.locationsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/merchants:
    get:
      description: List Merchants
      operationId: merchantsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Merchants
          schema:
            $ref: '#/definitions/GetMerchantsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Merchants
      tags:
        - Merchants
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.merchantsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: merchants
    post:
      consumes:
        - application/json
      description: Create Merchant
      operationId: merchantsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Merchant'
      produces:
        - application/json
      responses:
        '201':
          description: Merchants
          schema:
            $ref: '#/definitions/CreateMerchantResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Merchant
      tags:
        - Merchants
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              merchant: {
                name: 'Dunkin Donuts',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                owner_id: '12345',
                main_location_id: '12345',
                status: 'active',
                language: 'EN',
                currency: 'USD'
              }
            }

            try {
              const { data } = await apideck.pos.merchantsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/merchants/{id}':
    delete:
      description: Delete Merchant
      operationId: merchantsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Merchants
          schema:
            $ref: '#/definitions/DeleteMerchantResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Merchant
      tags:
        - Merchants
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.merchantsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Merchant
      operationId: merchantsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Merchants
          schema:
            $ref: '#/definitions/GetMerchantResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Merchant
      tags:
        - Merchants
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.merchantsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Merchant
      operationId: merchantsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Merchant'
      produces:
        - application/json
      responses:
        '200':
          description: Merchants
          schema:
            $ref: '#/definitions/UpdateMerchantResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Merchant
      tags:
        - Merchants
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              merchant: {
                name: 'Dunkin Donuts',
                address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                owner_id: '12345',
                main_location_id: '12345',
                status: 'active',
                language: 'EN',
                currency: 'USD'
              }
            }

            try {
              const { data } = await apideck.pos.merchantsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/modifier-groups:
    get:
      description: List Modifier Groups
      operationId: modifierGroupsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: ModifierGroups
          schema:
            $ref: '#/definitions/GetModifierGroupsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Modifier Groups
      tags:
        - Modifier Groups
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.modifierGroupsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: modifierGroups
    post:
      consumes:
        - application/json
      description: Create Modifier Group
      operationId: modifierGroupsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ModifierGroup'
      produces:
        - application/json
      responses:
        '201':
          description: ModifierGroups
          schema:
            $ref: '#/definitions/CreateModifierGroupResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Modifier Group
      tags:
        - Modifier Groups
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              modifierGroup: {
                name: 'Modifier',
                alternate_name: 'Modifier New',
                minimum_required: 1,
                maximum_allowed: 5,
                selection_type: 'single',
                present_at_all_locations: false,
                modifiers: [
                  {
                    id: '12345',
                    name: 'Modifier',
                    alternate_name: 'Modifier New',
                    price_amount: 10,
                    currency: 'USD',
                    available: true
                  }
                ],
                deleted: true,
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.pos.modifierGroupsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/modifier-groups/{id}':
    delete:
      description: Delete Modifier Group
      operationId: modifierGroupsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: ModifierGroups
          schema:
            $ref: '#/definitions/DeleteModifierGroupResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Modifier Group
      tags:
        - Modifier Groups
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.modifierGroupsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Modifier Group
      operationId: modifierGroupsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: ModifierGroups
          schema:
            $ref: '#/definitions/GetModifierGroupResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Modifier Group
      tags:
        - Modifier Groups
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.modifierGroupsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Modifier Group
      operationId: modifierGroupsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ModifierGroup'
      produces:
        - application/json
      responses:
        '200':
          description: ModifierGroups
          schema:
            $ref: '#/definitions/UpdateModifierGroupResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Modifier Group
      tags:
        - Modifier Groups
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              modifierGroup: {
                name: 'Modifier',
                alternate_name: 'Modifier New',
                minimum_required: 1,
                maximum_allowed: 5,
                selection_type: 'single',
                present_at_all_locations: false,
                modifiers: [
                  {
                    id: '12345',
                    name: 'Modifier',
                    alternate_name: 'Modifier New',
                    price_amount: 10,
                    currency: 'USD',
                    available: true
                  }
                ],
                deleted: true,
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.pos.modifierGroupsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/modifiers:
    get:
      description: List Modifiers
      operationId: modifiersAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Modifiers
          schema:
            $ref: '#/definitions/GetModifiersResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Modifiers
      tags:
        - Modifiers
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.modifiersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: modifiers
    post:
      consumes:
        - application/json
      description: Create Modifier
      operationId: modifiersAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Modifier'
      produces:
        - application/json
      responses:
        '201':
          description: Modifiers
          schema:
            $ref: '#/definitions/CreateModifierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Modifier
      tags:
        - Modifiers
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              modifier: {
                name: 'Modifier',
                alternate_name: 'Modifier New',
                price_amount: 10,
                currency: 'USD',
                modifier_group_id: ['123'],
                available: true
              }
            }

            try {
              const { data } = await apideck.pos.modifiersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/modifiers/{id}':
    delete:
      description: Delete Modifier
      operationId: modifiersDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: ModifierGroupFilter
      produces:
        - application/json
      responses:
        '200':
          description: Modifiers
          schema:
            $ref: '#/definitions/DeleteModifierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Modifier
      tags:
        - Modifiers
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.modifiersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Modifier
      operationId: modifiersOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: ModifierGroupFilter
      produces:
        - application/json
      responses:
        '200':
          description: Modifiers
          schema:
            $ref: '#/definitions/GetModifierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Modifier
      tags:
        - Modifiers
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.modifiersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Modifier
      operationId: modifiersUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Modifier'
      produces:
        - application/json
      responses:
        '200':
          description: Modifiers
          schema:
            $ref: '#/definitions/UpdateModifierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Modifier
      tags:
        - Modifiers
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              modifier: {
                name: 'Modifier',
                alternate_name: 'Modifier New',
                price_amount: 10,
                currency: 'USD',
                modifier_group_id: ['123'],
                available: true
              }
            }

            try {
              const { data } = await apideck.pos.modifiersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/order-types:
    get:
      description: List Order Types
      operationId: orderTypesAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OrderTypes
          schema:
            $ref: '#/definitions/GetOrderTypesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Order Types
      tags:
        - Order Types
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.orderTypesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: orderTypes
    post:
      consumes:
        - application/json
      description: Create Order Type
      operationId: orderTypesAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderType'
      produces:
        - application/json
      responses:
        '201':
          description: OrderTypes
          schema:
            $ref: '#/definitions/CreateOrderTypeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Order Type
      tags:
        - Order Types
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              orderType: {
                name: 'Default order type',
                default: true
              }
            }

            try {
              const { data } = await apideck.pos.orderTypesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/order-types/{id}':
    delete:
      description: Delete Order Type
      operationId: orderTypesDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OrderTypes
          schema:
            $ref: '#/definitions/DeleteOrderTypeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Order Type
      tags:
        - Order Types
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.orderTypesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Order Type
      operationId: orderTypesOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OrderTypes
          schema:
            $ref: '#/definitions/GetOrderTypeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Order Type
      tags:
        - Order Types
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.orderTypesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Order Type
      operationId: orderTypesUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OrderType'
      produces:
        - application/json
      responses:
        '200':
          description: OrderTypes
          schema:
            $ref: '#/definitions/UpdateOrderTypeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Order Type
      tags:
        - Order Types
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              orderType: {
                name: 'Default order type',
                default: true
              }
            }

            try {
              const { data } = await apideck.pos.orderTypesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/orders:
    get:
      description: List Orders
      operationId: ordersAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
        - description: ID of the location.
          in: query
          name: location_id
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Orders
          schema:
            $ref: '#/definitions/GetOrdersResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Orders
      tags:
        - Orders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.ordersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: orders
    post:
      consumes:
        - application/json
      description: Create Order
      operationId: ordersAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Order'
      produces:
        - application/json
      responses:
        '201':
          description: Orders
          schema:
            $ref: '#/definitions/CreateOrderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Order
      tags:
        - Orders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              order: {
                order_number: '1F',
                order_date: '2022-08-12',
                closed_date: '2022-08-13',
                reference_id: 'my-order-001',
                status: 'open',
                state: 'open',
                payment_status: 'open',
                currency: 'USD',
                title: 'string',
                note: 'string',
                merchant_id: '12345',
                customer_id: '12345',
                employee_id: '12345',
                location_id: '12345',
                order_type_id: '12345',
                table: '1F',
                seat: '23F',
                total_amount: 27.5,
                total_tip: 7,
                total_tax: 2.75,
                total_discount: 3,
                total_refund: 0,
                total_service_charge: 0,
                refunded: false,
                customers: [
                  {
                    first_name: 'Elon',
                    middle_name: 'D.',
                    last_name: 'Musk',
                    phone_numbers: [
                      {
                        id: '12345',
                        country_code: '1',
                        area_code: '323',
                        number: '111-111-1111',
                        extension: '105',
                        type: 'primary'
                      }
                    ],
                    emails: [
                      {
                        id: '123',
                        email: 'elon@musk.com',
                        type: 'primary'
                      }
                    ]
                  }
                ],
                fulfillments: [
                  {
                    id: '12345',
                    status: 'proposed',
                    type: 'shipment',
                    pickup_details: {
                      auto_complete_duration: 'P1W3D',
                      cancel_reason: 'Not hungry',
                      expires_at: '2016-09-04T23:59:33.123Z',
                      schedule_type: 'scheduled',
                      pickup_at: '2016-09-04T23:59:33.123Z',
                      pickup_window_duration: 'P1W3D',
                      prep_time_duration: 'P1W3D',
                      note: 'Pickup in the back.',
                      placed_at: '2016-09-04T23:59:33.123Z',
                      rejected_at: '2016-09-04T23:59:33.123Z',
                      ready_at: '2016-09-04T23:59:33.123Z',
                      expired_at: '2016-09-04T23:59:33.123Z',
                      picked_up_at: '2016-09-04T23:59:33.123Z',
                      canceled_at: '2016-09-04T23:59:33.123Z',
                      is_curbside_pickup: true,
                      curbside_pickup_details: {
                        curbside_details: 'string',
                        buyer_arrived_at: '2016-09-04T23:59:33.123Z'
                      },
                      recipient: {
                        customer_id: '12345',
                        address: [Object],
                        phone_number: [Object],
                        email: [Object]
                      }
                    },
                    shipment_details: {}
                  }
                ],
                line_items: [
                  {
                    name: 'New York Strip Steak',
                    item: {},
                    total_tax: 2000,
                    total_discount: 3000,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    applied_taxes: [
                      {
                        tax_id: 'sales-tax',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ],
                    applied_discounts: [
                      {
                        discount_id: '12345',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ],
                    modifiers: [
                      {
                        name: 'New York Strip Steak - no cheese',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ]
                  }
                ],
                payments: [
                  {
                    amount: 27500,
                    currency: 'USD'
                  }
                ],
                service_charges: [
                  {
                    name: 'Charge for delivery',
                    amount: 27500,
                    percentage: 12.5,
                    currency: 'USD',
                    type: 'auto_gratuity'
                  }
                ],
                refunds: [
                  {
                    amount: 27500,
                    currency: 'USD',
                    reason: 'The reason for the refund being issued.',
                    status: 'pending'
                  }
                ],
                taxes: [
                  {
                    id: 'state-sales-tax',
                    name: 'State Sales Tax',
                    amount: 27500,
                    currency: 'USD',
                    percentage: 15,
                    scope: 'order',
                    type: 'unknown',
                    auto_applied: true
                  }
                ],
                discounts: [
                  {
                    name: '10% off',
                    type: 'fixed_percentage',
                    amount: 27500,
                    currency: 'USD',
                    scope: 'order'
                  }
                ],
                tenders: [
                  {
                    name: '10% off',
                    type: 'cash',
                    note: 'An optional note associated with the tender at the time of payment.',
                    amount: 27500,
                    currency: 'USD',
                    total_amount: 27.5,
                    total_tip: 7,
                    total_processing_fee: 0,
                    total_tax: 2.75,
                    total_discount: 3,
                    total_refund: 0,
                    total_service_charge: 0,
                    buyer_tendered_cash_amount: 27500,
                    change_back_cash_amount: 27500,
                    card: {
                      bin: '41111',
                      card_brand: 'visa',
                      card_type: 'credit',
                      prepaid_type: 'prepaid',
                      cardholder_name: 'John Doe',
                      customer_id: '12345',
                      merchant_id: '12345',
                      exp_month: 1,
                      exp_year: 2022,
                      fingerprint:
                        ' Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.',
                      last_4: 'The last 4 digits of the card number.',
                      enabled: true,
                      billing_address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        row_version: '1-12345'
                      },
                      reference_id: 'card-001',
                      version: '230320320320'
                    },
                    card_status: 'authorized',
                    card_entry_method: 'swiped'
                  }
                ],
                voided: false,
                version: '230320320320'
              }
            }

            try {
              const { data } = await apideck.pos.ordersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/orders/{id}':
    delete:
      description: Delete Order
      operationId: ordersDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Orders
          schema:
            $ref: '#/definitions/DeleteOrderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Order
      tags:
        - Orders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.ordersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Order
      operationId: ordersOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Orders
          schema:
            $ref: '#/definitions/GetOrderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Order
      tags:
        - Orders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.ordersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Order
      operationId: ordersUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Order'
      produces:
        - application/json
      responses:
        '200':
          description: Orders
          schema:
            $ref: '#/definitions/UpdateOrderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Order
      tags:
        - Orders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              order: {
                order_number: '1F',
                order_date: '2022-08-12',
                closed_date: '2022-08-13',
                reference_id: 'my-order-001',
                status: 'open',
                state: 'open',
                payment_status: 'open',
                currency: 'USD',
                title: 'string',
                note: 'string',
                merchant_id: '12345',
                customer_id: '12345',
                employee_id: '12345',
                location_id: '12345',
                order_type_id: '12345',
                table: '1F',
                seat: '23F',
                total_amount: 27.5,
                total_tip: 7,
                total_tax: 2.75,
                total_discount: 3,
                total_refund: 0,
                total_service_charge: 0,
                refunded: false,
                customers: [
                  {
                    first_name: 'Elon',
                    middle_name: 'D.',
                    last_name: 'Musk',
                    phone_numbers: [
                      {
                        id: '12345',
                        country_code: '1',
                        area_code: '323',
                        number: '111-111-1111',
                        extension: '105',
                        type: 'primary'
                      }
                    ],
                    emails: [
                      {
                        id: '123',
                        email: 'elon@musk.com',
                        type: 'primary'
                      }
                    ]
                  }
                ],
                fulfillments: [
                  {
                    id: '12345',
                    status: 'proposed',
                    type: 'shipment',
                    pickup_details: {
                      auto_complete_duration: 'P1W3D',
                      cancel_reason: 'Not hungry',
                      expires_at: '2016-09-04T23:59:33.123Z',
                      schedule_type: 'scheduled',
                      pickup_at: '2016-09-04T23:59:33.123Z',
                      pickup_window_duration: 'P1W3D',
                      prep_time_duration: 'P1W3D',
                      note: 'Pickup in the back.',
                      placed_at: '2016-09-04T23:59:33.123Z',
                      rejected_at: '2016-09-04T23:59:33.123Z',
                      ready_at: '2016-09-04T23:59:33.123Z',
                      expired_at: '2016-09-04T23:59:33.123Z',
                      picked_up_at: '2016-09-04T23:59:33.123Z',
                      canceled_at: '2016-09-04T23:59:33.123Z',
                      is_curbside_pickup: true,
                      curbside_pickup_details: {
                        curbside_details: 'string',
                        buyer_arrived_at: '2016-09-04T23:59:33.123Z'
                      },
                      recipient: {
                        customer_id: '12345',
                        address: [Object],
                        phone_number: [Object],
                        email: [Object]
                      }
                    },
                    shipment_details: {}
                  }
                ],
                line_items: [
                  {
                    name: 'New York Strip Steak',
                    item: {},
                    total_tax: 2000,
                    total_discount: 3000,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    applied_taxes: [
                      {
                        tax_id: 'sales-tax',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ],
                    applied_discounts: [
                      {
                        discount_id: '12345',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ],
                    modifiers: [
                      {
                        name: 'New York Strip Steak - no cheese',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ]
                  }
                ],
                payments: [
                  {
                    amount: 27500,
                    currency: 'USD'
                  }
                ],
                service_charges: [
                  {
                    name: 'Charge for delivery',
                    amount: 27500,
                    percentage: 12.5,
                    currency: 'USD',
                    type: 'auto_gratuity'
                  }
                ],
                refunds: [
                  {
                    amount: 27500,
                    currency: 'USD',
                    reason: 'The reason for the refund being issued.',
                    status: 'pending'
                  }
                ],
                taxes: [
                  {
                    id: 'state-sales-tax',
                    name: 'State Sales Tax',
                    amount: 27500,
                    currency: 'USD',
                    percentage: 15,
                    scope: 'order',
                    type: 'unknown',
                    auto_applied: true
                  }
                ],
                discounts: [
                  {
                    name: '10% off',
                    type: 'fixed_percentage',
                    amount: 27500,
                    currency: 'USD',
                    scope: 'order'
                  }
                ],
                tenders: [
                  {
                    name: '10% off',
                    type: 'cash',
                    note: 'An optional note associated with the tender at the time of payment.',
                    amount: 27500,
                    currency: 'USD',
                    total_amount: 27.5,
                    total_tip: 7,
                    total_processing_fee: 0,
                    total_tax: 2.75,
                    total_discount: 3,
                    total_refund: 0,
                    total_service_charge: 0,
                    buyer_tendered_cash_amount: 27500,
                    change_back_cash_amount: 27500,
                    card: {
                      bin: '41111',
                      card_brand: 'visa',
                      card_type: 'credit',
                      prepaid_type: 'prepaid',
                      cardholder_name: 'John Doe',
                      customer_id: '12345',
                      merchant_id: '12345',
                      exp_month: 1,
                      exp_year: 2022,
                      fingerprint:
                        ' Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.',
                      last_4: 'The last 4 digits of the card number.',
                      enabled: true,
                      billing_address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        row_version: '1-12345'
                      },
                      reference_id: 'card-001',
                      version: '230320320320'
                    },
                    card_status: 'authorized',
                    card_entry_method: 'swiped'
                  }
                ],
                voided: false,
                version: '230320320320'
              }
            }

            try {
              const { data } = await apideck.pos.ordersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/orders/{id}/pay':
    post:
      consumes:
        - application/json
      description: Pay Order
      operationId: ordersPay
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Order'
      produces:
        - application/json
      responses:
        '201':
          description: Orders
          schema:
            $ref: '#/definitions/CreateOrderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Pay Order
      tags:
        - Orders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              order: {
                order_number: '1F',
                order_date: '2022-08-12',
                closed_date: '2022-08-13',
                reference_id: 'my-order-001',
                status: 'open',
                state: 'open',
                payment_status: 'open',
                currency: 'USD',
                title: 'string',
                note: 'string',
                merchant_id: '12345',
                customer_id: '12345',
                employee_id: '12345',
                location_id: '12345',
                order_type_id: '12345',
                table: '1F',
                seat: '23F',
                total_amount: 27.5,
                total_tip: 7,
                total_tax: 2.75,
                total_discount: 3,
                total_refund: 0,
                total_service_charge: 0,
                refunded: false,
                customers: [
                  {
                    first_name: 'Elon',
                    middle_name: 'D.',
                    last_name: 'Musk',
                    phone_numbers: [
                      {
                        id: '12345',
                        country_code: '1',
                        area_code: '323',
                        number: '111-111-1111',
                        extension: '105',
                        type: 'primary'
                      }
                    ],
                    emails: [
                      {
                        id: '123',
                        email: 'elon@musk.com',
                        type: 'primary'
                      }
                    ]
                  }
                ],
                fulfillments: [
                  {
                    id: '12345',
                    status: 'proposed',
                    type: 'shipment',
                    pickup_details: {
                      auto_complete_duration: 'P1W3D',
                      cancel_reason: 'Not hungry',
                      expires_at: '2016-09-04T23:59:33.123Z',
                      schedule_type: 'scheduled',
                      pickup_at: '2016-09-04T23:59:33.123Z',
                      pickup_window_duration: 'P1W3D',
                      prep_time_duration: 'P1W3D',
                      note: 'Pickup in the back.',
                      placed_at: '2016-09-04T23:59:33.123Z',
                      rejected_at: '2016-09-04T23:59:33.123Z',
                      ready_at: '2016-09-04T23:59:33.123Z',
                      expired_at: '2016-09-04T23:59:33.123Z',
                      picked_up_at: '2016-09-04T23:59:33.123Z',
                      canceled_at: '2016-09-04T23:59:33.123Z',
                      is_curbside_pickup: true,
                      curbside_pickup_details: {
                        curbside_details: 'string',
                        buyer_arrived_at: '2016-09-04T23:59:33.123Z'
                      },
                      recipient: {
                        customer_id: '12345',
                        address: [Object],
                        phone_number: [Object],
                        email: [Object]
                      }
                    },
                    shipment_details: {}
                  }
                ],
                line_items: [
                  {
                    name: 'New York Strip Steak',
                    item: {},
                    total_tax: 2000,
                    total_discount: 3000,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    applied_taxes: [
                      {
                        tax_id: 'sales-tax',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ],
                    applied_discounts: [
                      {
                        discount_id: '12345',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ],
                    modifiers: [
                      {
                        name: 'New York Strip Steak - no cheese',
                        amount: 27500,
                        currency: 'USD'
                      }
                    ]
                  }
                ],
                payments: [
                  {
                    amount: 27500,
                    currency: 'USD'
                  }
                ],
                service_charges: [
                  {
                    name: 'Charge for delivery',
                    amount: 27500,
                    percentage: 12.5,
                    currency: 'USD',
                    type: 'auto_gratuity'
                  }
                ],
                refunds: [
                  {
                    amount: 27500,
                    currency: 'USD',
                    reason: 'The reason for the refund being issued.',
                    status: 'pending'
                  }
                ],
                taxes: [
                  {
                    id: 'state-sales-tax',
                    name: 'State Sales Tax',
                    amount: 27500,
                    currency: 'USD',
                    percentage: 15,
                    scope: 'order',
                    type: 'unknown',
                    auto_applied: true
                  }
                ],
                discounts: [
                  {
                    name: '10% off',
                    type: 'fixed_percentage',
                    amount: 27500,
                    currency: 'USD',
                    scope: 'order'
                  }
                ],
                tenders: [
                  {
                    name: '10% off',
                    type: 'cash',
                    note: 'An optional note associated with the tender at the time of payment.',
                    amount: 27500,
                    currency: 'USD',
                    total_amount: 27.5,
                    total_tip: 7,
                    total_processing_fee: 0,
                    total_tax: 2.75,
                    total_discount: 3,
                    total_refund: 0,
                    total_service_charge: 0,
                    buyer_tendered_cash_amount: 27500,
                    change_back_cash_amount: 27500,
                    card: {
                      bin: '41111',
                      card_brand: 'visa',
                      card_type: 'credit',
                      prepaid_type: 'prepaid',
                      cardholder_name: 'John Doe',
                      customer_id: '12345',
                      merchant_id: '12345',
                      exp_month: 1,
                      exp_year: 2022,
                      fingerprint:
                        ' Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.',
                      last_4: 'The last 4 digits of the card number.',
                      enabled: true,
                      billing_address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        row_version: '1-12345'
                      },
                      reference_id: 'card-001',
                      version: '230320320320'
                    },
                    card_status: 'authorized',
                    card_entry_method: 'swiped'
                  }
                ],
                voided: false,
                version: '230320320320'
              }
            }

            try {
              const { data } = await apideck.pos.ordersPay(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /pos/payments:
    get:
      description: List Payments
      operationId: paymentsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: PosPayments
          schema:
            $ref: '#/definitions/GetPosPaymentsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Payments
      tags:
        - Payments
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.paymentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
      x-graphql-field-name: payments
    post:
      consumes:
        - application/json
      description: Create Payment
      operationId: paymentsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PosPayment'
      produces:
        - application/json
      responses:
        '201':
          description: PosPayments
          schema:
            $ref: '#/definitions/CreatePosPaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: CreateP ayment
      tags:
        - Payments
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              payment: {
                source_id: '12345',
                order_id: '12345',
                merchant_id: '12345',
                customer_id: '12345',
                employee_id: '12345',
                location_id: '12345',
                device_id: '12345',
                tender_id: '12345',
                external_payment_id: '12345',
                idempotency_key: 'random_string',
                amount: 27.5,
                currency: 'USD',
                tip: 7,
                tax: 20,
                total: 37.5,
                app_fee: 3,
                change_back_cash_amount: 20,
                approved: 37.5,
                refunded: 37.5,
                processing_fees: [
                  {
                    amount: 1.05,
                    effective_at: '2020-09-30T07:43:32.000Z',
                    processing_type: 'initial'
                  }
                ],
                source: 'external',
                status: 'approved',
                cash: {
                  amount: null,
                  charge_back_amount: null
                },
                card_details: {
                  card: {
                    bin: '41111',
                    card_brand: 'visa',
                    card_type: 'credit',
                    prepaid_type: 'prepaid',
                    cardholder_name: 'John Doe',
                    customer_id: '12345',
                    merchant_id: '12345',
                    exp_month: 1,
                    exp_year: 2022,
                    fingerprint:
                      ' Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.',
                    last_4: 'The last 4 digits of the card number.',
                    enabled: true,
                    billing_address: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      row_version: '1-12345'
                    },
                    reference_id: 'card-001',
                    version: '230320320320'
                  }
                },
                bank_account: {
                  bank_name: 'string',
                  transfer_type: 'string',
                  account_ownership_type: 'string',
                  fingerprint: 'string',
                  country: 'US',
                  statement_description: 'string',
                  ach_details: {
                    routing_number: 'string',
                    account_number_suffix: 'stri',
                    account_type: 'string'
                  }
                },
                wallet: {
                  status: 'authorized'
                },
                external_details: {
                  type: 'check',
                  source: 'string',
                  source_id: 'string',
                  source_fee_amount: 2.5
                },
                service_charges: [
                  {
                    name: 'Charge for delivery',
                    amount: 27500,
                    percentage: 12.5,
                    currency: 'USD',
                    type: 'auto_gratuity'
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.pos.paymentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
  '/pos/payments/{id}':
    delete:
      description: Delete Payment
      operationId: paymentsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: PosPayments
          schema:
            $ref: '#/definitions/DeletePosPaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Payment
      tags:
        - Payments
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.paymentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
    get:
      description: Get Payment
      operationId: paymentsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: PosPayments
          schema:
            $ref: '#/definitions/GetPosPaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Payment
      tags:
        - Payments
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.paymentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
    patch:
      consumes:
        - application/json
      description: Update Payment
      operationId: paymentsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PosPayment'
      produces:
        - application/json
      responses:
        '200':
          description: PosPayments
          schema:
            $ref: '#/definitions/UpdatePosPaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Payment
      tags:
        - Payments
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              payment: {
                source_id: '12345',
                order_id: '12345',
                merchant_id: '12345',
                customer_id: '12345',
                employee_id: '12345',
                location_id: '12345',
                device_id: '12345',
                tender_id: '12345',
                external_payment_id: '12345',
                idempotency_key: 'random_string',
                amount: 27.5,
                currency: 'USD',
                tip: 7,
                tax: 20,
                total: 37.5,
                app_fee: 3,
                change_back_cash_amount: 20,
                approved: 37.5,
                refunded: 37.5,
                processing_fees: [
                  {
                    amount: 1.05,
                    effective_at: '2020-09-30T07:43:32.000Z',
                    processing_type: 'initial'
                  }
                ],
                source: 'external',
                status: 'approved',
                cash: {
                  amount: null,
                  charge_back_amount: null
                },
                card_details: {
                  card: {
                    bin: '41111',
                    card_brand: 'visa',
                    card_type: 'credit',
                    prepaid_type: 'prepaid',
                    cardholder_name: 'John Doe',
                    customer_id: '12345',
                    merchant_id: '12345',
                    exp_month: 1,
                    exp_year: 2022,
                    fingerprint:
                      ' Intended as a POS-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.',
                    last_4: 'The last 4 digits of the card number.',
                    enabled: true,
                    billing_address: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      row_version: '1-12345'
                    },
                    reference_id: 'card-001',
                    version: '230320320320'
                  }
                },
                bank_account: {
                  bank_name: 'string',
                  transfer_type: 'string',
                  account_ownership_type: 'string',
                  fingerprint: 'string',
                  country: 'US',
                  statement_description: 'string',
                  ach_details: {
                    routing_number: 'string',
                    account_number_suffix: 'stri',
                    account_type: 'string'
                  }
                },
                wallet: {
                  status: 'authorized'
                },
                external_details: {
                  type: 'check',
                  source: 'string',
                  source_id: 'string',
                  source_fee_amount: 2.5
                },
                service_charges: [
                  {
                    name: 'Charge for delivery',
                    amount: 27500,
                    percentage: 12.5,
                    currency: 'USD',
                    type: 'auto_gratuity'
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.pos.paymentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
  /pos/tenders:
    get:
      description: List Tenders
      operationId: tendersAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Tenders
          schema:
            $ref: '#/definitions/GetTendersResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Tenders
      tags:
        - Tenders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.tendersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: tenders
    post:
      consumes:
        - application/json
      description: Create Tender
      operationId: tendersAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Tender'
      produces:
        - application/json
      responses:
        '201':
          description: Tenders
          schema:
            $ref: '#/definitions/CreateTenderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Tender
      tags:
        - Tenders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              tender: {
                key: 'com.clover.tender.cash',
                label: 'Cash',
                active: true,
                hidden: true,
                editable: true,
                opens_cash_drawer: true,
                allows_tipping: true
              }
            }

            try {
              const { data } = await apideck.pos.tendersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/pos/tenders/{id}':
    delete:
      description: Delete Tender
      operationId: tendersDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Tenders
          schema:
            $ref: '#/definitions/DeleteTenderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Tender
      tags:
        - Tenders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.tendersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Tender
      operationId: tendersOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Tenders
          schema:
            $ref: '#/definitions/GetTenderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Tender
      tags:
        - Tenders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.pos.tendersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Tender
      operationId: tendersUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Tender'
      produces:
        - application/json
      responses:
        '200':
          description: Tenders
          schema:
            $ref: '#/definitions/UpdateTenderResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Tender
      tags:
        - Tenders
      x-apideck-api: pos
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              tender: {
                key: 'com.clover.tender.cash',
                label: 'Cash',
                active: true,
                hidden: true,
                editable: true,
                opens_cash_drawer: true,
                allows_tipping: true
              }
            }

            try {
              const { data } = await apideck.pos.tendersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
schemes:
  - https
security:
  - apiKey: []
securityDefinitions:
  apiKey:
    description: >
      To use API you have to sign up and get your own API key. Unify API
      accounts have sandbox mode and live mode API keys. 

      To change modes just use the appropriate key to get a live or test object.
      You can find your API keys on the unify settings of your Apideck app.

      Your Apideck application_id can also be found on the same page.


      Authenticate your API requests by including your test or live secret API
      key in the request header. 


      - Bearer authorization header: `Authorization: Bearer
      <your-apideck-api-key>`

      - Application id header: `x-apideck-app-id: <your-apideck-app-id>`


      You should use the public keys on the SDKs and the secret keys to
      authenticate API requests.


      **Do not share or include your secret API keys on client side code.** Your
      API keys carry significant privileges. Please ensure to keep them 100%
      secure and be sure to not share your secret API keys in areas that are
      publicly accessible like GitHub.


      Learn how to set the Authorization header inside Postman
      https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key


      Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: ''
    name: Orders
    x-apideck-model:
      $ref: '#/definitions/Order'
  - description: ''
    name: Payments
    x-apideck-model:
      $ref: '#/definitions/PosPayment'
  - description: ''
    name: Merchants
    x-apideck-model:
      $ref: '#/definitions/Merchant'
  - description: ''
    name: Locations
    x-apideck-model:
      $ref: '#/definitions/Location'
  - description: ''
    name: Items
    x-apideck-model:
      $ref: '#/definitions/Item'
  - description: ''
    name: Modifiers
    x-apideck-model:
      $ref: '#/definitions/Modifier'
  - description: ''
    name: Modifier Groups
    x-apideck-model:
      $ref: '#/definitions/ModifierGroup'
  - description: ''
    name: Order Types
    x-apideck-model:
      $ref: '#/definitions/OrderType'
  - description: ''
    name: Tenders
    x-apideck-model:
      $ref: '#/definitions/Tender'
x-components:
  parameters:
    applicationId:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      type: string
    consumerId:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      type: string
    cursor:
      description: >-
        Cursor to start from. You can find cursors for next/previous pages in
        the meta.cursors property of the response.
      in: query
      name: cursor
      type: string
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      type: string
    limit:
      default: 20
      description: Number of records to return
      in: query
      maximum: 200
      minimum: 1
      name: limit
      type: integer
    locationId:
      description: ID of the location.
      in: query
      name: location_id
      required: false
      type: string
    merchantId:
      description: ID of the merchant.
      in: path
      name: merchantId
      required: true
      schema:
        type: string
    modifierGroupFilter:
      description: Apply filters (beta)
      in: query
      name: filter
      type: object
      x-graphql-type-name: ModifierGroupFilter
    raw:
      default: false
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      type: boolean
    serviceId:
      description: >-
        Provide the service id you want to call (e.g., pipedrive). [See the full
        list in the connector section.](#section/Connectors) Only needed when a
        consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      type: string
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/BadRequestResponse'
      description: Bad Request
    CreateItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateItemResponse'
      description: Items
    CreateLocationResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateLocationResponse'
      description: Locations
    CreateMerchantResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateMerchantResponse'
      description: Merchants
    CreateModifierGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateModifierGroupResponse'
      description: ModifierGroups
    CreateModifierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateModifierResponse'
      description: Modifiers
    CreateOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateOrderResponse'
      description: Orders
    CreateOrderTypeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateOrderTypeResponse'
      description: OrderTypes
    CreatePosPaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreatePosPaymentResponse'
      description: PosPayments
    CreateTenderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateTenderResponse'
      description: Tenders
    DeleteItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteItemResponse'
      description: Items
    DeleteLocationResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteLocationResponse'
      description: Locations
    DeleteMerchantResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteMerchantResponse'
      description: Merchants
    DeleteModifierGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteModifierGroupResponse'
      description: ModifierGroups
    DeleteModifierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteModifierResponse'
      description: Modifiers
    DeleteOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteOrderResponse'
      description: Orders
    DeleteOrderTypeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteOrderTypeResponse'
      description: OrderTypes
    DeletePosPaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeletePosPaymentResponse'
      description: PosPayments
    DeleteTenderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteTenderResponse'
      description: Tenders
    GetItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetItemResponse'
      description: Items
    GetItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetItemsResponse'
      description: Items
    GetLocationResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetLocationResponse'
      description: Locations
    GetLocationsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetLocationsResponse'
      description: Locations
    GetMerchantResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetMerchantResponse'
      description: Merchants
    GetMerchantsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetMerchantsResponse'
      description: Merchants
    GetModifierGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetModifierGroupResponse'
      description: ModifierGroups
    GetModifierGroupsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetModifierGroupsResponse'
      description: ModifierGroups
    GetModifierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetModifierResponse'
      description: Modifiers
    GetModifiersResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetModifiersResponse'
      description: Modifiers
    GetOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetOrderResponse'
      description: Orders
    GetOrderTypeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetOrderTypeResponse'
      description: OrderTypes
    GetOrderTypesResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetOrderTypesResponse'
      description: OrderTypes
    GetOrdersResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetOrdersResponse'
      description: Orders
    GetPosPaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetPosPaymentResponse'
      description: PosPayments
    GetPosPaymentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetPosPaymentsResponse'
      description: PosPayments
    GetTenderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetTenderResponse'
      description: Tenders
    GetTendersResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetTendersResponse'
      description: Tenders
    Item:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Item'
      description: Items
    Location:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Location'
      description: Locations
    Merchant:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Merchant'
      description: Merchants
    Modifier:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Modifier'
      description: Modifiers
    ModifierGroup:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ModifierGroup'
      description: ModifierGroups
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotImplementedResponse'
      description: Not Implemented
    Order:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Order'
      description: Orders
    OrderType:
      content:
        application/json:
          schema:
            $ref: '#/definitions/OrderType'
      description: OrderTypes
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
      description: Payment Required
    PosPayment:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PosPayment'
      description: PosPayments
    Tender:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Tender'
      description: Tenders
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/TooManyRequestsResponse'
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnprocessableResponse'
      description: Unprocessable
    UpdateItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateItemResponse'
      description: Items
    UpdateLocationResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateLocationResponse'
      description: Locations
    UpdateMerchantResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateMerchantResponse'
      description: Merchants
    UpdateModifierGroupResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateModifierGroupResponse'
      description: ModifierGroups
    UpdateModifierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateModifierResponse'
      description: Modifiers
    UpdateOrderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateOrderResponse'
      description: Orders
    UpdateOrderTypeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateOrderTypeResponse'
      description: OrderTypes
    UpdatePosPaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdatePosPaymentResponse'
      description: PosPayments
    UpdateTenderResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateTenderResponse'
      description: Tenders
x-webhooks:
  ItemCreated:
    post:
      description: Item created
      operationId: itemCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Item created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.item.created
  ItemDeleted:
    post:
      description: Item deleted
      operationId: itemDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Item deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.item.deleted
  ItemUpdated:
    post:
      description: Item updated
      operationId: itemUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Item updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.item.updated
  LocationCreated:
    post:
      description: Location created
      operationId: locationCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Location created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.location.created
  LocationDeleted:
    post:
      description: Location deleted
      operationId: locationDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Location deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.location.deleted
  LocationUpdated:
    post:
      description: Location updated
      operationId: locationUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Location updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.location.updated
  MerchantCreated:
    post:
      description: Merchant created
      operationId: merchantCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Merchant created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.merchant.created
  MerchantDeleted:
    post:
      description: Merchant deleted
      operationId: merchantDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Merchant deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.merchant.deleted
  MerchantUpdated:
    post:
      description: Merchant updated
      operationId: merchantUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Merchant updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.merchant.updated
  ModifierCreated:
    post:
      description: Modifier created
      operationId: modifierCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Modifier created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.modifier.created
  ModifierDeleted:
    post:
      description: Modifier deleted
      operationId: modifierDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Modifier deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.modifier.deleted
  ModifierGroupCreated:
    post:
      description: Modifier Group created
      operationId: modifierGroupCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Modifier Group created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.modifier-group.created
  ModifierGroupDeleted:
    post:
      description: Modifier Group deleted
      operationId: modifierGroupDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Modifier Group deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.modifier-group.deleted
  ModifierGroupUpdated:
    post:
      description: Modifier Group updated
      operationId: modifierGroupUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Modifier Group updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.modifier-group.updated
  ModifierUpdated:
    post:
      description: Modifier updated
      operationId: modifierUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Modifier updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.modifier.updated
  OrderCreated:
    post:
      description: Order created
      operationId: orderCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Order created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.order.created
      x-apideck-upcoming: true
  OrderDeleted:
    post:
      description: Order deleted
      operationId: orderDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Order deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.order.deleted
      x-apideck-upcoming: true
  OrderUpdated:
    post:
      description: Order updated
      operationId: orderUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Order updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.order.updated
      x-apideck-upcoming: true
  PosPaymentCreated:
    post:
      description: PosPayment created
      operationId: paymentCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: PosPayment created
      tags:
        - Webhook Events
      x-apideck-event-type: pos.payment.created
  PosPaymentDeleted:
    post:
      description: PosPayment deleted
      operationId: paymentDeleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: PosPayment deleted
      tags:
        - Webhook Events
      x-apideck-event-type: pos.payment.deleted
  PosPaymentUpdated:
    post:
      description: PosPayment updated
      operationId: paymentUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/PosWebhookEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: PosPayment updated
      tags:
        - Webhook Events
      x-apideck-event-type: pos.payment.updated

