basePath: /
definitions:
  AuthType:
    description: Type of authorization used by the connector
    enum:
      - oauth2
      - apiKey
      - basic
      - custom
      - none
    example: oauth2
    readOnly: true
    type: string
  BadRequestResponse:
    properties:
      detail:
        anyOf:
          - example: Missing property foobar
            type: string
          - example:
              missing:
                - foobar: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestvalidationerror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestValidationError
        type: string
  Connection:
    properties:
      auth_type:
        $ref: '#/definitions/AuthType'
      authorize_url:
        description: >-
          The OAuth redirect URI. Redirect your users to this URI to let them
          authorize your app in the connector's UI. Before you can use this URI,
          you must add `redirect_uri` as a query parameter. Your users will be
          redirected to this `redirect_uri` after they granted access to your
          app in the connector's UI.
        example: >-
          https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>
        readOnly: true
        type: string
        x-nullable: true
      configurable_resources:
        example:
          - opportunities
          - companies
          - contacts
          - leads
        items:
          type: string
        readOnly: true
        type: array
      configuration:
        items:
          properties:
            defaults:
              items:
                properties:
                  id:
                    example: ProductInterest
                    type: string
                  options:
                    items:
                      $ref: '#/definitions/FormFieldOption'
                    type: array
                  target:
                    enum:
                      - custom_fields
                      - resource
                    example: custom_fields
                    readOnly: true
                    type: string
                  value: {}
                type: object
              type: array
            resource:
              example: leads
              type: string
          type: object
        type: array
      created_at:
        example: 1615563533390
        readOnly: true
        type: number
      enabled:
        description: >-
          Whether the connection is enabled or not. You can enable or disable a
          connection using the Update Connection API.
        example: true
        type: boolean
      form_fields:
        example:
          - custom_field: false
            disabled: false
            id: instance_url
            label: Instance url
            mask: false
            placeholder: ''
            required: true
            sensitive: false
            type: text
            value: 'https://eu28.salesforce.com'
          - custom_field: false
            disabled: false
            id: api_key
            label: API Key
            mask: false
            placeholder: ''
            required: true
            sensitive: true
            type: text
            value: '123455677'
        items:
          $ref: '#/definitions/FormField'
        readOnly: true
        type: array
      has_guide:
        description: >-
          Whether the connector has a guide available in the developer docs or
          not
          (https://docs.apideck.com/connectors/{service_id}/docs/consumer+connection).
        example: true
        readOnly: true
        type: boolean
      icon:
        example: >-
          https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png
        readOnly: true
        type: string
      id:
        example: crm+salesforce
        readOnly: true
        type: string
      logo:
        example: >-
          https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg
        readOnly: true
        type: string
      metadata:
        additionalProperties: true
        description: Attach your own consumer specific metadata
        example:
          account:
            id: c01458a5-7276-41ce-bc19-639906b0450a
            name: My Company
          plan: enterprise
        properties: {}
        type: object
        x-nullable: true
      name:
        example: Salesforce
        readOnly: true
        type: string
      oauth_grant_type:
        $ref: '#/definitions/OAuthGrantType'
      resource_schema_support:
        example:
          - leads
        items:
          type: string
        readOnly: true
        type: array
      resource_settings_support:
        example:
          - leads
        items:
          type: string
        readOnly: true
        type: array
      revoke_url:
        description: >-
          The OAuth revoke URI. Redirect your users to this URI to revoke this
          connection. Before you can use this URI, you must add `redirect_uri`
          as a query parameter. Your users will be redirected to this
          `redirect_uri` after they granted access to your app in the
          connector's UI.
        example: >-
          https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>
        readOnly: true
        type: string
        x-nullable: true
      service_id:
        example: salesforce
        readOnly: true
        type: string
      settings:
        additionalProperties: true
        description: >-
          Connection settings. Values will persist to `form_fields` with
          corresponding id
        example:
          api_key: 12345xxxxxx
          instance_url: 'https://eu28.salesforce.com'
        properties: {}
        type: object
        x-nullable: true
      settings_required_for_authorization:
        example:
          - instance_url
        items:
          type: string
        readOnly: true
        type: array
      state:
        $ref: '#/definitions/ConnectionState'
      status:
        enum:
          - live
          - upcoming
          - requested
        readOnly: true
        type: string
      tag_line:
        example: >-
          CRM software solutions and enterprise cloud computing from Salesforce,
          the leader in customer relationship management (CRM) and PaaS. Free 30
          day trial.
        readOnly: true
        type: string
      unified_api:
        example: crm
        readOnly: true
        type: string
      updated_at:
        example: 1616662325753
        readOnly: true
        type: number
        x-nullable: true
      website:
        example: 'https://www.salesforce.com'
        readOnly: true
        type: string
    type: object
  ConnectionEvent:
    properties:
      entity:
        $ref: '#/definitions/ConsumerConnection'
      entity_id:
        description: The service provider's ID of the entity that triggered this event
        example: 123456ASDF
        type: string
      entity_type:
        description: The type entity that triggered this event
        example: Company
        type: string
      event_id:
        description: Unique reference to this request event
        example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
        type: string
      event_type:
        $ref: '#/definitions/VaultEventType'
      execution_attempt:
        description: The current count this request event has been attempted
        example: 2
        type: number
      occurred_at:
        description: ISO Datetime for when the original event occurred
        example: '2021-10-01T03:14:55.419Z'
        type: string
      service_id:
        description: Service provider identifier
        example: close
        type: string
    type: object
    x-sdk-exclude: true
  ConnectionImportData:
    properties:
      credentials:
        additionalProperties: false
        example:
          access_token: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          refresh_token: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ
        properties:
          access_token:
            description: Access token
            example: 1234567890abcdefghijklmnopqrstuvwxyz
            type: string
          expires_in:
            description: >-
              The number of seconds until the token expires. If omitted the
              token will be queued for refresh.
            example: 3600
            type: integer
            x-nullable: true
          issued_at:
            description: >-
              The datetime at which the token was issued. If omitted the token
              will be queued for refresh.
            example: '2020-01-01T00:00:00.000Z'
            format: date-time
            type: string
            x-nullable: true
          refresh_token:
            description: The refresh token can be used to obtain a new access token.
            example: 1234567890abcdefghijklmnopqrstuvwxyz
            type: string
        required:
          - refresh_token
        type: object
      metadata:
        additionalProperties: true
        description: Attach your own consumer specific metadata
        example:
          account:
            id: c01458a5-7276-41ce-bc19-639906b0450a
            name: My Company
          plan: enterprise
        properties: {}
        type: object
        x-nullable: true
      settings:
        description: >-
          Connection settings. Values will persist to `form_fields` with
          corresponding id
        example:
          instance_url: 'https://eu28.salesforce.com'
        type: object
        x-nullable: true
    type: object
  ConnectionMetadata:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  ConnectionState:
    description: '[Connection state flow](#section/Connection-state)'
    enum:
      - available
      - callable
      - added
      - authorized
    example: authorized
    readOnly: true
    type: string
  Consumer:
    properties:
      aggregated_request_count:
        example: 101
        type: number
      application_id:
        example: '1111'
        type: string
      connections:
        items:
          $ref: '#/definitions/ConsumerConnection'
        type: array
      consumer_id:
        example: test_consumer_id
        type: string
      created:
        example: '2021-05-07T12:55:42.242Z'
        type: string
      metadata:
        $ref: '#/definitions/ConsumerMetadata'
      modified:
        example: '2021-05-07T12:55:42.242Z'
        type: string
      request_count_updated:
        example: '2021-05-07T12:55:42.242Z'
        type: string
      request_counts:
        $ref: '#/definitions/RequestCountAllocation'
      services:
        example:
          - salesforce
          - stripe
        items:
          example: salesforce
          type: string
        type: array
    type: object
  ConsumerConnection:
    properties:
      auth_type:
        $ref: '#/definitions/AuthType'
      consumer_id:
        example: test_user_id
        type: string
      created_at:
        example: '2020-09-19T12:18:37.071Z'
        type: string
      enabled:
        example: true
        type: boolean
      icon:
        example: >-
          https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png
        type: string
      id:
        example: 1111+test_user_id
        readOnly: true
        type: string
      logo:
        example: >-
          https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg
        type: string
      metadata:
        additionalProperties: true
        description: Attach your own consumer specific metadata
        example:
          account:
            id: c01458a5-7276-41ce-bc19-639906b0450a
            name: My Company
          plan: enterprise
        properties: {}
        type: object
        x-nullable: true
      name:
        example: Salesforce
        type: string
      service_id:
        example: teamleader
        type: string
      settings:
        description: >-
          Connection settings. Values will persist to `form_fields` with
          corresponding id
        example:
          instance_url: 'https://eu28.salesforce.com'
        type: object
        x-nullable: true
      state:
        enum:
          - available
          - callable
          - added
          - configured
          - authorized
        example: authorized
        type: string
      tag_line:
        example: >-
          CRM software solutions and enterprise cloud computing from Salesforce,
          the leader in customer relationship management (CRM) and PaaS. Free 30
          day trial.
        readOnly: true
        type: string
      unified_api:
        example: crm
        type: string
      updated_at:
        example: '2020-09-19T12:18:37.071Z'
        type: string
        x-nullable: true
      website:
        example: 'https://www.salesforce.com'
        readOnly: true
        type: string
    type: object
  ConsumerMetadata:
    properties:
      account_name:
        example: SpaceX
        type: string
      email:
        example: elon@musk.com
        type: string
      image:
        example: 'https://www.spacex.com/static/images/share.jpg'
        type: string
      user_name:
        example: Elon Musk
        type: string
    type: object
  ConsumerRequestCountsInDateRangeResponse:
    properties:
      data:
        properties:
          aggregated_request_count:
            example: 40
            type: number
          application_id:
            example: '1111'
            type: string
          consumer_id:
            example: test_user_id
            type: string
          end_datetime:
            example: '2021-05-10T12:00:00.000Z'
            type: string
          request_counts:
            $ref: '#/definitions/RequestCountAllocation'
          start_datetime:
            example: '2021-05-01T12:00:00.000Z'
            type: string
        type: object
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  ConsumerWebhook:
    additionalProperties: false
    properties:
      created_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        readOnly: true
        title: Created at (timestamp)
        type: string
      delivery_url:
        description: The delivery url of the webhook endpoint.
        example: 'https://example.com/my/webhook/endpoint'
        format: uri
        pattern: '^(https?)://'
        type: string
      description:
        example: A description
        title: Description
        type: string
        x-nullable: true
      events:
        description: >-
          The list of subscribed events for this webhook. [`*`] indicates that
          all events are enabled.
        example:
          - vault.connection.created
          - vault.connection.updated
        items:
          enum:
            - '*'
            - crm.activity.created
            - crm.activity.updated
            - crm.activity.deleted
            - crm.company.created
            - crm.company.updated
            - crm.company.deleted
            - crm.contact.created
            - crm.contact.updated
            - crm.contact.deleted
            - crm.lead.created
            - crm.lead.updated
            - crm.lead.deleted
            - crm.note.created
            - crm.notes.updated
            - crm.notes.deleted
            - crm.opportunity.created
            - crm.opportunity.updated
            - crm.opportunity.deleted
            - lead.lead.created
            - lead.lead.updated
            - lead.lead.deleted
            - vault.connection.created
            - vault.connection.updated
            - vault.connection.deleted
            - vault.connection.callable
            - vault.connection.token_refresh.failed
            - ats.job.created
            - ats.job.updated
            - ats.job.deleted
            - ats.applicant.created
            - ats.applicant.updated
            - ats.applicant.deleted
            - accounting.customer.created
            - accounting.customer.updated
            - accounting.customer.deleted
            - accounting.invoice.created
            - accounting.invoice.updated
            - accounting.invoice.deleted
            - accounting.invoice_item.created
            - accounting.invoice_item.updated
            - accounting.invoice_item.deleted
            - accounting.ledger_account.created
            - accounting.ledger_account.updated
            - accounting.ledger_account.deleted
            - accounting.tax_rate.created
            - accounting.tax_rate.updated
            - accounting.tax_rate.deleted
            - accounting.bill.created
            - accounting.bill.updated
            - accounting.bill.deleted
            - accounting.payment.created
            - accounting.payment.updated
            - accounting.payment.deleted
            - accounting.supplier.created
            - accounting.supplier.updated
            - accounting.supplier.deleted
            - pos.order.created
            - pos.order.updated
            - pos.order.deleted
            - pos.product.created
            - pos.product.updated
            - pos.product.deleted
            - pos.payment.created
            - pos.payment.updated
            - pos.payment.deleted
            - pos.merchant.created
            - pos.merchant.updated
            - pos.merchant.deleted
            - pos.location.created
            - pos.location.updated
            - pos.location.deleted
            - pos.item.created
            - pos.item.updated
            - pos.item.deleted
            - pos.modifier.created
            - pos.modifier.updated
            - pos.modifier.deleted
            - pos.modifier-group.created
            - pos.modifier-group.updated
            - pos.modifier-group.deleted
            - hris.employee.created
            - hris.employee.updated
            - hris.employee.deleted
            - hris.company.created
            - hris.company.updated
            - hris.company.deleted
          example: crm.company.created
          type: string
        title: Subscribed events
        type: array
      execute_base_url:
        description: >-
          The Unify Base URL events from connectors will be sent to after
          service id is appended.
        example: 'https://unify.apideck.com/webhook/webhooks/1234/execute'
        format: uri
        pattern: '^(https?)://'
        readOnly: true
        type: string
      id:
        example: '1234'
        readOnly: true
        type: string
      status:
        description: The status of the webhook.
        enum:
          - enabled
          - disabled
        example: enabled
        type: string
        x-graphql-type-name: WebhookStatus
      unified_api:
        $ref: '#/definitions/UnifiedApiId'
      updated_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        readOnly: true
        title: Updated at (timestamp)
        type: string
    required:
      - delivery_url
      - status
      - events
      - unified_api
      - execute_base_url
    type: object
  CreateConnectionResponse:
    properties:
      data:
        $ref: '#/definitions/Connection'
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 201
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  CreateSessionResponse:
    additionalProperties: false
    properties:
      data:
        additionalProperties: false
        properties:
          session_token:
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj
            readOnly: true
            type: string
          session_uri:
            example: >-
              http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj
            readOnly: true
            type: string
        required:
          - session_uri
          - session_token
        type: object
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  FormField:
    properties:
      allow_custom_values:
        default: false
        description: >-
          Only applicable to select fields. Allow the user to add a custom value
          though the option select if the desired value is not in the option
          select list.
        example: false
        title: Allow custom values
        type: boolean
      custom_field:
        example: false
        type: boolean
      description:
        example: Slack channel to push notification to
        type: string
        x-nullable: true
      disabled:
        example: false
        type: boolean
        x-nullable: true
      id:
        example: channel
        type: string
      label:
        example: Channel
        type: string
      options:
        example:
          - label: General Channel
            value: general
        items:
          $ref: '#/definitions/FormFieldOption'
        type: array
      placeholder:
        example: Select a channel
        type: string
        x-nullable: true
      required:
        example: true
        type: boolean
      sensitive:
        example: false
        type: boolean
        x-nullable: true
      type:
        enum:
          - text
          - checkbox
          - tel
          - email
          - url
          - textarea
          - select
          - filtered-select
          - multi-select
          - datetime
          - date
          - time
          - number
        example: select
    type: object
    x-graphql-type-name: FormField
  FormFieldOption: {}
  FormFieldOptionGroup:
    properties:
      id:
        example: '1234'
        type: string
      label:
        example: General Channel
        type: string
      options:
        items:
          $ref: '#/definitions/SimpleFormFieldOption'
        type: array
    type: object
  GetConnectionResponse:
    properties:
      data:
        $ref: '#/definitions/Connection'
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  GetConnectionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Connection'
        type: array
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  GetConsumerResponse:
    properties:
      data:
        $ref: '#/definitions/Consumer'
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  GetConsumersResponse:
    properties:
      data:
        items:
          properties:
            aggregated_request_count:
              example: 101
              type: number
            application_id:
              example: '1111'
              type: string
            consumer_id:
              example: test_consumer_id
              type: string
            created:
              example: '2021-05-07T12:55:42.242Z'
              type: string
            metadata:
              $ref: '#/definitions/ConsumerMetadata'
            modified:
              example: '2021-05-07T12:55:42.242Z'
              type: string
            request_count_updated:
              example: '2021-05-07T12:55:42.242Z'
              type: string
            request_counts:
              $ref: '#/definitions/RequestCountAllocation'
            services:
              example:
                - salesforce
                - stripe
              items:
                example: salesforce
                type: string
              type: array
          type: object
        type: array
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  GetLogsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Log'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
    x-graphql-type-name: LogList
  Links:
    description: Links to navigate to previous or next pages through the API
    properties:
      current:
        description: Link to navigate to the current page through the API
        example: 'https://unify.apideck.com/crm/companies'
        type: string
      next:
        description: Link to navigate to the previous page through the API
        example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
        type: string
        x-nullable: true
      previous:
        description: Link to navigate to the previous page through the API
        example: >-
          https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        type: string
        x-nullable: true
    type: object
  Log:
    additionalProperties: false
    properties:
      api_style:
        description: Indicates if the request was made via REST or Graphql endpoint.
        example: REST
        type: string
      base_url:
        description: The Apideck base URL the request was made to.
        example: unify.apideck.com
        type: string
      child_request:
        description: Indicates whether or not this is a child or parent request.
        example: false
        type: boolean
      consumer_id:
        description: The consumer Id associated with the request.
        example: test-consumer
        type: string
      duration:
        description: >-
          The entire execution time in milliseconds it took to call the Apideck
          service provider.
        example: 2220.379304
        type: number
      error_message:
        description: 'If error occurred, this is brief explanation'
        example: Refresh token is invalid
        type: string
        x-nullable: true
      execution:
        description: The entire execution time in milliseconds it took to make the request.
        example: 2248
        type: integer
      has_children:
        description: >-
          When request is a parent request, this indicates if there are child
          requests associated.
        example: false
        type: boolean
      http_method:
        description: HTTP Method of request.
        example: GET
        type: string
      id:
        description: UUID acting as Request Identifier.
        example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f
        type: string
      latency:
        description: Latency added by making this request via Unified Api.
        example: 27.620695999999953
        type: number
      operation:
        additionalProperties: false
        description: The request as defined in OpenApi Spec.
        properties:
          id:
            description: The OpenApi Operation Id associated with the request
            example: connectionsAll
            type: string
          name:
            description: The OpenApi Operation name associated with the request
            example: Get All Connections
            type: string
        required:
          - id
          - name
        type: object
      parent_id:
        description: >-
          When request is a child request, this UUID indicates it's parent
          request.
        example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f
        type: string
        x-nullable: true
      path:
        description: The path component of the URI the request was made to.
        example: /vault/connections
        type: string
      sandbox:
        description: >-
          Indicates whether the request was made using Apidecks sandbox
          credentials or not.
        example: false
        type: boolean
      service:
        additionalProperties: false
        description: Apideck service provider associated with request.
        properties:
          id:
            description: Apideck service provider id.
            example: apideck-vault
            type: string
          name:
            description: Apideck service provider name.
            example: Apideck Vault
            type: string
        required:
          - id
          - name
        type: object
      source_ip:
        description: The IP address of the source of the request.
        example: 94.227.131.238
        type: string
        x-nullable: true
      status_code:
        description: HTTP Status code that was returned.
        example: 200
        type: integer
      success:
        description: Whether or not the request was successful.
        example: true
        type: boolean
      timestamp:
        description: ISO Date and time when the request was made.
        example: '2021-07-12T14:26:17.420Z'
        type: string
      unified_api:
        description: Which Unified Api request was made to.
        enum:
          - crm
          - lead
          - proxy
          - vault
          - accounting
        example: vault
        type: string
    required:
      - id
      - parent_id
      - api_style
      - base_url
      - child_request
      - consumer_id
      - duration
      - execution
      - has_children
      - http_method
      - latency
      - operation
      - path
      - sandbox
      - service
      - status_code
      - success
      - timestamp
      - unified_api
    type: object
  LogsFilter:
    properties:
      connector_id:
        example: crm+salesforce
        type: string
        x-nullable: true
      exclude_unified_apis:
        example: 'vault,proxy'
        type: string
        x-nullable: true
      status_code:
        example: 201
        type: number
        x-nullable: true
    type: object
    x-graphql-type-name: LogsFilter
  Meta:
    description: Response metadata
    properties:
      cursors:
        description: Cursors to navigate to previous or next pages through the API
        properties:
          current:
            description: Cursor to navigate to the current page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjI=
            type: string
            x-nullable: true
          next:
            description: Cursor to navigate to the next page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjM=
            type: string
            x-nullable: true
          previous:
            description: Cursor to navigate to the previous page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjE=
            type: string
            x-nullable: true
        type: object
      items_on_page:
        description: Number of items returned in the data property of the response
        example: 50
        type: integer
    type: object
  NotFoundResponse:
    properties:
      detail:
        anyOf:
          - example: 'Could not find widget with id: ''123'''
            type: string
          - example:
              not_found:
                entity: widget
                id: '123'
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Found
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unknown Widget
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#entitynotfounderror'
        type: string
      status_code:
        description: HTTP status code
        example: 404
        type: number
      type_name:
        description: The type of error returned
        example: EntityNotFoundError
        type: string
  NotImplementedResponse:
    properties:
      detail:
        anyOf:
          - example: >-
              Failed to retrieve Widget tokenUrl from
              'components.securitySchemes.oauth2.flows'
            type: string
          - type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Implemented
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unmapped Attribute
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#mappingerror'
        type: string
      status_code:
        description: HTTP status code
        example: 501
        type: number
      type_name:
        description: The type of error returned
        example: MappingError
        type: string
  OAuthGrantType:
    description: >-
      OAuth grant type used by the connector. More info:
      https://oauth.net/2/grant-types
    enum:
      - authorization_code
      - client_credentials
    example: authorization_code
    readOnly: true
    type: string
  PaymentRequiredResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: You have reached your limit of 2000
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Payment Required
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Request Limit Reached
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestlimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 402
        type: number
      type_name:
        description: The type of error returned
        example: RequestLimitError
        type: string
  ProxyRequest:
    example:
      account_sid: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      api_version: '2010-04-01T00:00:00.000Z'
      body: This is the ship that made the Kessel Run in fourteen parsecs?
      date_created: 'Thu, 30 Jul 2015 20:12:31 +0000'
      date_sent: 'Thu, 30 Jul 2015 20:12:33 +0000'
      date_updated: 'Thu, 30 Jul 2015 20:12:33 +0000'
      direction: outbound-api
      from: '+15017122661'
      messaging_service_sid: MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      num_media: '0'
      num_segments: '1'
      sid: SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      status: sent
      subresource_uris:
        media: >-
          /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Media.json
      to: '+15558675310'
      uri: >-
        /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.json
    properties: {}
    type: object
  RequestCountAllocation:
    properties:
      proxy:
        example: 10
        type: number
      unify:
        example: 100
        type: number
      vault:
        example: 21
        type: number
    type: object
  Session:
    additionalProperties: false
    properties:
      consumer_metadata:
        $ref: '#/definitions/ConsumerMetadata'
      custom_consumer_settings:
        additionalProperties: true
        description: Custom consumer settings that are passed as part of the session.
        example:
          feature_flag_1: true
          tax_rates:
            - id: '6'
              label: 6%
            - id: '21'
              label: 21%
        title: Custom consumer settings
        type: object
      redirect_uri:
        example: 'https://mysaas.com/dashboard'
        type: string
      settings:
        additionalProperties: false
        properties:
          auto_redirect:
            default: false
            description: >-
              Automatically redirect to redirect uri after the connection has
              been configured as callable. Defaults to `false`.
            title: Auto-redirect
            type: boolean
          hide_resource_settings:
            default: false
            title: Hide resource settings
            type: boolean
          isolation_mode:
            default: false
            description: >-
              Configure [Vault](/apis/vault/reference#section/Get-Started) to
              run in isolation mode, meaning it only shows the connection
              settings and hides the navigation items.
            title: Isolation mode
            type: boolean
          sandbox_mode:
            default: false
            description: >-
              Configure [Vault](/apis/vault/reference#section/Get-Started) to
              show a banner informing the logged in user is in a test
              environment.
            title: Sandbox mode
            type: boolean
          session_length:
            default: 1h
            description: The duration of time the session is valid for (maximum 1 week).
            example: 30m
            title: Session Length
            type: string
          show_logs:
            default: true
            description: >-
              Configure [Vault](/apis/vault/reference#section/Get-Started) to
              show the logs page. Defaults to `true`.
            title: Show logs
            type: boolean
          show_suggestions:
            default: false
            description: >-
              Configure [Vault](/apis/vault/reference#section/Get-Started) to
              show the suggestions page. Defaults to `true`.
            title: Show suggestions
            type: boolean
          unified_apis:
            description: >-
              Provide the IDs of the Unified APIs you want to be visible.
              Leaving it empty or omiting this field will show all Unified APIs.
            items:
              $ref: '#/definitions/UnifiedApiId'
            type: array
        type: object
        x-graphql-type-name: SessionSettings
      theme:
        properties:
          favicon:
            example: 'https://res.cloudinary.com/apideck/icons/intercom'
            type: string
          primary_color:
            example: '#286efa'
            type: string
          privacy_url:
            example: 'https://compliance.apideck.com/privacy-policy'
            type: string
          sidepanel_background_color:
            example: '#286efa'
            type: string
          sidepanel_text_color:
            example: '#FFFFFF'
            type: string
          terms_url:
            example: >-
              https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e
            type: string
          vault_name:
            example: Intercom
            type: string
        type: object
    type: object
  SimpleFormFieldOption:
    properties:
      label:
        example: General Channel
        type: string
      value: {}
    type: object
  UnauthorizedResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: Failed to generate valid JWT Session. Verify applicationId is correct
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unauthorized
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unauthorized Request
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 401
        type: number
      type_name:
        description: The type of error returned
        example: UnauthorizedError
        type: string
  UnexpectedErrorResponse:
    properties:
      detail:
        anyOf:
          - example: 'Missing Header: x-apideck-consumer-id'
            type: string
          - example:
              missing:
                - x-apideck-consumer-id: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestHeadersValidationError
        type: string
  UnifiedApiId:
    description: Name of Apideck Unified API
    enum:
      - vault
      - lead
      - crm
      - accounting
      - file-storage
      - spreadsheet
      - email
      - script
      - sms
      - team-messaging
      - ecommerce
      - payroll
      - customer-support
      - time-registration
      - transactional-email
      - hcm
      - form
      - csp
      - email-marketing
      - ats
      - hris
      - pos
    example: crm
    type: string
  UnprocessableResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: State did not include unified_api
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unprocessable Entity
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid State
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#invalidstateerror'
        type: string
      status_code:
        description: HTTP status code
        example: 422
        type: number
      type_name:
        description: The type of error returned
        example: InvalidStateError
        type: string
  UpdateConnectionResponse:
    properties:
      data:
        $ref: '#/definitions/Connection'
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - data
    type: object
  VaultEventType:
    enum:
      - '*'
      - vault.connection.created
      - vault.connection.updated
      - vault.connection.deleted
      - vault.connection.callable
      - vault.connection.token_refresh.failed
    example: vault.connection.created
    type: string
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
host: unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  description: "Welcome to the Vault API \U0001F44B\n\nWhen you're looking to connect to an API, the first step is authentication.\n\nVault helps you handle OAuth flows, store API keys, and refresh access tokens from users (called consumers in Apideck).\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## Get Started\n\nTo use the Apideck APIs, you need to sign up for free at [https://app.apideck.com/signup](). Follow the steps below to get started.\n\n- [Create a free account.](https://app.apideck.com/signup)\n- Go to the [Dashboard](https://app.apideck.com/unify/unified-apis/dashboard).\n- Get your API key and the application ID.\n- Select and configure the integrations you want to make available to your users. Through the Unify dashboard, you can configure which connectors you want to support as integrations.\n- Retrieve the client_id and client_secret for the integration you want to activate (Only needed for OAuth integrations).\n- Soon, you can skip the previous step and use the Apideck sandbox credentials to get you started instead (upcoming)\n- Register the redirect URI for the example app (https://unify.apideck.com/vault/callback) in the list of redirect URIs under your app's settings\n- Use the [publishing guides](/app-listing-requirements) to get your integration listed across app marketplaces.\n\n### Hosted Vault\n\nHosted Vault (vault.apideck.com) is a no-code solution, so you don't need to build your own UI to handle the integration settings and authentication.\n\n![Hosted Vault - Integrations portal](https://github.com/apideck-samples/integration-settings/raw/master/public/img/vault.png)\n\nBehind the scenes, Hosted Vault implements the Vault API endpoints and handles the following features for your customers:\n\n- Add a connection\n- Handle the OAuth flow\n- Configure connection settings per integration\n- Manage connections\n- Discover and propose integration options\n- Search for integrations (upcoming)\n- Give integration suggestions based on provided metadata (email or website) when creating the session (upcoming)\n\nTo use Hosted Vault, you will need to first [**create a session**](https://developers.apideck.com/apis/vault/reference#operation/sessionsCreate). This can be achieved by making a POST request to the Vault API to create a valid session for a user, hereafter referred to as the consumer ID.\n\nExample using curl:\n\n```\ncurl -X POST https://unify.apideck.com/vault/sessions\n    -H \"Content-Type: application/json\"\n    -H \"Authorization: Bearer <your-api-key>\"\n    -H \"X-APIDECK-CONSUMER-ID: <consumer-id>\"\n    -H \"X-APIDECK-APP-ID: <application-id>\"\n    -d '{\"consumer_metadata\": { \"account_name\" : \"Sample\", \"user_name\": \"Sand Box\", \"email\": \"sand@box.com\", \"image\": \"https://unavatar.now.sh/jake\" }, \"theme\": { \"vault_name\": \"Intercom\", \"primary_color\": \"#286efa\", \"sidepanel_background_color\": \"#286efa\",\"sidepanel_text_color\": \"#FFFFFF\", \"favicon\": \"https://res.cloudinary.com/apideck/icons/intercom\" }}'\n```\n\n### Vault API\n\n_Beware, this is strategy takes more time to implement in comparison to Hosted Vault._\n\nIf you are building your integration settings UI manually, you can call the Vault API directly.\n\nThe Vault API is for those who want to completely white label the in-app integrations overview and authentication experience. All the available endpoints are listed below.\n\nThrough the API, your customers authenticate directly in your app, where Vault will still take care of redirecting to the auth provider and back to your app.\n\nIf you're already storing access tokens, we will help you migrate through our Vault Migration API (upcoming).\n\n## Domain model\n\nAt its core, a domain model creates a web of interconnected entities.\n\nOur domain model contains five main entity types: Consumer (user, account, team, machine), Application, Connector, Integration, and Connection.\n\n## Connection state\n\nThe connection state is computed based on the connection flow below.\n\n![](https://developers.apideck.com/api-references/vault/connection-flow.png)\n\n## Unify and Proxy integration\n\nThe only thing you need to use the Unify APIs and Proxy is the consumer id; thereafter, Vault will do the look-up in the background to handle the token injection before performing the API call(s).\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-app-id      | String  | Yes      | The id of your Unify application. Available at https://app.apideck.com/api-keys.                                                                               |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n\n## Sandbox (upcoming)\n\nThe sandbox is pre-loaded with data similar to a real-life integrations setup. You can use the preconfigured OAauth configured connectors for testing purposes and can skip this step by using the Apideck sandbox credentials to get you started.\n\n## Guides\n\n- [How to build an integrations UI with Vault](https://github.com/apideck-samples/integration-settings)\n- How to configure the OAuth credentials for integration providers (COMING SOON)\n\n## FAQ\n\n**What purpose does Vault serve? Can I just handle the authentication and access token myself?**\nYou can store everything yourself, but that defeats the purpose of using Apideck Unify. Handling tokens for multiple providers can quickly become very complex.\n\n### Is my data secure?\n\nVault employs data minimization, therefore only requesting the minimum amount of scopes needed to perform an API request.\n\n### How do I migrate existing data?\n\nUsing our migration API, you can migrate the access tokens and accounts to Apideck Vault. (COMING SOON)\n\n### Can I use Vault in combination with existing integrations?\n\nYes, you can. The flexibility of Unify allows you to quickly the use cases you need while keeping a gradual migration path based on your timeline and requirements.\n\n### How does Vault work for Apideck Ecosystem customers?\n\nOnce logged in, pick your ecosystem; on the left-hand side of the screen, you'll have the option to create an application underneath the Unify section.\n\n### How to integrate Apideck Vault\n\nThis section covers everything you need to know to authenticate your customers through Vault.\nVault provides **three auth strategies** to use API tokens from your customers:\n\n- Vault API\n- Hosted Vault\n- Apideck Ecosystem _(COMING SOON)_\n\nYou can also opt to bypass Vault and still take care of authentication flows yourself. Make sure to put the right safeguards in place to protect your customers' tokens and other sensitive data.\n\n### What auth types does Vault support?\n\nWhat auth strategies does Vault handle? We currently support three flows so your customers can activate an integration.\n\n#### API keys\n\nFor Services supporting the API key strategy, you can use Hosted Vault will need to provide an in-app form where users can configure their API keys provided by the integration service.\n\n#### OAuth 2.0\n\n##### Authorization Code Grant Type Flow\n\nVault handles the complete Authorization Code Grant Type Flow for you. This flow only supports browser-based (passive) authentication because most identity providers don't allow entering a username and password to be entered into applications that they don't own.\n\nCertain connectors require an OAuth redirect authentication flow, where the end-user is redirected to the provider's website or mobile app to authenticate.\n\nThis is being handled by the `/authorize` endpoint.\n\n#### Basic auth\n\nBasic authentication is a simple authentication scheme built into the HTTP protocol. The required fields to complete basic auth are handled by Hosted Vault or by updating the connection through the Vault API below.\n\n"
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  title: Vault API
  version: 8.32.3
  x-apideck-api: vault
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/vault.yml
      version: '3.0'
  x-providerName: apideck.com
  x-serviceName: vault
  x-tags:
    - partner
paths:
  '/vault/authorize/{service_id}/{application_id}':
    get:
      description: >
        __In most cases the authorize link is provided in the ``/connections``
        endpoint. Normally you don't need to manually generate these links.__


        Use this endpoint to authenticate a user with a connector. It will
        return a 301 redirect to the downstream connector endpoints.


        Auth links will have a state parameter included to verify the validity
        of the request. This is the url your users will use to activate OAuth
        supported integration providers.


        Vault handles the complete Authorization Code Grant Type Flow for you
        and will redirect you to the dynamic redirect uri you have appended to
        the url in case this is missing the default redirect uri you have
        configured for your Unify application.
      operationId: connectionsAuthorize
      parameters:
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Application ID of the resource to return
          in: path
          name: application_id
          required: true
          type: string
        - description: >-
            An opaque value the applications adds to the initial request that
            the authorization server includes when redirecting the back to the
            application. This value must be used by the application to prevent
            CSRF attacks.
          in: query
          name: state
          required: true
          type: string
          x-example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk
        - description: >-
            URL to redirect back to after authorization. When left empty the
            default configured redirect uri will be used.
          in: query
          name: redirect_uri
          required: true
          type: string
          x-example: 'http://example.com/integrations'
        - collectionFormat: ssv
          description: >-
            One or more OAuth scopes to request from the connector. OAuth scopes
            control the set of resources and operations that are allowed after
            authorization. Refer to the connector's documentation for the
            available scopes.
          in: query
          items:
            type: string
          name: scope
          type: array
          x-example:
            - openid
            - 'leads:write'
            - 'profile:read'
      produces:
        - application/json
      responses:
        '301':
          description: redirect
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security: []
      summary: Authorize
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY'
            })

            const params = {
              serviceId: 'pipedrive',
              applicationId: 'application_id_example',
              state:
                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk',
              redirectUri: 'http://example.com/integrations'
            }

            try {
              const { data } = await apideck.vault.connectionsAuthorize(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
      x-sdk-exclude: true
  /vault/callback:
    get:
      description: >
        This endpoint gets called after the triggering the authorize flow.


        Callback links need a state and code parameter to verify the validity of
        the request.
      operationId: connectionsCallback
      parameters:
        - description: >-
            An opaque value the applications adds to the initial request that
            the authorization server includes when redirecting the back to the
            application. This value must be used by the application to prevent
            CSRF attacks.
          in: query
          name: state
          required: true
          type: string
          x-example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk
        - description: >-
            An authorization code from the connector which Apideck Vault will
            later exchange for an access token.
          in: query
          name: code
          required: true
          type: string
          x-example: g0ZGZmNjVmOWI
      produces:
        - application/json
      responses:
        '301':
          description: callback
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security: []
      summary: Callback
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY'
            })

            const params = {
              state:
                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk',
              code: 'g0ZGZmNjVmOWI'
            }

            try {
              const { data } = await apideck.vault.connectionsCallback(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
      x-sdk-exclude: true
  /vault/connections:
    get:
      description: >
        This endpoint includes all the configured integrations and contains the
        required assets

        to build an integrations page where your users can install integrations.

        OAuth2 supported integrations will contain authorize and revoke links to
        handle the authentication flows.
      operationId: connectionsAll
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Scope results to Unified API
          in: query
          name: api
          type: string
          x-example: crm
        - description: Scopes results to connections that have been configured or not
          in: query
          name: configured
          type: boolean
          x-example: true
      produces:
        - application/json
      responses:
        '200':
          description: Connections
          schema:
            $ref: '#/definitions/GetConnectionsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get all connections
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.connectionsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: connections
  '/vault/connections/{unified_api}/{service_id}':
    delete:
      description: Deletes a connection
      operationId: connectionsDelete
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
      produces:
        - application/json
      responses:
        '204':
          description: Resource deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Deletes a connection
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.connectionsDelete({
                serviceId: 'pipedrive',
                unifiedApi: 'crm'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: connectionsDelete
    get:
      description: Get a connection
      operationId: connectionsOne
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
      produces:
        - application/json
      responses:
        '200':
          description: Connection
          schema:
            $ref: '#/definitions/GetConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get connection
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.connectionsOne({
                serviceId: 'pipedrive',
                unifiedApi: 'crm'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update a connection
      operationId: connectionsUpdate
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
        - description: Fields that need to be updated on the resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Connection'
      produces:
        - application/json
      responses:
        '200':
          description: Connection updated
          schema:
            $ref: '#/definitions/UpdateConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update connection
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connection: {
                enabled: true,
                settings: {
                  instance_url: 'https://eu28.salesforce.com',
                  api_key: '12345xxxxxx'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                },
                configuration: [
                  {
                    resource: 'leads',
                    defaults: [
                      {
                        id: 'ProductInterest',
                        options: [Array],
                        value: 'GC5000 series'
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.vault.connectionsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    post:
      consumes:
        - application/json
      description: |
        Create an authorized connection
      operationId: connectionsAdd
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
        - description: Fields that need to be persisted on the resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Connection'
      produces:
        - application/json
      responses:
        '200':
          description: Connection created
          schema:
            $ref: '#/definitions/CreateConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create connection
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connection: {
                enabled: true,
                settings: {
                  instance_url: 'https://eu28.salesforce.com',
                  api_key: '12345xxxxxx'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                },
                configuration: [
                  {
                    resource: 'leads',
                    defaults: [
                      {
                        id: 'ProductInterest',
                        options: [Array],
                        value: 'GC5000 series'
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.vault.connectionsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
      x-sdk-exclude: true
  '/vault/connections/{unified_api}/{service_id}/import':
    post:
      consumes:
        - application/json
      description: |
        Import an authorized connection.
      operationId: connectionsImport
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
        - description: Fields that need to be persisted on the resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConnectionImportData'
      produces:
        - application/json
      responses:
        '200':
          description: Connection created
          schema:
            $ref: '#/definitions/CreateConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Import connection
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connection: {
                credentials: {
                  access_token:
                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c',
                  refresh_token:
                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ'
                },
                settings: {
                  instance_url: 'https://eu28.salesforce.com'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                }
              }
            }

            try {
              const { data } = await apideck.vault.connectionsImport(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
  '/vault/connections/{unified_api}/{service_id}/token':
    post:
      consumes:
        - application/json
      description: >
        Get an access token for a connection and store it in Vault. Currently
        only supported for connections with the client_credentials OAuth grant
        type.


        Note that the access token will not be returned in the response. A 200
        response code indicates a valid access token was stored on the
        connection.
      operationId: connectionsToken
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
        - in: body
          name: body
          schema:
            additionalProperties: false
            properties: {}
            type: object
      produces:
        - application/json
      responses:
        '200':
          description: Connection
          schema:
            $ref: '#/definitions/GetConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Access Token
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connectionsToken: {}
            }

            try {
              const { data } = await apideck.vault.connectionsToken(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
      x-sdk-exclude: true
  '/vault/connections/{unified_api}/{service_id}/{resource}/config':
    get:
      description: >
        This endpoint returns custom settings and their defaults required by
        connection for a given resource.
      operationId: connectionsGetSettings
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Resource Name
          in: path
          name: resource
          required: true
          type: string
          x-example: leads
      produces:
        - application/json
      responses:
        '200':
          description: Connection
          schema:
            $ref: '#/definitions/GetConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get resource settings
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              unifiedApi: 'crm',
              serviceId: 'pipedrive',
              resource: 'leads'
            }

            try {
              const { data } = await apideck.vault.connectionsGetSettings(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: connectionSettings
    patch:
      consumes:
        - application/json
      description: Update default values for a connection's resource settings
      operationId: connectionsUpdateSettings
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Unified API
          in: path
          name: unified_api
          required: true
          type: string
          x-example: crm
        - description: Resource Name
          in: path
          name: resource
          required: true
          type: string
          x-example: leads
        - description: Fields that need to be updated on the resource
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Connection'
      produces:
        - application/json
      responses:
        '200':
          description: Connection updated
          schema:
            $ref: '#/definitions/UpdateConnectionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update settings
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              resource: 'leads',
              connection: {
                enabled: true,
                settings: {
                  instance_url: 'https://eu28.salesforce.com',
                  api_key: '12345xxxxxx'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                },
                configuration: [
                  {
                    resource: 'leads',
                    defaults: [
                      {
                        id: 'ProductInterest',
                        options: [Array],
                        value: 'GC5000 series'
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.vault.connectionsUpdateSettings(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: connectionSettingsUpdate
  /vault/consumers:
    get:
      description: >
        This endpoint includes all application consumers, along with an
        aggregated count of requests made.
      operationId: consumersAll
      parameters:
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Consumers
          schema:
            $ref: '#/definitions/GetConsumersResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get all consumers
      tags:
        - Consumers
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.vault.consumersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: consumers
  '/vault/consumers/{consumer_id}':
    get:
      description: >
        Consumer detail including their aggregated counts with the connections
        they have authorized.
      operationId: consumersOne
      parameters:
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: ID of the consumer to return
          in: path
          name: consumer_id
          required: true
          type: string
          x-example: test_user_id
      produces:
        - application/json
      responses:
        '200':
          description: Consumer
          schema:
            $ref: '#/definitions/GetConsumerResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get consumer
      tags:
        - Consumers
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.vault.consumersOne({
                consumerId: 'test_user_id'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: consumer
  '/vault/consumers/{consumer_id}/stats':
    get:
      description: |
        Get consumer request counts within a given datetime range.
      operationId: consumersRequestCounts
      parameters:
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: ID of the consumer to return
          in: path
          name: consumer_id
          required: true
          type: string
          x-example: test_user_id
        - description: Scopes results to requests that happened after datetime
          in: query
          name: start_datetime
          required: true
          type: string
          x-example: '2021-05-01T12:00:00.000Z'
        - description: Scopes results to requests that happened before datetime
          in: query
          name: end_datetime
          required: true
          type: string
          x-example: '2021-05-30T12:00:00.000Z'
      produces:
        - application/json
      responses:
        '200':
          description: Consumers Request Counts within Date Range
          schema:
            $ref: '#/definitions/ConsumerRequestCountsInDateRangeResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Consumer request counts
      tags:
        - Consumers
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              consumerId: 'test_user_id',
              startDatetime: '2021-05-01T12:00:00.000Z',
              endDatetime: '2021-05-30T12:00:00.000Z'
            }

            try {
              const { data } = await apideck.vault.consumersRequestCounts(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: consumersRequestCounts
  /vault/logs:
    get:
      description: |
        This endpoint includes all consumer request logs.
      operationId: logsAll
      parameters:
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: Filter results
          in: query
          name: filter
          type: object
          x-graphql-type-name: LogsFilter
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Logs
          schema:
            $ref: '#/definitions/GetLogsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get all consumer request logs
      tags:
        - Logs
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.logsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: logs
  '/vault/revoke/{service_id}/{application_id}':
    get:
      description: >
        __In most cases the authorize link is provided in the ``/connections``
        endpoint. Normally you don't need to manually generate these links.__


        Use this endpoint to revoke an existing OAuth connector.


        Auth links will have a state parameter included to verify the validity
        of the request. This is the url your users will use to activate OAuth
        supported integration providers.


        Vault handles the complete revoke flow for you and will redirect you to
        the dynamic redirect uri you have appended to the url in case this is
        missing the default redirect uri you have configured for your Unify
        application.
      operationId: connectionsRevoke
      parameters:
        - description: Service ID of the resource to return
          in: path
          name: service_id
          required: true
          type: string
          x-example: pipedrive
        - description: Application ID of the resource to return
          in: path
          name: application_id
          required: true
          type: string
        - description: >-
            An opaque value the applications adds to the initial request that
            the authorization server includes when redirecting the back to the
            application. This value must be used by the application to prevent
            CSRF attacks.
          in: query
          name: state
          required: true
          type: string
          x-example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk
        - description: >-
            URL to redirect back to after authorization. When left empty the
            default configured redirect uri will be used.
          in: query
          name: redirect_uri
          required: true
          type: string
          x-example: 'http://example.com/integrations'
      produces:
        - application/json
      responses:
        '301':
          description: redirect
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security: []
      summary: Revoke
      tags:
        - Connections
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY'
            })

            const params = {
              serviceId: 'pipedrive',
              applicationId: 'application_id_example',
              state:
                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk',
              redirectUri: 'http://example.com/integrations'
            }

            try {
              const { data } = await apideck.vault.connectionsRevoke(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-exclude: true
      x-sdk-exclude: true
  /vault/sessions:
    post:
      consumes:
        - application/json
      description: >
        Making a POST request to this endpoint will initiate a Hosted Vault
        session. Redirect the consumer to the returned

        url to allow temporary access to manage their integrations and settings.


        Note: This is a short lived token that will expire after 1 hour (TTL:
        3600).
      operationId: sessionsCreate
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: Additional redirect uri and/or consumer metadata
          in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Session'
      produces:
        - application/json
      responses:
        '200':
          description: Session created
          schema:
            $ref: '#/definitions/CreateSessionResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Session
      tags:
        - Sessions
      x-apideck-api: vault
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              session: {
                consumer_metadata: {
                  account_name: 'SpaceX',
                  user_name: 'Elon Musk',
                  email: 'elon@musk.com',
                  image: 'https://www.spacex.com/static/images/share.jpg'
                },
                custom_consumer_settings: {
                  feature_flag_1: true,
                  tax_rates: [
                    {
                      id: '6',
                      label: '6%'
                    },
                    {
                      id: '21',
                      label: '21%'
                    }
                  ]
                },
                redirect_uri: 'https://mysaas.com/dashboard',
                settings: {
                  unified_apis: ['crm'],
                  hide_resource_settings: false,
                  sandbox_mode: false,
                  isolation_mode: false,
                  session_length: '30m',
                  show_logs: true,
                  show_suggestions: false,
                  auto_redirect: false
                },
                theme: {
                  favicon: 'https://res.cloudinary.com/apideck/icons/intercom',
                  primary_color: '#286efa',
                  privacy_url: 'https://compliance.apideck.com/privacy-policy',
                  sidepanel_background_color: '#286efa',
                  sidepanel_text_color: '#FFFFFF',
                  terms_url: 'https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e',
                  vault_name: 'Intercom'
                }
              }
            }

            try {
              const { data } = await apideck.vault.sessionsCreate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
schemes:
  - https
security:
  - apiKey: []
    applicationId: []
securityDefinitions:
  apiKey:
    description: >
      To use API you have to sign up and get your own API key. Unify API
      accounts have sandbox mode and live mode API keys. 

      To change modes just use the appropriate key to get a live or test object.
      You can find your API keys on the unify settings of your Apideck app.

      Your Apideck application_id can also be found on the same page.


      Authenticate your API requests by including your test or live secret API
      key in the request header. 


      - Bearer authorization header: `Authorization: Bearer
      <your-apideck-api-key>`

      - Application id header: `x-apideck-app-id: <your-apideck-app-id>`


      You should use the public keys on the SDKs and the secret keys to
      authenticate API requests.


      **Do not share or include your secret API keys on client side code.** Your
      API keys carry significant privileges. Please ensure to keep them 100%
      secure and be sure to not share your secret API keys in areas that are
      publicly accessible like GitHub.


      Learn how to set the Authorization header inside Postman
      https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key


      Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    in: header
    name: Authorization
    type: apiKey
  applicationId:
    description: The ID of your Unify application
    in: header
    name: x-apideck-app-id
    type: apiKey
swagger: '2.0'
tags:
  - description: ''
    name: Sessions
    x-apideck-model:
      $ref: '#/definitions/Session'
  - description: ''
    name: Connections
    x-apideck-model:
      $ref: '#/definitions/Connection'
  - description: ''
    name: Consumers
    x-apideck-model:
      $ref: '#/definitions/Consumer'
  - description: ''
    name: Logs
    x-apideck-model:
      $ref: '#/definitions/Log'
x-components:
  parameters:
    api:
      description: Scope results to Unified API
      in: query
      name: api
      type: string
      x-example: crm
    application_id:
      description: Application ID of the resource to return
      in: path
      name: application_id
      required: true
      type: string
    code:
      description: >-
        An authorization code from the connector which Apideck Vault will later
        exchange for an access token.
      in: query
      name: code
      required: true
      type: string
      x-example: g0ZGZmNjVmOWI
    configured:
      description: Scopes results to connections that have been configured or not
      in: query
      name: configured
      type: boolean
      x-example: true
    consumer_id:
      description: ID of the consumer to return
      in: path
      name: consumer_id
      required: true
      type: string
      x-example: test_user_id
    cursor:
      description: >-
        Cursor to start from. You can find cursors for next/previous pages in
        the meta.cursors property of the response.
      in: query
      name: cursor
      type: string
    end_datetime:
      description: Scopes results to requests that happened before datetime
      in: query
      name: end_datetime
      required: true
      type: string
      x-example: '2021-05-30T12:00:00.000Z'
    filter:
      description: Filter results
      in: query
      name: filter
      type: object
      x-graphql-type-name: LogsFilter
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      schema:
        type: string
    limit:
      default: 20
      description: Number of records to return
      in: query
      maximum: 200
      minimum: 1
      name: limit
      type: integer
    raw:
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      schema:
        default: false
        type: boolean
    redirect_uri:
      description: >-
        URL to redirect back to after authorization. When left empty the default
        configured redirect uri will be used.
      in: query
      name: redirect_uri
      required: true
      type: string
      x-example: 'http://example.com/integrations'
    resource:
      description: Resource Name
      in: path
      name: resource
      required: true
      type: string
      x-example: leads
    scope:
      collectionFormat: ssv
      description: >-
        One or more OAuth scopes to request from the connector. OAuth scopes
        control the set of resources and operations that are allowed after
        authorization. Refer to the connector's documentation for the available
        scopes.
      in: query
      items:
        type: string
      name: scope
      type: array
      x-example:
        - openid
        - 'leads:write'
        - 'profile:read'
    service_id:
      description: Service ID of the resource to return
      in: path
      name: service_id
      required: true
      type: string
      x-example: pipedrive
    start_datetime:
      description: Scopes results to requests that happened after datetime
      in: query
      name: start_datetime
      required: true
      type: string
      x-example: '2021-05-01T12:00:00.000Z'
    state:
      description: >-
        An opaque value the applications adds to the initial request that the
        authorization server includes when redirecting the back to the
        application. This value must be used by the application to prevent CSRF
        attacks.
      in: query
      name: state
      required: true
      type: string
      x-example: >-
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk
    unified_api:
      description: Unified API
      in: path
      name: unified_api
      required: true
      type: string
      x-example: crm
    x-apideck-app-id:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      type: string
    x-apideck-consumer-id:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      type: string
    x-apideck-downstream-authorization:
      description: >-
        Downstream authorization header. This will skip the Vault token
        injection.
      example: Bearer XXXXXXXXXXXXXXXXX
      in: header
      name: x-apideck-downstream-authorization
      required: false
      schema:
        type: string
    x-apideck-downstream-method:
      description: >-
        Downstream method. If not provided the upstream method will be
        inherited,
      example: POST
      in: header
      name: x-apideck-downstream-method
      required: false
      schema:
        type: string
    x-apideck-downstream-url:
      description: Downstream URL
      example: 'https://api.twilio.com'
      in: header
      name: x-apideck-downstream-url
      required: true
      schema:
        type: string
    x-apideck-service-id:
      description: >-
        Provide the service id you want to call (e.g., pipedrive). [See the full
        list in the connector section.](#section/Connectors) Only needed when a
        consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      required: true
      schema:
        type: string
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/BadRequestResponse'
      description: Bad Request
    ConsumerRequestCountsInDateRangeResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ConsumerRequestCountsInDateRangeResponse'
      description: Consumers Request Counts within Date Range
    CreateConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateConnectionResponse'
      description: Connection created
    CreateSessionResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateSessionResponse'
      description: Session created
    Created:
      content:
        application/json:
          example: {}
          schema: {}
      description: Resource created
    Deleted:
      content:
        application/json:
          example: {}
          schema: {}
      description: Resource successfully deleted
    GetConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetConnectionResponse'
      description: Connection
    GetConnectionsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetConnectionsResponse'
      description: Connections
    GetConsumerResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetConsumerResponse'
      description: Consumer
    GetConsumersResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetConsumersResponse'
      description: Consumers
    GetLogsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetLogsResponse'
      description: Logs
    NoContent:
      content:
        application/json:
          example: {}
          schema: {}
      description: No content
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotImplementedResponse'
      description: Not Implemented
    Ok:
      content:
        application/json:
          example: {}
          schema: {}
      description: Ok
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
      description: Payment Required
    ProxyError:
      content:
        application/json:
          schema: {}
      description: Proxy error
      headers:
        x-apideck-downstream-error:
          schema:
            description: Indicates if the error returned in the body is from the downstream
            type: boolean
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnprocessableResponse'
      description: Unprocessable
    UpdateConnectionResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateConnectionResponse'
      description: Connection updated
    Updated:
      content:
        application/json:
          example: {}
          schema: {}
      description: Resource updated
x-webhooks:
  ConnectionCallable:
    post:
      description: Connection Callable
      operationId: connectionCallable
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: '#/definitions/VaultEventType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/ConnectionEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Connection Callable
      tags:
        - Webhook Events
  ConnectionCreated:
    post:
      description: Connection Created
      operationId: connectionCreated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: '#/definitions/VaultEventType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/ConnectionEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Connection Created
      tags:
        - Webhook Events
  ConnectionDeleted:
    post:
      description: Connection Deleted
      operationId: connectionDeleted
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: '#/definitions/VaultEventType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/ConnectionEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Connection Deleted
      tags:
        - Webhook Events
  ConnectionUpdated:
    post:
      description: Connection Updated
      operationId: connectionUpdated
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: '#/definitions/VaultEventType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/ConnectionEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Connection Updated
      tags:
        - Webhook Events
  TokenRefreshFailed:
    post:
      description: Attempt to refresh the connections access_token failed.
      operationId: connectionTokenRefreshFailed
      parameters:
        - description: The type of event that was triggered
          in: header
          name: x-apideck-event-type
          required: true
          schema:
            $ref: '#/definitions/VaultEventType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/definitions/ConnectionEvent'
      responses:
        '200':
          description: >-
            Return a 200 status to indicate that the data was received
            successfully
      summary: Token Refresh Failed
      tags:
        - Webhook Events
  x-sdk-exclude: true

