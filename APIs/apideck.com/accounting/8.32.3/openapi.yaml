basePath: /
definitions:
  AccountingCustomer:
    properties:
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      bank_accounts:
        items:
          $ref: '#/definitions/BankAccount'
        type: array
      company_name:
        $ref: '#/definitions/CompanyName'
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      display_id:
        description: Display ID
        example: EMP00101
        title: Display ID
        type: string
        x-nullable: true
      display_name:
        description: Display Name
        example: Windsurf Shop
        title: Display Name
        type: string
        x-nullable: true
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      first_name:
        $ref: '#/definitions/FirstName'
      id:
        $ref: '#/definitions/Id'
      individual:
        description: Is this an individual or business customer
        example: true
        title: Is individual
        type: boolean
        x-nullable: true
      last_name:
        $ref: '#/definitions/LastName'
      middle_name:
        $ref: '#/definitions/MiddleName'
      notes:
        description: Some notes about this customer
        example: Some notes about this customer
        title: Notes
        type: string
        x-nullable: true
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      row_version:
        $ref: '#/definitions/RowVersion'
      status:
        description: Customer status
        enum:
          - active
          - inactive
          - archived
          - gdpr-erasure-request
          - unknown
        example: active
        title: Status
        type: string
        x-graphql-type-name: CustomerStatus
        x-nullable: true
      suffix:
        $ref: '#/definitions/Suffix'
      tax_number:
        $ref: '#/definitions/TaxNumber'
      tax_rate:
        $ref: '#/definitions/LinkedTaxRate'
      title:
        $ref: '#/definitions/Title'
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      websites:
        items:
          $ref: '#/definitions/Website'
        type: array
    type: object
    x-graphql-type-name: Customer
  AccountingEventType:
    enum:
      - '*'
      - accounting.customer.created
      - accounting.customer.updated
      - accounting.customer.deleted
      - accounting.invoice.created
      - accounting.invoice.updated
      - accounting.invoice.deleted
      - accounting.invoice_item.created
      - accounting.invoice_item.updated
      - accounting.invoice_item.deleted
      - accounting.ledger_account.created
      - accounting.ledger_account.updated
      - accounting.ledger_account.deleted
      - accounting.tax_rate.created
      - accounting.tax_rate.updated
      - accounting.tax_rate.deleted
      - accounting.bill.created
      - accounting.bill.updated
      - accounting.bill.deleted
      - accounting.payment.created
      - accounting.payment.updated
      - accounting.payment.deleted
      - accounting.supplier.created
      - accounting.supplier.updated
      - accounting.supplier.deleted
    example: accounting.invoice.created
    type: string
  AccountingWebhookEvent:
    allOf:
      - properties:
          entity_id:
            description: The service provider's ID of the entity that triggered this event
            example: 123456ASDF
            type: string
          entity_type:
            description: The type entity that triggered this event
            example: Company
            type: string
          entity_url:
            description: The url to retrieve entity detail.
            example: 'https://unify.apideck.com/crm/contacts/123456'
            type: string
          event_id:
            description: Unique reference to this request event
            example: 9755c355-56c3-4a2f-a2da-86ff4411fccb
            type: string
          execution_attempt:
            description: The current count this request event has been attempted
            example: 2
            type: number
          occurred_at:
            description: ISO Datetime for when the original event occurred
            example: '2021-10-01T03:14:55.419Z'
            type: string
          service_id:
            description: Service provider identifier
            example: close
            type: string
        type: object
      - properties:
          event_type:
            $ref: '#/definitions/AccountingEventType'
        type: object
    x-sdk-exclude: true
  Active:
    example: true
    title: Is active
    type: boolean
    x-nullable: true
  Address:
    additionalProperties: false
    properties:
      city:
        description: Name of city.
        example: San Francisco
        type: string
        x-nullable: true
      contact_name:
        example: Elon Musk
        type: string
        x-nullable: true
      country:
        description: country code according to ISO 3166-1 alpha-2.
        example: US
        type: string
        x-nullable: true
      county:
        description: 'Address field that holds a sublocality, such as a county'
        example: Santa Clara
        type: string
        x-nullable: true
      email:
        example: elon@musk.com
        type: string
        x-nullable: true
      fax:
        example: 122-111-1111
        type: string
        x-nullable: true
      id:
        example: '123'
        type: string
        x-nullable: true
      latitude:
        example: '40.759211'
        type: string
        x-nullable: true
      line1:
        description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
        example: Main street
        type: string
        x-nullable: true
      line2:
        description: Line 2 of the address
        example: 'apt #'
        type: string
        x-nullable: true
      line3:
        description: Line 3 of the address
        example: 'Suite #'
        type: string
        x-nullable: true
      line4:
        description: Line 4 of the address
        example: delivery instructions
        type: string
        x-nullable: true
      longitude:
        example: '-73.984638'
        type: string
        x-nullable: true
      name:
        example: HQ US
        type: string
        x-nullable: true
      phone_number:
        example: 111-111-1111
        type: string
        x-nullable: true
      postal_code:
        description: Zip code or equivalent.
        example: '94104'
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      salutation:
        example: Mr
        type: string
        x-nullable: true
      state:
        description: Name of state
        example: CA
        type: string
        x-nullable: true
      street_number:
        description: Street number
        example: '25'
        type: string
        x-nullable: true
      string:
        example: '25 Spring Street, Blackburn, VIC 3130'
        title: The address string. Some APIs don't provide structured address data.
        type: string
        x-nullable: true
      type:
        enum:
          - primary
          - secondary
          - home
          - office
          - shipping
          - billing
          - other
        example: primary
        type: string
        x-graphql-type-name: AddressType
      website:
        example: 'https://elonmusk.com'
        type: string
        x-nullable: true
    type: object
  BadRequestResponse:
    properties:
      detail:
        anyOf:
          - example: Missing property foobar
            type: string
          - example:
              missing:
                - foobar: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestvalidationerror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestValidationError
        type: string
  BalanceSheet:
    additionalProperties: false
    properties:
      assets:
        example:
          current_assets:
            accounts:
              - id: '1'
                name: Accounts Receivable (A/R)
                value: 10000
              - id: '2'
                name: Accounts Payable (A/P)
                value: 10000
            total: 100000
          fixed_assets:
            accounts:
              - id: '1'
                name: Accounts Receivable (A/R)
                value: 10000
              - id: '2'
                name: Accounts Payable (A/P)
                value: 10000
            total: 100000
          total: 200000
        properties:
          current_assets:
            properties:
              accounts:
                items:
                  properties:
                    id:
                      $ref: '#/definitions/Id'
                    name:
                      description: The name of the current asset account
                      example: Accounts Receivable (A/R)
                      title: Account Name
                      type: string
                    value:
                      description: The value of the current asset
                      example: 10000
                      title: Value
                      type: number
                  type: object
                  x-graphql-type-name: CurrentAssetAccountsList
                type: array
              total:
                description: Total current assets
                example: 100000
                title: Total Current Assets
                type: number
            required:
              - total
              - accounts
            type: object
          fixed_assets:
            properties:
              accounts:
                items:
                  properties:
                    id:
                      $ref: '#/definitions/Id'
                    name:
                      description: The name of the fixed asset account
                      example: Accounts Receivable (A/R)
                      title: Account Name
                      type: string
                    value:
                      description: The value of the fixed asset
                      example: 10000
                      title: Value
                      type: number
                  type: object
                  x-graphql-type-name: FixedAssetAccountsList
                type: array
              total:
                description: Total fixed assets
                example: 100000
                title: Total Fixed Assets
                type: number
            required:
              - total
              - accounts
            type: object
          total:
            description: Total assets
            example: 100000
            title: Total Assets
            type: number
        required:
          - total
          - current_assets
          - fixed_assets
        type: object
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      equity:
        example:
          items:
            - id: '1'
              name: Retained Earnings
              value: 10000
          total: 200000
        properties:
          items:
            items:
              properties:
                id:
                  $ref: '#/definitions/Id'
                name:
                  description: The type of the equity
                  example: Retained Earnings
                  title: Account Name
                  type: string
                value:
                  description: The equity amount
                  example: 10000
                  title: Value
                  type: number
              type: object
              x-graphql-type-name: EquityItemsList
            type: array
          total:
            description: Total equity
            example: 100000
            title: Total Equity
            type: number
        required:
          - total
          - items
        type: object
      id:
        $ref: '#/definitions/Id'
      liabilities:
        example:
          accounts:
            - id: '1'
              name: Accounts Payable (A/P)
              value: 10000
          total: 200000
        properties:
          accounts:
            items:
              properties:
                id:
                  $ref: '#/definitions/Id'
                name:
                  description: The name of the liability account
                  example: Accounts Payable (A/P)
                  title: Account Name
                  type: string
                value:
                  description: The value of the liability
                  example: 10000
                  title: Value
                  type: number
              type: object
              x-graphql-type-name: LiabilityAccountsList
            type: array
          total:
            description: Total liabilities
            example: 100000
            title: Total Liabilities
            type: number
        required:
          - total
          - accounts
        type: object
      report_name:
        description: The name of the report
        example: BalanceSheet
        title: Report Name
        type: string
      start_date:
        description: The start date of the report
        example: '2017-01-01T00:00:00.000Z'
        pattern: '^\d{4}-\d{2}-\d{2}$'
        title: Start Date
        type: string
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    required:
      - report_name
      - start_date
      - assets
      - liabilities
      - equity
    type: object
  BankAccount:
    additionalProperties: false
    properties:
      account_name:
        description: The name which you used in opening your bank account.
        example: SPACEX LLC
        title: Bank Account Name
        type: string
        x-nullable: true
      account_number:
        description: >-
          A bank account number is a number that is tied to your bank account.
          If you have several bank accounts, such as personal, joint, business
          (and so on), each account will have a different account number.
        example: '123465'
        title: Bank Account Number
        type: string
        x-nullable: true
      account_type:
        description: The type of bank account.
        enum:
          - bank_account
          - credit_card
          - other
        example: credit_card
        title: Account Type
        type: string
        x-nullable: true
      bank_code:
        description: >-
          A bank code is a code assigned by a central bank, a bank supervisory
          body or a Bankers Association in a country to all its licensed member
          banks or financial institutions.
        example: BNH
        title: Bank Code
        type: string
        x-nullable: true
      bic:
        example: AUDSCHGGXXX
        type: string
        x-nullable: true
      branch_identifier:
        description: >-
          A branch identifier is a unique identifier for a branch of a bank or
          financial institution.
        example: '001'
        title: Branch Identifier
        type: string
        x-nullable: true
      bsb_number:
        description: >-
          A BSB is a 6 digit numeric code used for identifying the branch of an
          Australian or New Zealand bank or financial institution.
        example: 062-001
        title: BSB Number
        type: string
        x-nullable: true
      currency:
        $ref: '#/definitions/Currency'
      iban:
        example: CH2989144532982975332
        type: string
        x-nullable: true
    type: object
  Bill:
    additionalProperties: false
    properties:
      balance:
        description: Balance of bill due.
        example: 27500
        title: Balance
        type: number
        x-nullable: true
      bill_date:
        description: Date bill was issued - YYYY-MM-DD.
        example: '2020-09-30T00:00:00.000Z'
        format: date
        title: Bill date
        type: string
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      currency_rate:
        $ref: '#/definitions/CurrencyRate'
      deposit:
        description: Amount of deposit made to this bill.
        example: 0
        title: Deposit
        type: number
        x-nullable: true
      downstream_id:
        $ref: '#/definitions/DownstreamId'
      due_date:
        description: >-
          The due date is the date on which a payment is scheduled to be
          received by the supplier - YYYY-MM-DD.
        example: '2020-10-30T00:00:00.000Z'
        format: date
        title: Due date
        type: string
      id:
        $ref: '#/definitions/Id'
      ledger_account:
        $ref: '#/definitions/LinkedLedgerAccount'
      line_items:
        items:
          $ref: '#/definitions/BillLineItem'
        type: array
      notes:
        example: Some notes about this bill.
        title: Notes
        type: string
        x-nullable: true
      paid_date:
        description: >-
          The paid date is the date on which a payment was sent to the supplier
          - YYYY-MM-DD.
        example: '2020-10-30T00:00:00.000Z'
        format: date
        title: Paid date
        type: string
        x-nullable: true
      po_number:
        description: >-
          A PO Number uniquely identifies a purchase order and is generally
          defined by the buyer. The buyer will match the PO number in the
          invoice to the Purchase Order.
        example: '90000117'
        title: Purchase Order number
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      status:
        description: Invoice status
        enum:
          - draft
          - submitted
          - authorised
          - partially_paid
          - paid
          - void
          - credit
          - deleted
        example: draft
        title: Status
        type: string
        x-nullable: true
      sub_total:
        description: 'Sub-total amount, normally before tax.'
        example: 27500
        title: Sub-total amount
        type: number
        x-nullable: true
      supplier:
        $ref: '#/definitions/LinkedSupplier'
      tax_code:
        description: >-
          Applicable tax id/code override if tax is not supplied on a line item
          basis.
        example: '1234'
        title: Tax Code
        type: string
        x-nullable: true
      tax_inclusive:
        $ref: '#/definitions/TaxInclusive'
      terms:
        description: Terms of payment.
        example: Net 30 days
        title: Terms
        type: string
        x-nullable: true
      total:
        description: 'Total amount of bill, including tax.'
        example: 27500
        title: Total amount
        type: number
        x-nullable: true
      total_tax:
        description: Total tax amount applied to this bill.
        example: 2500
        title: Total tax amount
        type: number
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  BillLineItem:
    additionalProperties: false
    properties:
      code:
        description: User defined item code
        example: 120-C
        title: Item code
        type: string
        x-nullable: true
      description:
        description: User defined description
        example: >-
          Model Y is a fully electric, mid-size SUV, with seating for up to
          seven, dual motor AWD and unparalleled protection.
        title: Description
        type: string
        x-nullable: true
      discount_percentage:
        description: Discount percentage
        example: 0.01
        title: Discount amount
        type: number
        x-nullable: true
      id:
        $ref: '#/definitions/Id'
      item:
        $ref: '#/definitions/LinkedInvoiceItem'
      ledger_account:
        $ref: '#/definitions/LinkedLedgerAccount'
      line_number:
        description: Line number in the invoice
        example: 1
        title: Line number
        type: integer
        x-nullable: true
      quantity:
        $ref: '#/definitions/Quantity'
      row_id:
        description: Row ID
        example: '12345'
        title: Row ID
        type: string
      row_version:
        $ref: '#/definitions/RowVersion'
      tax_amount:
        description: Tax amount
        example: 27500
        title: Tax amount
        type: number
        x-nullable: true
      tax_rate:
        $ref: '#/definitions/LinkedTaxRate'
      total_amount:
        description: Total amount of the line item
        example: 27500
        title: Total amount
        type: number
        x-nullable: true
      type:
        description: Bill Line Item type
        enum:
          - expense_item
          - expense_account
        example: expense_account
        title: Type
        type: string
        x-graphql-type-name: BillLineItemType
        x-nullable: true
      unit_of_measure:
        $ref: '#/definitions/UnitOfMeasure'
      unit_price:
        $ref: '#/definitions/UnitPrice'
    type: object
  Company:
    additionalProperties: false
    properties:
      abn_branch:
        description: >-
          An ABN Branch (also known as a GST Branch) is used if part of your
          business needs to account for GST separately from its parent entity.
        example: '123'
        title: ABN Branch
        type: string
        x-nullable: true
      abn_or_tfn:
        description: >-
          An ABN is necessary for operating a business, while a TFN (Tax File
          Number) is required for any person working in Australia.
        example: 46 115 614 695
        title: ABN or TFN
        type: string
        x-nullable: true
      acn:
        description: >-
          The Australian Company Number (ACN) is a nine digit number with the
          last digit being a check digit calculated using a modified modulus 10
          calculation. ASIC has adopted a convention of always printing and
          displaying the ACN in the format XXX XXX XXX; three blocks of three
          characters, each block separated by a blank.
        example: XXX XXX XXX
        title: ACN
        type: string
        x-nullable: true
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      annual_revenue:
        description: Annual revenue
        example: +$35m
        type: string
        x-nullable: true
      bank_accounts:
        items:
          $ref: '#/definitions/BankAccount'
        type: array
      created_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        readOnly: true
        type: string
      created_by:
        example: '12345'
        readOnly: true
        type: string
        x-nullable: true
      currency:
        $ref: '#/definitions/Currency'
      custom_fields:
        items:
          $ref: '#/definitions/CustomField'
        type: array
      deleted:
        example: false
        readOnly: true
        type: boolean
      description:
        example: >-
          Space Exploration Technologies Corp. is an American aerospace
          manufacturer, space transportation services and communications company
          headquartered in Hawthorne, California.
        type: string
        x-nullable: true
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      fax:
        example: '+12129876543'
        type: string
        x-nullable: true
      first_name:
        $ref: '#/definitions/FirstName'
      id:
        example: '12345'
        readOnly: true
        type: string
      image:
        example: 'https://www.spacex.com/static/images/share.jpg'
        type: string
        x-nullable: true
      industry:
        description: Industry
        example: Apparel
        type: string
        x-nullable: true
      interaction_count:
        example: 1
        readOnly: true
        type: integer
        x-nullable: true
      last_activity_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        readOnly: true
        type: string
        x-nullable: true
      last_name:
        $ref: '#/definitions/LastName'
      name:
        example: SpaceX
        minLength: 1
        type: string
      number_of_employees:
        description: Number of employees
        example: 500-1000
        type: string
        x-nullable: true
      owner_id:
        example: '12345'
        type: string
      ownership:
        description: Ownership
        example: Public
        type: string
        x-nullable: true
      parent_id:
        description: Parent ID
        example: '22345'
        readOnly: true
        type: string
      payee_number:
        example: 78932EN
        title: Payee number
        type: string
        x-nullable: true
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      read_only:
        example: false
        title: Read-only
        type: boolean
        x-nullable: true
      row_type:
        properties:
          id:
            example: '12345'
            type: string
          name:
            example: Customer Account
            type: string
        title: Company Row Type
        type: object
        x-graphql-type-name: CompanyRowType
      sales_tax_number:
        example: 12456EN
        title: Sales tax number
        type: string
        x-nullable: true
      social_links:
        items:
          $ref: '#/definitions/SocialLink'
        type: array
      status:
        example: Open
        type: string
        x-nullable: true
      tags:
        $ref: '#/definitions/Tags'
      updated_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        readOnly: true
        type: string
      updated_by:
        example: '12345'
        readOnly: true
        type: string
        x-nullable: true
      vat_number:
        description: VAT number
        example: BE0689615164
        type: string
        x-nullable: true
      websites:
        items:
          $ref: '#/definitions/Website'
        type: array
    required:
      - name
    type: object
  CompanyInfo:
    additionalProperties: false
    properties:
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      company_name:
        $ref: '#/definitions/CompanyName'
      company_start_date:
        description: Date when company file was created
        example: '2015-06-05T00:00:00.000Z'
        format: date
        title: Date when company file was created
        type: string
      country:
        description: country code according to ISO 3166-1 alpha-2.
        example: US
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      default_sales_tax:
        $ref: '#/definitions/LinkedTaxRate'
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      fiscal_year_start_month:
        description: The start month of fiscal year.
        enum:
          - January
          - February
          - March
          - April
          - May
          - June
          - July
          - August
          - September
          - October
          - November
          - December
        example: January
        title: The start month of fiscal year.
        type: string
      id:
        $ref: '#/definitions/Id'
      language:
        $ref: '#/definitions/Language'
      legal_name:
        description: The legal name of the company
        example: SpaceX Inc.
        title: Legal name
        type: string
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      row_version:
        $ref: '#/definitions/RowVersion'
      sales_tax_enabled:
        description: Whether sales tax is enabled for the company
        title: Sales tax enabled
        type: boolean
      sales_tax_number:
        $ref: '#/definitions/SalesTaxNumber'
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  CompanyName:
    example: SpaceX
    title: Company name
    type: string
    x-nullable: true
  Contact:
    additionalProperties: false
    properties:
      active:
        example: true
        nullable: true
        type: boolean
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      birthday:
        example: '2000-08-12T00:00:00.000Z'
        nullable: true
        type: string
      company_id:
        example: '23456'
        nullable: true
        type: string
      company_name:
        example: '23456'
        nullable: true
        type: string
      created_at:
        example: '2017-08-12T20:43:21.291Z'
        format: date-time
        readOnly: true
        type: string
      current_balance:
        example: 10.5
        nullable: true
        title: Current Balance
        type: number
      custom_fields:
        items:
          $ref: '#/definitions/CustomField'
        type: array
      department:
        example: Engineering
        nullable: true
        type: string
      description:
        example: Internal champion
        nullable: true
        title: Description
        type: string
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      fax:
        example: '+12129876543'
        nullable: true
        type: string
      first_call_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        nullable: true
        readOnly: true
        type: string
      first_email_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        nullable: true
        readOnly: true
        type: string
      first_name:
        example: Elon
        nullable: true
        type: string
      gender:
        enum:
          - male
          - female
          - unisex
        example: female
        nullable: true
        type: string
      id:
        example: '12345'
        readOnly: true
        type: string
      image:
        deprecated: true
        example: 'https://unavatar.io/elon-musk'
        nullable: true
        type: string
      language:
        description: language code according to ISO 639-1. For the United States - EN
        example: EN
        nullable: true
        type: string
      last_activity_at:
        example: '2020-09-30T07:43:32.000Z'
        format: date-time
        nullable: true
        readOnly: true
        type: string
      last_name:
        example: Musk
        nullable: true
        type: string
      lead_id:
        example: '34567'
        nullable: true
        type: string
      lead_source:
        example: Cold Call
        nullable: true
        type: string
      middle_name:
        example: D.
        nullable: true
        type: string
      name:
        example: Elon Musk
        minLength: 1
        type: string
      owner_id:
        example: '54321'
        nullable: true
        type: string
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      photo_url:
        example: 'https://unavatar.io/elon-musk'
        nullable: true
        title: Photo URL
        type: string
      prefix:
        example: Mr.
        nullable: true
        type: string
      social_links:
        items:
          $ref: '#/definitions/SocialLink'
        type: array
      status:
        example: open
        nullable: true
        type: string
      suffix:
        example: PhD
        nullable: true
        type: string
      tags:
        $ref: '#/definitions/Tags'
      title:
        example: CEO
        nullable: true
        type: string
      type:
        enum:
          - customer
          - supplier
          - employee
          - personal
        example: personal
        nullable: true
        type: string
      updated_at:
        example: '2017-08-12T20:43:21.291Z'
        format: date-time
        readOnly: true
        type: string
      websites:
        items:
          $ref: '#/definitions/Website'
        type: array
    required:
      - name
    x-pii:
      - name
      - first_name
      - middle_name
      - last_name
      - email
  CreateBillResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: delete
        type: string
      resource:
        description: Unified API resource name
        example: bills
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateCustomerResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: customers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateInvoiceItemResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoice-items
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateInvoiceResponse:
    properties:
      data:
        $ref: '#/definitions/InvoiceResponse'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoices
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateLedgerAccountResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ledger-accounts
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreatePaymentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: add
        type: string
      resource:
        description: Unified API resource name
        example: payments
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateSupplierResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: add
        type: string
      resource:
        description: Unified API resource name
        example: payments
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreateTaxRateResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: tax-rates
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  CreatedAt:
    example: '2020-09-30T07:43:32.000Z'
    format: date-time
    readOnly: true
    title: Created at (timestamp)
    type: string
  CreatedBy:
    example: '12345'
    readOnly: true
    title: Created by
    type: string
    x-nullable: true
  Currency:
    description: >-
      Indicates the associated currency for an amount of money. Values
      correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
    enum:
      - UNKNOWN_CURRENCY
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYR
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LTL
      - LVL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRO
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STD
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRC
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - USS
      - UYI
      - UYU
      - UZS
      - VEF
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XTS
      - XXX
      - YER
      - ZAR
      - ZMK
      - ZMW
      - BTC
    example: USD
    title: Currency
    type: string
    x-enum-elements:
      - description: Unknown currency
        name: UNKNOWN_CURRENCY
      - description: United Arab Emirates dirham
        name: AED
      - description: Afghan afghani
        name: AFN
      - description: Albanian lek
        name: ALL
      - description: Armenian dram
        name: AMD
      - description: Netherlands Antillean guilder
        name: ANG
      - description: Angolan kwanza
        name: AOA
      - description: Argentine peso
        name: ARS
      - description: Australian dollar
        name: AUD
      - description: Aruban florin
        name: AWG
      - description: Azerbaijani manat
        name: AZN
      - description: Bosnia and Herzegovina convertible mark
        name: BAM
      - description: Barbados dollar
        name: BBD
      - description: Bangladeshi taka
        name: BDT
      - description: Bulgarian lev
        name: BGN
      - description: Bahraini dinar
        name: BHD
      - description: Burundian franc
        name: BIF
      - description: Bermudian dollar
        name: BMD
      - description: Brunei dollar
        name: BND
      - description: Boliviano
        name: BOB
      - description: Bolivian Mvdol
        name: BOV
      - description: Brazilian real
        name: BRL
      - description: Bahamian dollar
        name: BSD
      - description: Bhutanese ngultrum
        name: BTN
      - description: Botswana pula
        name: BWP
      - description: Belarusian ruble
        name: BYR
      - description: Belize dollar
        name: BZD
      - description: Canadian dollar
        name: CAD
      - description: Congolese franc
        name: CDF
      - description: WIR Euro
        name: CHE
      - description: Swiss franc
        name: CHF
      - description: WIR Franc
        name: CHW
      - description: Unidad de Fomento
        name: CLF
      - description: Chilean peso
        name: CLP
      - description: Chinese yuan
        name: CNY
      - description: Colombian peso
        name: COP
      - description: Unidad de Valor Real
        name: COU
      - description: Costa Rican colon
        name: CRC
      - description: Cuban convertible peso
        name: CUC
      - description: Cuban peso
        name: CUP
      - description: Cape Verdean escudo
        name: CVE
      - description: Czech koruna
        name: CZK
      - description: Djiboutian franc
        name: DJF
      - description: Danish krone
        name: DKK
      - description: Dominican peso
        name: DOP
      - description: Algerian dinar
        name: DZD
      - description: Egyptian pound
        name: EGP
      - description: Eritrean nakfa
        name: ERN
      - description: Ethiopian birr
        name: ETB
      - description: Euro
        name: EUR
      - description: Fiji dollar
        name: FJD
      - description: Falkland Islands pound
        name: FKP
      - description: Pound sterling
        name: GBP
      - description: Georgian lari
        name: GEL
      - description: Ghanaian cedi
        name: GHS
      - description: Gibraltar pound
        name: GIP
      - description: Gambian dalasi
        name: GMD
      - description: Guinean franc
        name: GNF
      - description: Guatemalan quetzal
        name: GTQ
      - description: Guyanese dollar
        name: GYD
      - description: Hong Kong dollar
        name: HKD
      - description: Honduran lempira
        name: HNL
      - description: Croatian kuna
        name: HRK
      - description: Haitian gourde
        name: HTG
      - description: Hungarian forint
        name: HUF
      - description: Indonesian rupiah
        name: IDR
      - description: Israeli new shekel
        name: ILS
      - description: Indian rupee
        name: INR
      - description: Iraqi dinar
        name: IQD
      - description: Iranian rial
        name: IRR
      - description: Icelandic króna
        name: ISK
      - description: Jamaican dollar
        name: JMD
      - description: Jordanian dinar
        name: JOD
      - description: Japanese yen
        name: JPY
      - description: Kenyan shilling
        name: KES
      - description: Kyrgyzstani som
        name: KGS
      - description: Cambodian riel
        name: KHR
      - description: Comoro franc
        name: KMF
      - description: North Korean won
        name: KPW
      - description: South Korean won
        name: KRW
      - description: Kuwaiti dinar
        name: KWD
      - description: Cayman Islands dollar
        name: KYD
      - description: Kazakhstani tenge
        name: KZT
      - description: Lao kip
        name: LAK
      - description: Lebanese pound
        name: LBP
      - description: Sri Lankan rupee
        name: LKR
      - description: Liberian dollar
        name: LRD
      - description: Lesotho loti
        name: LSL
      - description: Lithuanian litas
        name: LTL
      - description: Latvian lats
        name: LVL
      - description: Libyan dinar
        name: LYD
      - description: Moroccan dirham
        name: MAD
      - description: Moldovan leu
        name: MDL
      - description: Malagasy ariary
        name: MGA
      - description: Macedonian denar
        name: MKD
      - description: Myanmar kyat
        name: MMK
      - description: Mongolian tögrög
        name: MNT
      - description: Macanese pataca
        name: MOP
      - description: Mauritanian ouguiya
        name: MRO
      - description: Mauritian rupee
        name: MUR
      - description: Maldivian rufiyaa
        name: MVR
      - description: Malawian kwacha
        name: MWK
      - description: Mexican peso
        name: MXN
      - description: Mexican Unidad de Inversion
        name: MXV
      - description: Malaysian ringgit
        name: MYR
      - description: Mozambican metical
        name: MZN
      - description: Namibian dollar
        name: NAD
      - description: Nigerian naira
        name: NGN
      - description: Nicaraguan córdoba
        name: NIO
      - description: Norwegian krone
        name: NOK
      - description: Nepalese rupee
        name: NPR
      - description: New Zealand dollar
        name: NZD
      - description: Omani rial
        name: OMR
      - description: Panamanian balboa
        name: PAB
      - description: Peruvian sol
        name: PEN
      - description: Papua New Guinean kina
        name: PGK
      - description: Philippine peso
        name: PHP
      - description: Pakistani rupee
        name: PKR
      - description: Polish złoty
        name: PLN
      - description: Paraguayan guaraní
        name: PYG
      - description: Qatari riyal
        name: QAR
      - description: Romanian leu
        name: RON
      - description: Serbian dinar
        name: RSD
      - description: Russian ruble
        name: RUB
      - description: Rwandan franc
        name: RWF
      - description: Saudi riyal
        name: SAR
      - description: Solomon Islands dollar
        name: SBD
      - description: Seychelles rupee
        name: SCR
      - description: Sudanese pound
        name: SDG
      - description: Swedish krona
        name: SEK
      - description: Singapore dollar
        name: SGD
      - description: Saint Helena pound
        name: SHP
      - description: Sierra Leonean leone
        name: SLL
      - description: Somali shilling
        name: SOS
      - description: Surinamese dollar
        name: SRD
      - description: South Sudanese pound
        name: SSP
      - description: São Tomé and Príncipe dobra
        name: STD
      - description: Salvadoran colón
        name: SVC
      - description: Syrian pound
        name: SYP
      - description: Swazi lilangeni
        name: SZL
      - description: Thai baht
        name: THB
      - description: Tajikstani somoni
        name: TJS
      - description: Turkmenistan manat
        name: TMT
      - description: Tunisian dinar
        name: TND
      - description: Tongan pa'anga
        name: TOP
      - description: Turkish lira
        name: TRY
      - description: Trinidad and Tobago dollar
        name: TTD
      - description: New Taiwan dollar
        name: TWD
      - description: Tanzanian shilling
        name: TZS
      - description: Ukrainian hryvnia
        name: UAH
      - description: Ugandan shilling
        name: UGX
      - description: United States dollar
        name: USD
      - description: United States dollar (next day)
        name: USN
      - description: United States dollar (same day)
        name: USS
      - description: Uruguay Peso en Unidedades Indexadas
        name: UYI
      - description: Uruguyan peso
        name: UYU
      - description: Uzbekistan som
        name: UZS
      - description: Venezuelan bolívar soberano
        name: VEF
      - description: Vietnamese đồng
        name: VND
      - description: Vanuatu vatu
        name: VUV
      - description: Samoan tala
        name: WST
      - description: CFA franc BEAC
        name: XAF
      - description: Silver
        name: XAG
      - description: Gold
        name: XAU
      - description: European Composite Unit
        name: XBA
      - description: European Monetary Unit
        name: XBB
      - description: European Unit of Account 9
        name: XBC
      - description: European Unit of Account 17
        name: XBD
      - description: East Caribbean dollar
        name: XCD
      - description: Special drawing rights (International Monetary Fund)
        name: XDR
      - description: CFA franc BCEAO
        name: XOF
      - description: Palladium
        name: XPD
      - description: CFP franc
        name: XPF
      - description: Platinum
        name: XPT
      - description: Code reserved for testing
        name: XTS
      - description: No currency
        name: XXX
      - description: Yemeni rial
        name: YER
      - description: South African rand
        name: ZAR
      - description: Zambian kwacha
        name: ZMK
      - description: Zambian kwacha
        name: ZMW
      - description: Bitcoin
        name: BTC
    x-nullable: true
  CurrencyRate:
    description: Currency Exchange Rate at the time entity was recorded/generated.
    example: 0.69
    title: Currency Exchange Rate
    type: number
    x-nullable: true
  CustomField:
    additionalProperties: false
    properties:
      description:
        description: More information about the custom field
        example: Employee Level
        title: Description
        type: string
      id:
        example: '2389328923893298'
        title: ID
        type: string
      name:
        description: Name of the custom field.
        example: employee_level
        title: Name
        type: string
      value: {}
    required:
      - id
    type: object
  CustomersFilter:
    additionalProperties: false
    example:
      company_name: SpaceX
      email: elon@musk.com
      last_name: Musk
    properties:
      company_name:
        description: Company Name of contact to search for
        example: SpaceX
        title: Company Name
        type: string
      email:
        description: Email of contact to search for
        example: elon@spacex.com
        title: Email
        type: string
      last_name:
        description: Last name of contact to search for
        example: Musk
        title: Last Name
        type: string
    type: object
    x-graphql-type-name: CustomersFilter
  DeleteBillResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: delete
        type: string
      resource:
        description: Unified API resource name
        example: bills
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteCustomerResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: customers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteInvoiceItemResponse:
    $ref: '#/definitions/DeleteTaxRateResponse'
  DeleteInvoiceResponse:
    properties:
      data:
        $ref: '#/definitions/InvoiceResponse'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoices
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteLedgerAccountResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ledger-accounts
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeletePaymentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: delete
        type: string
      resource:
        description: Unified API resource name
        example: payments
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteSupplierResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: delete
        type: string
      resource:
        description: Unified API resource name
        example: suppliers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DeleteTaxRateResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: tax-rates
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  DownstreamId:
    description: The third-party API ID of original entity
    example: '12345'
    readOnly: true
    type: string
    x-nullable: true
  Email:
    additionalProperties: false
    properties:
      email:
        example: elon@musk.com
        format: email
        minLength: 1
        type: string
      id:
        example: '123'
        type: string
      type:
        enum:
          - primary
          - secondary
          - work
          - personal
          - billing
          - other
        example: primary
        type: string
        x-graphql-type-name: EmailType
    required:
      - email
    type: object
  FirstName:
    example: Elon
    title: First name
    type: string
    x-nullable: true
  GetBalanceSheetResponse:
    properties:
      data:
        $ref: '#/definitions/BalanceSheet'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: BalanceSheets
        type: string
      service:
        description: Apideck ID of service provider
        example: quickbooks
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: BalanceSheet
  GetBillResponse:
    properties:
      data:
        $ref: '#/definitions/Bill'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: bills
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Bill
  GetBillsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Bill'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: all
        type: string
      resource:
        description: Unified API resource name
        example: bills
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: BillList
  GetCompanyInfoResponse:
    properties:
      data:
        $ref: '#/definitions/CompanyInfo'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: company-info
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: CompanyInfo
  GetCustomerResponse:
    properties:
      data:
        $ref: '#/definitions/AccountingCustomer'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: customers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  GetCustomersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/AccountingCustomer'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: customers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: CustomerList
  GetInvoiceItemResponse:
    properties:
      data:
        $ref: '#/definitions/InvoiceItem'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoice-items
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: InvoiceItem
  GetInvoiceItemsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/InvoiceItem'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoice-items
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: InvoiceItemList
  GetInvoiceResponse:
    properties:
      data:
        $ref: '#/definitions/Invoice'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoices
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Invoice
  GetInvoicesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Invoice'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoices
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: InvoiceList
  GetLedgerAccountResponse:
    properties:
      data:
        $ref: '#/definitions/LedgerAccount'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ledger-accounts
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: LedgerAccount
  GetLedgerAccountsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/LedgerAccount'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ledger-accounts
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: LedgerAccountList
  GetPaymentResponse:
    properties:
      data:
        $ref: '#/definitions/Payment'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: payments
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Payment
  GetPaymentsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Payment'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: all
        type: string
      resource:
        description: Unified API resource name
        example: payments
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: PaymentList
  GetSupplierResponse:
    properties:
      data:
        $ref: '#/definitions/Supplier'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: suppliers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: Supplier
  GetSuppliersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Supplier'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: all
        type: string
      resource:
        description: Unified API resource name
        example: suppliers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: SupplierList
  GetTaxRateResponse:
    properties:
      data:
        $ref: '#/definitions/TaxRate'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: tax-rates
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: TaxRateOne
  GetTaxRatesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/TaxRate'
        type: array
      links:
        $ref: '#/definitions/Links'
      meta:
        $ref: '#/definitions/Meta'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: tax-rates
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
    x-graphql-type-name: TaxRateList
  Id:
    example: '12345'
    readOnly: true
    type: string
  Invoice:
    additionalProperties: false
    properties:
      balance:
        description: Balance of invoice due.
        example: 27500
        title: Balance
        type: number
        x-nullable: true
      billing_address:
        $ref: '#/definitions/Address'
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      currency_rate:
        $ref: '#/definitions/CurrencyRate'
      customer:
        $ref: '#/definitions/LinkedCustomer'
      customer_memo:
        description: Customer memo
        example: Thank you for your business and have a great day!
        title: Customer memo
        type: string
        x-nullable: true
      deposit:
        description: Amount of deposit made to this invoice.
        example: 0
        title: Deposit
        type: number
        x-nullable: true
      downstream_id:
        $ref: '#/definitions/DownstreamId'
      due_date:
        description: >-
          The invoice due date is the date on which a payment or invoice is
          scheduled to be received by the seller - YYYY-MM-DD.
        example: '2020-10-30T00:00:00.000Z'
        format: date
        title: Due date
        type: string
      id:
        $ref: '#/definitions/Id'
      invoice_date:
        description: Date invoice was issued - YYYY-MM-DD.
        example: '2020-09-30T00:00:00.000Z'
        format: date
        title: Invoice date
        type: string
      invoice_sent:
        description: Invoice sent to contact/customer.
        example: true
        title: Invoice Sent
        type: boolean
      line_items:
        items:
          $ref: '#/definitions/InvoiceLineItem'
        type: array
      number:
        description: Invoice number.
        example: OIT00546
        title: Invoice number
        type: string
        x-nullable: true
      po_number:
        description: >-
          A PO Number uniquely identifies a purchase order and is generally
          defined by the buyer. The buyer will match the PO number in the
          invoice to the Purchase Order.
        example: '90000117'
        title: Purchase Order number
        type: string
        x-nullable: true
      reference:
        description: Optional invoice reference.
        example: '123456'
        title: Invoice reference
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      shipping_address:
        $ref: '#/definitions/Address'
      status:
        description: Invoice status
        enum:
          - draft
          - submitted
          - authorised
          - partially_paid
          - paid
          - void
          - credit
          - deleted
        example: draft
        title: Status
        type: string
        x-nullable: true
      sub_total:
        description: 'Sub-total amount, normally before tax.'
        example: 27500
        title: Sub-total amount
        type: number
        x-nullable: true
      tax_code:
        description: >-
          Applicable tax id/code override if tax is not supplied on a line item
          basis.
        example: '1234'
        title: Tax Code
        type: string
        x-nullable: true
      tax_inclusive:
        $ref: '#/definitions/TaxInclusive'
      template_id:
        description: Optional invoice template
        example: '123456'
        title: Template
        type: string
        x-nullable: true
      terms:
        description: Terms of payment.
        example: Net 30 days
        title: Terms
        type: string
        x-nullable: true
      total:
        description: 'Total amount of invoice, including tax.'
        example: 27500
        title: Total amount
        type: number
        x-nullable: true
      total_tax:
        description: Total tax amount applied to this invoice.
        example: 2500
        title: Total tax amount
        type: number
        x-nullable: true
      type:
        description: Invoice type
        enum:
          - standard
          - credit
          - service
          - product
          - supplier
          - other
        example: service
        title: Invoice type
        type: string
        x-graphql-type-name: InvoiceType
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  InvoiceItem:
    additionalProperties: false
    properties:
      active:
        $ref: '#/definitions/Active'
      asset_account:
        $ref: '#/definitions/LinkedLedgerAccount'
      code:
        description: User defined item code
        example: 120-C
        title: Item code
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      description:
        description: A short description of the item
        example: >-
          Model Y is a fully electric, mid-size SUV, with seating for up to
          seven, dual motor AWD and unparalleled protection.
        title: Description
        type: string
        x-nullable: true
      expense_account:
        $ref: '#/definitions/LinkedLedgerAccount'
      id:
        description: The ID of the item.
        example: '123456'
        readOnly: true
        title: Item ID
        type: string
      income_account:
        $ref: '#/definitions/LinkedLedgerAccount'
      inventory_date:
        description: The date of opening balance if inventory item is tracked - YYYY-MM-DD.
        example: '2020-10-30T00:00:00.000Z'
        format: date
        title: Inventory date
        type: string
        x-nullable: true
      name:
        description: Item name
        example: Model Y
        title: Item name
        type: string
        x-nullable: true
      purchase_details:
        properties:
          tax_inclusive:
            $ref: '#/definitions/TaxInclusive'
          tax_rate:
            $ref: '#/definitions/LinkedTaxRate'
          unit_of_measure:
            $ref: '#/definitions/UnitOfMeasure'
          unit_price:
            $ref: '#/definitions/UnitPrice'
        type: object
      purchased:
        description: Item is available for purchase transactions
        example: true
        title: Item purchased
        type: boolean
        x-nullable: true
      quantity:
        $ref: '#/definitions/Quantity'
      row_version:
        $ref: '#/definitions/RowVersion'
      sales_details:
        properties:
          tax_inclusive:
            $ref: '#/definitions/TaxInclusive'
          tax_rate:
            $ref: '#/definitions/LinkedTaxRate'
          unit_of_measure:
            $ref: '#/definitions/UnitOfMeasure'
          unit_price:
            $ref: '#/definitions/UnitPrice'
        type: object
      sold:
        description: Item will be available on sales transactions
        example: true
        title: Item sold
        type: boolean
        x-nullable: true
      tracked:
        description: Item is inventoried
        example: true
        title: Item tracked
        type: boolean
        x-nullable: true
      type:
        description: Item type
        enum:
          - inventory
          - service
          - other
        example: inventory
        title: Type
        type: string
        x-graphql-type-name: InvoiceItemType
        x-nullable: true
      unit_price:
        $ref: '#/definitions/UnitPrice'
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  InvoiceItemAssetAccount:
    $ref: '#/definitions/LinkedLedgerAccount'
  InvoiceItemExpenseAccount:
    $ref: '#/definitions/LinkedLedgerAccount'
  InvoiceItemIncomeAccount:
    $ref: '#/definitions/LinkedLedgerAccount'
  InvoiceItemsFilter:
    additionalProperties: false
    example:
      name: Widgets Large
    properties:
      name:
        description: Name of Invoice Items to search for
        example: Widgets Large
        title: Name
        type: string
    type: object
    x-graphql-type-name: InvoiceItemsFilter
  InvoiceLineItem:
    additionalProperties: false
    properties:
      code:
        description: User defined item code
        example: 120-C
        title: Item code
        type: string
        x-nullable: true
      description:
        description: User defined description
        example: >-
          Model Y is a fully electric, mid-size SUV, with seating for up to
          seven, dual motor AWD and unparalleled protection.
        title: Description
        type: string
        x-nullable: true
      discount_percentage:
        description: Discount percentage
        example: 0.01
        title: Discount amount
        type: number
        x-nullable: true
      id:
        $ref: '#/definitions/Id'
      item:
        $ref: '#/definitions/LinkedInvoiceItem'
      ledger_account:
        $ref: '#/definitions/LinkedLedgerAccount'
      line_number:
        description: Line number in the invoice
        example: 1
        title: Line number
        type: integer
        x-nullable: true
      quantity:
        $ref: '#/definitions/Quantity'
      row_id:
        description: Row ID
        example: '12345'
        title: Row ID
        type: string
      row_version:
        $ref: '#/definitions/RowVersion'
      tax_amount:
        description: Tax amount
        example: 27500
        title: Tax amount
        type: number
        x-nullable: true
      tax_rate:
        $ref: '#/definitions/LinkedTaxRate'
      total_amount:
        description: Total amount of the line item
        example: 27500
        title: Total amount
        type: number
        x-nullable: true
      type:
        description: Item type
        enum:
          - sales_item
          - discount
          - info
          - sub_total
        example: sales_item
        title: Type
        type: string
        x-graphql-type-name: InvoiceLineItemType
        x-nullable: true
      unit_of_measure:
        $ref: '#/definitions/UnitOfMeasure'
      unit_price:
        $ref: '#/definitions/UnitPrice'
    type: object
  InvoiceResponse:
    properties:
      downstream_id:
        $ref: '#/definitions/DownstreamId'
      id:
        $ref: '#/definitions/Id'
    type: object
  Language:
    description: language code according to ISO 639-1. For the United States - EN
    example: EN
    type: string
    x-nullable: true
  LastName:
    example: Musk
    title: Last name
    type: string
    x-nullable: true
  LedgerAccount:
    additionalProperties: true
    properties:
      active:
        description: Whether the account is active or not.
        example: true
        title: Is active
        type: boolean
        x-nullable: true
      bank_account:
        $ref: '#/definitions/BankAccount'
      categories:
        description: The categories of the account.
        items:
          properties:
            id:
              example: '12345'
              readOnly: true
              type: string
            name:
              description: The name of the category.
              example: Finance Charges Expense
              readOnly: true
              title: Category name
              type: string
        readOnly: true
        title: Categories
        type: array
      classification:
        description: The classification of account.
        enum:
          - asset
          - equity
          - expense
          - liability
          - revenue
          - income
          - other_income
          - other_expense
          - costs_of_sales
        example: asset
        title: Classification
        type: string
        x-nullable: true
      code:
        description: The code assigned to the account.
        example: '453'
        title: Code
        type: string
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      current_balance:
        description: The current balance of the account.
        example: 20000
        title: Current balance
        type: number
        x-nullable: true
      description:
        description: The description of the account.
        example: Main checking account
        title: Description
        type: string
        x-nullable: true
      display_id:
        description: The human readable display ID used when displaying the account
        example: 1-12345
        title: Display ID
        type: string
      fully_qualified_name:
        description: The fully qualified name of the account.
        example: Asset.Bank.Checking_Account
        title: Fully Qualified Name
        type: string
        x-nullable: true
      header:
        description: Whether the account is a header or not.
        example: true
        title: Is header
        type: boolean
        x-nullable: true
      id:
        $ref: '#/definitions/Id'
      last_reconciliation_date:
        description: >-
          Reconciliation Date means the last calendar day of each Reconciliation
          Period.
        example: '2020-09-30T00:00:00.000Z'
        format: date
        title: Last Reconciliation Date
        type: string
        x-nullable: true
      level:
        example: 1
        type: number
        x-nullable: true
      name:
        description: The name of the account.
        example: Bank account
        title: Name
        type: string
        x-nullable: true
      nominal_code:
        description: The nominal code of the ledger account.
        example: N091
        title: Nominal Code
        type: string
        x-deprecated: true
        x-nullable: true
      opening_balance:
        description: The opening balance of the account.
        example: 75000
        title: Opening balance
        type: number
        x-nullable: true
      parent_account:
        properties:
          display_id:
            description: >-
              The human readable display ID used when displaying the parent
              account
            example: 1-1100
            title: Display ID
            type: string
          id:
            description: The ID of the parent account.
            example: '12345'
            title: Parent account ID
            type: string
          name:
            description: The name of the parent account.
            example: Bank Accounts
            title: Name
            type: string
        type: object
      row_version:
        $ref: '#/definitions/RowVersion'
      status:
        description: The status of the account.
        enum:
          - active
          - inactive
          - archived
        example: active
        title: Account status
        type: string
        x-graphql-type-name: LedgerAccountStatus
        x-nullable: true
      sub_account:
        description: Whether the account is a sub account or not.
        example: false
        title: Is sub account
        type: boolean
        x-nullable: true
      sub_accounts:
        description: The sub accounts of the account.
        items:
          properties:
            account_sub_name:
              description: The name of the sub account.
              example: Petty Cash
              readOnly: true
              title: Sub Account Name
              type: string
            id:
              description: The ID of the sub account.
              example: '12345'
              readOnly: true
              title: Sub account ID
              type: string
        readOnly: true
        title: Sub accounts
        type: array
      sub_type:
        description: The sub type of account.
        example: CHECKING_ACCOUNT
        title: Sub Type
        type: string
        x-nullable: true
      tax_rate:
        $ref: '#/definitions/LinkedTaxRate'
      tax_type:
        description: The tax type of the account.
        example: NONE
        title: Tax Type
        type: string
        x-nullable: true
      type:
        description: The type of account.
        enum:
          - accounts_receivable
          - revenue
          - sales
          - other_income
          - bank
          - current_asset
          - fixed_asset
          - non_current_asset
          - other_asset
          - balancesheet
          - equity
          - expense
          - other_expense
          - costs_of_sales
          - accounts_payable
          - credit_card
          - current_liability
          - non_current_liability
          - other_liability
        example: bank
        title: Type
        type: string
        x-graphql-type-name: LedgerAccountType
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  LedgerAccounts:
    items:
      $ref: '#/definitions/LedgerAccount'
    type: array
  LinkedCustomer:
    description: The customer this entity is linked to.
    properties:
      company_name:
        description: The company name of the customer.
        example: The boring company
        readOnly: true
        title: Company Name
        type: string
        x-nullable: true
      display_id:
        description: The display ID of the customer.
        example: CUST00101
        readOnly: true
        title: Display ID
        type: string
        x-nullable: true
      display_name:
        description: The display name of the customer.
        example: Windsurf Shop
        title: Display Name
        type: string
        x-nullable: true
      id:
        description: The ID of the customer this entity is linked to.
        example: '12345'
        title: Customer ID
        type: string
    required:
      - id
    title: LinkedCustomer
    type: object
    x-graphql-type-name: AccountingLinkedCustomer
    x-nullable: true
  LinkedInvoiceItem:
    properties:
      code:
        description: User defined item code
        example: 120-C
        readOnly: true
        title: Item code
        type: string
        x-nullable: true
      id:
        description: >-
          ID of the linked item. A reference to the [invoice
          item](https://developers.apideck.com/apis/accounting/reference#tag/Invoice-Items)
          that was used to create this line item
        example: '12344'
        title: Item ID
        type: string
        x-nullable: true
      name:
        description: User defined item name
        example: Model Y
        readOnly: true
        title: Item name
        type: string
        x-nullable: true
    type: object
    x-graphql-type-name: LinkedInvoiceItem
  LinkedLedgerAccount:
    properties:
      code:
        description: The code assigned to the account.
        example: '453'
        title: Code
        type: string
        x-nullable: true
      id:
        description: The unique identifier for the account.
        example: '123456'
        title: Account ID
        type: string
      name:
        description: The name of the account.
        example: Bank account
        readOnly: true
        title: Account Name
        type: string
        x-nullable: true
      nominal_code:
        description: The nominal code of the account.
        example: N091
        title: Nominal Code
        type: string
        x-nullable: true
    type: object
    x-graphql-type-name: LinkedLedgerAccount
    x-nullable: true
  LinkedSupplier:
    description: The supplier this entity is linked to.
    properties:
      address:
        $ref: '#/definitions/Address'
      company_name:
        description: The company name of the supplier.
        example: The boring company
        readOnly: true
        title: Company Name
        type: string
        x-nullable: true
      display_name:
        description: The display name of the supplier.
        example: Windsurf Shop
        title: Display Name
        type: string
        x-nullable: true
      id:
        description: The ID of the supplier this entity is linked to.
        example: '12345'
        title: Supplier ID
        type: string
    required:
      - id
    title: LinkedSupplier
    type: object
    x-graphql-type-name: AccountingLinkedSupplier
    x-nullable: true
  LinkedTaxRate:
    properties:
      code:
        description: Tax rate code
        example: N-T
        readOnly: true
        title: Tax rate code
        type: string
        x-nullable: true
      id:
        description: The ID of the object.
        example: '123456'
        title: The ID of the object.
        type: string
        x-nullable: true
      name:
        description: Name of the tax rate
        example: GST on Purchases
        readOnly: true
        title: Name
        type: string
        x-nullable: true
    type: object
    x-graphql-type-name: LinkedTaxRate
  Links:
    description: Links to navigate to previous or next pages through the API
    properties:
      current:
        description: Link to navigate to the current page through the API
        example: 'https://unify.apideck.com/crm/companies'
        type: string
      next:
        description: Link to navigate to the previous page through the API
        example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
        type: string
        x-nullable: true
      previous:
        description: Link to navigate to the previous page through the API
        example: >-
          https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D
        type: string
        x-nullable: true
    type: object
  Meta:
    description: Response metadata
    properties:
      cursors:
        description: Cursors to navigate to previous or next pages through the API
        properties:
          current:
            description: Cursor to navigate to the current page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjI=
            type: string
            x-nullable: true
          next:
            description: Cursor to navigate to the next page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjM=
            type: string
            x-nullable: true
          previous:
            description: Cursor to navigate to the previous page of results through the API
            example: em9oby1jcm06OnBhZ2U6OjE=
            type: string
            x-nullable: true
        type: object
      items_on_page:
        description: Number of items returned in the data property of the response
        example: 50
        type: integer
    type: object
  MiddleName:
    example: D.
    title: Middle name
    type: string
    x-nullable: true
  NotFoundResponse:
    properties:
      detail:
        anyOf:
          - example: 'Could not find widget with id: ''123'''
            type: string
          - example:
              not_found:
                entity: widget
                id: '123'
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Found
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unknown Widget
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#entitynotfounderror'
        type: string
      status_code:
        description: HTTP status code
        example: 404
        type: number
      type_name:
        description: The type of error returned
        example: EntityNotFoundError
        type: string
  NotImplementedResponse:
    properties:
      detail:
        anyOf:
          - example: >-
              Failed to retrieve Widget tokenUrl from
              'components.securitySchemes.oauth2.flows'
            type: string
          - type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Not Implemented
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unmapped Attribute
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#mappingerror'
        type: string
      status_code:
        description: HTTP status code
        example: 501
        type: number
      type_name:
        description: The type of error returned
        example: MappingError
        type: string
  Passthrough:
    additionalProperties: true
    properties:
      example_downstream_property:
        description: >-
          All passthrough query parameters are passed along to the connector as
          is (?pass_through[search]=leads becomes ?search=leads)
        type: string
    type: object
  Payment:
    properties:
      account:
        $ref: '#/definitions/LinkedLedgerAccount'
      accounts_receivable_account_id:
        description: Unique identifier for the account to allocate payment to.
        example: '123456'
        title: Accounts receivable account id
        type: string
        x-deprecated: true
        x-nullable: true
      accounts_receivable_account_type:
        description: Type of accounts receivable account.
        example: Account
        title: Type of accounts receivable account
        type: string
        x-deprecated: true
        x-nullable: true
      allocations:
        items:
          properties:
            amount:
              description: >-
                Amount of payment that should be attributed to this allocation.
                If null, the total_amount will be used.
              example: 49.99
              nullable: true
              title: Amount
              type: number
            code:
              example: N091
              readOnly: true
              type: string
            id:
              description: >-
                Unique identifier of entity this payment should be attributed
                to.
              example: '123456'
              title: Linked entity ID
              type: string
            type:
              description: Type of entity this payment should be attributed to.
              enum:
                - invoice
                - order
                - expense
                - credit_memo
                - over_payment
                - pre_payment
              title: Allocation type
              type: string
              x-graphql-type-name: AllocationType
        type: array
      created_at:
        $ref: '#/definitions/CreatedAt'
      currency:
        $ref: '#/definitions/Currency'
      currency_rate:
        $ref: '#/definitions/CurrencyRate'
      customer:
        $ref: '#/definitions/LinkedCustomer'
      id:
        description: Unique identifier representing the entity
        example: '123456'
        readOnly: true
        title: Payment identifier
        type: string
      note:
        description: Optional note to be associated with the payment.
        example: Some notes about this payment
        title: Note
        type: string
        x-nullable: true
      payment_method:
        description: Payment method
        example: Credit Card
        title: Payment method
        type: string
        x-nullable: true
      payment_method_reference:
        description: Optional reference message returned by payment method on processing
        example: '123456'
        title: Payment method reference
        type: string
        x-nullable: true
      reconciled:
        description: Payment has been reconciled
        example: true
        title: Reconciled
        type: boolean
      reference:
        description: 'Optional payment reference message ie: Debit remittance detail.'
        example: '123456'
        title: Payment reference
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      status:
        description: Status of payment
        enum:
          - authorised
          - paid
          - voided
          - deleted
        example: authorised
        title: Payment status
        type: string
        x-graphql-type-name: PaymentStatus
      total_amount:
        description: Amount of payment
        example: 49.99
        title: Total amount
        type: number
      transaction_date:
        description: 'Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD'
        example: '2021-05-01T12:00:00.000Z'
        format: date-time
        title: Transaction datetime
        type: string
      type:
        description: Type of payment
        enum:
          - accounts_receivable
          - accounts_payable
          - accounts_receivable_credit
          - accounts_payable_credit
          - accounts_receivable_overpayment
          - accounts_payable_overpayment
          - accounts_receivable_prepayment
          - accounts_payable_prepayment
        example: accounts_receivable
        title: Payment Type
        type: string
        x-graphql-type-name: PaymentType
      updated_at:
        $ref: '#/definitions/UpdatedAt'
    required:
      - total_amount
      - transaction_date
    type: object
  PaymentRequiredResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: You have reached your limit of 2000
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Payment Required
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Request Limit Reached
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#requestlimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 402
        type: number
      type_name:
        description: The type of error returned
        example: RequestLimitError
        type: string
  PhoneNumber:
    additionalProperties: false
    properties:
      area_code:
        example: '323'
        title: Area code
        type: string
        x-nullable: true
      country_code:
        example: '1'
        title: Country code
        type: string
        x-nullable: true
      extension:
        example: '105'
        title: Phone extension
        type: string
        x-nullable: true
      id:
        example: '12345'
        type: string
        x-nullable: true
      number:
        example: 111-111-1111
        minLength: 1
        title: Phone number
        type: string
      type:
        enum:
          - primary
          - secondary
          - home
          - work
          - office
          - mobile
          - assistant
          - fax
          - direct-dial-in
          - personal
          - other
        example: primary
        type: string
        x-graphql-type-name: PhoneType
    required:
      - number
    type: object
  Quantity:
    example: 1
    title: Quantity
    type: number
    x-nullable: true
  RowVersion:
    example: 1-12345
    title: Row version
    type: string
    x-nullable: true
  SalesTaxNumber:
    example: 111.222.333
    title: Sales Tax Number
    type: string
    x-nullable: true
  SocialLink:
    additionalProperties: false
    properties:
      id:
        example: '12345'
        type: string
        x-nullable: true
      type:
        example: twitter
        type: string
        x-nullable: true
      url:
        example: 'https://www.twitter.com/apideck-io'
        minLength: 1
        type: string
    required:
      - url
    type: object
  Suffix:
    example: Jr.
    title: Suffix
    type: string
    x-nullable: true
  Supplier:
    properties:
      account:
        $ref: '#/definitions/LinkedLedgerAccount'
      addresses:
        items:
          $ref: '#/definitions/Address'
        type: array
      bank_accounts:
        items:
          $ref: '#/definitions/BankAccount'
        type: array
      company_name:
        $ref: '#/definitions/CompanyName'
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      currency:
        $ref: '#/definitions/Currency'
      display_name:
        description: Display name of supplier.
        example: Windsurf Shop
        title: Display Name
        type: string
        x-nullable: true
      downstream_id:
        $ref: '#/definitions/DownstreamId'
      emails:
        items:
          $ref: '#/definitions/Email'
        type: array
      first_name:
        $ref: '#/definitions/FirstName'
      id:
        $ref: '#/definitions/Id'
      last_name:
        $ref: '#/definitions/LastName'
      middle_name:
        $ref: '#/definitions/MiddleName'
      notes:
        example: Some notes about this supplier
        title: Notes
        type: string
        x-nullable: true
      phone_numbers:
        items:
          $ref: '#/definitions/PhoneNumber'
        type: array
      row_version:
        $ref: '#/definitions/RowVersion'
      status:
        description: Customer status
        enum:
          - active
          - inactive
          - archived
          - gdpr-erasure-request
          - unknown
        example: active
        title: Status
        type: string
        x-graphql-type-name: CustomerStatus
        x-nullable: true
      suffix:
        $ref: '#/definitions/Suffix'
      tax_number:
        $ref: '#/definitions/TaxNumber'
      tax_rate:
        $ref: '#/definitions/LinkedTaxRate'
      title:
        $ref: '#/definitions/Title'
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
      websites:
        items:
          $ref: '#/definitions/Website'
        type: array
    type: object
    x-graphql-type-name: Supplier
  Tags:
    example:
      - New
    items:
      type: string
    type: array
  TaxInclusive:
    description: Amounts are including tax
    example: true
    title: Tax inclusive
    type: boolean
    x-nullable: true
  TaxNumber:
    example: US123945459
    title: Tax number
    type: string
    x-nullable: true
  TaxRate:
    additionalProperties: false
    properties:
      code:
        description: Tax code assigned to identify this tax rate.
        example: ABN
        title: Tax code
        type: string
        x-nullable: true
      components:
        items:
          properties:
            compound:
              example: true
              nullable: true
              title: Compound
              type: boolean
            id:
              example: '10'
              nullable: true
              title: TaxRate Id
              type: string
            name:
              example: GST
              minLength: 1
              type: string
            rate:
              example: 10
              nullable: true
              title: TaxRate
              type: number
        title: Tax components
        type: array
        x-nullable: true
      created_at:
        $ref: '#/definitions/CreatedAt'
      created_by:
        $ref: '#/definitions/CreatedBy'
      description:
        description: Description of tax rate
        example: Reduced rate GST Purchases
        title: Description
        type: string
        x-nullable: true
      effective_tax_rate:
        description: Effective tax rate
        example: 10
        title: Effective tax rate
        type: number
        x-nullable: true
      id:
        description: ID assigned to identify this tax rate.
        example: '1234'
        type: string
        x-nullable: true
      name:
        description: Name assigned to identify this tax rate.
        example: GST on Purchases
        minLength: 1
        title: Name
        type: string
      original_tax_rate_id:
        description: >-
          ID of the original tax rate from which the new tax rate is derived.
          Helps to understand the relationship between corresponding tax rate
          entities.
        example: '12345'
        title: Original tax rate ID
        type: string
        x-nullable: true
      report_tax_type:
        description: >-
          Report Tax type to aggregate tax collected or paid for reporting
          purposes
        example: NONE
        title: Report Tax Type
        type: string
        x-nullable: true
      row_version:
        $ref: '#/definitions/RowVersion'
      status:
        description: Tax rate status
        enum:
          - active
          - inactive
          - archived
        example: active
        title: Tax rate status
        type: string
        x-graphql-type-name: TaxRateStatus
        x-nullable: true
      tax_payable_account_id:
        description: Unique identifier for the account for tax collected.
        example: '123456'
        title: Tax payable account id
        type: string
        x-nullable: true
      tax_remitted_account_id:
        description: Unique identifier for the account for tax remitted.
        example: '123456'
        title: Tax remitted account id
        type: string
        x-nullable: true
      total_tax_rate:
        description: Not compounded sum of the components of a tax rate
        example: 10
        title: Total tax rate
        type: number
        x-nullable: true
      type:
        description: Tax type used to indicate the source of tax collected or paid
        example: NONE
        title: Tax Type
        type: string
        x-nullable: true
      updated_at:
        $ref: '#/definitions/UpdatedAt'
      updated_by:
        $ref: '#/definitions/UpdatedBy'
    type: object
  TaxRatesFilter:
    additionalProperties: false
    example:
      assets: true
      equity: true
      expenses: true
      liabilities: true
      revenue: true
    properties:
      assets:
        description: Boolean to describe if tax rate can be used for asset accounts
        example: true
        title: Assets
        type: boolean
      equity:
        description: Boolean to describe if tax rate can be used for equity accounts
        example: true
        title: Equity
        type: boolean
      expenses:
        description: Boolean to describe if tax rate can be used for expense accounts
        example: true
        title: Expenses
        type: boolean
      liabilities:
        description: Boolean to describe if tax rate can be used for liability accounts
        example: true
        title: Liabilities
        type: boolean
      revenue:
        description: Boolean to describe if tax rate can be used for revenue accounts
        example: true
        title: Revenue
        type: boolean
    type: object
    x-graphql-type-name: TaxRatesFilter
  Title:
    example: CEO
    title: Job title
    type: string
    x-nullable: true
  TooManyRequestsResponse:
    properties:
      detail:
        properties:
          context:
            type: string
          error:
            additionalProperties: true
            type: object
        type: object
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 6585)
        example: Too Many Requests
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Connector Rate Limit Error
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#connectorratelimiterror'
        type: string
      status_code:
        description: HTTP status code
        example: 429
        type: number
      type_name:
        description: The type of error returned
        example: ConnectorRateLimitError
        type: string
  UnauthorizedResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: Failed to generate valid JWT Session. Verify applicationId is correct
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unauthorized
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Unauthorized Request
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 401
        type: number
      type_name:
        description: The type of error returned
        example: UnauthorizedError
        type: string
  UnexpectedErrorResponse:
    properties:
      detail:
        anyOf:
          - example: 'Missing Header: x-apideck-consumer-id'
            type: string
          - example:
              missing:
                - x-apideck-consumer-id: required
            type: object
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Bad Request
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid Params
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#unauthorizederror'
        type: string
      status_code:
        description: HTTP status code
        example: 400
        type: number
      type_name:
        description: The type of error returned
        example: RequestHeadersValidationError
        type: string
  UnifiedId:
    properties:
      id:
        example: '12345'
        readOnly: true
        type: string
    required:
      - id
    title: UnifiedId
  UnitOfMeasure:
    description: 'Description of the unit type the item is sold as, ie: kg, hour.'
    example: pc.
    title: Unit of measure
    type: string
    x-nullable: true
  UnitPrice:
    example: 27500.5
    title: Unit price
    type: number
    x-nullable: true
  UnprocessableResponse:
    properties:
      detail:
        description: >-
          Contains parameter or domain specific information related to the error
          and why it occurred.
        example: State did not include unified_api
        type: string
      error:
        description: >-
          Contains an explanation of the status_code as defined in HTTP/1.1
          standard (RFC 7231)
        example: Unprocessable Entity
        type: string
      message:
        description: A human-readable message providing more details about the error.
        example: Invalid State
        type: string
      ref:
        description: Link to documentation of error type
        example: 'https://developers.apideck.com/errors#invalidstateerror'
        type: string
      status_code:
        description: HTTP status code
        example: 422
        type: number
      type_name:
        description: The type of error returned
        example: InvalidStateError
        type: string
  UpdateBillResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: delete
        type: string
      resource:
        description: Unified API resource name
        example: bills
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateCustomerResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: customers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateInvoiceItemsResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoice-items
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateInvoiceResponse:
    properties:
      data:
        $ref: '#/definitions/InvoiceResponse'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: invoices
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateLedgerAccountResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: ledger-accounts
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdatePaymentResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: update
        type: string
      resource:
        description: Unified API resource name
        example: payments
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateSupplierResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: update
        type: string
      resource:
        description: Unified API resource name
        example: suppliers
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdateTaxRateResponse:
    properties:
      data:
        $ref: '#/definitions/UnifiedId'
      operation:
        description: Operation performed
        example: one
        type: string
      resource:
        description: Unified API resource name
        example: tax-rates
        type: string
      service:
        description: Apideck ID of service provider
        example: xero
        type: string
      status:
        description: HTTP Response Status
        example: OK
        type: string
      status_code:
        description: HTTP Response Status Code
        example: 200
        type: integer
    required:
      - status_code
      - status
      - service
      - resource
      - operation
      - data
    type: object
  UpdatedAt:
    example: '2020-09-30T07:43:32.000Z'
    format: date-time
    readOnly: true
    title: Updated at (timestamp)
    type: string
  UpdatedBy:
    example: '12345'
    readOnly: true
    type: string
    x-nullable: true
  Website:
    additionalProperties: false
    properties:
      id:
        example: '12345'
        type: string
        x-nullable: true
      type:
        enum:
          - primary
          - secondary
          - work
          - personal
          - other
        example: primary
        type: string
        x-graphql-type-name: WebsiteType
      url:
        example: 'http://example.com'
        minLength: 1
        type: string
    required:
      - url
    type: object
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
host: unify.apideck.com
info:
  contact:
    email: hello@apideck.com
    url: 'https://developers.apideck.com'
  description: "Welcome to the Accounting API.\n\nYou can use this API to access all Accounting API endpoints.\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## GraphQL\n\nUse the [GraphQL playground](https://developers.apideck.com/graphql/playground) to test out the GraphQL API.\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-service-id  | String  | No       | Describe the service you want to call (e.g., pipedrive). Only needed when a customer has activated multiple integrations for the same Unified API.             |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n| x-apideck-app-id      | String  | Yes      | The application id of your Unify application. Available at https://app.apideck.com/unify/api-keys.                                                             |\n| Authorization         | String  | Yes      | Bearer API KEY                                                                                                                                                 |\n\n## Authorization\n\nYou can interact with the API through the authorization methods below.\n\n<!-- ReDoc-Inject: <security-definitions> -->\n\n## Pagination\n\nAll API resources have support for bulk retrieval via list APIs.  Apideck uses cursor-based pagination via the optional `cursor` and `limit` parameters.\n\nTo fetch the first page of results, call the list API without a `cursor` parameter. Afterwards you can fetch subsequent pages by providing a cursor parameter. You will find the next cursor in the response body in `meta.cursors.next`. If `meta.cursors.next` is `null` you're at the end of the list.\n\nIn the REST API you can also use the `links` from the response for added convenience. Simply call the URL in `links.next` to get the next page of results.\n\n### Query Parameters\n\n| Name   | Type   | Required | Description                                                                                                        |\n| ------ | ------ | -------- | ------------------------------------------------------------------------------------------------------------------ |\n| cursor | String | No       | Cursor to start from. You can find cursors for next & previous pages in the meta.cursors property of the response. |\n| limit  | Number | No       | Number of results to return. Minimum 1, Maximum 200, Default 20                                                    |\n\n### Response Body\n\n| Name                  | Type   | Description                                                        |\n| --------------------- | ------ | ------------------------------------------------------------------ |\n| meta.cursors.previous | String | Cursor to navigate to the previous page of results through the API |\n| meta.cursors.current  | String | Cursor to navigate to the current page of results through the API  |\n| meta.cursors.next     | String | Cursor to navigate to the next page of results through the API     |\n| meta.items_on_page    | Number | Number of items returned in the data property of the response      |\n| links.previous        | String | Link to navigate to the previous page of results through the API   |\n| links.current         | String | Link to navigate to the current page of results through the API    |\n| links.next            | String | Link to navigate to the next page of results through the API       |\n\n⚠️ `meta.cursors.previous`/`links.previous` is not available for all connectors.\n\n## SDKs and API Clients\n\nUpcoming. [Request the SDK of your choice](https://integrations.apideck.com/request).\n\n## Debugging\n\nBecause of the nature of the abstraction we do in Apideck Unify we still provide the option to the receive raw requests and responses being handled underlying. By including the raw flag `?raw=true` in your requests you can still receive the full request. Please note that this increases the response size and can introduce extra latency.\n\n## Errors\n\nThe API returns standard HTTP response codes to indicate success or failure of the API requests. For errors, we also return a customized error message inside the JSON response. You can see the returned HTTP status codes below.\n\n| Code | Title                | Description                                                                                                                                                                                              |\n| ---- | -------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 200  | OK                   | The request message has been successfully processed, and it has produced a response. The response message varies, depending on the request method and the requested data.                                |\n| 201  | Created              | The request has been fulfilled and has resulted in one or more new resources being created.                                                                                                              |\n| 204  | No Content           | The server has successfully fulfilled the request and that there is no additional content to send in the response payload body.                                                                          |\n| 400  | Bad Request          | The receiving server cannot understand the request because of malformed syntax. Do not repeat the request without first modifying it; check the request for errors, fix them and then retry the request. |\n| 401  | Unauthorized         | The request has not been applied because it lacks valid authentication credentials for the target resource.                                                                                              |\n| 402  | Payment Required     | Subscription data is incomplete or out of date. You'll need to provide payment details to continue.                                                                                                      |\n| 403  | Forbidden            | You do not have the appropriate user rights to access the request. Do not repeat the request.                                                                                                            |\n| 404  | Not Found            | The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.                                                                           |\n| 409  | Conflict             | The request could not be completed due to a conflict with the current state of the target resource.                                                                                                      |\n| 422  | Unprocessable Entity | The server understands the content type of the request entity, and the syntax of the request entity is correct but was unable to process the contained instructions.                                     |\n| 429  | Too Many Requests    | You sent too many requests in a given amount of time (\"rate limit\"). Try again later                                                                                                                     |\n| 5xx  | Server Errors        | Something went wrong with the Unify API. These errors are logged on our side. You can contact our team to resolve the issue.                                                                             |\n\n### Handling errors\n\nThe Unify API and SDKs can produce errors for many reasons, such as a failed requests due to misconfigured integrations, invalid parameters, authentication errors, and network unavailability.\n\n### Error Types\n\n#### RequestValidationError\n\nRequest is not valid for the current endpoint. The response body will include details on the validation error. Check the spelling and types of your attributes, and ensure you are not passing data that is outside of the specification.\n\n#### UnsupportedFiltersError\n\nFilters in the request are valid, but not supported by the connector. Remove the unsupported filter(s) to get a successful response.\n\n#### UnsupportedSortFieldError\n\nSort field (`sort[by]`) in the request is valid, but not supported by the connector. Replace or remove the sort field to get a successful response.\n\n#### InvalidCursorError\n\nPagination cursor in the request is not valid for the current connector. Make sure to use a cursor returned from the API, for the same connector.\n\n#### ConnectorExecutionError\n\nA Unified API request made via one of our downstream connectors returned an unexpected error. The `status_code` returned is proxied through to error response along with their original response via the error detail.\n\n#### UnauthorizedError\n\nWe were unable to authorize the request as made. This can happen for a number of reasons, from missing header params to passing an incorrect authorization token. Verify your Api Key is being set correctly in the authorization header. ie: `Authorization: 'Bearer sk_live_***'`\n\n#### ConnectorCredentialsError\n\nA request using a given connector has not been authorized. Ensure the connector you are trying to use has been configured correctly and been authorized for use.\n\n#### ConnectorDisabledError\n\nA request has been made to a connector that has since been disabled. This may be temporary - You can contact our team to resolve the issue.\n\n#### ConnectorRateLimitError\n\nYou sent too many request to a connector. These rate limits vary from connector to connector. You will need to try again later.\n\n#### RequestLimitError\n\nYou have reached the number of requests included in your Free Tier Subscription. You will no be able to make further requests until this limit resets at the end of the month, or talk to us about upgrading your subscription to continue immediately.\n\n#### EntityNotFoundError\n\nYou've made a request for a resource or route that does not exist. Verify your path parameters or any identifiers used to fetch this resource.\n\n#### OAuthCredentialsNotFoundError\n\nWhen adding a connector integration that implements OAuth, both a `client_id` and `client_secret` must be provided before any authorizations can be performed. Verify the integration has been configured properly before continuing.\n\n#### IntegrationNotFoundError\n\nThe requested connector integration could not be found associated to your `application_id`. Verify your `application_id` is correct, and that this connector has been added and configured for your application.\n\n#### ConnectionNotFoundError\n\nA valid connection could not be found associated to your `application_id`. Something _may_ have interrupted the authorization flow. You may need to start the connector authorization process again.\n\n#### ConnectionSettingsError\n\nThe connector has required settings that were not supplied. Verify `connection.settings` contains all required settings for the connector to be callable.\n\n#### ConnectorNotFoundError\n\nA request was made for an unknown connector. Verify your `service_id` is spelled correctly, and that this connector is enabled for your provided `unified_api`.\n\n#### OAuthRedirectUriError\n\nA request was made either in a connector authorization flow, or attempting to revoke connector access without a valid `redirect_uri`. This is the url the user should be returned to on completion of process.\n\n#### OAuthInvalidStateError\n\nThe state param is required and is used to ensure the outgoing authorization state has not been altered before the user is redirected back. It also contains required params needed to identify the connector being used. If this has been altered, the authorization will not succeed.\n\n#### OAuthCodeExchangeError\n\nWhen attempting to exchange the authorization code for an `access_token` during an OAuth flow, an error occurred. This may be temporary. You can reattempt authorization or contact our team to resolve the issue.\n\n#### OAuthConnectorError\n\nIt seems something went wrong on the connector side. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### MappingError\n\nThere was an error attempting to retrieve the mapping for a given attribute. We've been notified and are working to fix this issue.\n\n#### ConnectorMappingNotFoundError\n\nIt seems the implementation for this connector is incomplete. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorResponseMappingNotFoundError\n\nWe were unable to retrieve the response mapping for this connector. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationMappingNotFoundError\n\nConnector mapping has not been implemented for the requested operation. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorWorkflowMappingError\n\nThe composite api calls required for this operation have not been mapped entirely. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n#### ConnectorOperationUnsupportedError\n\nYou're attempting a call that is not supported by the connector. It's likely this operation is supported by another connector, but we're unable to implement for this one.\n\n#### PaginationNotSupportedError\n\nPagination is not yet supported for this connector, try removing limit and/or cursor from the query. It's possible this connector is in `beta` or still under development. We've been notified and are working to fix this issue.\n\n## API Design\n\n### API Styles and data formats\n\n#### REST API\n\nThe API is organized around [REST](https://restfulapi.net/), providing simple and predictable URIs to access and modify objects. Requests support standard HTTP methods like GET, PUT, POST, and DELETE and standard status codes. JSON is returned by all API responses, including errors. In all API requests, you must set the content-type HTTP header to application/json. All API requests must be made over HTTPS. Calls made over HTTP will fail.\n\n##### Available HTTP methods\n\nThe Apideck API uses HTTP verbs to understand if you want to read (GET), delete (DELETE) or create (POST) an object. When your web application cannot do a POST or DELETE, we provide the ability to set the method through the query parameter \\_method.\n\n```\nPOST /messages\nGET /messages\nGET /messages/{messageId}\nPATCH /messages/{messageId}\nDELETE /messages/{messageId}\n```\n\nResponse bodies are always UTF-8 encoded JSON objects, unless explicitly documented otherwise. For some endpoints and use cases we divert from REST to provide a better developer experience.\n\n### Schema\n\nAll API requests and response bodies adhere to a common JSON format representing individual items, collections of items, links to related items and additional meta data.\n\n### Meta\n\nMeta data can be represented as a top level member named “meta”. Any information may be provided in the meta data. It’s most common use is to return the total number of records when requesting a collection of resources.\n\n### Idempotence (upcoming)\n\nTo prevent the creation of duplicate resources, every POST method (such as one that creates a consumer record) must specify a unique value for the X-Unique-Transaction-ID header name. Uniquely identifying each unique POST request ensures that the API processes a given request once and only once.\n\nUniquely identifying new resource-creation POSTs is especially important when the outcome of a response is ambiguous because of a transient service interruption, such as a server-side timeout or network disruption. If a service interruption occurs, then the client application can safely retry the uniquely identified request without creating duplicate operations. (API endpoints that guarantee that every uniquely identified request is processed only once no matter how many times that uniquely identifiable request is made are described as idempotent.)\n\n### Request IDs\n\nEach API request has an associated request identifier. You can find this value in the response headers, under Request-Id. You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.\n\n### Fixed field types\n\n#### Dates\n\nThe dates returned by the API are all represented in UTC (ISO8601 format).\n\nThis example\_`2019-11-14T00:55:31.820Z`\_is defined by the\_ISO 8601\_standard. The\_T\_in the middle separates the year-month-day portion from the hour-minute-second portion. The\_Z\_on the end means UTC, that is, an offset-from-UTC of zero hours-minutes-seconds. The\_Z\_is pronounced \"Zulu\" per military/aviation tradition.\n\nThe ISO 8601 standard is more modern. The formats are wisely designed to be easy to parse by machine as well as easy to read by humans across cultures.\n\n#### Prices and Currencies\n\nAll prices returned by the API are represented as integer amounts in a currency’s smallest unit. For example, $5 USD would be returned as 500 (i.e, 500 cents).\n\nFor zero-decimal currencies, amounts will still be provided as an integer but without the need to divide by 100. For example, an amount of ¥5 (JPY) would be returned as 5.\n\nAll currency codes conform to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\n\n## Support\n\nIf you have problems or need help with your case, you can always reach out to our Support.\n\n"
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  title: Accounting API
  version: 8.32.3
  x-apideck-api: accounting
  x-apideck-sdk-support: true
  x-apisguru-categories:
    - developer_tools
  x-logo:
    url: 'https://developers.apideck.com/icon.png'
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/accounting.yml
      version: '3.0'
  x-providerName: apideck.com
  x-serviceName: accounting
  x-tags:
    - partner
paths:
  /accounting/balance-sheet:
    get:
      description: Get BalanceSheet
      operationId: balanceSheetOne
      parameters:
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Optional unmapped key/values that will be passed through to
            downstream as query parameters
          in: query
          name: pass_through
          type: object
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: BalanceSheet
          schema:
            $ref: '#/definitions/GetBalanceSheetResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get BalanceSheet
      tags:
        - Balance Sheet
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.balanceSheetOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/bills:
    get:
      description: List Bills
      operationId: billsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Bills
          schema:
            $ref: '#/definitions/GetBillsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Bills
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: bills
    post:
      consumes:
        - application/json
      description: Create Bill
      operationId: billsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Bill'
      produces:
        - application/json
      responses:
        '201':
          description: Bill created
          schema:
            $ref: '#/definitions/CreateBillResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              bill: {
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                },
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                bill_date: '2020-09-30',
                due_date: '2020-10-30',
                paid_date: '2020-10-30',
                po_number: '90000117',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'expense_account',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    row_version: '1-12345'
                  }
                ],
                terms: 'Net 30 days',
                balance: 27500,
                deposit: 0,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_code: '1234',
                notes: 'Some notes about this bill.',
                status: 'draft',
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.billsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/bills/{id}':
    delete:
      description: Delete Bill
      operationId: billsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Bill deleted
          schema:
            $ref: '#/definitions/DeleteBillResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Bill
      operationId: billsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Bill
          schema:
            $ref: '#/definitions/GetBillResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Bill
      operationId: billsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Bill'
      produces:
        - application/json
      responses:
        '200':
          description: Bill Updated
          schema:
            $ref: '#/definitions/UpdateBillResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Bill
      tags:
        - Bills
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              bill: {
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                },
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                bill_date: '2020-09-30',
                due_date: '2020-10-30',
                paid_date: '2020-10-30',
                po_number: '90000117',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'expense_account',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    row_version: '1-12345'
                  }
                ],
                terms: 'Net 30 days',
                balance: 27500,
                deposit: 0,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_code: '1234',
                notes: 'Some notes about this bill.',
                status: 'draft',
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.billsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/company-info:
    get:
      description: Get company info
      operationId: companyInfoOne
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: CompanyInfo
          schema:
            $ref: '#/definitions/GetCompanyInfoResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get company info
      tags:
        - Company Info
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.companyInfoOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: companyInfo
  /accounting/customers:
    get:
      description: List Customers
      operationId: customersAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: CustomersFilter
      produces:
        - application/json
      responses:
        '200':
          description: Customers
          schema:
            $ref: '#/definitions/GetCustomersResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Customers
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: customers
    post:
      consumes:
        - application/json
      description: Create Customer
      operationId: customersAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccountingCustomer'
      produces:
        - application/json
      responses:
        '201':
          description: Customers
          schema:
            $ref: '#/definitions/CreateCustomerResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              customer: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this customer',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.customersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/customers/{id}':
    delete:
      description: Delete Customer
      operationId: customersDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Customers
          schema:
            $ref: '#/definitions/DeleteCustomerResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Customer
      operationId: customersOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Customer
          schema:
            $ref: '#/definitions/GetCustomerResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Customer
      operationId: customersUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccountingCustomer'
      produces:
        - application/json
      responses:
        '200':
          description: Customers
          schema:
            $ref: '#/definitions/UpdateCustomerResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Customer
      tags:
        - Customers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              customer: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this customer',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.customersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/invoice-items:
    get:
      description: List Invoice Items
      operationId: invoiceItemsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: InvoiceItemsFilter
      produces:
        - application/json
      responses:
        '200':
          description: InvoiceItems
          schema:
            $ref: '#/definitions/GetInvoiceItemsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Invoice Items
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: invoiceItems
    post:
      consumes:
        - application/json
      description: Create Invoice Item
      operationId: invoiceItemsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InvoiceItem'
      produces:
        - application/json
      responses:
        '201':
          description: InvoiceItems
          schema:
            $ref: '#/definitions/CreateInvoiceItemResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              invoiceItem: {
                name: 'Model Y',
                description:
                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                code: '120-C',
                sold: true,
                purchased: true,
                tracked: true,
                inventory_date: '2020-10-30',
                type: 'inventory',
                sales_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                purchase_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                quantity: 1,
                unit_price: 27500.5,
                asset_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                income_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                expense_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                active: true,
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoiceItemsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/invoice-items/{id}':
    delete:
      description: Delete Invoice Item
      operationId: invoiceItemsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: InvoiceItems
          schema:
            $ref: '#/definitions/DeleteTaxRateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Invoice Item
      operationId: invoiceItemsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: InvoiceItems
          schema:
            $ref: '#/definitions/GetInvoiceItemResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Invoice Item
      operationId: invoiceItemsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/InvoiceItem'
      produces:
        - application/json
      responses:
        '200':
          description: InvoiceItems
          schema:
            $ref: '#/definitions/UpdateInvoiceItemsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Invoice Item
      tags:
        - Invoice Items
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              invoiceItem: {
                name: 'Model Y',
                description:
                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                code: '120-C',
                sold: true,
                purchased: true,
                tracked: true,
                inventory_date: '2020-10-30',
                type: 'inventory',
                sales_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                purchase_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456'
                  }
                },
                quantity: 1,
                unit_price: 27500.5,
                asset_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                income_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                expense_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                active: true,
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoiceItemsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/invoices:
    get:
      description: List Invoices
      operationId: invoicesAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Invoices
          schema:
            $ref: '#/definitions/GetInvoicesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Invoices
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: invoices
    post:
      consumes:
        - application/json
      description: Create Invoice
      operationId: invoicesAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Invoice'
      produces:
        - application/json
      responses:
        '201':
          description: Invoice created
          schema:
            $ref: '#/definitions/CreateInvoiceResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              invoice: {
                type: 'service',
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop'
                },
                invoice_date: '2020-09-30',
                due_date: '2020-10-30',
                terms: 'Net 30 days',
                po_number: '90000117',
                reference: '123456',
                status: 'draft',
                invoice_sent: true,
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_tax: 2500,
                tax_code: '1234',
                total: 27500,
                balance: 27500,
                deposit: 0,
                customer_memo: 'Thank you for your business and have a great day!',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    row_version: '1-12345'
                  }
                ],
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                template_id: '123456',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoicesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/invoices/{id}':
    delete:
      description: Delete Invoice
      operationId: invoicesDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Invoice deleted
          schema:
            $ref: '#/definitions/DeleteInvoiceResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Invoice
      operationId: invoicesOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Invoice
          schema:
            $ref: '#/definitions/GetInvoiceResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Invoice
      operationId: invoicesUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Invoice'
      produces:
        - application/json
      responses:
        '200':
          description: Invoice updated
          schema:
            $ref: '#/definitions/UpdateInvoiceResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Invoice
      tags:
        - Invoices
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              invoice: {
                type: 'service',
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop'
                },
                invoice_date: '2020-09-30',
                due_date: '2020-10-30',
                terms: 'Net 30 days',
                po_number: '90000117',
                reference: '123456',
                status: 'draft',
                invoice_sent: true,
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_tax: 2500,
                tax_code: '1234',
                total: 27500,
                balance: 27500,
                deposit: 0,
                customer_memo: 'Thank you for your business and have a great day!',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    item: {
                      id: '12344'
                    },
                    tax_rate: {
                      id: '123456'
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    row_version: '1-12345'
                  }
                ],
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  row_version: '1-12345'
                },
                template_id: '123456',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.invoicesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/ledger-accounts:
    get:
      description: List Ledger Accounts
      operationId: ledgerAccountsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: LedgerAccounts
          schema:
            $ref: '#/definitions/GetLedgerAccountsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Ledger Accounts
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: ledgerAccounts
    post:
      consumes:
        - application/json
      description: Create Ledger Account
      operationId: ledgerAccountsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LedgerAccount'
      produces:
        - application/json
      responses:
        '201':
          description: LedgerAccount created
          schema:
            $ref: '#/definitions/CreateLedgerAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              ledgerAccount: {
                display_id: '1-12345',
                nominal_code: 'N091',
                code: '453',
                classification: 'asset',
                type: 'bank',
                sub_type: 'CHECKING_ACCOUNT',
                name: 'Bank account',
                fully_qualified_name: 'Asset.Bank.Checking_Account',
                description: 'Main checking account',
                opening_balance: 75000,
                current_balance: 20000,
                currency: 'USD',
                tax_type: 'NONE',
                tax_rate: {
                  id: '123456'
                },
                level: 1,
                active: true,
                status: 'active',
                header: true,
                bank_account: {
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  currency: 'USD'
                },
                parent_account: {
                  id: '12345',
                  name: 'Bank Accounts',
                  display_id: '1-1100'
                },
                sub_account: false,
                last_reconciliation_date: '2020-09-30',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.ledgerAccountsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/ledger-accounts/{id}':
    delete:
      description: Delete Ledger Account
      operationId: ledgerAccountsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: LedgerAccount deleted
          schema:
            $ref: '#/definitions/DeleteLedgerAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Ledger Account
      operationId: ledgerAccountsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: LedgerAccount
          schema:
            $ref: '#/definitions/GetLedgerAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Ledger Account
      operationId: ledgerAccountsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LedgerAccount'
      produces:
        - application/json
      responses:
        '200':
          description: LedgerAccount updated
          schema:
            $ref: '#/definitions/UpdateLedgerAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Ledger Account
      tags:
        - Ledger Accounts
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              ledgerAccount: {
                display_id: '1-12345',
                nominal_code: 'N091',
                code: '453',
                classification: 'asset',
                type: 'bank',
                sub_type: 'CHECKING_ACCOUNT',
                name: 'Bank account',
                fully_qualified_name: 'Asset.Bank.Checking_Account',
                description: 'Main checking account',
                opening_balance: 75000,
                current_balance: 20000,
                currency: 'USD',
                tax_type: 'NONE',
                tax_rate: {
                  id: '123456'
                },
                level: 1,
                active: true,
                status: 'active',
                header: true,
                bank_account: {
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  currency: 'USD'
                },
                parent_account: {
                  id: '12345',
                  name: 'Bank Accounts',
                  display_id: '1-1100'
                },
                sub_account: false,
                last_reconciliation_date: '2020-09-30',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.ledgerAccountsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/payments:
    get:
      description: List Payments
      operationId: paymentsAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Payments
          schema:
            $ref: '#/definitions/GetPaymentsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Payments
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: Payments
    post:
      consumes:
        - application/json
      description: Create Payment
      operationId: paymentsAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Payment'
      produces:
        - application/json
      responses:
        '201':
          description: Payment created
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              payment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'Credit Card',
                payment_method_reference: '123456',
                accounts_receivable_account_type: 'Account',
                accounts_receivable_account_id: '123456',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop'
                },
                reconciled: true,
                status: 'authorised',
                type: 'accounts_receivable',
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99
                  }
                ],
                note: 'Some notes about this payment',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.paymentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/payments/{id}':
    delete:
      description: Delete Payment
      operationId: paymentsDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Payment deleted
          schema:
            $ref: '#/definitions/DeletePaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Payment
      operationId: paymentsOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Payment
          schema:
            $ref: '#/definitions/GetPaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Payment
      operationId: paymentsUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Payment'
      produces:
        - application/json
      responses:
        '200':
          description: Payment Updated
          schema:
            $ref: '#/definitions/UpdatePaymentResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Payment
      tags:
        - Payments
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              payment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'Credit Card',
                payment_method_reference: '123456',
                accounts_receivable_account_type: 'Account',
                accounts_receivable_account_id: '123456',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop'
                },
                reconciled: true,
                status: 'authorised',
                type: 'accounts_receivable',
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99
                  }
                ],
                note: 'Some notes about this payment',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.paymentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/suppliers:
    get:
      description: List Suppliers
      operationId: suppliersAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Suppliers
          schema:
            $ref: '#/definitions/GetSuppliersResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Suppliers
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: Suppliers
    post:
      consumes:
        - application/json
      description: Create Supplier
      operationId: suppliersAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Supplier'
      produces:
        - application/json
      responses:
        '201':
          description: Supplier created
          schema:
            $ref: '#/definitions/CreateSupplierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              supplier: {
                company_name: 'SpaceX',
                display_name: 'Windsurf Shop',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this supplier',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.suppliersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/suppliers/{id}':
    delete:
      description: Delete Supplier
      operationId: suppliersDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Supplier deleted
          schema:
            $ref: '#/definitions/DeleteSupplierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: Get Supplier
      operationId: suppliersOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Supplier
          schema:
            $ref: '#/definitions/GetSupplierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Supplier
      operationId: suppliersUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Supplier'
      produces:
        - application/json
      responses:
        '200':
          description: Supplier updated
          schema:
            $ref: '#/definitions/UpdateSupplierResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Supplier
      tags:
        - Suppliers
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              supplier: {
                company_name: 'SpaceX',
                display_name: 'Windsurf Shop',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    row_version: '1-12345'
                  }
                ],
                notes: 'Some notes about this supplier',
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    currency: 'USD'
                  }
                ],
                tax_rate: {
                  id: '123456'
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.suppliersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  /accounting/tax-rates:
    get:
      description: >
        List Tax Rates. Note: Not all connectors return the actual
        rate/percentage value. In this case, only the tax code or reference is
        returned. Connectors Affected: Quickbooks
      operationId: taxRatesAll
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - description: >-
            Cursor to start from. You can find cursors for next/previous pages
            in the meta.cursors property of the response.
          in: query
          name: cursor
          type: string
        - default: 20
          description: Number of records to return
          in: query
          maximum: 200
          minimum: 1
          name: limit
          type: integer
        - description: Apply filters (beta)
          in: query
          name: filter
          type: object
          x-graphql-type-name: TaxRatesFilter
      produces:
        - application/json
      responses:
        '200':
          description: TaxRates
          schema:
            $ref: '#/definitions/GetTaxRatesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: List Tax Rates
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-graphql-field-name: taxRates
    post:
      consumes:
        - application/json
      description: Create Tax Rate
      operationId: taxRatesAdd
      parameters:
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TaxRate'
      produces:
        - application/json
      responses:
        '201':
          description: TaxRate created
          schema:
            $ref: '#/definitions/CreateTaxRateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Create Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              taxRate: {
                id: '1234',
                name: 'GST on Purchases',
                code: 'ABN',
                description: 'Reduced rate GST Purchases',
                effective_tax_rate: 10,
                total_tax_rate: 10,
                tax_payable_account_id: '123456',
                tax_remitted_account_id: '123456',
                components: [
                  {
                    id: '10',
                    name: 'GST',
                    rate: 10,
                    compound: true
                  }
                ],
                type: 'NONE',
                report_tax_type: 'NONE',
                original_tax_rate_id: '12345',
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.taxRatesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
  '/accounting/tax-rates/{id}':
    delete:
      description: Delete Tax Rate
      operationId: taxRatesDelete
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: TaxRates deleted
          schema:
            $ref: '#/definitions/DeleteTaxRateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Delete Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    get:
      description: >
        Get Tax Rate. Note: Not all connectors return the actual rate/percentage
        value. In this case, only the tax code or reference is returned. Support
        will soon be added to return the actual rate/percentage by doing
        additional calls in the background to provide the full view of a given
        tax rate. Connectors Affected: Quickbooks
      operationId: taxRatesOne
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: TaxRate
          schema:
            $ref: '#/definitions/GetTaxRateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Get Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
    patch:
      consumes:
        - application/json
      description: Update Tax Rate
      operationId: taxRatesUpdate
      parameters:
        - description: ID of the record you are acting upon.
          in: path
          name: id
          required: true
          type: string
        - description: ID of the consumer which you want to get or push data from
          in: header
          name: x-apideck-consumer-id
          required: true
          type: string
        - description: The ID of your Unify application
          in: header
          name: x-apideck-app-id
          required: true
          type: string
        - description: >-
            Provide the service id you want to call (e.g., pipedrive). [See the
            full list in the connector section.](#section/Connectors) Only
            needed when a consumer has activated multiple integrations for a
            Unified API.
          in: header
          name: x-apideck-service-id
          type: string
        - default: false
          description: Include raw response. Mostly used for debugging purposes
          in: query
          name: raw
          type: boolean
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TaxRate'
      produces:
        - application/json
      responses:
        '200':
          description: TaxRate updated
          schema:
            $ref: '#/definitions/UpdateTaxRateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
        '404':
          description: The specified resource was not found
          schema:
            $ref: '#/definitions/NotFoundResponse'
        '422':
          description: Unprocessable
          schema:
            $ref: '#/definitions/UnprocessableResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      security:
        - apiKey: []
      summary: Update Tax Rate
      tags:
        - Tax Rates
      x-apideck-api: accounting
      x-codeSamples:
        - label: Node
          lang: TypeScript
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              taxRate: {
                id: '1234',
                name: 'GST on Purchases',
                code: 'ABN',
                description: 'Reduced rate GST Purchases',
                effective_tax_rate: 10,
                total_tax_rate: 10,
                tax_payable_account_id: '123456',
                tax_remitted_account_id: '123456',
                components: [
                  {
                    id: '10',
                    name: 'GST',
                    rate: 10,
                    compound: true
                  }
                ],
                type: 'NONE',
                report_tax_type: 'NONE',
                original_tax_rate_id: '12345',
                status: 'active',
                row_version: '1-12345'
              }
            }

            try {
              const { data } = await apideck.accounting.taxRatesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
schemes:
  - https
security:
  - apiKey: []
securityDefinitions:
  apiKey:
    description: >
      To use API you have to sign up and get your own API key. Unify API
      accounts have sandbox mode and live mode API keys. 

      To change modes just use the appropriate key to get a live or test object.
      You can find your API keys on the unify settings of your Apideck app.

      Your Apideck application_id can also be found on the same page.


      Authenticate your API requests by including your test or live secret API
      key in the request header. 


      - Bearer authorization header: `Authorization: Bearer
      <your-apideck-api-key>`

      - Application id header: `x-apideck-app-id: <your-apideck-app-id>`


      You should use the public keys on the SDKs and the secret keys to
      authenticate API requests.


      **Do not share or include your secret API keys on client side code.** Your
      API keys carry significant privileges. Please ensure to keep them 100%
      secure and be sure to not share your secret API keys in areas that are
      publicly accessible like GitHub.


      Learn how to set the Authorization header inside Postman
      https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key


      Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: ''
    name: Bills
    x-apideck-model:
      $ref: '#/definitions/Bill'
  - description: ''
    name: Company Info
    x-apideck-model:
      $ref: '#/definitions/CompanyInfo'
  - description: ''
    name: Customers
    x-apideck-model:
      $ref: '#/definitions/AccountingCustomer'
  - description: ''
    name: Invoices
    x-apideck-model:
      $ref: '#/definitions/Invoice'
  - description: >-
      Invoice items are stored from invoice lines to be used later on when
      creating new invoices.
    name: Invoice Items
    x-apideck-model:
      $ref: '#/definitions/InvoiceItem'
  - description: ''
    name: Ledger Accounts
    x-apideck-model:
      $ref: '#/definitions/LedgerAccount'
  - description: ''
    name: Payments
    x-apideck-model:
      $ref: '#/definitions/Payment'
  - description: ''
    name: Suppliers
    x-apideck-model:
      $ref: '#/definitions/Supplier'
  - description: ''
    name: Tax Rates
    x-apideck-model:
      $ref: '#/definitions/TaxRate'
  - description: ''
    name: Balance Sheet
    x-apideck-model:
      $ref: '#/definitions/BalanceSheet'
x-components:
  parameters:
    applicationId:
      description: The ID of your Unify application
      in: header
      name: x-apideck-app-id
      required: true
      type: string
    consumerId:
      description: ID of the consumer which you want to get or push data from
      in: header
      name: x-apideck-consumer-id
      required: true
      type: string
    cursor:
      description: >-
        Cursor to start from. You can find cursors for next/previous pages in
        the meta.cursors property of the response.
      in: query
      name: cursor
      type: string
    customersFilter:
      description: Apply filters (beta)
      in: query
      name: filter
      type: object
      x-graphql-type-name: CustomersFilter
    id:
      description: ID of the record you are acting upon.
      in: path
      name: id
      required: true
      type: string
    invoiceItemsFilter:
      description: Apply filters (beta)
      in: query
      name: filter
      type: object
      x-graphql-type-name: InvoiceItemsFilter
    limit:
      default: 20
      description: Number of records to return
      in: query
      maximum: 200
      minimum: 1
      name: limit
      type: integer
    passThrough:
      description: >-
        Optional unmapped key/values that will be passed through to downstream
        as query parameters
      in: query
      name: pass_through
      type: object
    raw:
      default: false
      description: Include raw response. Mostly used for debugging purposes
      in: query
      name: raw
      type: boolean
    serviceId:
      description: >-
        Provide the service id you want to call (e.g., pipedrive). [See the full
        list in the connector section.](#section/Connectors) Only needed when a
        consumer has activated multiple integrations for a Unified API.
      in: header
      name: x-apideck-service-id
      type: string
    taxRatesFilter:
      description: Apply filters (beta)
      in: query
      name: filter
      type: object
      x-graphql-type-name: TaxRatesFilter
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/BadRequestResponse'
      description: Bad Request
    CompanyInfo:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CompanyInfo'
      description: Company Info
    CreateBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateBillResponse'
      description: Bill created
    CreateCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateCustomerResponse'
      description: Customers
    CreateInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateInvoiceItemResponse'
      description: InvoiceItems
    CreateInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateInvoiceResponse'
      description: Invoice created
    CreateLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateLedgerAccountResponse'
      description: LedgerAccount created
    CreatePaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
      description: Payment created
    CreateSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateSupplierResponse'
      description: Supplier created
    CreateTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/CreateTaxRateResponse'
      description: TaxRate created
    DeleteBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteBillResponse'
      description: Bill deleted
    DeleteCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteCustomerResponse'
      description: Customers
    DeleteInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteTaxRateResponse'
      description: InvoiceItems
    DeleteInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteInvoiceResponse'
      description: Invoice deleted
    DeleteLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteLedgerAccountResponse'
      description: LedgerAccount deleted
    DeletePaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeletePaymentResponse'
      description: Payment deleted
    DeleteSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteSupplierResponse'
      description: Supplier deleted
    DeleteTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeleteTaxRateResponse'
      description: TaxRates deleted
    GetBalanceSheetResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetBalanceSheetResponse'
      description: BalanceSheet
    GetBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetBillResponse'
      description: Bill
    GetBillsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetBillsResponse'
      description: Bills
    GetCompanyInfoResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetCompanyInfoResponse'
      description: CompanyInfo
    GetCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetCustomerResponse'
      description: Customer
    GetCustomersResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetCustomersResponse'
      description: Customers
    GetInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetInvoiceItemResponse'
      description: InvoiceItems
    GetInvoiceItemsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetInvoiceItemsResponse'
      description: InvoiceItems
    GetInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetInvoiceResponse'
      description: Invoice
    GetInvoicesResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetInvoicesResponse'
      description: Invoices
    GetLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetLedgerAccountResponse'
      description: LedgerAccount
    GetLedgerAccountsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetLedgerAccountsResponse'
      description: LedgerAccounts
    GetPaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetPaymentResponse'
      description: Payment
    GetPaymentsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetPaymentsResponse'
      description: Payments
    GetSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetSupplierResponse'
      description: Supplier
    GetSuppliersResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetSuppliersResponse'
      description: Suppliers
    GetTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetTaxRateResponse'
      description: TaxRate
    GetTaxRatesResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/GetTaxRatesResponse'
      description: TaxRates
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotFoundResponse'
      description: The specified resource was not found
    NotImplementedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/NotImplementedResponse'
      description: Not Implemented
    PaymentRequiredResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/PaymentRequiredResponse'
      description: Payment Required
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/TooManyRequestsResponse'
      description: Too Many Requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
      description: Unauthorized
    UnexpectedErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnexpectedErrorResponse'
      description: Unexpected error
    UnprocessableResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UnprocessableResponse'
      description: Unprocessable
    UpdateBillResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateBillResponse'
      description: Bill Updated
    UpdateCustomerResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateCustomerResponse'
      description: Customers
    UpdateInvoiceItemResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateInvoiceItemsResponse'
      description: InvoiceItems
    UpdateInvoiceResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateInvoiceResponse'
      description: Invoice updated
    UpdateLedgerAccountResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateLedgerAccountResponse'
      description: LedgerAccount updated
    UpdatePaymentResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdatePaymentResponse'
      description: Payment Updated
    UpdateSupplierResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateSupplierResponse'
      description: Supplier updated
    UpdateTaxRateResponse:
      content:
        application/json:
          schema:
            $ref: '#/definitions/UpdateTaxRateResponse'
      description: TaxRate updated

