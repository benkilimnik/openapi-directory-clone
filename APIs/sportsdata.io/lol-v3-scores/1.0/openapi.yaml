basePath: /
definitions:
  Area:
    properties:
      AreaId:
        nullable: false
        type: integer
      CountryCode:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
  Competition:
    properties:
      AreaId:
        nullable: false
        type: integer
      AreaName:
        nullable: true
        type: string
      CompetitionId:
        nullable: false
        type: integer
      Format:
        nullable: true
        type: string
      Gender:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
      PlayerStatsCoverage:
        nullable: true
        type: boolean
      Seasons:
        items:
          $ref: '#/definitions/Season'
        type: array
      Type:
        nullable: true
        type: string
  CompetitionDetail:
    properties:
      AreaId:
        nullable: false
        type: integer
      AreaName:
        nullable: true
        type: string
      CompetitionId:
        nullable: false
        type: integer
      CurrentSeason:
        $ref: '#/definitions/Season'
      Format:
        nullable: true
        type: string
      Games:
        items:
          $ref: '#/definitions/Game'
        type: array
      Gender:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
      PlayerStatsCoverage:
        nullable: true
        type: boolean
      Seasons:
        items:
          $ref: '#/definitions/Season'
        type: array
      Teams:
        items:
          $ref: '#/definitions/TeamDetail'
        type: array
      Type:
        nullable: true
        type: string
  Game:
    properties:
      BestOf:
        nullable: true
        type: string
      DateTime:
        nullable: true
        type: string
      Day:
        nullable: true
        type: string
      DrawMoneyLine:
        nullable: true
        type: integer
      GameId:
        nullable: false
        type: integer
      Group:
        nullable: true
        type: string
      IsClosed:
        nullable: true
        type: boolean
      PointSpread:
        nullable: true
        type: number
      RoundId:
        nullable: false
        type: integer
      Season:
        nullable: false
        type: integer
      SeasonType:
        nullable: false
        type: integer
      Status:
        nullable: true
        type: string
      TeamAId:
        nullable: true
        type: integer
      TeamAKey:
        nullable: true
        type: string
      TeamAMoneyLine:
        nullable: true
        type: integer
      TeamAName:
        nullable: true
        type: string
      TeamAPointSpreadPayout:
        nullable: true
        type: integer
      TeamAScore:
        nullable: true
        type: integer
      TeamBId:
        nullable: true
        type: integer
      TeamBKey:
        nullable: true
        type: string
      TeamBMoneyLine:
        nullable: true
        type: integer
      TeamBName:
        nullable: true
        type: string
      TeamBPointSpreadPayout:
        nullable: true
        type: integer
      TeamBScore:
        nullable: true
        type: integer
      Updated:
        nullable: true
        type: string
      UpdatedUtc:
        nullable: true
        type: string
      VenueId:
        nullable: true
        type: integer
      VenueType:
        nullable: true
        type: string
      Week:
        nullable: true
        type: integer
      Winner:
        nullable: true
        type: string
  Membership:
    properties:
      Active:
        nullable: false
        type: boolean
      EndDate:
        nullable: true
        type: string
      MembershipId:
        nullable: false
        type: integer
      PlayerId:
        nullable: false
        type: integer
      PlayerName:
        nullable: true
        type: string
      StartDate:
        nullable: true
        type: string
      TeamArea:
        nullable: true
        type: string
      TeamId:
        nullable: false
        type: integer
      TeamName:
        nullable: true
        type: string
      Updated:
        nullable: true
        type: string
  Player:
    properties:
      BirthCity:
        nullable: true
        type: string
      BirthCountry:
        nullable: true
        type: string
      BirthDate:
        nullable: true
        type: string
      CommonName:
        nullable: true
        type: string
      FirstName:
        nullable: true
        type: string
      Gender:
        nullable: true
        type: string
      LastName:
        nullable: true
        type: string
      MatchName:
        nullable: true
        type: string
      Nationality:
        nullable: true
        type: string
      PlayerId:
        nullable: false
        type: integer
      Position:
        nullable: true
        type: string
      Updated:
        nullable: true
        type: string
  Round:
    properties:
      CurrentRound:
        nullable: false
        type: boolean
      CurrentWeek:
        nullable: true
        type: integer
      EndDate:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
      RoundId:
        nullable: false
        type: integer
      Season:
        nullable: false
        type: integer
      SeasonId:
        nullable: false
        type: integer
      SeasonType:
        nullable: false
        type: integer
      StartDate:
        nullable: true
        type: string
      Type:
        nullable: true
        type: string
  Season:
    properties:
      CompetitionId:
        nullable: false
        type: integer
      CompetitionName:
        nullable: true
        type: string
      CurrentSeason:
        nullable: false
        type: boolean
      EndDate:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
      Rounds:
        items:
          $ref: '#/definitions/Round'
        type: array
      Season:
        nullable: false
        type: integer
      SeasonId:
        nullable: false
        type: integer
      StartDate:
        nullable: true
        type: string
  SeasonTeam:
    properties:
      Active:
        nullable: false
        type: boolean
      Gender:
        nullable: true
        type: string
      SeasonId:
        nullable: false
        type: integer
      SeasonTeamId:
        nullable: false
        type: integer
      Team:
        $ref: '#/definitions/Team'
      TeamId:
        nullable: false
        type: integer
      TeamName:
        nullable: true
        type: string
      Type:
        nullable: true
        type: string
  Standing:
    properties:
      Games:
        nullable: false
        type: integer
      Group:
        nullable: true
        type: string
      Losses:
        nullable: false
        type: integer
      Name:
        nullable: true
        type: string
      Order:
        nullable: true
        type: integer
      Points:
        nullable: false
        type: integer
      RoundId:
        nullable: false
        type: integer
      ScoreAgainst:
        nullable: false
        type: integer
      ScoreDifference:
        nullable: false
        type: integer
      ScoreFor:
        nullable: false
        type: integer
      StandingId:
        nullable: false
        type: integer
      TeamId:
        nullable: false
        type: integer
      Wins:
        nullable: false
        type: integer
  Team:
    properties:
      Active:
        nullable: false
        type: boolean
      AreaId:
        nullable: true
        type: integer
      AreaName:
        nullable: true
        type: string
      Email:
        nullable: true
        type: string
      Facebook:
        nullable: true
        type: string
      Founded:
        nullable: true
        type: integer
      Gender:
        nullable: true
        type: string
      Instagram:
        nullable: true
        type: string
      Key:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
      PrimaryColor:
        nullable: true
        type: string
      QuaternaryColor:
        nullable: true
        type: string
      SecondaryColor:
        nullable: true
        type: string
      ShortName:
        nullable: true
        type: string
      TeamId:
        nullable: false
        type: integer
      TertiaryColor:
        nullable: true
        type: string
      Twitter:
        nullable: true
        type: string
      Type:
        nullable: true
        type: string
      Website:
        nullable: true
        type: string
      YouTube:
        nullable: true
        type: string
  TeamDetail:
    properties:
      Active:
        nullable: false
        type: boolean
      AreaId:
        nullable: true
        type: integer
      AreaName:
        nullable: true
        type: string
      Email:
        nullable: true
        type: string
      Facebook:
        nullable: true
        type: string
      Founded:
        nullable: true
        type: integer
      Gender:
        nullable: true
        type: string
      Instagram:
        nullable: true
        type: string
      Key:
        nullable: true
        type: string
      Name:
        nullable: true
        type: string
      Players:
        items:
          $ref: '#/definitions/Player'
        type: array
      PrimaryColor:
        nullable: true
        type: string
      QuaternaryColor:
        nullable: true
        type: string
      SecondaryColor:
        nullable: true
        type: string
      ShortName:
        nullable: true
        type: string
      TeamId:
        nullable: false
        type: integer
      TertiaryColor:
        nullable: true
        type: string
      Twitter:
        nullable: true
        type: string
      Type:
        nullable: true
        type: string
      Website:
        nullable: true
        type: string
      YouTube:
        nullable: true
        type: string
  Venue:
    properties:
      Address:
        nullable: true
        type: string
      Capacity:
        nullable: true
        type: integer
      City:
        nullable: true
        type: string
      Country:
        nullable: true
        type: string
      GeoLat:
        nullable: true
        type: number
      GeoLong:
        nullable: true
        type: number
      Name:
        nullable: true
        type: string
      Nickname1:
        nullable: true
        type: string
      Nickname2:
        nullable: true
        type: string
      Open:
        nullable: false
        type: boolean
      Opened:
        nullable: true
        type: integer
      VenueId:
        nullable: false
        type: integer
      Zip:
        nullable: true
        type: string
host: api.sportsdata.io
info:
  contact:
    x-twitter: nfldata
  description: LoL v3 Scores
  title: LoL v3 Scores
  version: '1.0'
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: 'https://twitter.com/nfldata/profile_image?size=original'
  x-origin:
    - format: swagger
      url: 'https://fantasydata.com/downloads/swagger/lol-v3-scores.json'
      version: '2.0'
  x-providerName: sportsdata.io
  x-serviceName: lol-v3-scores
paths:
  '/{format}/ActiveMemberships':
    get:
      description: Memberships (Active)
      operationId: MembershipsActive
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Membership'
            type: array
      summary: Memberships (Active)
  '/{format}/Areas':
    get:
      description: Areas (Countries)
      operationId: AreasCountries
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Area'
            type: array
      summary: Areas (Countries)
  '/{format}/CompetitionDetails/{competitionid}':
    get:
      description: Competition Fixtures (League Details)
      operationId: CompetitionFixturesLeagueDetails
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: >-
            A LoL competition/league unique CompetitionId. Possible values
            include: <code>100000009</code>, etc.
          in: path
          name: competitionid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CompetitionDetail'
      summary: Competition Fixtures (League Details)
  '/{format}/Competitions':
    get:
      description: Competitions (Leagues)
      operationId: CompetitionsLeagues
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Competition'
            type: array
      summary: Competitions (Leagues)
  '/{format}/GamesByDate/{date}':
    get:
      description: Games by Date
      operationId: GamesByDate
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: |-
            The date of the game(s).
            <br>Examples: <code>2018-01-13</code>, <code>2018-06-13</code>.
          in: path
          name: date
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
      summary: Games by Date
  '/{format}/HistoricalMemberships':
    get:
      description: Memberships (Historical)
      operationId: MembershipsHistorical
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Membership'
            type: array
      summary: Memberships (Historical)
  '/{format}/HistoricalMembershipsByTeam/{teamid}':
    get:
      description: Memberships by Team (Historical)
      operationId: MembershipsByTeamHistorical
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: |-
            Unique FantasyData Team ID. 
            Example:<code>100000001</code>.
          in: path
          name: teamid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Membership'
            type: array
      summary: Memberships by Team (Historical)
  '/{format}/MembershipsByTeam/{teamid}':
    get:
      description: Memberships by Team (Active)
      operationId: MembershipsByTeamActive
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: |-
            Unique FantasyData Team ID. 
            Example:<code>100000001</code>.
          in: path
          name: teamid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Membership'
            type: array
      summary: Memberships by Team (Active)
  '/{format}/Player/{playerid}':
    get:
      description: Player
      operationId: Player
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>100000576</code>.
          in: path
          name: playerid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Player'
      summary: Player
  '/{format}/Players':
    get:
      description: Players
      operationId: Players
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Player'
            type: array
      summary: Players
  '/{format}/PlayersByTeam/{teamid}':
    get:
      description: Players by Team
      operationId: PlayersByTeam
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: |-
            Unique FantasyData Team ID. 
            Example:<code>100000001</code>.
          in: path
          name: teamid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Player'
            type: array
      summary: Players by Team
  '/{format}/Schedule/{roundid}':
    get:
      description: Schedule
      operationId: Schedule
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: >-
            Unique FantasyData Round ID. RoundIDs can be found in the
            Competitions and Competition Details endpoints. 

            Examples: <code>100000138</code>, <code>1000001412</code>, etc
          in: path
          name: roundid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Game'
            type: array
      summary: Schedule
  '/{format}/SeasonTeams/{seasonid}':
    get:
      description: Season Teams
      operationId: SeasonTeams
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: >-
            Unique FantasyData Season ID. SeasonIDs can be found in the
            Competitions and Competition Details endpoints. 

            Examples: <code>100000023</code>, <code>100000024</code>, etc
          in: path
          name: seasonid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/SeasonTeam'
            type: array
      summary: Season Teams
  '/{format}/Standings/{roundid}':
    get:
      description: Standings
      operationId: Standings
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
        - description: >-
            Unique FantasyData Round ID. RoundIDs can be found in the
            Competitions and Competition Details endpoints. 

            Example: <code>100000138</code>, etc
          in: path
          name: roundid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Standing'
            type: array
      summary: Standings
  '/{format}/Teams':
    get:
      description: Teams
      operationId: Teams
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Team'
            type: array
      summary: Teams
  '/{format}/Venues':
    get:
      description: Venues
      operationId: Venues
      parameters:
        - default: xml
          description: >-
            Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          enum:
            - xml
            - json
          in: path
          name: format
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Venue'
            type: array
      summary: Venues
schemes:
  - http
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
securityDefinitions:
  apiKeyHeader:
    in: header
    name: Ocp-Apim-Subscription-Key
    type: apiKey
  apiKeyQuery:
    in: query
    name: subscription-key
    type: apiKey
swagger: '2.0'
tags: []
x-components: {}

