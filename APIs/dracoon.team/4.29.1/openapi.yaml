basePath: /api
definitions:
  ActiveDirectory:
    description: Active Directory information
    properties:
      alias:
        description: Unique name for an Active Directory configuration
        type: string
      id:
        description: ID
        format: int32
        type: integer
      isGlobalAvailable:
        description: Is available for all customers
        type: boolean
    required:
      - alias
      - id
      - isGlobalAvailable
    type: object
  ActiveDirectoryAuthInfo:
    description: List of Active Directories
    properties:
      items:
        description: List of available Active Directories
        items:
          $ref: '#/definitions/ActiveDirectory'
        type: array
    required:
      - items
    type: object
  ActiveDirectoryConfig:
    description: Active Directory configuration
    properties:
      adExportGroup:
        description: >-
          If `userImport` is set to `true`,


          the user must be member of this Active Directory group to receive a
          newly created DRACOON account.
        type: string
      alias:
        description: Unique name for an Active Directory configuration
        type: string
      createHomeFolder:
        default: false
        description: >-
          &#128679; Deprecated since v4.10.0


          DEPRECATED, will be ignored


          Determines whether a room is created for each user that is created by
          automatic import (like a home folder).


          Room's name will equal the user's login name.
        type: boolean
        x-deprecated: true
      homeFolderParent:
        description: >-
          &#128679; Deprecated since v4.10.0


          DEPRECATED, will be ignored


          ID of the room in which the individual rooms for users will be
          created.
        format: int64
        type: integer
        x-deprecated: true
      id:
        description: ID
        format: int32
        type: integer
      ldapUsersDomain:
        description: >-
          Search scope of Active Directory; only users below this node can log
          on.
        type: string
      sdsImportGroup:
        description: >-
          User group that is assigned to users who are created by automatic
          import.


          Reset with `0`
        format: int64
        type: integer
      serverAdminName:
        description: Distinguished Name (DN) of Active Directory administrative account
        type: string
      serverIp:
        description: IPv4 or IPv6 address or host name
        type: string
      serverPort:
        description: Port
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      sslFingerPrint:
        description: |-
          SSL finger print of Active Directory server.

          Mandatory for LDAPS connections.

          Format: `Algorithm/Fingerprint`
        type: string
      useLdaps:
        description: Determines whether LDAPS should be used instead of plain LDAP.
        type: boolean
      userFilter:
        description: Name of Active Directory attribute that is used as login name.
        type: string
      userImport:
        description: >-
          Determines if a DRACOON account is automatically created for a new
          user


          who successfully logs on with his / her AD / IDP account.
        type: boolean
    required:
      - adExportGroup
      - alias
      - id
      - ldapUsersDomain
      - serverAdminName
      - serverIp
      - serverPort
      - useLdaps
      - userFilter
      - userImport
    type: object
  ActiveDirectoryConfigList:
    description: List of Active Directory configurations
    properties:
      items:
        description: List of Active Directory configurations
        items:
          $ref: '#/definitions/ActiveDirectoryConfig'
        type: array
    required:
      - items
    type: object
  AlgorithmVersionInfo:
    description: Algorithm information
    properties:
      description:
        description: Algorithm description
        type: string
      status:
        description: |-
          Algorithm status

          Derived from preference value and threshold
        enum:
          - REQUIRED
          - DISCOURAGED
        type: string
      version:
        description: Algorithm version
        type: string
    required:
      - description
      - status
      - version
    type: object
  AlgorithmVersionInfoList:
    description: Information of all available algorithms
    properties:
      fileKeyAlgorithms:
        description: List of file key algorithms
        items:
          $ref: '#/definitions/AlgorithmVersionInfo'
        type: array
      keyPairAlgorithms:
        description: List of key pair algorithms
        items:
          $ref: '#/definitions/AlgorithmVersionInfo'
        type: array
    required:
      - fileKeyAlgorithms
      - keyPairAlgorithms
    type: object
  AttributesResponse:
    description: Ranged list of attributes
    properties:
      items:
        description: List of key-value pairs
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  AuditNodeResponse:
    description: Audit node report
    properties:
      auditUserPermissionList:
        description: List of assigned users with permissions
        items:
          $ref: '#/definitions/AuditUserPermission'
        type: array
      nodeCntChildren:
        description: |-
          Number of direct children

          (no recursion; for rooms only)
        format: int32
        type: integer
      nodeCreatedAt:
        description: Creation date
        format: date-time
        type: string
      nodeCreatedBy:
        $ref: '#/definitions/UserInfo'
      nodeHasActivitiesLog:
        default: true
        description: Is activities log active (for rooms only)
        type: boolean
      nodeHasRecycleBin:
        description: |-
          &#128679; Deprecated since v4.10.0

          Is recycle bin active (for rooms only)

          Recycle bin is always on (disabling is not possible).
        type: boolean
        x-deprecated: true
      nodeId:
        description: Node ID
        format: int64
        type: integer
      nodeIsEncrypted:
        description: Encryption state
        type: boolean
      nodeName:
        description: Node name
        type: string
      nodeParentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      nodeParentPath:
        description: |-
          Parent node path

          `/` if node is a root node (room)
        type: string
      nodeQuota:
        description: Quota in byte
        format: int64
        type: integer
      nodeRecycleBinRetentionPeriod:
        description: Retention period for deleted nodes in days
        format: int32
        maximum: 9999
        minimum: 0
        type: integer
      nodeSize:
        description: Node size in byte
        format: int64
        type: integer
      nodeUpdatedAt:
        description: Modification date
        format: date-time
        type: string
      nodeUpdatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - auditUserPermissionList
      - nodeCntChildren
      - nodeId
      - nodeName
      - nodeParentPath
    type: object
  AuditUserPermission:
    description: Audit user permissions report
    properties:
      permissions:
        $ref: '#/definitions/NodePermissions'
      userFirstName:
        description: User first name
        type: string
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
      userLastName:
        description: User last name
        type: string
      userLogin:
        description: User login name
        type: string
    required:
      - permissions
      - userFirstName
      - userId
      - userLastName
      - userLogin
    type: object
  AuthConfig:
    description: Authentication settings
    properties:
      authMethods:
        description: List of authentication methods
        items:
          $ref: '#/definitions/AuthMethod'
        type: array
    required:
      - authMethods
    type: object
  AuthMethod:
    description: Authentication method
    properties:
      isEnabled:
        description: Is enabled
        type: boolean
      name:
        description: |-
          Authentication methods:

          * `basic`

          * `active_directory`

          * `radius`

          * `openid`
        type: string
      priority:
        description: Priority (smaller values have higher priority)
        format: int32
        type: integer
    required:
      - isEnabled
      - name
      - priority
    type: object
  AuthTokenRestrictions:
    description: Auth token restrictions
    properties:
      accessTokenValidity:
        description: |-
          &#128640; Since v4.13.0

          Restricted OAuth access token validity (in seconds)
        format: int32
        type: integer
      refreshTokenValidity:
        description: |-
          &#128640; Since v4.13.0

          Restricted OAuth refresh token validity (in seconds)
        format: int32
        type: integer
      restrictionEnabled:
        description: |-
          &#128640; Since v4.13.0

          Defines if OAuth token restrictions are enabled
        type: boolean
    type: object
  Avatar:
    description: User avatar information
    properties:
      avatarUri:
        description: Avatar URI
        type: string
      avatarUuid:
        description: Avatar UUID
        type: string
      isCustomAvatar:
        description: Determines whether user updated his / her avatar with own image
        type: boolean
    required:
      - avatarUri
      - avatarUuid
      - isCustomAvatar
    type: object
  ChangeGroupMembersRequest:
    description: List of user IDs
    properties:
      ids:
        description: List of user IDs
        items:
          description: List of user IDs
          format: int64
          type: integer
        type: array
    required:
      - ids
    type: object
  ChangeNodeCommentRequest:
    description: Request model for updating a node comment
    properties:
      text:
        description: Comment text
        type: string
    required:
      - text
    type: object
  ChangeUserPasswordRequest:
    description: Request model for updating user's password
    properties:
      newPassword:
        description: New password
        type: string
      oldPassword:
        description: Old password
        type: string
    required:
      - newPassword
      - oldPassword
    type: object
  CharacterRules:
    description: Password character rules
    properties:
      mustContainCharacters:
        description: >-
          Characters which a password must contain:


          * `alpha` - at least one alphabetical character (`uppercase` OR
          `lowercase`)


          * `uppercase` - at least one uppercase character


          * `lowercase` - at least one lowercase character


          * `numeric` - at least one numeric character


          * `special` - at least one special character (letters and digits
          excluded)


          * `all` - combination of `uppercase`, `lowercase`, `numeric` and
          `special` (available only in request models)


          * `none` - none of the above
        enum:
          - alpha
          - uppercase
          - lowercase
          - numeric
          - special
          - all
          - none
        items:
          description: >-
            Characters which a password must contain:


            * `alpha` - at least one alphabetical character (`uppercase` OR
            `lowercase`)


            * `uppercase` - at least one uppercase character


            * `lowercase` - at least one lowercase character


            * `numeric` - at least one numeric character


            * `special` - at least one special character (letters and digits
            excluded)


            * `all` - combination of `uppercase`, `lowercase`, `numeric` and
            `special` (available only in request models)


            * `none` - none of the above
          enum:
            - alpha
            - uppercase
            - lowercase
            - numeric
            - special
            - all
            - none
          type: string
        type: array
      numberOfCharacteristicsToEnforce:
        description: |-
          Number of characteristics to enforce

          e.g. from `["uppercase", "lowercase", "numeric", "special"]`

          all 4 character sets can be enforced; but also only 2 of them
        format: int32
        maximum: 4
        minimum: 0
        type: integer
    required:
      - mustContainCharacters
      - numberOfCharacteristicsToEnforce
    type: object
  ChunkUploadResponse:
    description: Chunk upload response
    properties:
      hash:
        description: Hash value of transferred chunk
        type: string
      size:
        description: Chunk size
        format: int64
        type: integer
    required:
      - hash
      - size
    type: object
  Comment:
    description: Node comment information
    properties:
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      id:
        description: Comment ID
        format: int64
        type: integer
      isChanged:
        description: Determines whether comment was edited or not
        type: boolean
      isDeleted:
        description: Determines whether comment was deleted or not
        type: boolean
      text:
        description: Comment text
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - createdAt
      - createdBy
      - id
      - isChanged
      - isDeleted
      - text
      - updatedAt
      - updatedBy
    type: object
  CommentList:
    description: List of node comments
    properties:
      items:
        description: List of node comments
        items:
          $ref: '#/definitions/Comment'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  CompleteS3FileUploadRequest:
    description: Request model for completing a S3 file upload
    properties:
      fileKey:
        $ref: '#/definitions/FileKey'
      fileName:
        description: New file name to store with
        type: string
      keepShareLinks:
        default: false
        description: Preserve Download Share Links and point them to the new node.
        type: boolean
      parts:
        description: List of S3 file upload parts
        items:
          $ref: '#/definitions/S3FileUploadPart'
        type: array
      resolutionStrategy:
        default: autorename
        description: |-
          Node conflict resolution strategy:

          * `autorename`

          * `overwrite`

          * `fail`
        enum:
          - autorename
          - overwrite
          - fail
        type: string
    required:
      - parts
    type: object
  CompleteS3ShareUploadRequest:
    description: Request model for completing a S3 file upload
    properties:
      parts:
        description: List of S3 file upload parts
        items:
          $ref: '#/definitions/S3FileUploadPart'
        type: array
      userFileKeyList:
        description: List of user file keys
        items:
          $ref: '#/definitions/UserFileKey'
        type: array
    required:
      - parts
    type: object
  CompleteUploadRequest:
    description: Request model for completing an upload
    properties:
      fileKey:
        $ref: '#/definitions/FileKey'
      fileName:
        description: New file name to store with
        type: string
      keepShareLinks:
        default: false
        description: Preserve Download Share Links and point them to the new node.
        type: boolean
      resolutionStrategy:
        default: autorename
        description: |-
          Node conflict resolution strategy:

          * `autorename`

          * `overwrite`

          * `fail`
        enum:
          - autorename
          - overwrite
          - fail
        type: string
      userFileKeyList:
        $ref: '#/definitions/UserFileKeyList'
    type: object
  ConfigOptionList:
    description: List of key-value pairs
    properties:
      items:
        description: List of key-value pairs
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
    required:
      - items
    type: object
  ConfigRoomRequest:
    description: Request model for configuring a room
    properties:
      adminGroupIds:
        description: |-
          List of group ids

          A room requires at least one admin (user or group)
        items:
          description: |-
            List of group ids

            A room requires at least one admin (user or group)
          format: int64
          type: integer
        type: array
      adminIds:
        description: |-
          List of user ids

          A room requires at least one admin (user or group)
        items:
          description: |-
            List of user ids

            A room requires at least one admin (user or group)
          format: int64
          type: integer
        type: array
      classification:
        default: 2
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential



          Provided (or default) classification is taken from room

          when file gets uploaded without any classification.
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      hasActivitiesLog:
        default: true
        description: Is activities log active (for rooms only)
        type: boolean
      hasRecycleBin:
        description: |-
          &#128679; Deprecated since v4.10.0

          Is recycle bin active (for rooms only)

          Recycle bin is always on (disabling is not possible).
        type: boolean
        x-deprecated: true
      inheritPermissions:
        description: |-
          Inherit permissions from parent room

          (default: `false` if `parentId` is `0`; otherwise: `true`)
        type: boolean
      newGroupMemberAcceptance:
        default: autoallow
        description: |-
          Behaviour when new users are added to the group:

          * `autoallow`

          * `pending`



          Only relevant if `adminGroupIds` has items.
        enum:
          - autoallow
          - pending
        type: string
      recycleBinRetentionPeriod:
        description: Retention period for deleted nodes in days
        format: int32
        maximum: 9999
        minimum: 0
        type: integer
      takeOverPermissions:
        description: Take over existing permissions
        type: boolean
    type: object
  CopyNode:
    description: Copied node information
    properties:
      id:
        description: Source node ID
        format: int64
        type: integer
      name:
        description: New node name
        type: string
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    required:
      - id
    type: object
  CopyNodesRequest:
    description: Request model for copying nodes
    properties:
      items:
        description: List of nodes to be copied
        items:
          $ref: '#/definitions/CopyNode'
        type: array
      keepShareLinks:
        default: false
        description: Preserve Download Share Links and point them to the new node.
        type: boolean
      nodeIds:
        description: |-
          &#128679; Deprecated since v4.5.0

          Node IDs

          Please use `items` instead.
        items:
          description: |-
            Node IDs

            Please use `items` instead.
          format: int64
          type: integer
          x-deprecated: true
        type: array
        x-deprecated: true
      resolutionStrategy:
        default: autorename
        description: |-
          Node conflict resolution strategy:

          * `autorename`

          * `overwrite`

          * `fail`
        enum:
          - autorename
          - overwrite
          - fail
        type: string
    type: object
  CreateActiveDirectoryConfigRequest:
    description: Request model for creating an Active Directory configuration
    properties:
      adExportGroup:
        description: >-
          If `userImport` is set to `true`,


          the user must be member of this Active Directory group to receive a
          newly created DRACOON account.
        type: string
      alias:
        description: Unique name for an Active Directory configuration
        type: string
      createHomeFolder:
        default: false
        description: >-
          DEPRECATED, will be ignored


          Determines whether a room is created for each user that is created by
          automatic import (like a home folder).


          Room's name will equal the user's login name.
        type: boolean
      homeFolderParent:
        description: >-
          DEPRECATED, will be ignored


          ID of the room in which the individual rooms for users will be
          created.
        format: int64
        type: integer
      ldapUsersDomain:
        description: >-
          Search scope of Active Directory; only users below this node can log
          on.
        type: string
      sdsImportGroup:
        description: >-
          User group that is assigned to users who are created by automatic
          import.


          Reset with `0`
        format: int64
        type: integer
      serverAdminName:
        description: Distinguished Name (DN) of Active Directory administrative account
        type: string
      serverAdminPassword:
        description: Password of Active Directory administrative account
        type: string
      serverIp:
        description: IPv4 or IPv6 address or host name
        type: string
      serverPort:
        description: Port
        format: int32
        type: integer
      sslFingerPrint:
        description: |-
          SSL finger print of Active Directory server.

          Mandatory for LDAPS connections.

          Format: `Algorithm/Fingerprint`
        type: string
      useLdaps:
        default: false
        description: Determines whether LDAPS should be used instead of plain LDAP.
        type: boolean
      userFilter:
        description: Name of Active Directory attribute that is used as login name.
        type: string
      userImport:
        default: false
        description: >-
          Determines if a DRACOON account is automatically created for a new
          user


          who successfully logs on with his / her AD / IDP account.
        type: boolean
    required:
      - alias
      - ldapUsersDomain
      - serverAdminName
      - serverAdminPassword
      - serverIp
      - serverPort
      - userFilter
    type: object
  CreateDownloadShareRequest:
    description: Request model for creating a Download Share
    properties:
      creatorLanguage:
        description: |-
          &#128679; Deprecated since v4.20.0

          Language tag for messages to creator
        type: string
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      fileKey:
        $ref: '#/definitions/FileKey'
      internalNotes:
        description: |-
          &#128640; Since v4.11.0

          Internal notes
        maximum: 255
        type: string
      keyPair:
        $ref: '#/definitions/UserKeyPairContainer'
      mailBody:
        description: |-
          &#128679; Deprecated since v4.11.0

          Notification email content
        type: string
        x-deprecated: true
      mailRecipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient email addresses
        type: string
        x-deprecated: true
      mailSubject:
        description: |-
          &#128679; Deprecated since v4.11.0

          Notification email subject
        type: string
        x-deprecated: true
      maxDownloads:
        description: Max allowed downloads
        format: int32
        type: integer
      name:
        description: |-
          Alias name

          (default: name of the shared node)
        type: string
      nodeId:
        description: Source node ID
        format: int64
        type: integer
      notes:
        description: User notes
        maximum: 255
        type: string
      notifyCreator:
        default: false
        description: |-
          &#128679; Deprecated since v4.20.0

          Notify creator on every download.
        type: boolean
      password:
        description: 'Access password, not allowed for encrypted shares'
        type: string
      receiverLanguage:
        description: Language tag for messages to receiver
        type: string
      sendMail:
        default: false
        description: |-
          &#128679; Deprecated since v4.11.0

          Notify recipients via email

          Please use `POST /shares/downloads/{share_id}/email` API instead.
        type: boolean
        x-deprecated: true
      sendSms:
        default: false
        description: |-
          &#128679; Deprecated since v4.11.0

          Send share password via SMS

          Please use `textMessageRecipients` attribute instead.
        type: boolean
        x-deprecated: true
      showCreatorName:
        default: false
        description: Show creator first and last name.
        type: boolean
      showCreatorUsername:
        default: false
        description: Show creator email address.
        type: boolean
      smsRecipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient MSISDNs
        type: string
        x-deprecated: true
      textMessageRecipients:
        description: |-
          &#128640; Since v4.11.0

          List of recipient FQTNs

          E.123 / E.164 Format
        items:
          description: |-
            List of recipient FQTNs

            E.123 / E.164 Format
          type: string
        type: array
    required:
      - nodeId
    type: object
  CreateFileUploadRequest:
    description: Request model for creating an upload channel
    properties:
      classification:
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential



          (default: classification from parent room)
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      directS3Upload:
        default: false
        description: |-
          &#128640; Since v4.15.0

          Upload direct to S3
        type: boolean
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      name:
        description: File name
        type: string
      notes:
        description: |-
          User notes

          Use empty string to remove.
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      size:
        description: File size in byte
        format: int64
        type: integer
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    required:
      - name
      - parentId
    type: object
  CreateFileUploadResponse:
    description: Upload channel information
    properties:
      token:
        description: |-
          &#128679; Deprecated since v4.3.0

          Upload token
        type: string
        x-deprecated: true
      uploadId:
        description: Upload (channel) ID
        type: string
      uploadUrl:
        description: (public) Upload URL
        type: string
    required:
      - token
      - uploadId
      - uploadUrl
    type: object
  CreateFolderRequest:
    description: Request model for creating a folder
    properties:
      name:
        description: Name
        type: string
      notes:
        description: |-
          User notes

          Use empty string to remove.
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    required:
      - name
      - parentId
    type: object
  CreateGroupRequest:
    description: Request model for creating a group
    properties:
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      name:
        description: Group name
        type: string
    required:
      - name
    type: object
  CreateKeyPairRequest:
    description: Request model for creating a key pair
    properties:
      previousPrivateKey:
        $ref: '#/definitions/PrivateKeyContainer'
      privateKeyContainer:
        $ref: '#/definitions/PrivateKeyContainer'
      publicKeyContainer:
        $ref: '#/definitions/PublicKeyContainer'
    required:
      - previousPrivateKey
      - privateKeyContainer
      - publicKeyContainer
    type: object
  CreateNodeCommentRequest:
    description: Request model for creating a node comment
    properties:
      text:
        description: Comment text
        type: string
    required:
      - text
    type: object
  CreateOAuthClientRequest:
    description: Request model for creating an OAuth client
    properties:
      accessTokenValidity:
        description: Validity of the access token in seconds.
        format: int32
        type: integer
      approvalValidity:
        description: |-
          &#128640; Since v4.22.0

          Validity of the approval interval in seconds.
        format: int32
        type: integer
      clientId:
        description: ID of the OAuth client
        type: string
      clientName:
        description: 'Name, which is shown at the client configuration and authorization.'
        type: string
      clientSecret:
        description: 'Secret, which client uses at authentication.'
        type: string
      clientType:
        description: Determines whether client is a confidential or public client.
        enum:
          - confidential
          - public
        type: string
      grantTypes:
        description: |-
          Authorized grant types

          * `authorization_code`

          * `implicit`

          * `password`

          * `client_credentials`

          * `refresh_token`



          cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
        enum:
          - authorization_code
          - client_credentials
          - implicit
          - password
          - refresh_token
        items:
          description: |-
            Authorized grant types

            * `authorization_code`

            * `implicit`

            * `password`

            * `client_credentials`

            * `refresh_token`



            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
          enum:
            - authorization_code
            - client_credentials
            - implicit
            - password
            - refresh_token
          type: string
        type: array
      redirectUris:
        description: 'URIs, to which a user is redirected after authorization.'
        items:
          description: 'URIs, to which a user is redirected after authorization.'
          type: string
        type: array
      refreshTokenValidity:
        description: Validity of the refresh token in seconds.
        format: int32
        type: integer
    required:
      - clientName
      - grantTypes
    type: object
  CreateOpenIdIdpConfigRequest:
    description: Request model for creating an OpenID Connect IDP configuration
    properties:
      authorizationEndPointUrl:
        description: URL of the authorization endpoint
        type: string
      clientId:
        description: ID of the OpenID client
        type: string
      clientSecret:
        description: 'Secret, which client uses at authentication.'
        type: string
      fallbackMappingClaim:
        description: Name of the claim which is used for the user mapping fallback.
        type: string
      flow:
        description: |-
          &#128640; Since v4.11.0

          Flow, which is used at authentication
        enum:
          - authorization_code
          - hybrid
        type: string
      issuer:
        description: |-
          Issuer identifier of the IDP

          The value is a case sensitive URL.
        type: string
      jwksEndPointUrl:
        description: URL of the JWKS endpoint
        type: string
      mappingClaim:
        description: Name of the claim which is used for the user mapping.
        type: string
      name:
        description: Name of the IDP
        type: string
      pkceChallengeMethod:
        default: plain
        description: |-
          PKCE code challenge method.

          cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
        type: string
      pkceEnabled:
        default: false
        description: |-
          Determines whether PKCE is enabled.

          cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
        type: boolean
      redirectUris:
        description: 'URIs, to which a user is redirected after authorization.'
        items:
          description: 'URIs, to which a user is redirected after authorization.'
          type: string
        type: array
      scopes:
        description: List of requested scopes
        items:
          description: List of requested scopes
          type: string
        type: array
      tokenEndPointUrl:
        description: URL of the token endpoint
        type: string
      userImportEnabled:
        default: false
        description: >-
          Determines if a DRACOON account is automatically created for a new
          user


          who successfully logs on with his / her AD / IDP account.
        type: boolean
      userImportGroup:
        description: >-
          User group that is assigned to users who are created by automatic
          import.


          Reset with `0`
        format: int64
        type: integer
      userInfoEndPointUrl:
        description: URL of the user info endpoint
        type: string
      userInfoSource:
        description: >-
          &#128640; Since v4.23.0


          Source, which is used to get user information at the import or update
          of a user.
        enum:
          - user_info_endpoint
          - id_token
        type: string
      userManagementUrl:
        description: |-
          URL of the user management UI.

          Use empty string to remove.
        type: string
      userUpdateEnabled:
        default: false
        description: |-
          Determines if the DRACOON account is updated with data from AD / IDP.

          For OpenID Connect, the scopes `email` and `profile` are needed.
        type: boolean
    required:
      - authorizationEndPointUrl
      - clientId
      - clientSecret
      - issuer
      - jwksEndPointUrl
      - mappingClaim
      - name
      - redirectUris
      - scopes
      - tokenEndPointUrl
      - userInfoEndPointUrl
    type: object
  CreateRoomRequest:
    description: Request model for creating a room
    properties:
      adminGroupIds:
        description: |-
          List of group ids

          A room requires at least one admin (user or group)
        items:
          description: |-
            List of group ids

            A room requires at least one admin (user or group)
          format: int64
          type: integer
        type: array
      adminIds:
        description: |-
          List of user ids

          A room requires at least one admin (user or group)
        items:
          description: |-
            List of user ids

            A room requires at least one admin (user or group)
          format: int64
          type: integer
        type: array
      classification:
        default: 2
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential



          Provided (or default) classification is taken from room

          when file gets uploaded without any classification.
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      hasActivitiesLog:
        default: true
        description: Is activities log active (for rooms only)
        type: boolean
      hasRecycleBin:
        description: |-
          &#128679; Deprecated since v4.10.0

          Is recycle bin active (for rooms only)

          Recycle bin is always on (disabling is not possible).
        type: boolean
        x-deprecated: true
      inheritPermissions:
        description: |-
          Inherit permissions from parent room

          (default: `false` if `parentId` is `0`; otherwise: `true`)
        type: boolean
      name:
        description: Name
        type: string
      newGroupMemberAcceptance:
        default: autoallow
        description: |-
          Behaviour when new users are added to the group:

          * `autoallow`

          * `pending`



          Only relevant if `adminGroupIds` has items.
        enum:
          - autoallow
          - pending
        type: string
      notes:
        description: |-
          User notes

          Use empty string to remove.
        type: string
      parentId:
        description: Parent room ID or `null` (not 0) to create a top level room
        format: int64
        type: integer
      quota:
        description: Quota in byte
        format: int64
        type: integer
      recycleBinRetentionPeriod:
        description: Retention period for deleted nodes in days
        format: int32
        maximum: 9999
        minimum: 0
        type: integer
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    required:
      - name
    type: object
  CreateShareUploadChannelRequest:
    description: Request model for creating an upload channel
    properties:
      directS3Upload:
        default: false
        description: |-
          &#128640; Since v4.15.0

          Upload direct to S3
        type: boolean
      name:
        description: File name
        type: string
      password:
        description: Password
        type: string
      size:
        description: File size in byte
        format: int64
        type: integer
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    required:
      - name
    type: object
  CreateShareUploadChannelResponse:
    description: Upload channel information
    properties:
      token:
        description: |-
          &#128679; Deprecated since v4.3.0

          Upload token
        type: string
        x-deprecated: true
      uploadId:
        description: Upload (channel) ID
        type: string
      uploadUrl:
        description: (public) Upload URL
        type: string
    required:
      - uploadId
      - uploadUrl
    type: object
  CreateUploadShareRequest:
    description: Request model for creating an Upload Share
    properties:
      creatorLanguage:
        description: |-
          &#128679; Deprecated since v4.20.0

          Language tag for messages to creator
        type: string
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      filesExpiryPeriod:
        description: Number of days after which uploaded files expire
        format: int32
        type: integer
      internalNotes:
        description: |-
          &#128640; Since v4.11.0

          Internal notes
        maximum: 255
        type: string
      mailBody:
        description: |-
          &#128679; Deprecated since v4.11.0

          Notification email content
        type: string
        x-deprecated: true
      mailRecipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient email addresses
        type: string
        x-deprecated: true
      mailSubject:
        description: |-
          &#128679; Deprecated since v4.11.0

          Notification email subject
        type: string
        x-deprecated: true
      maxSize:
        description: Maximal total size of uploaded files (in bytes)
        format: int64
        type: integer
      maxSlots:
        description: Maximal amount of files to upload
        format: int32
        type: integer
      name:
        description: |-
          Alias name

          (default: name of the shared node)
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      notifyCreator:
        default: false
        description: |-
          &#128679; Deprecated since v4.20.0

          Notify creator on every upload.
        type: boolean
      password:
        description: Password
        type: string
      receiverLanguage:
        description: Language tag for messages to receiver
        type: string
      sendMail:
        default: false
        description: |-
          &#128679; Deprecated since v4.11.0

          Notify recipients via email

          Please use `POST /shares/uploads/{share_id}/email` API instead.
        type: boolean
        x-deprecated: true
      sendSms:
        default: false
        description: |-
          &#128679; Deprecated since v4.11.0

          Send share password via SMS

          Please use `textMessageRecipients` attribute instead.
        type: boolean
        x-deprecated: true
      showCreatorName:
        default: false
        description: |-
          &#128640; Since v4.11.0

          Show creator first and last name.
        type: boolean
      showCreatorUsername:
        default: false
        description: |-
          &#128640; Since v4.11.0

          Show creator email address.
        type: boolean
      showUploadedFiles:
        default: false
        description: Allow display of already uploaded files
        type: boolean
      smsRecipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient MSISDNs
        type: string
        x-deprecated: true
      targetId:
        description: Target room or folder ID
        format: int64
        type: integer
      textMessageRecipients:
        description: |-
          &#128640; Since v4.11.0

          List of recipient FQTNs

          E.123 / E.164 Format
        items:
          description: |-
            List of recipient FQTNs

            E.123 / E.164 Format
          type: string
        type: array
    required:
      - targetId
    type: object
  CreateUserRequest:
    description: Request model for creating an user
    properties:
      authData:
        $ref: '#/definitions/UserAuthData'
      authMethods:
        description: |-
          &#128679; Deprecated since v4.13.0

          Authentication methods:

          * `sql`

          * `active_directory`

          * `radius`

          * `openid`

          use `authData` instead
        items:
          $ref: '#/definitions/UserAuthMethod'
        type: array
        x-deprecated: true
      email:
        description: 'Email '
        type: string
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender

          Do NOT use `gender`! It will be ignored.
        type: string
        x-deprecated: true
      isNonmemberViewer:
        description: |-
          &#128640; Since v4.12.0

          Determines whether user has the role NONMEMBER_VIEWER
        type: boolean
      lastName:
        description: User last name
        type: string
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      needsToChangePassword:
        description: |-
          &#128679; Deprecated since v4.13.0

          Determines whether user has to change his / her initial password.

          use `authDate.mustChangePassword` instead
        type: boolean
        x-deprecated: true
      notifyUser:
        description: >-
          &#128640; Since v4.9.0


          Notify user about his new account


          * default: `true` for `basic` auth type


          * default: `false` for `active_directory`, `openid` and `radius` auth
          types
        type: boolean
      password:
        description: |-
          &#128679; Deprecated since v4.13.0

          An initial password may be preset

          use `authData` instead
        type: string
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      receiverLanguage:
        description: IETF language tag
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
    required:
      - firstName
      - lastName
    type: object
  CreateWebhookRequest:
    description: Request model for creating a webhook
    properties:
      eventTypeNames:
        description: List of names of event types
        items:
          description: List of names of event types
          type: string
        type: array
      isEnabled:
        description: Is enabled
        type: boolean
      name:
        description: Name
        type: string
      secret:
        description: Secret; used for event message signatures
        type: string
      triggerExampleEvent:
        description: 'If set to true, an example event is being created'
        type: boolean
      url:
        description: URL (must begin with the `HTTPS` scheme)
        type: string
    required:
      - eventTypeNames
      - name
      - url
    type: object
  Customer:
    description: Customer information
    properties:
      activationCode:
        description: |-
          &#128679; Deprecated since v4.8.0

          Customer activation code string:

          * valid only for types `free` and `demo`

          * for `pay` customers it is empty
        type: string
        x-deprecated: true
      companyName:
        description: Company name
        type: string
      createdAt:
        description: Creation date
        format: date-time
        type: string
      customerAttributes:
        $ref: '#/definitions/CustomerAttributes'
      customerContractType:
        description: Customer type
        enum:
          - demo
          - free
          - pay
        type: string
      customerUuid:
        description: |-
          &#128640; Since v4.21.0

          Customer UUID
        type: string
      id:
        description: Unique identifier for the customer
        format: int64
        type: integer
      isLocked:
        default: false
        description: |-
          Customer is locked:

          * `false` - unlocked

          * `true` - locked



          All users of this customer will be blocked and can not login anymore.
        type: boolean
      lastLoginAt:
        description: Date of last seen login for the customer
        format: date-time
        type: string
      lockStatus:
        default: false
        description: |-
          &#128679; Deprecated since v4.7.0

          Customer lock status:

          * `false` - unlocked

          * `true` - locked



          Please use `isLocked` instead.

          All users of this customer will be blocked and can not login anymore.
        type: boolean
        x-deprecated: true
      providerCustomerId:
        description: Provider customer ID
        type: string
      quotaMax:
        description: >-
          Maximal disc space which can be allocated by customer in bytes. -1 for
          unlimited
        format: int64
        type: integer
      quotaUsed:
        description: Used amount of disc space in bytes
        format: int64
        type: integer
      trialDaysLeft:
        description: |-
          Number of days left for trial period (relevant only for type `demo`)

          (not used)
        format: int32
        type: integer
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      userMax:
        description: Maximal number of users
        format: int32
        type: integer
      userUsed:
        description: Number of users which are already allocated.
        format: int32
        type: integer
      webhooksMax:
        description: |-
          &#128640; Since v4.19.0

          Maximal number of webhooks
        format: int64
        type: integer
    required:
      - companyName
      - createdAt
      - customerContractType
      - customerUuid
      - id
      - lockStatus
      - quotaMax
      - quotaUsed
      - userMax
      - userUsed
    type: object
  CustomerAttributes:
    description: List of customer attributes
    properties:
      items:
        description: List of customer attributes
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
    required:
      - items
    type: object
  CustomerData:
    description: Customer information
    properties:
      accountsLimit:
        description: User accounts limit
        format: int32
        type: integer
      accountsUsed:
        description: User accounts used
        format: int32
        type: integer
      cntFiles:
        description: |-
          &#128679; Deprecated since v4.11.0

          Total number of files

          Visible only with at least one global role.
        format: int64
        type: integer
        x-deprecated: true
      cntFolders:
        description: |-
          &#128679; Deprecated since v4.11.0

          Total number of folders

          Visible only with at least one global role.
        format: int64
        type: integer
        x-deprecated: true
      cntRooms:
        description: |-
          &#128679; Deprecated since v4.11.0

          Total number of rooms

          Visible only with at least one global role.
        format: int64
        type: integer
        x-deprecated: true
      customerEncryptionEnabled:
        description: Clientside encryption for customer enabled
        type: boolean
      id:
        description: Unique identifier for the customer
        format: int64
        type: integer
      isProviderCustomer:
        description: Customer is Provider Customer
        type: boolean
      name:
        description: Customer name
        type: string
      spaceLimit:
        description: Space limit (in bytes). -1 for unlimited
        format: int64
        type: integer
      spaceUsed:
        description: Space used (in bytes)
        format: int64
        type: integer
    required:
      - accountsLimit
      - accountsUsed
      - customerEncryptionEnabled
      - id
      - isProviderCustomer
      - name
      - spaceLimit
      - spaceUsed
    type: object
    x-deprecated: true
  CustomerList:
    description: List of customers
    properties:
      items:
        description: List of customers
        items:
          $ref: '#/definitions/Customer'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  CustomerSettingsRequest:
    description: Request model for setting the customer settings
    properties:
      homeRoomParentName:
        description: Homeroom Parent Name
        type: string
      homeRoomQuota:
        description: Homeroom Quota in bytes
        format: int64
        type: integer
      homeRoomsActive:
        description: Homerooms active
        type: boolean
    type: object
  CustomerSettingsResponse:
    description: Customer settings
    properties:
      homeRoomParentId:
        description: Homeroom Parent ID
        format: int64
        type: integer
      homeRoomParentName:
        description: Homeroom Parent Name
        type: string
      homeRoomQuota:
        description: Homeroom Quota in bytes
        format: int64
        type: integer
      homeRoomsActive:
        description: Homerooms active
        type: boolean
    required:
      - homeRoomsActive
    type: object
  DeleteDeletedNodesRequest:
    description: Request model for deleting nodes from recycle bin
    properties:
      deletedNodeIds:
        description: List of deleted node IDs
        items:
          description: List of deleted node IDs
          format: int64
          type: integer
        type: array
    required:
      - deletedNodeIds
    type: object
  DeleteDownloadSharesRequest:
    description: Request model for deleting Download Shares
    properties:
      shareIds:
        description: List of share IDs
        items:
          description: List of share IDs
          format: int64
          type: integer
        type: array
    required:
      - shareIds
    type: object
  DeleteNodesRequest:
    description: Request model for deleting nodes
    properties:
      nodeIds:
        description: List of node IDs
        items:
          description: List of node IDs
          format: int64
          type: integer
        type: array
    required:
      - nodeIds
    type: object
  DeleteUploadSharesRequest:
    description: Request model for deleting Upload Shares
    properties:
      shareIds:
        description: List of share IDs
        items:
          description: List of share IDs
          format: int64
          type: integer
        type: array
    required:
      - shareIds
    type: object
  DeletedNode:
    description: Deleted node information (Deleted node can be a folder or file)
    properties:
      accessedAt:
        description: Last access date
        format: date-time
        type: string
      classification:
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential



          (default: classification from parent room)
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      deletedAt:
        description: Deletion date
        format: date-time
        type: string
      deletedBy:
        $ref: '#/definitions/UserInfo'
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      id:
        description: Node ID
        format: int64
        type: integer
      isEncrypted:
        description: Encryption state
        type: boolean
      name:
        description: Node name
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      parentPath:
        description: |-
          Parent node path

          `/` if node is a root node (room)
        type: string
      size:
        description: Node size in byte
        format: int64
        type: integer
      type:
        description: Node type
        enum:
          - folder
          - file
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - name
      - parentId
      - parentPath
      - type
    type: object
  DeletedNodeSummary:
    description: Deleted node information (Deleted node can be a folder or file)
    properties:
      cntVersions:
        description: Number of deleted versions of this file
        format: int32
        type: integer
      firstDeletedAt:
        description: First deleted version
        format: date-time
        type: string
      lastDeletedAt:
        description: Last deleted version
        format: date-time
        type: string
      lastDeletedNodeId:
        description: Node ID of last deleted version
        format: int64
        type: integer
      name:
        description: Node name
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      parentPath:
        description: |-
          Parent node path

          `/` if node is a root node (room)
        type: string
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system
        format: date-time
        type: string
      type:
        description: Node type
        enum:
          - folder
          - file
        type: string
    required:
      - cntVersions
      - firstDeletedAt
      - lastDeletedAt
      - lastDeletedNodeId
      - name
      - parentId
      - parentPath
      - type
    type: object
  DeletedNodeSummaryList:
    description: List of deleted nodes
    properties:
      items:
        description: List of deleted nodes (summary)
        items:
          $ref: '#/definitions/DeletedNodeSummary'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  DeletedNodeVersionsList:
    description: List of deleted versions of nodes
    properties:
      items:
        description: List of deleted nodes
        items:
          $ref: '#/definitions/DeletedNode'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  DownloadShare:
    description: Download Share information
    properties:
      accessKey:
        description: Share access key to generate secure link
        type: string
      classification:
        description: |-
          &#128679; Deprecated since v4.11.0

          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential



          (default: classification from parent room)
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
        x-deprecated: true
      cntDownloads:
        description: Downloads counter (incremented on each download)
        format: int32
        type: integer
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      dataUrl:
        description: Path to shared download node
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      id:
        description: Share ID
        format: int64
        type: integer
      internalNotes:
        description: |-
          &#128640; Since v4.11.0

          Internal notes
        maximum: 255
        type: string
      isEncrypted:
        description: |-
          Encrypted share

          (this only applies to shared files, not folders)
        type: boolean
      isProtected:
        description: Is share protected by password
        type: boolean
      maxDownloads:
        description: Max allowed downloads
        format: int32
        type: integer
      name:
        description: Alias name
        type: string
      nodeId:
        description: Source node ID
        format: int64
        type: integer
      nodePath:
        description: Path to shared download node
        type: string
      nodeType:
        description: Node type
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      notifyCreator:
        description: |-
          &#128679; Deprecated since v4.20.0

          Notify creator on every download.
        type: boolean
      recipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient email addresses
        type: string
        x-deprecated: true
      showCreatorName:
        description: Show creator first and last name.
        type: boolean
      showCreatorUsername:
        description: Show creator email address.
        type: boolean
      smsRecipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient MSISDNs
        type: string
        x-deprecated: true
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - accessKey
      - cntDownloads
      - createdAt
      - createdBy
      - id
      - name
      - nodeId
      - notifyCreator
    type: object
  DownloadShareLinkEmail:
    description: Request model for sending an email of a Download Share link
    properties:
      body:
        description: Notification email content
        type: string
      receiverLanguage:
        description: Language tag for messages to receiver
        type: string
      recipients:
        description: List of recipient email addresses
        items:
          description: List of recipient email addresses
          type: string
        type: array
    required:
      - body
      - recipients
    type: object
  DownloadShareList:
    description: List of Download Shares
    properties:
      items:
        description: List of Download Shares
        items:
          $ref: '#/definitions/DownloadShare'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  DownloadTokenGenerateResponse:
    description: Download URL
    properties:
      downloadUrl:
        description: Download URL
        type: string
      token:
        description: |-
          &#128679; Deprecated since v4.3.0

          Download token
        type: string
        x-deprecated: true
    required:
      - downloadUrl
      - token
    type: object
  EnableCustomerEncryptionRequest:
    description: Request model for enabling customer encryption
    properties:
      dataSpaceRescueKey:
        $ref: '#/definitions/UserKeyPairContainer'
      enableCustomerEncryption:
        description: Set `true` to enable encryption for this customer
        type: boolean
    required:
      - dataSpaceRescueKey
      - enableCustomerEncryption
    type: object
  EncryptRoomRequest:
    description: Request model for handling encryption settings for a room
    properties:
      dataRoomRescueKey:
        $ref: '#/definitions/UserKeyPairContainer'
      isEncrypted:
        description: Encryption state
        type: boolean
      useDataSpaceRescueKey:
        description: Use system emergency password (rescue key) for files in this room
        type: boolean
    required:
      - isEncrypted
    type: object
  EncryptionInfo:
    description: Encryption states
    properties:
      dataSpaceKeyState:
        description: DRACOON key state
        enum:
          - none
          - available
          - pending
        type: string
      roomKeyState:
        description: Room key state
        enum:
          - none
          - available
          - pending
        type: string
      userKeyState:
        description: User key state
        enum:
          - none
          - available
          - pending
        type: string
    required:
      - dataSpaceKeyState
      - roomKeyState
      - userKeyState
    type: object
  EncryptionPasswordPolicies:
    description: Encryption password policies
    properties:
      characterRules:
        $ref: '#/definitions/CharacterRules'
      minLength:
        description: Minimum number of characters a password must contain
        format: int32
        maximum: 1024
        minimum: 1
        type: integer
      rejectKeyboardPatterns:
        description: >-
          Determines whether a password must NOT contain keyboard patterns (e.g.
          `qwertz`, `asdf`)


          (min. 4 character pattern)
        type: boolean
      rejectUserInfo:
        description: >-
          Determines whether a password must NOT contain user info (first name,
          last name, email, user name)
        type: boolean
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    type: object
  ErrorResponse:
    description: Error information
    properties:
      code:
        description: HTTP status code
        format: int32
        type: integer
      debugInfo:
        description: Debug information
        type: string
      errorCode:
        description: Internal error code
        format: int32
        type: integer
      message:
        description: HTTP status code description
        type: string
    required:
      - code
      - message
    type: object
  EventType:
    description: Event type information
    properties:
      id:
        description: ID
        format: int32
        type: integer
      name:
        description: Name
        type: string
      usableCustomerAdminWebhook:
        description: Usable as customer admin webhook
        type: boolean
      usableNodeWebhook:
        description: Usable as node webhook
        type: boolean
      usablePushNotification:
        description: Usable as push notification
        type: boolean
      usableTenantWebhook:
        description: Usable as tenant webhook
        type: boolean
    required:
      - id
      - name
      - usableCustomerAdminWebhook
      - usableNodeWebhook
      - usablePushNotification
      - usableTenantWebhook
    type: object
  EventTypeList:
    description: List of event types
    properties:
      items:
        description: List of event types
        items:
          $ref: '#/definitions/EventType'
        type: array
    required:
      - items
    type: object
  EventlogConfig:
    description: Eventlog settings
    properties:
      enabled:
        description: Is eventlog enabled?
        type: boolean
      logIpEnabled:
        description: Determines whether user’s IP address is logged.
        type: boolean
      retentionPeriod:
        description: |-
          Retention period (in days) of event log entries.

          After that period, all entries are deleted.

          Recommended value: 7
        format: int32
        type: integer
    type: object
  FailoverServer:
    description: Failover server information
    properties:
      failoverEnabled:
        description: RADIUS Failover Server is active
        type: boolean
      failoverIpAddress:
        description: |-
          RADIUS Failover Server IP Address

          Required if failover server is enabled.
        type: string
      failoverPort:
        description: |-
          RADIUS Failover Server Port

          Required if failover server is enabled.
        format: int32
        type: integer
    required:
      - failoverEnabled
      - failoverIpAddress
      - failoverPort
    type: object
  FileFileKeys:
    description: File key information
    properties:
      fileKeyContainer:
        $ref: '#/definitions/FileKeyContainer'
      id:
        description: File ID
        format: int64
        type: integer
    type: object
  FileKey:
    description: File key information
    properties:
      iv:
        description: Initial vector
        type: string
      key:
        description: Encryption key
        type: string
      tag:
        description: |-
          Authentication tag

          (needed with authenticated encryption)
        type: string
      version:
        description: Version
        type: string
    required:
      - iv
      - key
      - tag
      - version
    type: object
  FileKeyContainer:
    description: File key container
    properties:
      iv:
        description: Initial vector
        type: string
      key:
        description: Encryption key
        type: string
      tag:
        description: |-
          Authentication tag

          (needed with authenticated encryption)
        type: string
      version:
        description: Version
        type: string
    required:
      - iv
      - key
      - version
    type: object
  FirstAdminUser:
    description: First administrator user
    properties:
      authData:
        $ref: '#/definitions/UserAuthData'
      authMethods:
        description: |-
          &#128679; Deprecated since v4.13.0

          Authentication methods:

          * `sql`

          * `active_directory`

          * `radius`

          * `openid`

          use `authData` instead
        items:
          $ref: '#/definitions/UserAuthMethod'
        type: array
        x-deprecated: true
      email:
        description: 'Email '
        type: string
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender
        type: string
        x-deprecated: true
      language:
        description: |-
          &#128679; Deprecated since v4.7.0

          Language ID or ISO 639-1 code
        type: string
        x-deprecated: true
      lastName:
        description: User last name
        type: string
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      needsToChangePassword:
        description: |-
          &#128679; Deprecated since v4.13.0

          Determines whether user has to change his / her initial password.

          use `authDate.mustChangePassword` instead
        type: boolean
        x-deprecated: true
      needsToChangeUserName:
        default: false
        description: |-
          &#128679; Deprecated since v4.13.0

          If `true`, the user must change the `userName` at the first login.
        type: boolean
        x-deprecated: true
      notifyUser:
        description: >-
          Notify user about his new account


          * default: `true` for `basic` auth type


          * default: `false` for `active_directory`, `openid` and `radius` auth
          types
        type: boolean
      password:
        description: |-
          &#128679; Deprecated since v4.13.0

          An initial password may be preset

          use `authData` instead
        type: string
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      receiverLanguage:
        description: IETF language tag
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
    required:
      - firstName
      - lastName
    type: object
  GeneralSettings:
    description: General settings
    properties:
      authTokenRestrictions:
        $ref: '#/definitions/AuthTokenRestrictions'
      cryptoEnabled:
        description: |-
          Activation status of client-side encryption.

          Can only be enabled once; disabling is not possible.
        type: boolean
      emailNotificationButtonEnabled:
        description: Enable email notification button
        type: boolean
      eulaEnabled:
        description: Each user has to confirm the EULA at first login.
        type: boolean
      hideLoginInputFields:
        description: |-
          &#128640; Since v4.13.0

          Defines if login fields should be hidden
        type: boolean
      mediaServerEnabled:
        description: |-
          &#128679; Deprecated since v4.12.0

          Determines if the media server is enabled
        type: boolean
        x-deprecated: true
      s3TagsEnabled:
        description: |-
          &#128640; Since v4.9.0

          Defines if S3 tags are enabled
        type: boolean
      sharePasswordSmsEnabled:
        description: Allow sending of share passwords via SMS
        type: boolean
      useS3Storage:
        description: Defines if S3 is used as storage backend
        type: boolean
      weakPasswordEnabled:
        description: >-
          &#128679; Deprecated since v4.14.0


          Allow weak password


          * A weak password has to fulfill the following criteria:

             * is at least 8 characters long

             * contains letters and numbers

          * A strong password has to fulfill the following criteria in addition:

             * contains at least one special character

             * contains upper and lower case characters

          Please use `GET /system/config/policies/passwords` API to get
          configured password policies.
        type: boolean
        x-deprecated: true
    type: object
  GeneralSettingsInfo:
    description: General settings
    properties:
      cryptoEnabled:
        description: |-
          Activation status of client-side encryption.

          Can only be enabled once; disabling is not possible.
        type: boolean
      emailNotificationButtonEnabled:
        description: Enable email notification button
        type: boolean
      eulaEnabled:
        description: Each user has to confirm the EULA at first login.
        type: boolean
      homeRoomParentId:
        description: |-
          &#128640; Since v4.10.0

          Homeroom Parent ID
        format: int64
        type: integer
      homeRoomsActive:
        description: |-
          &#128640; Since v4.10.0

          Homerooms active
        type: boolean
      mediaServerEnabled:
        description: |-
          &#128679; Deprecated since v4.12.0

          Determines if the media server is enabled
        type: boolean
        x-deprecated: true
      s3TagsEnabled:
        description: |-
          &#128640; Since v4.9.0

          Defines if S3 tags are enabled
        type: boolean
      sharePasswordSmsEnabled:
        description: Allow sending of share passwords via SMS
        type: boolean
      useS3Storage:
        description: Defines if S3 is used as storage backend
        type: boolean
      weakPasswordEnabled:
        description: |-
          Allow weak password

          * A weak password has to fulfill the following criteria:

             * is at least 8 characters long

             * contains letters and numbers

          * A strong password has to fulfill the following criteria in addition:

             * contains at least one special character

             * contains upper and lower case characters
        type: boolean
    type: object
  GeneratePresignedUrlsRequest:
    description: Request model for generating presigned URLs
    properties:
      firstPartNumber:
        description: >-
          First part number of a range of requested presigned URLs (for S3 it
          is: `1`)
        format: int32
        type: integer
      lastPartNumber:
        description: Last part number of a range of requested presigned URLs
        format: int32
        type: integer
      size:
        description: |-
          `Content-Length` header size for each presigned URL (in bytes)

          *MUST* be >= 5 MB except the last part.
        format: int64
        type: integer
    required:
      - firstPartNumber
      - lastPartNumber
      - size
    type: object
  Group:
    description: Group information
    properties:
      cntUsers:
        description: Amount of users
        format: int32
        type: integer
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      groupRoles:
        $ref: '#/definitions/RoleList'
      id:
        description: Unique identifier for the group
        format: int64
        type: integer
      name:
        description: Group name
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - cntUsers
      - createdAt
      - createdBy
      - id
      - name
    type: object
  GroupIds:
    description: List of group IDs
    properties:
      ids:
        description: List of group IDs
        items:
          description: List of group IDs
          format: int64
          type: integer
        type: array
    required:
      - ids
    type: object
  GroupInfo:
    description: Group information
    properties:
      id:
        description: Unique identifier for the group
        format: int64
        type: integer
      name:
        description: Group name
        type: string
    required:
      - id
      - name
    type: object
  GroupList:
    description: List of groups
    properties:
      items:
        description: List of groups
        items:
          $ref: '#/definitions/Group'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  GroupUser:
    description: User information
    properties:
      displayName:
        description: |-
          &#128679; Deprecated since v4.11.0

          Display name

          use information from `UserInfo` instead to combine a display name
        type: string
        x-deprecated: true
      email:
        description: |-
          &#128679; Deprecated since v4.11.0

          Email 

          use `email` from `UserInfo` instead
        type: string
        x-deprecated: true
      id:
        description: |-
          &#128679; Deprecated since v4.11.0

          Unique identifier for the user

          use `id` from `UserInfo` instead
        format: int64
        type: integer
        x-deprecated: true
      isMember:
        description: Determines whether user is a member of the group or not
        type: boolean
      login:
        description: |-
          &#128679; Deprecated since v4.11.0

          User login name
        type: string
        x-deprecated: true
      userInfo:
        $ref: '#/definitions/UserInfo'
    required:
      - displayName
      - email
      - id
      - isMember
      - login
      - userInfo
    type: object
  GroupUserList:
    description: List of users
    properties:
      items:
        description: List of group-user mappings
        items:
          $ref: '#/definitions/GroupUser'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  InfrastructureProperties:
    description: Infrastructure properties
    properties:
      isDracoonCloud:
        description: |-
          &#128640; Since v4.21.0

          Determines if the DRACOON Core is deployed in the cloud environment
        type: boolean
      mediaServerConfigEnabled:
        description: Determines if the media server is enabled
        type: boolean
      s3DefaultRegion:
        description: Suggested S3 Region
        type: string
      s3EnforceDirectUpload:
        description: |-
          &#128640; Since v4.15.0

          Enforce direct upload to S3
        type: boolean
      smsConfigEnabled:
        description: Allow sending of share passwords via SMS
        type: boolean
      tenantUuid:
        description: |-
          &#128640; Since v4.21.0

          Current tenant UUID
        type: string
    type: object
  KeyValueEntry:
    description: Key-value pair
    properties:
      key:
        description: Entry key
        type: string
      value:
        description: Entry value
        type: string
    required:
      - key
      - value
    type: object
  LastAdminGroupRoom:
    description: Room information
    properties:
      id:
        description: Room ID
        format: int64
        type: integer
      name:
        description: Room name
        type: string
      parentId:
        description: Parent room ID
        format: int64
        type: integer
      parentPath:
        description: |-
          Parent node path

          `/` if node is a root node (room)
        type: string
    required:
      - id
      - name
      - parentPath
    type: object
  LastAdminGroupRoomList:
    description: List of (last admin group) rooms
    properties:
      items:
        description: List of last admin rooms
        items:
          $ref: '#/definitions/LastAdminGroupRoom'
        type: array
    required:
      - items
    type: object
  LastAdminUserRoom:
    description: Room information
    properties:
      id:
        description: Room ID
        format: int64
        type: integer
      lastAdminInGroup:
        description: >-
          Determines whether user is last admin of a room due to being the last
          member of last admin group
        type: boolean
      lastAdminInGroupId:
        description: |-
          ID of the last admin group where the user is the only remaining member

          (returned only if `lastAdminInGroup` is `true`)
        format: int64
        type: integer
      name:
        description: Room name
        type: string
      parentId:
        description: Parent room ID
        format: int64
        type: integer
      parentPath:
        description: |-
          Parent node path

          `/` if node is a root node (room)
        type: string
    required:
      - id
      - lastAdminInGroup
      - name
      - parentPath
    type: object
  LastAdminUserRoomList:
    description: List of (last admin user) rooms
    properties:
      items:
        description: List of last admin rooms
        items:
          $ref: '#/definitions/LastAdminUserRoom'
        type: array
    required:
      - items
    type: object
  LogEvent:
    description: Log event information
    properties:
      attribute1:
        description: Attribute 1
        type: string
      attribute2:
        description: Attribute 2
        type: string
      attribute3:
        description: Attribute 3
        type: string
      authParentSource:
        description: Auth parent source ID
        type: string
      authParentTarget:
        description: Auth parent target ID
        type: string
      customerId:
        description: Unique identifier for the customer
        format: int64
        type: integer
      id:
        description: Event ID
        format: int64
        type: integer
      message:
        description: Event description
        type: string
      objectId1:
        description: Object ID 1
        format: int64
        type: integer
      objectId2:
        description: Object ID 2
        format: int64
        type: integer
      objectName1:
        description: Object name 1
        type: string
      objectName2:
        description: Object name 2
        type: string
      objectType1:
        description: Object type 1
        format: int32
        type: integer
      objectType2:
        description: Object type 2
        format: int32
        type: integer
      operationId:
        description: Operation type ID
        format: int32
        type: integer
      operationName:
        description: Operation name
        type: string
      status:
        description: |-
          Operation status:

          * `0` - Success

          * `2` - Error
        enum:
          - 0
          - 2
        format: int32
        type: integer
      time:
        description: Event timestamp
        format: date-time
        type: string
      userClient:
        description: Client
        type: string
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
      userIp:
        description: User IP
        type: string
      userName:
        description: Username
        type: string
    required:
      - id
      - message
      - time
      - userId
    type: object
  LogEventList:
    description: List of log events
    properties:
      items:
        description: List of log events
        items:
          $ref: '#/definitions/LogEvent'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  LogOperation:
    description: Log operation
    properties:
      id:
        description: Operation type ID
        format: int32
        type: integer
      isDeprecated:
        description: Determines whether log operation is deprecated or not
        type: boolean
      name:
        description: Operation name
        type: string
    required:
      - id
      - isDeprecated
      - name
    type: object
  LogOperationList:
    description: List of log operations
    properties:
      operationList:
        description: List of all log operations
        items:
          $ref: '#/definitions/LogOperation'
        type: array
    required:
      - operationList
    type: object
  LoginPasswordPolicies:
    description: Login password policies
    properties:
      characterRules:
        $ref: '#/definitions/CharacterRules'
      minLength:
        description: Minimum number of characters a password must contain
        format: int32
        maximum: 1024
        minimum: 1
        type: integer
      numberOfArchivedPasswords:
        description: >-
          Number of passwords to archive


          (must be between `0` and `10`; `0` means that password history is
          disabled)
        format: int32
        maximum: 10
        minimum: 1
        type: integer
      passwordExpiration:
        $ref: '#/definitions/PasswordExpiration'
      rejectDictionaryWords:
        description: >-
          Determines whether a password must NOT contain word(s) from a
          dictionary
        type: boolean
      rejectKeyboardPatterns:
        description: >-
          Determines whether a password must NOT contain keyboard patterns (e.g.
          `qwertz`, `asdf`)


          (min. 4 character pattern)
        type: boolean
      rejectUserInfo:
        description: >-
          Determines whether a password must NOT contain user info (first name,
          last name, email, user name)
        type: boolean
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
      userLockout:
        $ref: '#/definitions/UserLockout'
    required:
      - characterRules
      - minLength
      - numberOfArchivedPasswords
      - passwordExpiration
      - rejectDictionaryWords
      - rejectKeyboardPatterns
      - rejectUserInfo
      - updatedAt
      - updatedBy
      - userLockout
    type: object
  LoginRequest:
    description: Request model for performing an authentication
    properties:
      authType:
        description: Authentication methods
        enum:
          - basic
          - active_directory
          - radius
        type: string
      language:
        description: |-
          &#128679; Deprecated since v4.7.0

          Language ID or ISO 639-1 code
        type: string
        x-deprecated: true
      login:
        description: |-
          &#128679; Deprecated since v4.7.0

          User login name
        type: string
        x-deprecated: true
      password:
        description: Password
        type: string
      state:
        description: >-
          For RADIUS Access-Challenge


          If a `replyState` is returned, it must be included as `state` in the
          following request.
        type: string
      token:
        description: RADIUS Token
        type: string
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
    required:
      - password
    type: object
  LoginResponse:
    description: Authentication token
    properties:
      token:
        description: Authentication token
        type: string
    required:
      - token
    type: object
  MissingKeysResponse:
    description: Missing keys information
    properties:
      files:
        description: List of file keys
        items:
          $ref: '#/definitions/FileFileKeys'
        type: array
      items:
        description: List of user ID and file ID mappings
        items:
          $ref: '#/definitions/UserIdFileIdItem'
        type: array
      range:
        $ref: '#/definitions/Range'
      users:
        description: List of user public keys
        items:
          $ref: '#/definitions/UserUserPublicKey'
        type: array
    type: object
  MoveNode:
    description: Moved node information
    properties:
      id:
        description: Source node ID
        format: int64
        type: integer
      name:
        description: New node name
        type: string
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    required:
      - id
    type: object
  MoveNodesRequest:
    description: Request model for moving nodes
    properties:
      items:
        description: List of nodes to be moved
        items:
          $ref: '#/definitions/MoveNode'
        type: array
      keepShareLinks:
        default: false
        description: Preserve Download Share Links and point them to the new node.
        type: boolean
      nodeIds:
        description: |-
          &#128679; Deprecated since v4.5.0

          Node IDs

          Please use `items` instead.
        items:
          description: |-
            Node IDs

            Please use `items` instead.
          format: int64
          type: integer
          x-deprecated: true
        type: array
        x-deprecated: true
      resolutionStrategy:
        default: autorename
        description: |-
          Node conflict resolution strategy:

          * `autorename`

          * `overwrite`

          * `fail`
        enum:
          - autorename
          - overwrite
          - fail
        type: string
    type: object
  NewCustomerRequest:
    description: Request model for creating a customer
    properties:
      activationCode:
        description: |-
          &#128679; Deprecated since v4.8.0

          Customer activation code string:

          * valid only for types `free` and `demo`

          * for `pay` customers it is empty
        type: string
        x-deprecated: true
      companyName:
        description: Company name
        type: string
      customerAttributes:
        $ref: '#/definitions/CustomerAttributes'
      customerContractType:
        description: Customer type
        enum:
          - demo
          - free
          - pay
        type: string
      firstAdminUser:
        $ref: '#/definitions/FirstAdminUser'
      isLocked:
        default: false
        description: |-
          Customer is locked:

          * `false` - unlocked

          * `true` - locked



          All users of this customer will be blocked and can not login anymore.
        type: boolean
      lockStatus:
        default: false
        description: |-
          &#128679; Deprecated since v4.7.0

          Customer lock status:

          * `false` - unlocked

          * `true` - locked



          Please use `isLocked` instead.

          All users of this customer will be blocked and can not login anymore.
        type: boolean
        x-deprecated: true
      providerCustomerId:
        description: Provider customer ID
        type: string
      quotaMax:
        description: >-
          Maximal disc space which can be allocated by customer in bytes. -1 for
          unlimited
        format: int64
        type: integer
      trialDays:
        description: |-
          Number of days left for trial period (relevant only for type `demo`)

          (not used)
        format: int32
        type: integer
      userMax:
        description: Maximal number of users
        format: int32
        type: integer
      webhooksMax:
        description: |-
          &#128640; Since v4.19.0

          Maximal number of webhooks
        format: int64
        type: integer
    required:
      - customerContractType
      - firstAdminUser
      - quotaMax
      - userMax
    type: object
  NewCustomerResponse:
    description: Customer information
    properties:
      activationCode:
        description: |-
          &#128679; Deprecated since v4.8.0

          Customer activation code string:

          * valid only for types `free` and `demo`

          * for `pay` customers it is empty
        type: string
        x-deprecated: true
      companyName:
        description: Company name
        type: string
      createdAt:
        description: Creation date
        format: date-time
        type: string
      customerAttributes:
        $ref: '#/definitions/CustomerAttributes'
      customerContractType:
        description: Customer type
        enum:
          - demo
          - free
          - pay
        type: string
      customerUuid:
        description: |-
          &#128640; Since v4.21.0

          Customer UUID
        type: string
      firstAdminUser:
        $ref: '#/definitions/FirstAdminUser'
      id:
        description: Unique identifier for the customer
        format: int64
        type: integer
      isLocked:
        default: false
        description: |-
          Customer is locked:

          * `false` - unlocked

          * `true` - locked



          All users of this customer will be blocked and can not login anymore.
        type: boolean
      lockStatus:
        default: false
        description: |-
          &#128679; Deprecated since v4.7.0

          Customer lock status:

          * `false` - unlocked

          * `true` - locked



          Please use `isLocked` instead.

          All users of this customer will be blocked and can not login anymore.
        type: boolean
        x-deprecated: true
      providerCustomerId:
        description: Provider customer ID
        type: string
      quotaMax:
        description: >-
          Maximal disc space which can be allocated by customer in bytes. -1 for
          unlimited
        format: int64
        type: integer
      trialDays:
        description: |-
          Number of days left for trial period (relevant only for type `demo`)

          (not used)
        format: int32
        type: integer
      userMax:
        description: Maximal number of users
        format: int32
        type: integer
      webhooksMax:
        description: |-
          &#128640; Since v4.19.0

          Maximal number of webhooks
        format: int64
        type: integer
    required:
      - companyName
      - customerContractType
      - customerUuid
      - firstAdminUser
      - lockStatus
      - quotaMax
      - userMax
    type: object
  Node:
    description: 'Node information (Node can be a room, folder or file)'
    properties:
      authParentId:
        description: |-
          &#128640; Since v4.15.0

          Auth parent room ID
        format: int64
        type: integer
      branchVersion:
        description: Version of last change in this node or a node further down the tree.
        format: int64
        type: integer
      children:
        description: |-
          &#128679; Deprecated since v4.10.0

          Child nodes list (if requested)

          (for rooms / folders only)
        items:
          $ref: '#/definitions/Node'
        type: array
        x-deprecated: true
      classification:
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential
        enum:
          - 1
          - 2
          - 3
          - 4
        format: int32
        type: integer
      cntAdmins:
        description: |-
          &#128679; Deprecated since v4.2.0

          Number of admins (for rooms only)
        format: int32
        type: integer
        x-deprecated: true
      cntChildren:
        description: |-
          &#128679; Deprecated since v4.11.0

          Number of direct children

          (no recursion; for rooms / folders only)
        format: int32
        type: integer
        x-deprecated: true
      cntComments:
        description: Returns the number of comments of this node.
        format: int32
        type: integer
      cntDeletedVersions:
        description: |-
          Number of deleted versions of this file / folder

          (for rooms / folders only)
        format: int32
        type: integer
      cntDownloadShares:
        description: Returns the number of Download Shares of this node.
        format: int32
        type: integer
      cntFiles:
        description: |-
          &#128640; Since v4.11.0

          Amount of direct child files where this node is the parent node

          (no recursion; for rooms / folders only)
        format: int32
        type: integer
      cntFolders:
        description: |-
          &#128640; Since v4.11.0

          Amount of direct child folders where this node is the parent node

          (no recursion; for rooms / folders only)
        format: int32
        type: integer
      cntRooms:
        description: |-
          &#128640; Since v4.11.0

          Amount of direct child rooms where this node is the parent node

          (no recursion; for rooms only)
        format: int32
        type: integer
      cntUploadShares:
        description: Returns the number of Upload Shares of this node.
        format: int32
        type: integer
      cntUsers:
        description: |-
          &#128679; Deprecated since v4.2.0

          Number of users (for rooms only)
        format: int32
        type: integer
        x-deprecated: true
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      encryptionInfo:
        $ref: '#/definitions/EncryptionInfo'
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      fileType:
        description: File type / extension (for files only)
        type: string
      hasActivitiesLog:
        default: true
        description: Is activities log active (for rooms only)
        type: boolean
      hasRecycleBin:
        description: |-
          &#128679; Deprecated since v4.10.0

          Is recycle bin active (for rooms only)

          Recycle bin is always on (disabling is not possible).
        type: boolean
        x-deprecated: true
      hash:
        description: MD5 hash of file
        type: string
      id:
        description: Node ID
        format: int64
        type: integer
      inheritPermissions:
        description: |-
          Inherit permissions from parent room

          (default: `false` if `parentId` is `0`; otherwise: `true`)
        type: boolean
      isBrowsable:
        description: |-
          &#128640; Since v4.11.0

          Determines whether node is browsable by client (for rooms only)
        type: boolean
      isEncrypted:
        description: Encryption state
        type: boolean
      isFavorite:
        description: Node is marked as favorite (for rooms / folders only)
        type: boolean
      mediaToken:
        description: Media server media token
        type: string
      mediaType:
        description: File media type (for files only)
        type: string
      name:
        description: Name
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      parentPath:
        description: |-
          Parent node path

          `/` if node is a root node (room)
        type: string
      permissions:
        $ref: '#/definitions/NodePermissions'
      quota:
        description: Quota in byte
        format: int64
        type: integer
      recycleBinRetentionPeriod:
        description: Retention period for deleted nodes in days
        format: int32
        maximum: 9999
        minimum: 0
        type: integer
      size:
        description: Node size in byte
        format: int64
        type: integer
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system
        format: date-time
        type: string
      type:
        description: Node type
        enum:
          - room
          - folder
          - file
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - id
      - name
      - type
    type: object
  NodeList:
    description: List of nodes
    properties:
      items:
        description: List of nodes
        items:
          $ref: '#/definitions/Node'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  NodeParent:
    description: Parent node
    properties:
      id:
        description: Node ID
        format: int64
        type: integer
      name:
        description: Node name
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      type:
        description: Node type
        type: string
    required:
      - id
      - name
      - type
    type: object
  NodeParentList:
    description: List of parent nodes
    properties:
      items:
        description: List of node parents
        items:
          $ref: '#/definitions/NodeParent'
        type: array
    type: object
  NodePermissions:
    description: Node permissions
    properties:
      change:
        description: >-
          User / Group may update metadata of nodes: rename files and folders,
          change classification, etc.
        type: boolean
      create:
        description: >-
          User / Group may upload files, create folders and copy / move files to
          this room, overwriting is not possible.
        type: boolean
      delete:
        description: >-
          User / Group may overwrite and remove files / folders, move files from
          this room.
        type: boolean
      deleteRecycleBin:
        description: >-
          User / Group may permanently remove files / folders from the recycle
          bin.
        type: boolean
      manage:
        description: >-
          User / Group may grant all of the above permissions to other users and
          groups independently,


          may update room metadata and create / update / delete subordinary
          rooms, has all permissions.
        type: boolean
      manageDownloadShare:
        description: >-
          User / Group may create Download Shares for files and containers view
          all previously created Download Shares in this room.
        type: boolean
      manageUploadShare:
        description: >-
          User / Group may create Upload Shares for containers, view all
          previously created Upload Shares in this room.
        type: boolean
      read:
        description: >-
          User / Group may see all rooms, files and folders in the room and
          download everything, copy files from this room.
        type: boolean
      readRecycleBin:
        description: User / Group may look up files / folders in the recycle bin.
        type: boolean
      restoreRecycleBin:
        description: >-
          User / Group may restore files / folders from recycle bin - room
          permissions required.
        type: boolean
    required:
      - change
      - create
      - delete
      - deleteRecycleBin
      - manage
      - manageDownloadShare
      - manageUploadShare
      - read
      - readRecycleBin
      - restoreRecycleBin
    type: object
  NotificationChannel:
    description: Notification channel information
    properties:
      frequency:
        description: Channel frequency (aggregation window size in minutes)
        format: int64
        type: integer
      id:
        description: Channel ID
        format: int32
        type: integer
      isEnabled:
        description: Determines whether channel is enabled
        type: boolean
      name:
        description: Name
        type: string
      type:
        description: Channel type (only `EMAIL` available at the moment)
        type: string
    required:
      - frequency
      - id
      - isEnabled
      - name
      - type
    type: object
  NotificationChannelActivationRequest:
    description: Request model for switching notification channel status
    properties:
      channelId:
        description: Channel ID
        format: int32
        type: integer
      isEnabled:
        description: Determines whether channel is enabled
        type: boolean
    required:
      - channelId
      - isEnabled
    type: object
  NotificationChannelList:
    description: List of notification channels
    properties:
      items:
        description: List of notification channels
        items:
          $ref: '#/definitions/NotificationChannel'
        type: array
    required:
      - items
    type: object
  NotificationConfig:
    description: Notification configuration information
    properties:
      channelIds:
        description: List of notification channel IDs
        items:
          description: List of notification channel IDs
          format: int32
          type: integer
        type: array
      eventTypeName:
        description: Event type name
        type: string
      id:
        description: Notification configuration ID
        format: int64
        type: integer
      scopeId:
        description: Scope ID
        format: int32
        type: integer
    required:
      - channelIds
      - eventTypeName
      - id
      - scopeId
    type: object
  NotificationConfigChangeRequest:
    description: Request model for updating notification configuration
    properties:
      channelIds:
        description: |-
          List of notification channel IDs.

          Leave empty to disable notifications.
        items:
          description: |-
            List of notification channel IDs.

            Leave empty to disable notifications.
          format: int32
          type: integer
        type: array
    required:
      - channelIds
    type: object
  NotificationConfigList:
    description: List of notification configurations
    properties:
      items:
        description: List of notification configurations
        items:
          $ref: '#/definitions/NotificationConfig'
        type: array
    required:
      - items
    type: object
  NotificationScope:
    description: Notification scope information
    properties:
      id:
        description: Scope ID
        format: int32
        type: integer
      name:
        description: Name
        type: string
    required:
      - id
      - name
    type: object
  NotificationScopeList:
    description: List of notification scopes
    properties:
      items:
        description: List of notification scopes
        items:
          $ref: '#/definitions/NotificationScope'
        type: array
    required:
      - items
    type: object
  OAuthApproval:
    description: OAuth client approval information
    properties:
      clientId:
        description: ID of the OAuth client
        type: string
      clientName:
        description: 'Name, which is shown at the client configuration and authorization.'
        type: string
      expiresAt:
        description: Expiration date of the approval
        format: date-time
        type: string
    required:
      - clientId
      - clientName
    type: object
  OAuthAuthorization:
    description: OAuth authorization
    properties:
      clientId:
        description: ID of the OAuth client
        type: string
      clientName:
        description: 'Name, which is shown at the client configuration and authorization.'
        type: string
      createdAt:
        description: |-
          &#128640; Since v4.13.0

          Creation date of the authorization
        format: date-time
        type: string
      expiresAt:
        description: Expiration date of the authorization
        format: date-time
        type: string
      id:
        description: |-
          &#128640; Since v4.12.0

          ID of the OAuth authorization
        format: int64
        type: integer
      isCurrentAuthorization:
        description: >-
          &#128640; Since v4.25.0


          Determines whether authorization matches the one from Authorization
          Header
        type: boolean
      isStandard:
        description: |-
          &#128640; Since v4.12.0

          Determines whether client is a standard client.
        type: boolean
      usedAt:
        description: |-
          &#128640; Since v4.13.0

          Usage date of the authorization

          (Time of last usage.)
        format: date-time
        type: string
      userAgentCategory:
        description: |-
          &#128640; Since v4.12.0

          User agent category.
        enum:
          - browser
          - native
          - unknown
        type: string
      userAgentInfo:
        description: |-
          &#128640; Since v4.12.0

          User agent info.
        type: string
      userAgentOs:
        description: |-
          &#128640; Since v4.12.0

          User agent OS.
        type: string
      userAgentType:
        description: |-
          &#128640; Since v4.12.0

          User agent type.
        type: string
    required:
      - clientId
      - clientName
      - userAgentCategory
    type: object
  OAuthClient:
    description: OAuth client information
    properties:
      accessTokenValidity:
        description: Validity of the access token in seconds.
        format: int32
        type: integer
      approvalValidity:
        description: |-
          &#128640; Since v4.22.0

          Validity of the approval interval in seconds.
        format: int32
        type: integer
      clientId:
        description: ID of the OAuth client
        type: string
      clientName:
        description: 'Name, which is shown at the client configuration and authorization.'
        type: string
      clientSecret:
        description: 'Secret, which client uses at authentication.'
        type: string
      clientType:
        description: Determines whether client is a confidential or public client.
        enum:
          - confidential
          - public
        type: string
      grantTypes:
        description: |-
          Authorized grant types

          * `authorization_code`

          * `implicit`

          * `password`

          * `client_credentials`

          * `refresh_token`



          cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
        enum:
          - authorization_code
          - client_credentials
          - implicit
          - password
          - refresh_token
        items:
          description: |-
            Authorized grant types

            * `authorization_code`

            * `implicit`

            * `password`

            * `client_credentials`

            * `refresh_token`



            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
          enum:
            - authorization_code
            - client_credentials
            - implicit
            - password
            - refresh_token
          type: string
        type: array
      isEnabled:
        description: Determines whether client is enabled.
        type: boolean
      isExternal:
        description: Determines whether client is an external client.
        type: boolean
      isStandard:
        description: Determines whether client is a standard client.
        type: boolean
      redirectUris:
        description: 'URIs, to which a user is redirected after authorization.'
        items:
          description: 'URIs, to which a user is redirected after authorization.'
          type: string
        type: array
      refreshTokenValidity:
        description: Validity of the refresh token in seconds.
        format: int32
        type: integer
    required:
      - clientId
      - grantTypes
    type: object
  ObjectExpiration:
    description: Expiration information
    properties:
      enableExpiration:
        description: enabled / disabled
        type: boolean
      expireAt:
        description: Expiration date
        format: date-time
        type: string
    required:
      - enableExpiration
    type: object
  OpenIdAuthInfo:
    description: List of OpenID Connect providers
    properties:
      items:
        description: List of available OpenID Connect identity providers
        items:
          $ref: '#/definitions/OpenIdProvider'
        type: array
    required:
      - items
    type: object
  OpenIdAuthResources:
    description: List of OpenID Connect providers
    properties:
      openIdProviders:
        description: List of available OpenID Connect identity providers
        items:
          $ref: '#/definitions/OpenIdProvider'
        type: array
    required:
      - openIdProviders
    type: object
  OpenIdIdpConfig:
    description: OpenID Connect IDP configuration
    properties:
      authorizationEndPointUrl:
        description: URL of the authorization endpoint
        type: string
      clientId:
        description: ID of the OpenID client
        type: string
      clientSecret:
        description: 'Secret, which client uses at authentication.'
        type: string
      fallbackMappingClaim:
        description: Name of the claim which is used for the user mapping fallback.
        type: string
      flow:
        description: |-
          &#128640; Since v4.11.0

          Flow, which is used at authentication
        enum:
          - authorization_code
          - hybrid
        type: string
      id:
        description: ID
        format: int32
        type: integer
      issuer:
        description: |-
          Issuer identifier of the IDP

          The value is a case sensitive URL.
        type: string
      jwksEndPointUrl:
        description: URL of the JWKS endpoint
        type: string
      mappingClaim:
        description: Name of the claim which is used for the user mapping.
        type: string
      name:
        description: Name of the IDP
        type: string
      pkceChallengeMethod:
        description: |-
          PKCE code challenge method.

          cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
        type: string
      pkceEnabled:
        default: false
        description: |-
          Determines whether PKCE is enabled.

          cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
        type: boolean
      redirectUris:
        description: 'URIs, to which a user is redirected after authorization.'
        items:
          description: 'URIs, to which a user is redirected after authorization.'
          type: string
        type: array
      scopes:
        description: |-
          List of requested scopes

          Usually `openid` and the names of the requested claims.
        items:
          description: |-
            List of requested scopes

            Usually `openid` and the names of the requested claims.
          type: string
        type: array
      tokenEndPointUrl:
        description: URL of the token endpoint
        type: string
      userImportEnabled:
        default: false
        description: >-
          Determines if a DRACOON account is automatically created for a new
          user


          who successfully logs on with his / her AD / IDP account.
        type: boolean
      userImportGroup:
        description: >-
          User group that is assigned to users who are created by automatic
          import.


          Reset with `0`
        format: int64
        type: integer
      userInfoEndPointUrl:
        description: URL of the user info endpoint
        type: string
      userInfoSource:
        description: >-
          &#128640; Since v4.23.0


          Source, which is used to get user information at the import or update
          of a user.
        enum:
          - user_info_endpoint
          - id_token
        type: string
      userManagementUrl:
        description: |-
          URL of the user management UI.

          Use empty string to remove.
        type: string
      userUpdateEnabled:
        default: false
        description: |-
          Determines if the DRACOON account is updated with data from AD / IDP.

          For OpenID Connect, the scopes `email` and `profile` are needed.
        type: boolean
    required:
      - id
    type: object
  OpenIdProvider:
    description: OpenID Connect provider information
    properties:
      id:
        description: ID
        format: int32
        type: integer
      isGlobalAvailable:
        description: Is available for all customers
        type: boolean
      issuer:
        description: |-
          Issuer identifier of the IDP

          The value is a case sensitive URL.
        type: string
      mappingClaim:
        description: Name of the claim which is used for the user mapping.
        type: string
      name:
        description: Name of the IDP
        type: string
      userManagementUrl:
        description: |-
          URL of the user management UI.

          Use empty string to remove.
        type: string
    required:
      - id
      - isGlobalAvailable
      - issuer
      - mappingClaim
      - name
    type: object
  PasswordExpiration:
    description: Password expiration information
    properties:
      enabled:
        description: Determines whether password expiration is enabled
        type: boolean
      maxPasswordAge:
        description: Maximum allowed password age (in days)
        format: int32
        type: integer
    required:
      - enabled
    type: object
  PasswordPoliciesConfig:
    description: Set of password policies
    properties:
      encryptionPasswordPolicies:
        $ref: '#/definitions/EncryptionPasswordPolicies'
      loginPasswordPolicies:
        $ref: '#/definitions/LoginPasswordPolicies'
      sharesPasswordPolicies:
        $ref: '#/definitions/SharesPasswordPolicies'
    type: object
  PasswordPolicyViolationResponse:
    description: List of violated password policies
    properties:
      code:
        description: HTTP status code
        format: int32
        type: integer
      debugInfo:
        description: Debug information
        type: string
      errorCode:
        description: Internal error code
        format: int32
        type: integer
      message:
        description: HTTP status code description
        type: string
      violatedPasswordPolicies:
        description: List of violated password policies
        items:
          $ref: '#/definitions/ViolatedPasswordPolicy'
        type: array
    required:
      - code
      - message
    type: object
  PendingAssignment:
    description: Pending assignment information
    properties:
      groupId:
        description: Unique identifier for the group
        format: int64
        type: integer
      roomId:
        description: Room ID
        format: int64
        type: integer
      roomName:
        description: Room name
        type: string
      state:
        description: |-
          Acceptance state:

          * `ACCEPTED`

          * `WAITING`

          * `DENIED`
        enum:
          - ACCEPTED
          - DENIED
          - WAITING
        type: string
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
    required:
      - groupId
      - roomId
      - roomName
      - state
      - userId
    type: object
  PendingAssignmentData:
    description: Pending assignment information
    properties:
      groupId:
        description: |-
          &#128679; Deprecated since v4.2.0

          Unique identifier for the group
        format: int64
        type: integer
        x-deprecated: true
      groupInfo:
        $ref: '#/definitions/GroupInfo'
      pendingGroupData:
        $ref: '#/definitions/PendingGroupData'
      pendingUserData:
        $ref: '#/definitions/PendingUserData'
      roomId:
        description: Room ID
        format: int64
        type: integer
      roomName:
        description: Room name
        type: string
      state:
        description: |-
          Acceptance state:

          * `ACCEPTED`

          * `WAITING`

          * `DENIED`
        enum:
          - ACCEPTED
          - DENIED
          - WAITING
        type: string
      userId:
        description: |-
          &#128679; Deprecated since v4.2.0

          Unique identifier for the user
        format: int64
        type: integer
        x-deprecated: true
      userInfo:
        $ref: '#/definitions/UserInfo'
    required:
      - groupInfo
      - pendingGroupData
      - pendingUserData
      - roomId
      - roomName
      - state
      - userInfo
    type: object
  PendingAssignmentList:
    description: List of pending assignments
    properties:
      items:
        description: List of pending assignment information
        items:
          $ref: '#/definitions/PendingAssignmentData'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
    type: object
  PendingAssignmentsRequest:
    description: Request model for handling pending assignments
    properties:
      items:
        description: List of pending assignments
        items:
          $ref: '#/definitions/PendingAssignment'
        type: array
    required:
      - items
    type: object
  PendingGroupData:
    description: Pending group information
    properties:
      id:
        description: |-
          Unique identifier for the group

          use `id` from `GroupInfo` instead
        format: int64
        type: integer
      name:
        description: |-
          Group name

          use `name` from `GroupInfo` instead
        type: string
    required:
      - id
      - name
    type: object
    x-deprecated: true
  PendingUserData:
    description: Pending user information
    properties:
      displayName:
        description: |-
          Display name

          use information from `UserInfo` instead to combine a display name
        type: string
      email:
        description: |-
          Email 

          use `email` from `UserInfo` instead
        type: string
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      login:
        description: User login name
        type: string
    required:
      - displayName
      - email
      - id
      - login
    type: object
    x-deprecated: true
  PresignedUrl:
    description: Presigned URL information
    properties:
      partNumber:
        description: Corresponding part number
        format: int32
        type: integer
      url:
        description: S3 presigned URL
        type: string
    required:
      - partNumber
      - url
    type: object
  PresignedUrlList:
    description: List of generated presigned URLs
    properties:
      urls:
        description: List of S3 presigned URLs
        items:
          $ref: '#/definitions/PresignedUrl'
        type: array
    required:
      - urls
    type: object
  PrivateKeyContainer:
    description: Private key container
    properties:
      createdAt:
        description: |-
          &#128640; Since v4.24.0

          Creation date
        format: date-time
        type: string
      createdBy:
        description: |-
          &#128640; Since v4.24.0

          Created by user
        format: int64
        type: integer
      expireAt:
        format: date-time
        type: string
      privateKey:
        description: Private key
        type: string
      version:
        description: Version
        type: string
    required:
      - privateKey
      - version
    type: object
  ProfileAttributes:
    description: User profile attributes
    properties:
      items:
        description: List of key-value pairs
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  ProfileAttributesRequest:
    description: Request model for setting user profile attributes
    properties:
      items:
        description: List of key-value pairs
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
    required:
      - items
    type: object
  PublicDownloadShare:
    description: Download Share information
    properties:
      createdAt:
        description: Creation date
        format: date-time
        type: string
      creatorName:
        description: Creator name
        type: string
      creatorUsername:
        description: Creator username
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      fileKey:
        $ref: '#/definitions/FileKey'
      fileName:
        description: File name
        type: string
      hasDownloadLimit:
        description: |-
          &#128640; Since v4.11.0

          Determines whether Download Share has a limit for amount of downloads
        type: boolean
      isEncrypted:
        description: Encryption state
        type: boolean
      isProtected:
        description: Is share protected by password
        type: boolean
      limitReached:
        description: Downloads limit reached
        type: boolean
      mediaType:
        description: |-
          &#128640; Since v4.11.0

          * `application/zip` (for folders and rooms)

          * actual file media type (for files only)
        type: string
      name:
        description: Share display name (alias name)
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      privateKeyContainer:
        $ref: '#/definitions/PrivateKeyContainer'
      size:
        description: File size or container size not compressed (in bytes)
        format: int64
        type: integer
    required:
      - createdAt
      - creatorName
      - fileName
      - hasDownloadLimit
      - isProtected
      - limitReached
      - mediaType
      - size
    type: object
  PublicDownloadTokenGenerateRequest:
    description: Request model for generating download URL
    properties:
      password:
        description: Password (only for password-protected shares)
        type: string
    type: object
  PublicDownloadTokenGenerateResponse:
    description: Download URL
    properties:
      downloadUrl:
        description: Download URL
        type: string
      token:
        description: |-
          &#128679; Deprecated since v4.3.0

          Download token
        type: string
        x-deprecated: true
    required:
      - token
    type: object
  PublicKeyContainer:
    description: Public key container
    properties:
      createdAt:
        description: |-
          &#128640; Since v4.24.0

          Creation date
        format: date-time
        type: string
      createdBy:
        description: |-
          &#128640; Since v4.24.0

          Created by user
        format: int64
        type: integer
      expireAt:
        format: date-time
        type: string
      publicKey:
        description: Public key
        type: string
      version:
        description: Version
        type: string
    required:
      - publicKey
      - version
    type: object
  PublicUploadShare:
    description: Upload Share information
    properties:
      createdAt:
        description: Creation date
        format: date-time
        type: string
      creatorName:
        description: |-
          &#128640; Since v4.11.0

          Creator name
        type: string
      creatorUsername:
        description: |-
          &#128640; Since v4.11.0

          Creator username
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      isEncrypted:
        description: Encryption state
        type: boolean
      isProtected:
        description: Is share protected by password
        type: boolean
      maxSize:
        description: |-
          &#128679; Deprecated since v4.2.0

          Maximal total size of uploaded files (in bytes)
        format: double
        type: number
        x-deprecated: true
      maxSlots:
        description: |-
          &#128679; Deprecated since v4.2.0

          Maximal amount of files to upload
        format: int32
        type: integer
        x-deprecated: true
      name:
        description: Share display name (alias name)
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      remainingSize:
        description: Remaining size
        format: int64
        type: integer
      remainingSlots:
        description: Remaining slots
        format: int32
        type: integer
      showUploadedFiles:
        description: Allow display of already uploaded files
        type: boolean
      uploadedFiles:
        description: List of (public) uploaded files
        items:
          $ref: '#/definitions/PublicUploadedFileData'
        type: array
      userUserPublicKeyList:
        $ref: '#/definitions/UserUserPublicKeyList'
    required:
      - createdAt
      - creatorName
      - isProtected
      - maxSlots
    type: object
  PublicUploadedFileData:
    description: File information
    properties:
      createdAt:
        description: Creation date
        format: date-time
        type: string
      hash:
        description: Hash value of transferred file
        type: string
      name:
        description: Name
        type: string
      size:
        description: File size in byte
        format: int64
        type: integer
    required:
      - createdAt
      - name
      - size
    type: object
  RadiusChallengeResponse:
    description: RADIUS challenge reply
    properties:
      code:
        description: HTTP status code
        format: int32
        type: integer
      debugInfo:
        description: Debug information
        type: string
      errorCode:
        description: Internal error code
        format: int32
        type: integer
      message:
        description: HTTP status code description
        type: string
      replyMessage:
        description: |-
          RADIUS Reply-Message

          Instruction how to handle the situation.
        type: string
      replyState:
        description: >-
          For RADIUS Access-Challenge


          If a `replyState` is returned, it must be included as `state` in the
          following request.
        type: string
    required:
      - code
      - message
      - replyMessage
      - replyState
    type: object
  RadiusConfig:
    description: RADIUS configuration
    properties:
      failoverServer:
        $ref: '#/definitions/FailoverServer'
      ipAddress:
        description: RADIUS Server IP Address
        type: string
      otpPinFirst:
        default: true
        description: Sequence order of concatenated PIN and one-time token
        type: boolean
      port:
        description: RADIUS Server Port
        format: int32
        type: integer
      sharedSecret:
        description: Shared Secret to access the RADIUS server
        type: string
    required:
      - ipAddress
      - otpPinFirst
      - port
      - sharedSecret
    type: object
  RadiusConfigCreateRequest:
    description: Request model for creating a RADIUS configuration
    properties:
      failoverServer:
        $ref: '#/definitions/FailoverServer'
      ipAddress:
        description: RADIUS Server IP Address
        type: string
      otpPinFirst:
        default: true
        description: Sequence order of concatenated PIN and one-time token
        type: boolean
      port:
        description: RADIUS Server Port
        format: int32
        type: integer
      sharedSecret:
        description: Shared Secret to access the RADIUS server
        type: string
    required:
      - ipAddress
      - port
      - sharedSecret
    type: object
  RadiusConfigUpdateRequest:
    description: Request model for updating a RADIUS configuration
    properties:
      failoverServer:
        $ref: '#/definitions/FailoverServer'
      ipAddress:
        description: RADIUS Server IP Address
        type: string
      otpPinFirst:
        default: true
        description: Sequence order of concatenated PIN and one-time token
        type: boolean
      port:
        description: RADIUS Server Port
        format: int32
        type: integer
      sharedSecret:
        description: Shared Secret to access the RADIUS server
        type: string
    type: object
  Range:
    description: Range information
    properties:
      limit:
        description: Range limit. Maximum 500.
        format: int64
        type: integer
      offset:
        description: Range offset
        format: int64
        type: integer
      total:
        description: Total items available
        format: int64
        type: integer
    required:
      - limit
      - offset
      - total
    type: object
  RecoverUserNameRequest:
    description: Recover usernames for email
    properties:
      creatorLanguage:
        description: IETF language tag
        type: string
      email:
        description: 'Email '
        type: string
    required:
      - email
    type: object
  ResetPasswordRequest:
    description: Request model for reseting user's login password
    properties:
      creatorLanguage:
        description: IETF language tag
        type: string
      language:
        description: |-
          &#128679; Deprecated since v4.7.0

          Language ID or ISO 639-1 code
        type: string
        x-deprecated: true
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
    type: object
  ResetPasswordTokenValidateResponse:
    description: Password reset information
    properties:
      allowSystemGlobalWeakPassword:
        description: |-
          &#128679; Deprecated since v4.14.0

          Allow weak password

          Please use `loginPasswordPolicies` instead
        type: boolean
        x-deprecated: true
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender
        type: string
        x-deprecated: true
      lastName:
        description: User last name
        type: string
      loginPasswordPolicies:
        $ref: '#/definitions/LoginPasswordPolicies'
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
    required:
      - firstName
      - lastName
    type: object
  ResetPasswordWithTokenRequest:
    description: New password
    properties:
      password:
        description: New password
        type: string
    required:
      - password
    type: object
  RestoreDeletedNodesRequest:
    description: Request model for restoring deleted nodes
    properties:
      deletedNodeIds:
        description: List of deleted node IDs
        items:
          description: List of deleted node IDs
          format: int64
          type: integer
        type: array
      keepShareLinks:
        default: false
        description: Preserve Download Share Links and point them to the new node.
        type: boolean
      parentId:
        description: |-
          Node parent ID

          (default: previous parent ID)
        format: int64
        type: integer
      resolutionStrategy:
        default: autorename
        description: |-
          Node conflict resolution strategy:

          * `autorename`

          * `overwrite`

          * `fail`
        enum:
          - autorename
          - overwrite
          - fail
        type: string
    required:
      - deletedNodeIds
    type: object
  Right:
    description: Right information
    properties:
      description:
        description: Right description
        type: string
      id:
        description: Unique identifier for the right
        format: int32
        type: integer
      name:
        description: Right (unique) name
        type: string
    required:
      - description
      - id
      - name
    type: object
  Role:
    description: Role information
    properties:
      description:
        description: Role description
        type: string
      id:
        description: Unique identifier for the role
        format: int32
        type: integer
      items:
        description: List of reachable right over role
        items:
          $ref: '#/definitions/Right'
        type: array
      name:
        description: Role (unique) name
        type: string
    required:
      - description
      - id
      - name
    type: object
  RoleGroup:
    description: Group information
    properties:
      id:
        description: Unique identifier for the group
        format: int64
        type: integer
      isMember:
        description: Is group member of the role
        type: boolean
      name:
        description: Group name
        type: string
    required:
      - id
      - isMember
      - name
    type: object
  RoleGroupList:
    description: List of groups with assigned role
    properties:
      items:
        description: List of role-group mappings
        items:
          $ref: '#/definitions/RoleGroup'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  RoleList:
    description: List of roles
    properties:
      items:
        description: List of roles
        items:
          $ref: '#/definitions/Role'
        type: array
    required:
      - items
    type: object
    x-deprecated: true
  RoleUser:
    description: User information
    properties:
      displayName:
        description: |-
          &#128679; Deprecated since v4.11.0

          Display name

          use information from `UserInfo` instead to combine a display name
        type: string
        x-deprecated: true
      id:
        description: |-
          &#128679; Deprecated since v4.11.0

          Unique identifier for the user

          use `id` from `UserInfo` instead
        format: int64
        type: integer
        x-deprecated: true
      isMember:
        description: Is user member of the role
        type: boolean
      userInfo:
        $ref: '#/definitions/UserInfo'
    required:
      - displayName
      - id
      - isMember
      - userInfo
    type: object
  RoleUserList:
    description: List of users with assigned role
    properties:
      items:
        description: List of role-user mappings
        items:
          $ref: '#/definitions/RoleUser'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  RoomData:
    description: Room information
    properties:
      children:
        description: |-
          &#128679; Deprecated since v4.10.0

          List of rooms, where this room is a parent (if exist)
        items:
          $ref: '#/definitions/RoomData'
        type: array
        x-deprecated: true
      cntAdmins:
        description: |-
          &#128679; Deprecated since v4.2.0

          Number of admins (for rooms only)
        format: int32
        type: integer
        x-deprecated: true
      cntDownloadShares:
        description: Returns the number of Download Shares of this node.
        format: int32
        type: integer
      cntUploadShares:
        description: Returns the number of Upload Shares of this node.
        format: int32
        type: integer
      cntUsers:
        description: |-
          &#128679; Deprecated since v4.2.0

          Number of users (for rooms only)
        format: int32
        type: integer
        x-deprecated: true
      createdAt:
        description: Expiration date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      hasRecycleBin:
        description: |-
          &#128679; Deprecated since v4.10.0

          Is recycle bin active (for rooms only)

          Recycle bin is always on (disabling is not possible).
        type: boolean
        x-deprecated: true
      id:
        description: Room ID
        format: int64
        type: integer
      isEncrypted:
        description: Encryption state
        type: boolean
      isFavorite:
        description: Node is marked as favorite (for rooms / folders only)
        type: boolean
      isGranted:
        description: Is user granted room permissions
        type: boolean
      name:
        description: Name
        type: string
      parentId:
        description: Parent node ID (room or folder)
        format: int64
        type: integer
      permissions:
        $ref: '#/definitions/NodePermissions'
      quota:
        description: Quota in byte
        format: int64
        type: integer
      recycleBinRetentionPeriod:
        description: Retention period for deleted nodes in days
        format: int32
        maximum: 9999
        minimum: 0
        type: integer
      size:
        description: Room size
        format: int64
        type: integer
      type:
        description: Node type
        enum:
          - room
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - hasRecycleBin
      - id
      - isEncrypted
      - isGranted
      - name
      - recycleBinRetentionPeriod
    type: object
  RoomGroup:
    description: Group information
    properties:
      id:
        description: Unique identifier for the group
        format: int64
        type: integer
      isGranted:
        description: Is user granted room permissions
        type: boolean
      name:
        description: Group name
        type: string
      newGroupMemberAcceptance:
        default: autoallow
        description: |-
          Behaviour when new users are added to the group:

          * `autoallow`

          * `pending`



          Only relevant if `adminGroupIds` has items.
        enum:
          - autoallow
          - pending
        type: string
      permissions:
        $ref: '#/definitions/NodePermissions'
    required:
      - id
      - isGranted
      - name
    type: object
  RoomGroupList:
    description: List of groups
    properties:
      items:
        description: List of room-group mappings
        items:
          $ref: '#/definitions/RoomGroup'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  RoomGroupsAddBatchRequest:
    description: Request model for granting group(s) to the room
    properties:
      items:
        description: List of room-group mappings
        items:
          $ref: '#/definitions/RoomGroupsAddBatchRequestItem'
        type: array
    required:
      - items
    type: object
  RoomGroupsAddBatchRequestItem:
    description: Request item model for granting group to the room
    properties:
      id:
        description: Unique identifier for the group
        format: int64
        type: integer
      newGroupMemberAcceptance:
        default: autoallow
        description: |-
          Behaviour when new users are added to the group:

          * `autoallow`

          * `pending`



          Only relevant if `adminGroupIds` has items.
        enum:
          - autoallow
          - pending
        type: string
      permissions:
        $ref: '#/definitions/NodePermissions'
    required:
      - id
      - permissions
    type: object
  RoomGroupsDeleteBatchRequest:
    description: Request model for revoking group(s) from the room
    properties:
      ids:
        description: List of group IDs
        items:
          description: List of group IDs
          format: int64
          type: integer
        type: array
    required:
      - ids
    type: object
  RoomTreeDataList:
    description: List of rooms
    properties:
      items:
        description: List of room data information
        items:
          $ref: '#/definitions/RoomData'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  RoomUser:
    description: User information
    properties:
      displayName:
        description: |-
          &#128679; Deprecated since v4.11.0

          Display name

          use information from `UserInfo` instead to combine a display name
        type: string
        x-deprecated: true
      email:
        description: |-
          &#128679; Deprecated since v4.11.0

          Email 

          use `email` from `UserInfo` instead
        type: string
        x-deprecated: true
      id:
        description: |-
          &#128679; Deprecated since v4.11.0

          Unique identifier for the user

          use `id` from `UserInfo` instead
        format: int64
        type: integer
        x-deprecated: true
      isGranted:
        description: Is user granted room permissions
        type: boolean
      login:
        description: |-
          &#128679; Deprecated since v4.11.0

          User login name
        type: string
        x-deprecated: true
      permissions:
        $ref: '#/definitions/NodePermissions'
      publicKeyContainer:
        $ref: '#/definitions/PublicKeyContainer'
      userInfo:
        $ref: '#/definitions/UserInfo'
    required:
      - displayName
      - email
      - id
      - isGranted
      - login
      - userInfo
    type: object
  RoomUserList:
    description: List of users
    properties:
      items:
        description: List of room-user mappings
        items:
          $ref: '#/definitions/RoomUser'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  RoomUsersAddBatchRequest:
    description: Request model for granting user(s) to the room
    properties:
      items:
        description: List of room-user mappings
        items:
          $ref: '#/definitions/RoomUsersAddBatchRequestItem'
        type: array
    required:
      - items
    type: object
  RoomUsersAddBatchRequestItem:
    description: Request item model for granting user to the room
    properties:
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      permissions:
        $ref: '#/definitions/NodePermissions'
    required:
      - id
      - permissions
    type: object
  RoomUsersDeleteBatchRequest:
    description: Request model for revoking user(s) from the room
    properties:
      ids:
        description: List of user IDs
        items:
          description: List of user IDs
          format: int64
          type: integer
        type: array
    required:
      - ids
    type: object
  RoomWebhook:
    description: Webhook information
    properties:
      isAssigned:
        description: Determines whether webhook is assigned to the room.
        type: boolean
      webhook:
        $ref: '#/definitions/Webhook'
    required:
      - isAssigned
      - webhook
    type: object
  RoomWebhookAssignment:
    description: Request model for handling webhook assignments
    properties:
      isAssigned:
        description: Determines whether webhook is assigned to the room.
        type: boolean
      webhookId:
        description: Webhook ID
        format: int64
        type: integer
    required:
      - isAssigned
      - webhookId
    type: object
  RoomWebhookList:
    description: List of webhooks
    properties:
      items:
        description: List of webhooks
        items:
          $ref: '#/definitions/RoomWebhook'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  S3Config:
    description: S3 configuration
    properties:
      accessKeyDefined:
        description: Determines whether Access Key ID is defined
        type: boolean
      bucketName:
        description: |-
          &#128679; Deprecated since v4.24.0

          S3 bucket name

          use `bucketUrl` instead
        type: string
        x-deprecated: true
      bucketUrl:
        description: S3 object storage bucket URL
        type: string
      endpointUrl:
        description: |-
          &#128679; Deprecated since v4.24.0

          S3 object storage endpoint URL

          use `bucketUrl` instead
        type: string
        x-deprecated: true
      region:
        description: S3 region
        type: string
      secretKeyDefined:
        description: Determines whether Access Secret Key is defined
        type: boolean
    required:
      - accessKeyDefined
      - bucketUrl
      - secretKeyDefined
    type: object
  S3ConfigCreateRequest:
    description: Request model for creating a S3 configuration
    properties:
      accessKey:
        description: Access Key ID
        type: string
      bucketName:
        description: |-
          &#128679; Deprecated since v4.24.0

          S3 bucket name

          use `bucketUrl` instead
        type: string
        x-deprecated: true
      bucketUrl:
        description: S3 object storage bucket URL
        type: string
      endpointUrl:
        description: |-
          &#128679; Deprecated since v4.24.0

          S3 object storage endpoint URL

          use `bucketUrl` instead
        type: string
        x-deprecated: true
      region:
        description: S3 region
        type: string
      secretKey:
        description: Secret Access Key
        type: string
    required:
      - accessKey
      - secretKey
    type: object
  S3ConfigUpdateRequest:
    description: Request model for updating a S3 configuration
    properties:
      accessKey:
        description: Access Key ID
        type: string
      bucketName:
        description: |-
          &#128679; Deprecated since v4.24.0

          S3 bucket name

          use `bucketUrl` instead
        type: string
        x-deprecated: true
      bucketUrl:
        description: S3 object storage bucket URL
        type: string
      endpointUrl:
        description: |-
          &#128679; Deprecated since v4.24.0

          S3 object storage endpoint URL

          use `bucketUrl` instead
        type: string
        x-deprecated: true
      region:
        description: S3 region
        type: string
      secretKey:
        description: Secret Access Key
        type: string
    type: object
  S3FileUploadPart:
    description: S3 file upload part information
    properties:
      partEtag:
        description: Corresponding part ETag
        type: string
      partNumber:
        description: Corresponding part number
        format: int32
        type: integer
    required:
      - partEtag
      - partNumber
    type: object
  S3FileUploadStatus:
    description: S3 file upload status information
    properties:
      errorDetails:
        $ref: '#/definitions/ErrorResponse'
      node:
        $ref: '#/definitions/Node'
      status:
        description: |-
          S3 file upload status:

          * `transfer` - upload in progress

          * `finishing` - completing file upload

          * `done` - file upload successully done

          * `error` - an error occurred while file upload
        type: string
    required:
      - status
    type: object
  S3ShareUploadStatus:
    description: S3 file upload status information
    properties:
      errorDetails:
        $ref: '#/definitions/ErrorResponse'
      fileName:
        description: File name
        type: string
      size:
        description: File size in byte
        format: int64
        type: integer
      status:
        description: |-
          S3 file upload status:

          * `transfer` - upload in progress

          * `finishing` - completing file upload

          * `done` - file upload successully done

          * `error` - an error occurred while file upload
        type: string
    required:
      - fileName
      - status
    type: object
  S3Tag:
    description: S3 tag information
    properties:
      id:
        description: S3 tag ID
        format: int64
        type: integer
      isMandatory:
        default: false
        description: Determines whether S3 is mandatory or not
        type: boolean
      key:
        description: S3 tag key
        type: string
      value:
        description: S3 tag value
        type: string
    type: object
  S3TagCreateRequest:
    description: Request model for creating a S3 tag
    properties:
      isMandatory:
        default: false
        description: Determines whether S3 is mandatory or not
        type: boolean
      key:
        description: S3 tag key
        type: string
      value:
        description: S3 tag value
        type: string
    required:
      - key
      - value
    type: object
  S3TagIds:
    description: List of S3 tag IDs
    properties:
      ids:
        description: List of S3 tag IDs
        items:
          description: List of S3 tag IDs
          format: int64
          type: integer
        type: array
    required:
      - ids
    type: object
  S3TagList:
    description: List of S3 tags
    properties:
      items:
        description: List of configured S3 tags
        items:
          $ref: '#/definitions/S3Tag'
        type: array
    type: object
  SdsServerTime:
    description: DRACOON server time
    properties:
      time:
        description: DRACOON server time
        format: date-time
        type: string
    type: object
  SharesPasswordPolicies:
    description: Shares password policies
    properties:
      characterRules:
        $ref: '#/definitions/CharacterRules'
      minLength:
        description: Minimum number of characters a password must contain
        format: int32
        maximum: 1024
        minimum: 1
        type: integer
      rejectDictionaryWords:
        description: >-
          Determines whether a password must NOT contain word(s) from a
          dictionary
        type: boolean
      rejectKeyboardPatterns:
        description: >-
          Determines whether a password must NOT contain keyboard patterns (e.g.
          `qwertz`, `asdf`)


          (min. 4 character pattern)
        type: boolean
      rejectUserInfo:
        description: >-
          Determines whether a password must NOT contain user info (first name,
          last name, email, user name)
        type: boolean
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    type: object
  SoftwareVersionData:
    description: Software version information
    properties:
      buildDate:
        description: Build date
        format: date-time
        type: string
      isDracoonCloud:
        description: |-
          &#128640; Since v4.24.0

          Determines if the DRACOON Core is deployed in the cloud environment
        type: boolean
      restApiVersion:
        description: REST API version
        type: string
      scmRevisionNumber:
        description: Revision number
        type: string
      sdsServerVersion:
        description: DRACOON server version
        type: string
    required:
      - buildDate
      - restApiVersion
      - scmRevisionNumber
      - sdsServerVersion
    type: object
  SubscribedDownloadShare:
    description: Subscribed download share information
    properties:
      authParentId:
        description: Auth parent room ID
        format: int64
        type: integer
      id:
        description: Share ID
        format: int64
        type: integer
    required:
      - id
    type: object
  SubscribedDownloadShareList:
    description: List of subscribed download shares
    properties:
      items:
        description: List of subscribed download shares
        items:
          $ref: '#/definitions/SubscribedDownloadShare'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  SubscribedNode:
    description: Subscribed node information
    properties:
      authParentId:
        description: Auth parent room ID
        format: int64
        type: integer
      id:
        description: Node ID
        format: int64
        type: integer
      type:
        description: Node type
        enum:
          - room
          - folder
          - file
        type: string
    required:
      - id
    type: object
  SubscribedNodeList:
    description: List of subscribed nodes
    properties:
      items:
        description: List of subscribed nodes
        items:
          $ref: '#/definitions/SubscribedNode'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  SubscribedUploadShare:
    description: Subscribed upload share information
    properties:
      id:
        description: Share ID
        format: int64
        type: integer
      targetNodeId:
        description: Target room or folder ID
        format: int64
        type: integer
    required:
      - id
    type: object
  SubscribedUploadShareList:
    description: List of subscribed upload shares
    properties:
      items:
        description: List of subscribed upload shares
        items:
          $ref: '#/definitions/SubscribedUploadShare'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  SyslogConfig:
    description: Syslog settings
    properties:
      enabled:
        description: Is syslog enabled?
        type: boolean
      host:
        description: Syslog server (IP or FQDN)
        type: string
      logIpEnabled:
        description: Determines whether user’s IP address is logged.
        type: boolean
      port:
        description: Syslog server port
        format: int32
        type: integer
      protocol:
        description: Protocol to connect to syslog server
        enum:
          - TCP
          - UDP
        type: string
    type: object
  SyslogEvent:
    description: Syslog event information
    properties:
      attribute1:
        description: Attribute 1
        type: string
      attribute2:
        description: Attribute 2
        type: string
      attribute3:
        description: Attribute 3
        type: string
      authParentSource:
        description: Auth parent source ID
        type: string
      authParentTarget:
        description: Auth parent target ID
        type: string
      customerId:
        description: Unique identifier for the customer
        format: int64
        type: integer
      id:
        description: Event ID
        format: int64
        type: integer
      message:
        description: Event description
        type: string
      objectId1:
        description: Object ID 1
        format: int64
        type: integer
      objectId2:
        description: Object ID 2
        format: int64
        type: integer
      objectName1:
        description: Object name 1
        type: string
      objectName2:
        description: Object type 2
        type: string
      objectType1:
        description: Object type 1
        format: int32
        type: integer
      objectType2:
        description: Object type 2
        format: int32
        type: integer
      operationId:
        description: Operation type ID
        format: int32
        type: integer
      operationName:
        description: Operation name
        type: string
      status:
        description: |-
          Operation status:

          * `0` - Success

          * `2` - Error
        enum:
          - 0
          - 2
        format: int32
        type: integer
      time:
        description: Event timestamp
        format: date-time
        type: string
      userClient:
        description: Client
        type: string
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
      userIp:
        description: User IP
        type: string
      userName:
        description: Username
        type: string
    required:
      - id
      - message
      - time
      - userId
    type: object
    x-deprecated: true
  SyslogEventList:
    description: List of syslog events
    properties:
      items:
        description: List of log events
        items:
          $ref: '#/definitions/SyslogEvent'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
    x-deprecated: true
  SystemDefaults:
    description: System defaults
    properties:
      downloadShareDefaultExpirationPeriod:
        description: Default expiration period for Download Shares in days.
        format: int32
        type: integer
      fileDefaultExpirationPeriod:
        description: Default expiration period for all uploaded files in days.
        format: int32
        type: integer
      hideLoginInputFields:
        description: |-
          &#128640; Since v4.13.0

          Defines if login fields should be hidden
        type: boolean
      languageDefault:
        description: Define which language should be default.
        type: string
      nonmemberViewerDefault:
        description: |-
          &#128640; Since v4.12.0

          Defines if new users get the role Non Member Viewer by default
        type: boolean
      uploadShareDefaultExpirationPeriod:
        description: Default expiration period for Upload Shares in days.
        format: int32
        type: integer
    type: object
  SystemInfo:
    description: System information (default language and authentication methods)
    properties:
      authMethods:
        description: |-
          &#128679; Deprecated since v4.13.0

          Authentication methods:

          * `sql`

          * `active_directory`

          * `radius`

          * `openid`

          use `authData` instead
        items:
          $ref: '#/definitions/AuthMethod'
        type: array
        x-deprecated: true
      hideLoginInputFields:
        description: |-
          &#128640; Since v4.13.0

          Defines if login fields should be hidden
        type: boolean
      languageDefault:
        description: |-
          System default language

          cf. [RFC 5646](https://tools.ietf.org/html/rfc5646)
        type: string
      s3EnforceDirectUpload:
        description: |-
          &#128640; Since v4.15.0

          Determines whether S3 direct upload is enforced or not
        type: boolean
      s3Hosts:
        description: |-
          &#128640; Since v4.14.0

          List of S3 Hosts for CSP header
        items:
          description: List of S3 Hosts for CSP header
          type: string
        type: array
      useS3Storage:
        description: |-
          &#128640; Since v4.21.0

          Defines if S3 is used as storage backend
        type: boolean
    required:
      - authMethods
      - hideLoginInputFields
      - languageDefault
      - s3EnforceDirectUpload
      - s3Hosts
      - useS3Storage
    type: object
  TestActiveDirectoryConfigRequest:
    description: Request model for testing connection for Active Directory configuration
    properties:
      ldapUsersDomain:
        description: >-
          Search scope of Active Directory; only users below this node can log
          on.
        type: string
      serverAdminName:
        description: Distinguished Name (DN) of Active Directory administrative account
        type: string
      serverAdminPassword:
        description: Password of Active Directory administrative account
        type: string
      serverIp:
        description: IPv4 or IPv6 address or host name
        type: string
      serverPort:
        description: Port
        format: int32
        type: integer
      sslFingerPrint:
        description: |-
          SSL finger print of Active Directory server.

          Mandatory for LDAPS connections.

          Format: `Algorithm/Fingerprint`
        type: string
      useLdaps:
        default: false
        description: Determines whether LDAPS should be used instead of plain LDAP.
        type: boolean
    required:
      - ldapUsersDomain
      - serverAdminName
      - serverAdminPassword
      - serverIp
      - serverPort
    type: object
  TestActiveDirectoryConfigResponse:
    description: Response model for testing connection for Active Directory configuration
    properties:
      ldapUsersDomain:
        description: >-
          Search scope of Active Directory; only users below this node can log
          on.
        type: string
      serverAdminName:
        description: Distinguished Name (DN) of Active Directory administrative account
        type: string
      serverAdminPassword:
        description: Password of Active Directory administrative account
        type: string
      serverIp:
        description: IPv4 or IPv6 address or host name
        type: string
      serverPort:
        description: Port
        format: int32
        type: integer
      sslFingerPrint:
        description: |-
          SSL finger print of Active Directory server.

          Mandatory for LDAPS connections.

          Format: `Algorithm/Fingerprint`
        type: string
      useLdaps:
        description: Determines whether LDAPS should be used instead of plain LDAP.
        type: boolean
    required:
      - ldapUsersDomain
      - serverAdminName
      - serverAdminPassword
      - serverIp
      - serverPort
      - useLdaps
    type: object
  ThirdPartyDependenciesData:
    description: Third-party dependency information
    properties:
      artifactId:
        description: Third party dependencies artifactId
        type: string
      description:
        description: Third party dependencies description
        type: string
      groupId:
        description: Third party dependencies groupId
        type: string
      id:
        description: Third party dependencies id
        type: string
      licenses:
        description: Third party dependencies licenses type
        items:
          description: Third party dependencies licenses type
          type: string
        type: array
      name:
        description: Third party dependencies name
        type: string
      type:
        description: Third party dependencies type
        type: string
      url:
        description: Third party dependencies url
        type: string
      version:
        description: Third party dependencies version
        type: string
    required:
      - artifactId
      - description
      - groupId
      - id
      - licenses
      - name
      - type
      - url
      - version
    type: object
  UpdateActiveDirectoryConfigRequest:
    description: Request model for updating an Active Directory configuration
    properties:
      adExportGroup:
        description: >-
          If `userImport` is set to `true`,


          the user must be member of this Active Directory group to receive a
          newly created DRACOON account.
        type: string
      alias:
        description: Unique name for an Active Directory configuration
        type: string
      createHomeFolder:
        default: false
        description: >-
          DEPRECATED, will be ignored


          Determines whether a room is created for each user that is created by
          automatic import (like a home folder).


          Room's name will equal the user's login name.
        type: boolean
      homeFolderParent:
        description: >-
          DEPRECATED, will be ignored


          ID of the room in which the individual rooms for users will be
          created.
        format: int64
        type: integer
      ldapUsersDomain:
        description: >-
          Search scope of Active Directory; only users below this node can log
          on.
        type: string
      sdsImportGroup:
        description: >-
          User group that is assigned to users who are created by automatic
          import.


          Reset with `0`
        format: int64
        type: integer
      serverAdminName:
        description: Distinguished Name (DN) of Active Directory administrative account
        type: string
      serverAdminPassword:
        description: Password of Active Directory administrative account
        type: string
      serverIp:
        description: IPv4 or IPv6 address or host name
        type: string
      serverPort:
        description: Port
        format: int32
        type: integer
      sslFingerPrint:
        description: |-
          SSL finger print of Active Directory server.

          Mandatory for LDAPS connections.

          Format: `Algorithm/Fingerprint`
        type: string
      useLdaps:
        description: Determines whether LDAPS should be used instead of plain LDAP.
        type: boolean
      userFilter:
        description: Name of Active Directory attribute that is used as login name.
        type: string
      userImport:
        description: >-
          Determines if a DRACOON account is automatically created for a new
          user


          who successfully logs on with his / her AD / IDP account.
        type: boolean
    type: object
  UpdateAuthTokenRestrictions:
    description: Request model for updating auth token settings
    properties:
      accessTokenValidity:
        description: |-
          &#128640; Since v4.13.0

          Restricted OAuth access token validity (in seconds)
        format: int32
        type: integer
      overwriteEnabled:
        description: |-
          &#128640; Since v4.13.0

          Defines if OAuth token restrictions are enabled
        type: boolean
      refreshTokenValidity:
        description: |-
          &#128640; Since v4.13.0

          Restricted OAuth refresh token validity (in seconds)
        format: int32
        type: integer
    required:
      - overwriteEnabled
    type: object
  UpdateCustomerRequest:
    description: Request model for updating a customer
    properties:
      companyName:
        description: Company name
        type: string
      customerContractType:
        description: Customer type
        enum:
          - demo
          - free
          - pay
        type: string
      isLocked:
        default: false
        description: |-
          Customer is locked:

          * `false` - unlocked

          * `true` - locked



          All users of this customer will be blocked and can not login anymore.
        type: boolean
      lockStatus:
        default: false
        description: |-
          &#128679; Deprecated since v4.7.0

          Customer lock status:

          * `false` - unlocked

          * `true` - locked



          Please use `isLocked` instead.

          All users of this customer will be blocked and can not login anymore.
        type: boolean
        x-deprecated: true
      providerCustomerId:
        description: Provider customer ID
        type: string
      quotaMax:
        description: >-
          Maximal disc space which can be allocated by customer in bytes. -1 for
          unlimited
        format: int64
        type: integer
      userMax:
        description: Maximal number of users
        format: int32
        type: integer
      webhooksMax:
        description: |-
          &#128640; Since v4.19.0

          Maximal number of webhooks
        format: int64
        type: integer
    required:
      - customerContractType
    type: object
  UpdateCustomerResponse:
    description: Customer information
    properties:
      activationCode:
        description: |-
          &#128679; Deprecated since v4.8.0

          Customer activation code string:

          * valid only for types `free` and `demo`

          * for `pay` customers it is empty
        type: string
        x-deprecated: true
      companyName:
        description: Company name
        type: string
      createdAt:
        description: Creation date
        format: date-time
        type: string
      customerAttributes:
        $ref: '#/definitions/CustomerAttributes'
      customerContractType:
        description: Customer type
        enum:
          - demo
          - free
          - pay
        type: string
      customerUuid:
        description: |-
          &#128640; Since v4.21.0

          Customer UUID
        type: string
      id:
        description: Unique identifier for the customer
        format: int64
        type: integer
      isLocked:
        default: false
        description: |-
          Customer is locked:

          * `false` - unlocked

          * `true` - locked



          All users of this customer will be blocked and can not login anymore.
        type: boolean
      lockStatus:
        default: false
        description: |-
          &#128679; Deprecated since v4.7.0

          Customer lock status:

          * `false` - unlocked

          * `true` - locked



          Please use `isLocked` instead.

          All users of this customer will be blocked and can not login anymore.
        type: boolean
        x-deprecated: true
      providerCustomerId:
        description: Provider customer ID
        type: string
      quotaMax:
        description: >-
          Maximal disc space which can be allocated by customer in bytes. -1 for
          unlimited
        format: int64
        type: integer
      trialDays:
        description: |-
          Number of days left for trial period (relevant only for type `demo`)

          (not used)
        format: int32
        type: integer
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      userMax:
        description: Maximal number of users
        format: int32
        type: integer
      webhooksMax:
        description: |-
          &#128640; Since v4.19.0

          Maximal number of webhooks
        format: int64
        type: integer
    required:
      - companyName
      - customerContractType
      - customerUuid
      - id
      - lockStatus
      - quotaMax
      - userMax
    type: object
  UpdateDownloadShareRequest:
    description: Request model for updating a Download Share
    properties:
      defaultCountry:
        description: Country shorthand symbol (cf. ISO 3166-2)
        type: string
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      internalNotes:
        description: |-
          &#128640; Since v4.11.0

          Internal notes
        maximum: 255
        type: string
      maxDownloads:
        description: Max allowed downloads
        format: int32
        type: integer
      name:
        description: Alias name
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      notifyCreator:
        description: |-
          &#128679; Deprecated since v4.20.0

          Notify creator on every download.
        type: boolean
      password:
        description: 'Access password, not allowed for encrypted shares'
        type: string
      receiverLanguage:
        description: Language tag for messages to receiver
        type: string
      resetMaxDownloads:
        description: Set 'true' to reset 'maxDownloads' for Download Share.
        type: boolean
      resetPassword:
        description: Set 'true' to reset 'password' for Download Share.
        type: boolean
      showCreatorName:
        description: Show creator first and last name.
        type: boolean
      showCreatorUsername:
        description: Show creator email address.
        type: boolean
      textMessageRecipients:
        description: |-
          List of recipient FQTNs

          E.123 / E.164 Format
        items:
          description: |-
            List of recipient FQTNs

            E.123 / E.164 Format
          type: string
        type: array
    type: object
  UpdateDownloadSharesBulkRequest:
    description: Request model for updating a list of Download Shares
    properties:
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      maxDownloads:
        description: Max allowed downloads
        format: int32
        type: integer
      objectIds:
        description: List of ids
        items:
          description: List of ids
          format: int64
          type: integer
        type: array
      resetMaxDownloads:
        description: Set 'true' to reset 'maxDownloads' for Download Share.
        type: boolean
      showCreatorName:
        description: Show creator first and last name.
        type: boolean
      showCreatorUsername:
        description: Show creator email address.
        type: boolean
    required:
      - objectIds
    type: object
  UpdateEncryptionPasswordPolicies:
    description: Request model for updating encryption password policies
    properties:
      characterRules:
        $ref: '#/definitions/CharacterRules'
      minLength:
        description: Minimum number of characters a password must contain
        format: int32
        maximum: 1024
        minimum: 1
        type: integer
      rejectKeyboardPatterns:
        description: >-
          Determines whether a password must NOT contain keyboard patterns (e.g.
          `qwertz`, `asdf`)


          (min. 4 character pattern)
        type: boolean
      rejectUserInfo:
        description: >-
          Determines whether a password must NOT contain user info (first name,
          last name, email, user name)
        type: boolean
    type: object
  UpdateEventlogConfig:
    description: Request model for updating eventlog settings
    properties:
      enabled:
        description: Is eventlog enabled?
        type: boolean
      logIpEnabled:
        description: Determines whether user’s IP address is logged.
        type: boolean
      retentionPeriod:
        description: |-
          Retention period (in days) of event log entries.

          After that period, all entries are deleted.

          Recommended value: 7
        format: int32
        type: integer
    type: object
  UpdateFavoritesBulkRequest:
    description: Request model for updating favorites
    properties:
      isFavorite:
        description: >-
          Sets the favorite attribute to true or false on each file in an array
          of nodes.
        type: boolean
      objectIds:
        description: List of ids
        items:
          description: List of ids
          format: int64
          type: integer
        type: array
    required:
      - isFavorite
      - objectIds
    type: object
  UpdateFileRequest:
    description: Request model for updating file's metadata
    properties:
      classification:
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential
        format: int32
        type: integer
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      name:
        description: File name
        type: string
      notes:
        description: |-
          User notes

          Use empty string to remove.
        type: string
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    type: object
  UpdateFilesBulkRequest:
    description: Request model for updating files
    properties:
      classification:
        description: |-
          Classification ID:

          * `1` - public

          * `2` - internal

          * `3` - confidential

          * `4` - strictly confidential
        format: int32
        type: integer
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      objectIds:
        description: List of ids
        items:
          description: List of ids
          format: int64
          type: integer
        type: array
    required:
      - objectIds
    type: object
  UpdateFolderRequest:
    description: Request model for updating folder's metadata
    properties:
      name:
        description: Folder name
        type: string
      notes:
        description: |-
          User notes

          Use empty string to remove.
        type: string
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system

          (default: current server datetime in UTC format)
        format: date-time
        type: string
    type: object
  UpdateGeneralSettings:
    description: Request model for updating general settings
    properties:
      authTokenRestrictions:
        $ref: '#/definitions/UpdateAuthTokenRestrictions'
      cryptoEnabled:
        description: |-
          Activation status of client-side encryption.

          Can only be enabled once; disabling is not possible.
        type: boolean
      emailNotificationButtonEnabled:
        description: Enable email notification button
        type: boolean
      eulaEnabled:
        description: Each user has to confirm the EULA at first login.
        type: boolean
      hideLoginInputFields:
        description: |-
          &#128679; Deprecated since v4.13.0

          Defines if login fields should be hidden
        type: boolean
        x-deprecated: true
      mediaServerEnabled:
        description: |-
          &#128679; Deprecated since v4.12.0

          Determines if the media server is enabled
        type: boolean
        x-deprecated: true
      s3TagsEnabled:
        description: |-
          &#128640; Since v4.9.0

          Defines if S3 tags are enabled
        type: boolean
      sharePasswordSmsEnabled:
        description: Allow sending of share passwords via SMS
        type: boolean
      weakPasswordEnabled:
        description: >-
          &#128679; Deprecated since v4.14.0


          Allow weak password


          * A weak password has to fulfill the following criteria:

             * is at least 8 characters long

             * contains letters and numbers

          * A strong password has to fulfill the following criteria in addition:

             * contains at least one special character

             * contains upper and lower case characters

          Please use `PUT /system/config/policies/passwords` API to change
          configured password policies.
        type: boolean
        x-deprecated: true
    type: object
  UpdateGroupRequest:
    description: Request model for updating group's metadata
    properties:
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      name:
        description: Group name
        type: string
    type: object
  UpdateLoginPasswordPolicies:
    description: Request model for updating login password policies
    properties:
      characterRules:
        $ref: '#/definitions/CharacterRules'
      enforceLoginPasswordChange:
        default: false
        description: >-
          &#128679; Deprecated since v4.24.0


          Determines whether a login password change should be enforced for all
          users


          Only takes effect, if login password policies get stricter
        type: boolean
        x-deprecated: true
      minLength:
        description: Minimum number of characters a password must contain
        format: int32
        maximum: 1024
        minimum: 1
        type: integer
      numberOfArchivedPasswords:
        description: >-
          Number of passwords to archive


          (must be between `0` and `10`; `0` means that password history is
          disabled)
        format: int32
        maximum: 10
        minimum: 1
        type: integer
      passwordExpiration:
        $ref: '#/definitions/PasswordExpiration'
      rejectDictionaryWords:
        description: >-
          Determines whether a password must NOT contain word(s) from a
          dictionary
        type: boolean
      rejectKeyboardPatterns:
        description: >-
          Determines whether a password must NOT contain keyboard patterns (e.g.
          `qwertz`, `asdf`)


          (min. 4 character pattern)
        type: boolean
      rejectUserInfo:
        description: >-
          Determines whether a password must NOT contain user info (first name,
          last name, email, user name)
        type: boolean
      userLockout:
        $ref: '#/definitions/UserLockout'
    type: object
  UpdateOAuthClientRequest:
    description: Request model for updating an OAuth client
    properties:
      accessTokenValidity:
        description: Validity of the access token in seconds.
        format: int32
        type: integer
      approvalValidity:
        description: |-
          &#128640; Since v4.22.0

          Validity of the approval interval in seconds.
        format: int32
        type: integer
      clientName:
        description: 'Name, which is shown at the client configuration and authorization.'
        type: string
      clientSecret:
        description: 'Secret, which client uses at authentication.'
        type: string
      clientType:
        description: Determines whether client is a confidential or public client.
        enum:
          - confidential
          - public
        type: string
      grantTypes:
        description: |-
          Authorized grant types

          * `authorization_code`

          * `implicit`

          * `password`

          * `client_credentials`

          * `refresh_token`



          cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
        enum:
          - authorization_code
          - client_credentials
          - implicit
          - password
          - refresh_token
        items:
          description: |-
            Authorized grant types

            * `authorization_code`

            * `implicit`

            * `password`

            * `client_credentials`

            * `refresh_token`



            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
          enum:
            - authorization_code
            - client_credentials
            - implicit
            - password
            - refresh_token
          type: string
        type: array
      isEnabled:
        description: Determines whether client is enabled.
        type: boolean
      redirectUris:
        description: 'URIs, to which a user is redirected after authorization.'
        items:
          description: 'URIs, to which a user is redirected after authorization.'
          type: string
        type: array
      refreshTokenValidity:
        description: Validity of the refresh token in seconds.
        format: int32
        type: integer
    required:
      - grantTypes
    type: object
  UpdateOpenIdIdpConfigRequest:
    description: Request model for updating an OpenID Connect IDP configuration
    properties:
      authorizationEndPointUrl:
        description: URL of the authorization endpoint
        type: string
      clientId:
        description: ID of the OpenID client
        type: string
      clientSecret:
        description: 'Secret, which client uses at authentication.'
        type: string
      fallbackMappingClaim:
        description: Name of the claim which is used for the user mapping fallback.
        type: string
      flow:
        description: |-
          &#128640; Since v4.11.0

          Flow, which is used at authentication
        enum:
          - authorization_code
          - hybrid
        type: string
      issuer:
        description: |-
          Issuer identifier of the IDP

          The value is a case sensitive URL.
        type: string
      jwksEndPointUrl:
        description: URL of the JWKS endpoint
        type: string
      mappingClaim:
        description: Name of the claim which is used for the user mapping.
        type: string
      name:
        description: Name of the IDP
        type: string
      pkceChallengeMethod:
        description: |-
          PKCE code challenge method.

          cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
        type: string
      pkceEnabled:
        default: false
        description: |-
          Determines whether PKCE is enabled.

          cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)
        type: boolean
      redirectUris:
        description: 'URIs, to which a user is redirected after authorization.'
        items:
          description: 'URIs, to which a user is redirected after authorization.'
          type: string
        type: array
      resetFallbackMappingClaim:
        description: Set `true` to reset `fallbackMappingClaim`.
        type: boolean
      scopes:
        description: |-
          List of requested scopes

          Usually `openid` and the names of the requested claims.
        items:
          description: |-
            List of requested scopes

            Usually `openid` and the names of the requested claims.
          type: string
        type: array
      tokenEndPointUrl:
        description: URL of the token endpoint
        type: string
      userImportEnabled:
        default: false
        description: >-
          Determines if a DRACOON account is automatically created for a new
          user


          who successfully logs on with his / her AD / IDP account.
        type: boolean
      userImportGroup:
        description: >-
          User group that is assigned to users who are created by automatic
          import.


          Reset with `0`
        format: int64
        type: integer
      userInfoEndPointUrl:
        description: URL of the user info endpoint
        type: string
      userInfoSource:
        description: >-
          &#128640; Since v4.23.0


          Source, which is used to get user information at the import or update
          of a user.
        enum:
          - user_info_endpoint
          - id_token
        type: string
      userManagementUrl:
        description: |-
          URL of the user management UI.

          Use empty string to remove.
        type: string
      userUpdateEnabled:
        default: false
        description: |-
          Determines if the DRACOON account is updated with data from AD / IDP.

          For OpenID Connect, the scopes `email` and `profile` are needed.
        type: boolean
    type: object
  UpdatePasswordPoliciesConfig:
    description: Request model for updating a set of password policies
    properties:
      encryptionPasswordPolicies:
        $ref: '#/definitions/UpdateEncryptionPasswordPolicies'
      loginPasswordPolicies:
        $ref: '#/definitions/UpdateLoginPasswordPolicies'
      sharesPasswordPolicies:
        $ref: '#/definitions/UpdateSharesPasswordPolicies'
    type: object
  UpdateRoomRequest:
    description: Request model for updating room's metadata
    properties:
      name:
        description: Name
        type: string
      notes:
        description: |-
          User notes

          Use empty string to remove.
        type: string
      quota:
        description: Quota in byte
        format: int64
        type: integer
      timestampCreation:
        description: |-
          &#128640; Since v4.22.0

          Time the node was created on external file system
        format: date-time
        type: string
      timestampModification:
        description: |-
          &#128640; Since v4.22.0

          Time the content of a node was last modified on external file system
        format: date-time
        type: string
    type: object
  UpdateRoomWebhookRequest:
    description: Request model for handling webhook assignments
    properties:
      items:
        description: 'Assign a webhook to a room to use it for node actions within the room '
        items:
          $ref: '#/definitions/RoomWebhookAssignment'
        type: array
    required:
      - items
    type: object
  UpdateSharesPasswordPolicies:
    description: Request model for updating shares password policies
    properties:
      characterRules:
        $ref: '#/definitions/CharacterRules'
      minLength:
        description: Minimum number of characters a password must contain
        format: int32
        maximum: 1024
        minimum: 1
        type: integer
      rejectDictionaryWords:
        description: >-
          Determines whether a password must NOT contain word(s) from a
          dictionary
        type: boolean
      rejectKeyboardPatterns:
        description: >-
          Determines whether a password must NOT contain keyboard patterns (e.g.
          `qwertz`, `asdf`)


          (min. 4 character pattern)
        type: boolean
      rejectUserInfo:
        description: >-
          Determines whether a password must NOT contain user info (first name,
          last name, email, user name)
        type: boolean
    type: object
  UpdateSubscriptionsBulkRequest:
    description: Request model for updating subscriptions
    properties:
      isSubscribed:
        description: Creates or deletes a subscription on each item in an array of objects.
        type: boolean
      objectIds:
        description: List of ids
        items:
          description: List of ids
          format: int64
          type: integer
        type: array
    required:
      - isSubscribed
      - objectIds
    type: object
  UpdateSyslogConfig:
    description: Request model for updating syslog settings
    properties:
      enabled:
        description: Is syslog enabled?
        type: boolean
      host:
        description: Syslog server (IP or FQDN)
        type: string
      logIpEnabled:
        description: Determines whether user’s IP address is logged.
        type: boolean
      port:
        description: Syslog server port
        format: int32
        type: integer
      protocol:
        description: Protocol to connect to syslog server
        enum:
          - TCP
          - UDP
        type: string
    type: object
  UpdateSystemDefaults:
    description: Request model for updating system defaults
    properties:
      downloadShareDefaultExpirationPeriod:
        description: Default expiration period for Download Shares in days.
        format: int32
        type: integer
      fileDefaultExpirationPeriod:
        description: Default expiration period for all uploaded files in days.
        format: int32
        type: integer
      languageDefault:
        description: Define which language should be default.
        type: string
      nonmemberViewerDefault:
        description: |-
          &#128640; Since v4.12.0

          Defines if new users get the role Non Member Viewer by default
        type: boolean
      uploadShareDefaultExpirationPeriod:
        description: Default expiration period for Upload Shares in days.
        format: int32
        type: integer
    type: object
  UpdateUploadShareRequest:
    description: Request model for updating an Upload Share
    properties:
      defaultCountry:
        description: Country shorthand symbol (cf. ISO 3166-2)
        type: string
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      filesExpiryPeriod:
        description: Number of days after which uploaded files expire
        format: int32
        type: integer
      internalNotes:
        description: |-
          &#128640; Since v4.11.0

          Internal notes
        maximum: 255
        type: string
      maxSize:
        description: Maximal total size of uploaded files (in bytes)
        format: int64
        type: integer
      maxSlots:
        description: Maximal amount of files to upload
        format: int32
        type: integer
      name:
        description: Alias name
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      notifyCreator:
        description: |-
          &#128679; Deprecated since v4.20.0

          Notify creator on every upload.
        type: boolean
      password:
        description: Password
        type: string
      receiverLanguage:
        description: Language tag for messages to receiver
        type: string
      resetFilesExpiryPeriod:
        description: Set 'true' to reset 'filesExpiryPeriod' for Upload Share
        type: boolean
      resetMaxSize:
        description: Set 'true' to reset 'maxSize' for Upload Share
        type: boolean
      resetMaxSlots:
        description: Set 'true' to reset 'maxSlots' for Upload Share
        type: boolean
      resetPassword:
        description: Set 'true' to reset 'password' for Upload Share.
        type: boolean
      showCreatorName:
        description: Show creator first and last name.
        type: boolean
      showCreatorUsername:
        description: Show creator email address.
        type: boolean
      showUploadedFiles:
        description: Allow display of already uploaded files
        type: boolean
      textMessageRecipients:
        description: |-
          List of recipient FQTNs

          E.123 / E.164 Format
        items:
          description: |-
            List of recipient FQTNs

            E.123 / E.164 Format
          type: string
        type: array
    type: object
  UpdateUploadSharesBulkRequest:
    description: Request model for updating a list of Download Shares
    properties:
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      filesExpiryPeriod:
        description: Number of days after which uploaded files expire
        format: int32
        type: integer
      maxSize:
        description: Maximal total size of uploaded files (in bytes)
        format: int64
        type: integer
      maxSlots:
        description: Maximal amount of files to upload
        format: int32
        type: integer
      objectIds:
        description: List of ids
        items:
          description: List of ids
          format: int64
          type: integer
        type: array
      resetFilesExpiryPeriod:
        description: Set 'true' to reset 'filesExpiryPeriod' for Upload Share
        type: boolean
      resetMaxSize:
        description: Set 'true' to reset 'maxSize' for Upload Share
        type: boolean
      resetMaxSlots:
        description: Set 'true' to reset 'maxSlots' for Upload Share
        type: boolean
      showCreatorName:
        description: Show creator first and last name.
        type: boolean
      showCreatorUsername:
        description: Show creator email address.
        type: boolean
      showUploadedFiles:
        description: Allow display of already uploaded files
        type: boolean
    required:
      - objectIds
    type: object
  UpdateUserAccountRequest:
    description: Request model for updating user account information
    properties:
      acceptEULA:
        description: |-
          Accept EULA

          Present, if EULA is system global active.

          cf. `GET system/config/settings/general` - `eulaEnabled`

          If accepted can not be undone.
        type: boolean
      email:
        description: 'Email '
        type: string
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender

          Do NOT use `gender`! It will be ignored.
        type: string
        x-deprecated: true
      language:
        description: |-
          &#128640; Since v4.20.0

          IETF language tag
        type: string
      lastName:
        description: User last name
        type: string
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
    type: object
  UpdateUserRequest:
    description: Request model for updating user's metadata
    properties:
      authData:
        $ref: '#/definitions/UserAuthDataUpdateRequest'
      authMethods:
        description: |-
          &#128679; Deprecated since v4.13.0

          Authentication methods:

          * `sql`

          * `active_directory`

          * `radius`

          * `openid`

          use `authData` instead
        items:
          $ref: '#/definitions/UserAuthMethod'
        type: array
        x-deprecated: true
      email:
        description: 'Email '
        type: string
      expiration:
        $ref: '#/definitions/ObjectExpiration'
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender

          Do NOT use `gender`! It will be ignored.
        type: string
        x-deprecated: true
      isLocked:
        default: false
        description: |-
          User is locked:

          * `false` - unlocked

          * `true` - locked



          User is locked and can not login anymore.
        type: boolean
      lastName:
        description: User last name
        type: string
      lockStatus:
        description: |-
          &#128679; Deprecated since v4.7.0

          User lock status:

          * `0` - locked

          * `1` - Web access allowed

          * `2` - Web and mobile access allowed



          Please use `isLocked` instead.
        format: int32
        type: integer
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      receiverLanguage:
        description: IETF language tag
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
    type: object
  UpdateWebhookRequest:
    description: Request model for updating a webhook
    properties:
      eventTypeNames:
        description: List of names of event types
        items:
          description: List of names of event types
          type: string
        type: array
      isEnabled:
        description: Is enabled
        type: boolean
      name:
        description: Name
        type: string
      secret:
        description: Secret; used for event message signatures
        type: string
      triggerExampleEvent:
        description: 'If set to true, an example event is being created'
        type: boolean
      url:
        description: URL (must begin with the `HTTPS` scheme)
        type: string
    type: object
  UploadShare:
    description: Upload Share information
    properties:
      accessKey:
        description: Share access key to generate secure link
        type: string
      cntFiles:
        description: Total amount of existing files uploaded with this share.
        format: int32
        type: integer
      cntUploads:
        description: Total amount of uploads conducted with this share.
        format: int32
        type: integer
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      dataUrl:
        description: Upload Share URL
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      filesExpiryPeriod:
        description: Number of days after which uploaded files expire
        format: int32
        type: integer
      id:
        description: Share ID
        format: int64
        type: integer
      internalNotes:
        description: |-
          &#128640; Since v4.11.0

          Internal notes
        maximum: 255
        type: string
      isEncrypted:
        description: Encryption state
        type: boolean
      isProtected:
        description: Is share protected by password
        type: boolean
      maxSize:
        description: Maximal total size of uploaded files (in bytes)
        format: int64
        type: integer
      maxSlots:
        description: Maximal amount of files to upload
        format: int32
        type: integer
      name:
        description: Alias name
        type: string
      notes:
        description: User notes
        maximum: 255
        type: string
      notifyCreator:
        description: |-
          &#128679; Deprecated since v4.20.0

          Notify creator on every upload.
        type: boolean
      recipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient email addresses
        type: string
        x-deprecated: true
      showCreatorName:
        description: |-
          &#128640; Since v4.11.0

          Show creator first and last name.
        type: boolean
      showCreatorUsername:
        description: |-
          &#128640; Since v4.11.0

          Show creator email address.
        type: boolean
      showUploadedFiles:
        description: Allow display of already uploaded files
        type: boolean
      smsRecipients:
        description: |-
          &#128679; Deprecated since v4.11.0

          CSV string of recipient MSISDNs
        type: string
        x-deprecated: true
      targetId:
        description: Target room or folder ID
        format: int64
        type: integer
      targetPath:
        description: Path to shared upload node
        type: string
      targetType:
        description: Node type
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
    required:
      - accessKey
      - createdAt
      - createdBy
      - id
      - isProtected
      - name
      - notifyCreator
      - targetId
    type: object
  UploadShareLinkEmail:
    description: Request model for sending an email of an Upload Share link
    properties:
      body:
        description: Notification email content
        type: string
      receiverLanguage:
        description: Language tag for messages to receiver
        type: string
      recipients:
        description: List of recipient email addresses
        items:
          description: List of recipient email addresses
          type: string
        type: array
    required:
      - body
      - recipients
    type: object
  UploadShareList:
    description: List of Upload Shares
    properties:
      items:
        description: List of Upload Shares
        items:
          $ref: '#/definitions/UploadShare'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  UserAccount:
    description: User information
    properties:
      authData:
        $ref: '#/definitions/UserAuthData'
      authMethods:
        description: |-
          &#128679; Deprecated since v4.13.0

          Authentication methods:

          * `sql`

          * `active_directory`

          * `radius`

          * `openid`

          use `authData` instead
        items:
          $ref: '#/definitions/UserAuthMethod'
        type: array
        x-deprecated: true
      customer:
        $ref: '#/definitions/CustomerData'
      email:
        description: 'Email '
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender
        type: string
        x-deprecated: true
      hasManageableRooms:
        description: User has manageable rooms
        type: boolean
      homeRoomId:
        description: Homeroom ID
        format: int64
        type: integer
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      isEncryptionEnabled:
        description: |-
          User has generated private key.

          Possible if client-side encryption is active for this customer
        type: boolean
      isLocked:
        default: false
        description: |-
          User is locked:

          * `false` - unlocked

          * `true` - locked



          User is locked and can not login anymore.
        type: boolean
      language:
        description: |-
          &#128640; Since v4.20.0

          IETF language tag
        type: string
      lastLoginFailAt:
        description: Last failed logon date
        format: date-time
        type: string
      lastLoginFailIp:
        description: |-
          &#128679; Deprecated since v4.6.0

          Last failed logon IP address
        type: string
        x-deprecated: true
      lastLoginSuccessAt:
        description: Last successful logon date
        format: date-time
        type: string
      lastLoginSuccessIp:
        description: |-
          &#128679; Deprecated since v4.6.0

          Last successful logon IP address
        type: string
        x-deprecated: true
      lastName:
        description: User last name
        type: string
      lockStatus:
        description: |-
          &#128679; Deprecated since v4.7.0

          User lock status:

          * `0` - locked

          * `1` - Web access allowed

          * `2` - Web and mobile access allowed



          Please use `isLocked` instead.
        format: int32
        type: integer
        x-deprecated: true
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      mustSetEmail:
        default: false
        description: |-
          &#128640; Since v4.13.0

          If `true`, the user must set the `email` at the first login.
        type: boolean
      needsToAcceptEULA:
        description: |-
          User has accepted EULA.

          Present, if EULA is system global active.

          cf. `GET system/config/settings/general` - `eulaEnabled`
        type: boolean
      needsToChangePassword:
        description: |-
          &#128679; Deprecated since v4.13.0

          Determines whether user has to change his / her password
        type: boolean
        x-deprecated: true
      needsToChangeUserName:
        default: false
        description: |-
          &#128679; Deprecated since v4.13.0

          If `true`, the user must change the `userName` at the first login.
        type: boolean
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userAttributes:
        $ref: '#/definitions/UserAttributes'
      userGroups:
        description: All groups the user is member of
        items:
          $ref: '#/definitions/UserGroup'
        type: array
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
      userRoles:
        $ref: '#/definitions/RoleList'
    required:
      - authData
      - customer
      - firstName
      - hasManageableRooms
      - id
      - isLocked
      - language
      - lastName
      - lockStatus
      - needsToChangePassword
      - userName
      - userRoles
    type: object
  UserAttributes:
    description: User custom attributes (list of key-value pairs)
    properties:
      items:
        description: List of key-value pairs
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
    required:
      - items
    type: object
    x-deprecated: true
  UserAuthData:
    description: User Authentication Data
    properties:
      adConfigId:
        description: ID of the user's Active Directory.
        format: int32
        type: integer
      login:
        description: User login name
        type: string
      method:
        description: |-
          Authentication method



          Authentication methods:

          * `basic`

          * `active_directory`

          * `radius`

          * `openid`
        type: string
      mustChangePassword:
        description: >-
          Determines whether user has to change his / her password


          * default: `true` for `basic` auth type


          * default: `false` for `active_directory`, `openid` and `radius` auth
          types
        type: boolean
      oidConfigId:
        description: ID of the user's OIDC provider.
        format: int32
        type: integer
      password:
        description: |-
          Password (only relevant for `basic` authentication type)

          *NOT* your Active Directory, OpenID or RADIUS password!
        type: string
    required:
      - method
    type: object
  UserAuthDataUpdateRequest:
    description: User Authentication Data Update Request
    properties:
      adConfigId:
        description: ID of the user's Active Directory.
        format: int32
        type: integer
      login:
        description: User login name
        type: string
      method:
        description: |-
          Authentication method



          Authentication methods:

          * `basic`

          * `active_directory`

          * `radius`

          * `openid`
        type: string
      oidConfigId:
        description: ID of the user's OIDC provider.
        format: int32
        type: integer
    type: object
  UserAuthMethod:
    description: Authentication method
    properties:
      authId:
        description: |-
          Authentication method



          Authentication methods:

          * `basic`

          * `active_directory`

          * `radius`

          * `openid`
        type: string
      isEnabled:
        description: Is enabled
        type: boolean
      options:
        description: Authentication method options
        items:
          $ref: '#/definitions/KeyValueEntry'
        type: array
    required:
      - authId
      - isEnabled
    type: object
    x-deprecated: true
  UserData:
    description: User information
    properties:
      authData:
        $ref: '#/definitions/UserAuthData'
      authMethods:
        description: |-
          &#128679; Deprecated since v4.13.0

          Authentication methods:

          * `sql`

          * `active_directory`

          * `radius`

          * `openid`

          use `authData` instead
        items:
          $ref: '#/definitions/UserAuthMethod'
        type: array
        x-deprecated: true
      avatarUuid:
        description: |-
          &#128640; Since v4.11.0

          Avatar UUID
        type: string
      email:
        description: 'Email '
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender
        type: string
        x-deprecated: true
      hasManageableRooms:
        description: User has manageable rooms
        type: boolean
      homeRoomId:
        description: Homeroom ID
        format: int64
        type: integer
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      isEncryptionEnabled:
        description: |-
          User has generated private key.

          Possible if client-side encryption is active for this customer
        type: boolean
      isLocked:
        default: false
        description: |-
          User is locked:

          * `false` - unlocked

          * `true` - locked



          User is locked and can not login anymore.
        type: boolean
      lastLoginSuccessAt:
        description: Last successful logon date
        format: date-time
        type: string
      lastName:
        description: User last name
        type: string
      lockStatus:
        description: |-
          &#128679; Deprecated since v4.7.0

          User lock status:

          * `0` - locked

          * `1` - Web access allowed

          * `2` - Web and mobile access allowed



          Please use `isLocked` instead.
        format: int32
        type: integer
        x-deprecated: true
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      publicKeyContainer:
        $ref: '#/definitions/PublicKeyContainer'
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userAttributes:
        $ref: '#/definitions/UserAttributes'
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
      userRoles:
        $ref: '#/definitions/RoleList'
    required:
      - authData
      - avatarUuid
      - firstName
      - id
      - isLocked
      - lastName
      - lockStatus
      - userName
    type: object
  UserFileKey:
    description: User file key
    properties:
      fileKey:
        $ref: '#/definitions/FileKey'
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
    required:
      - fileKey
      - userId
    type: object
  UserFileKeyList:
    description: List of user file keys
    properties:
      items:
        description: List of user file keys
        items:
          $ref: '#/definitions/UserFileKey'
        type: array
    type: object
    x-deprecated: true
  UserFileKeySetBatchRequest:
    description: List of request models for setting a user file key(s)
    properties:
      items:
        description: List of user file keys
        items:
          $ref: '#/definitions/UserFileKeySetRequest'
        type: array
    required:
      - items
    type: object
  UserFileKeySetRequest:
    description: Request model for setting a user file key
    properties:
      fileId:
        description: File ID
        format: int64
        type: integer
      fileKey:
        $ref: '#/definitions/FileKey'
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
    required:
      - fileId
      - fileKey
      - userId
    type: object
  UserGroup:
    description: Group information
    properties:
      id:
        description: Unique identifier for the group
        format: int64
        type: integer
      isMember:
        description: Determines whether user is a member of the group or not
        type: boolean
      name:
        description: Group name
        type: string
    required:
      - id
      - isMember
      - name
    type: object
  UserGroupList:
    description: List of groups
    properties:
      items:
        description: List of user-group mappings
        items:
          $ref: '#/definitions/UserGroup'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  UserIdFileIdItem:
    description: User ID and file ID mapping
    properties:
      fileId:
        description: File ID
        format: int64
        type: integer
      userId:
        description: Unique identifier for the user
        format: int64
        type: integer
    type: object
  UserIds:
    description: List of user IDs
    properties:
      ids:
        description: List of user IDs
        items:
          description: List of user IDs
          format: int64
          type: integer
        type: array
    required:
      - ids
    type: object
  UserInfo:
    description: User information
    properties:
      avatarUuid:
        description: |-
          &#128640; Since v4.11.0

          Avatar UUID
        type: string
      displayName:
        description: |-
          &#128679; Deprecated since v4.11.0

          Display name

          use other fields from `UserInfo` instead to combine a display name
        type: string
        x-deprecated: true
      email:
        description: |-
          &#128640; Since v4.11.0

          Email 
        type: string
      firstName:
        description: |-
          &#128640; Since v4.11.0

          User first name (mandatory if `userType` is `internal`)
        type: string
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      lastName:
        description: |-
          &#128640; Since v4.11.0

          User last name (mandatory if `userType` is `internal`)
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username (only returned for `internal` users)
        type: string
      userType:
        description: |-
          &#128640; Since v4.11.0

          User type:

          * `internal` - ordinary DRACOON user

          * `external` - external user without DRACOON account

          * `system` - system user (non human &#128125;)

          * `deleted` - deleted DRACOON user
        enum:
          - system
          - internal
          - external
          - deleted
        type: string
    required:
      - avatarUuid
      - firstName
      - id
      - lastName
      - userName
      - userType
    type: object
  UserItem:
    description: User information
    properties:
      avatarUuid:
        description: |-
          &#128640; Since v4.11.0

          Avatar UUID
        type: string
      createdAt:
        description: Creation date
        format: date-time
        type: string
      email:
        description: 'Email '
        type: string
      expireAt:
        description: Expiration date
        format: date-time
        type: string
      firstName:
        description: User first name
        type: string
      gender:
        default: 'n'
        description: |-
          &#128679; Deprecated since v4.12.0

          Gender
        type: string
        x-deprecated: true
      hasManageableRooms:
        description: |-
          &#128679; Deprecated since v4.27.0

          User has manageable rooms
        type: boolean
        x-deprecated: true
      homeRoomId:
        description: Homeroom ID
        format: int64
        type: integer
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      isEncryptionEnabled:
        description: |-
          User has generated private key.

          Possible if client-side encryption is active for this customer
        type: boolean
      isLocked:
        default: false
        description: |-
          User is locked:

          * `false` - unlocked

          * `true` - locked



          User is locked and can not login anymore.
        type: boolean
      lastLoginSuccessAt:
        description: Last successful logon date
        format: date-time
        type: string
      lastName:
        description: User last name
        type: string
      lockStatus:
        description: |-
          &#128679; Deprecated since v4.7.0

          User lock status:

          * `0` - locked

          * `1` - Web access allowed

          * `2` - Web and mobile access allowed



          Please use `isLocked` instead.
        format: int32
        type: integer
        x-deprecated: true
      login:
        description: |-
          &#128679; Deprecated since v4.13.0

          User login name
        type: string
        x-deprecated: true
      phone:
        description: Phone number
        type: string
      title:
        description: |-
          &#128679; Deprecated since v4.18.0

          Job title
        type: string
        x-deprecated: true
      userAttributes:
        $ref: '#/definitions/UserAttributes'
      userName:
        description: |-
          &#128640; Since v4.13.0

          Username
        type: string
      userRoles:
        $ref: '#/definitions/RoleList'
    required:
      - avatarUuid
      - firstName
      - id
      - isLocked
      - lastName
      - lockStatus
      - login
      - userName
    type: object
  UserKeyPairContainer:
    description: Key pair container
    properties:
      privateKeyContainer:
        $ref: '#/definitions/PrivateKeyContainer'
      publicKeyContainer:
        $ref: '#/definitions/PublicKeyContainer'
    required:
      - privateKeyContainer
      - publicKeyContainer
    type: object
  UserList:
    description: List of users
    properties:
      items:
        description: List of users
        items:
          $ref: '#/definitions/UserItem'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  UserLockout:
    description: User lockout information
    properties:
      enabled:
        description: Determines whether user lockout is enabled
        type: boolean
      lockoutPeriod:
        description: >-
          Amount of minutes a user has to wait to make another login attempt
          after `maxNumberOfLoginFailures` has been exceeded
        format: int32
        type: integer
      maxNumberOfLoginFailures:
        description: Maximum allowed number of failed login attempts
        format: int32
        type: integer
    required:
      - enabled
    type: object
  UserUserPublicKey:
    description: Public key information
    properties:
      id:
        description: Unique identifier for the user
        format: int64
        type: integer
      publicKeyContainer:
        $ref: '#/definitions/PublicKeyContainer'
    type: object
  UserUserPublicKeyList:
    description: List of user public keys
    properties:
      items:
        description: List of user public keys
        items:
          $ref: '#/definitions/UserUserPublicKey'
        type: array
    required:
      - items
    type: object
  ViolatedPasswordPolicy:
    description: Violated password policy information
    properties:
      message:
        description: Message from password validator
        type: string
      name:
        description: Name of the violated password policy
        type: string
    type: object
  Webhook:
    description: Webhook information
    properties:
      createdAt:
        description: Creation date
        format: date-time
        type: string
      createdBy:
        $ref: '#/definitions/UserInfo'
      eventTypeNames:
        description: List of names of event types
        items:
          description: List of names of event types
          type: string
        type: array
      expireAt:
        description: Expiration date / time
        format: date-time
        type: string
      failStatus:
        description: >-
          Last HTTP status code when a webhook is disabled due to delivery
          failures
        format: int32
        type: integer
      id:
        description: ID
        format: int64
        type: integer
      isEnabled:
        description: Is enabled
        type: boolean
      name:
        description: Name
        type: string
      secret:
        description: Secret; used for event message signatures
        type: string
      updatedAt:
        description: Modification date
        format: date-time
        type: string
      updatedBy:
        $ref: '#/definitions/UserInfo'
      url:
        description: URL
        type: string
    required:
      - createdAt
      - eventTypeNames
      - expireAt
      - id
      - isEnabled
      - name
      - updatedAt
      - url
    type: object
  WebhookList:
    description: List of webhooks
    properties:
      items:
        description: List of webhooks
        items:
          $ref: '#/definitions/Webhook'
        type: array
      range:
        $ref: '#/definitions/Range'
    required:
      - items
      - range
    type: object
  ZipDownloadRequest:
    description: Request model for ZIP download
    properties:
      nodeIds:
        description: List of node IDs
        items:
          description: List of node IDs
          format: int64
          type: integer
        type: array
    required:
      - nodeIds
    type: object
info:
  contact:
    x-twitter: dracoongmbh
  description: >-
    REST Web Services for DRACOON<br>built at: 1970-01-01
    00:00:00.000<br><br>This page provides an overview of all available and
    documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a
    collection of APIs that are intended for a specific area of the
    DRACOON.<br><br><a title='Developer Information'
    href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a
    title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on
    GitHub</a><br><br><a title='Terms of service'
    href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of
    service</a>
  title: DRACOON API
  version: 4.29.1
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://twitter.com/dracoongmbh/profile_image?size=original'
  x-origin:
    - format: openapi
      url: 'https://dracoon.team/api/spec_v4/'
      version: '3.0'
  x-providerName: dracoon.team
paths:
  /v4/auth/login:
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.13.0</h3>


        ### Description:

        Authenticates user and provides an authentication token
        (`X-Sds-Auth-Token`) that is required for the most operations.


        ### Precondition:

        Existing user that is **NOT** locked.


        ### Postcondition:

        User is logged in.


        ### Further Information:

        The provided token is valid for **two hours**, every usage resets this
        period to two full hours again.  

        Logging off invalidates the token.  


        ### Available authentication methods:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method (`authType`) | Description |

        | :--- | :--- |

        | `basic` | Log in with credentials stored in the database <br>Formerly
        known as `sql`.|

        | `active_directory` | Log in with Active Directory credentials |

        | `radius` | Log in with RADIUS username, PIN and token
        password.<br>Token (request parameter) may be set, otherwise this
        parameter is ignored. If token is set, password is optional. |

        | `openid` | Please use `POST /auth/openid/login` API to login with
        OpenID Connect identity |


        </details>
      externalDocs:
        description: Remote Authentication Dial In User Service (RADIUS)
        url: 'https://tools.ietf.org/html/rfc2865'
      operationId: login
      parameters:
        - description: User credentials
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/RadiusChallengeResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Authenticate user (Login)
      tags:
        - auth
  /v4/auth/openid/login:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.14.0</h3>


        ### Description:

        This is the first step of the OpenID Connect authentication.  

        The user is send to the OpenID Connect identity provider to authenticate
        himself and retrieve an authorization code.


        ### Precondition:

        None.


        ### Postcondition:

        User is redirected to OpenID Connect identity provider to authenticate
        himself.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: initiateOpenIdLogin
      parameters:
        - description: Issuer identifier of the OpenID Connect identity provider
          in: query
          name: issuer
          required: true
          type: string
        - description: Redirect URI to complete the OpenID Connect authentication
          in: query
          name: redirect_uri
          required: true
          type: string
        - deprecated: true
          description: Language ID or ISO 639-1 code
          in: query
          name: language
          required: true
          type: string
        - description: |-
            Flag to test the authentication parameters.

            If the request is valid, the API will respond with `204 No Content`.
          in: query
          name: test
          required: true
          type: boolean
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '302':
          description: Found
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Initiate OpenID Connect authentication
      tags:
        - auth
    post:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.14.0</h3>


        ### Description:  

        This is the second step of the OpenID Connect authentication.  

        The user hands over the authorization code and is logged in.


        ### Precondition:

        Existing user with activated OpenID Connect authentication that is
        **NOT** locked.


        ### Postcondition:

        User is logged in.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: completeOpenIdLogin
      parameters:
        - description: Authorization code
          in: query
          name: code
          required: true
          type: string
        - description: Identity token
          in: query
          name: id_token
          required: false
          type: string
        - description: Authentication state
          in: query
          name: state
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Complete OpenID Connect authentication
      tags:
        - auth
  /v4/auth/openid/resources:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Description:  

        Provides information about OpenID Connect authentication options.


        ### Precondition:

        None.


        ### Postcondition:

        List of available OpenID Connect Providers is returned.


        ### Further Information:

        Empty list is returned if OpenID Connect is **NOT** configured.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: requestOpenIdAuthResources
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenIdAuthResources'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request OpenID Connect authentication resources
      tags:
        - auth
  /v4/auth/ping:
    get:
      description: |-
        ### Description:
        Test connection to DRACOON Core Service.

        ### Precondition:
        None.

        ### Postcondition:
        `200 OK` with current date string is returned if successful.

        ### Further Information:
        None.
      operationId: ping
      parameters: []
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: string
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Ping
      tags:
        - auth
  /v4/auth/recover_username:
    post:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.13.0</h3>


        ### Description:  

        Request an email with the user names of all accounts connected to the
        email.


        ### Precondition:

        Valid email address.


        ### Postcondition:

        An email is sent to the provided address, with a list of account user
        names connected to it.


        ### Further Information:

        None.
      operationId: recoverUserName
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RecoverUserNameRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Recover username
      tags:
        - auth
  /v4/auth/reset_password:
    post:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Request an email with a password reset token for a certain user to reset
        password.


        ### Precondition:

        Registered user account.


        ### Postcondition:

        Provided user receives email with password reset token.


        ### Further Information:

        None.
      operationId: requestPasswordReset
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request password reset
      tags:
        - auth
  '/v4/auth/reset_password/{token}':
    get:
      description: >-
        ### Description:  

        Request all information for a password change dialogue e.g. real name of
        user.


        ### Precondition:

        User received a password reset token.


        ### Postcondition:

        Context information is returned.


        ### Further Information:

        None.
      operationId: validateResetPasswordToken
      parameters:
        - description: Password reset token
          in: path
          name: token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResetPasswordTokenValidateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Validate information for password reset
      tags:
        - auth
    put:
      consumes:
        - application/json
      description: |-
        ### Description:  
        Resets user's password.

        ### Precondition:
        User received a password reset token.

        ### Postcondition:
        User's password is reset to the provided password.

        ### Further Information:
        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]
      operationId: resetPassword
      parameters:
        - description: Password reset token
          in: path
          name: token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordWithTokenRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema: {}
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Reset password
      tags:
        - auth
  /v4/config/info/defaults:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        Returns a list of configurable system default values.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of configurable default settings is returned.


        ### Further Information:

        None.


        ### Configurable default values:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `languageDefault` | Defines which language should be default. | `ISO
        639-1 code` |

        | `downloadShareDefaultExpirationPeriod` | Default expiration period for
        Download Shares in _days_. | `Integer between 0 and 9999` |

        | `uploadShareDefaultExpirationPeriod` | Default expiration period for
        Upload Shares in _days_. | `Integer between 0 and 9999` |

        | `fileDefaultExpirationPeriod` | Default expiration period for all
        uploaded files in _days_. | `Integer between 0 and 9999` |

        | `nonmemberViewerDefault` | Defines if new users get the role _Non
        Member Viewer_ by default | `true or false` |


        </details>
      externalDocs:
        description: Tags for Identifying Languages
        url: 'https://tools.ietf.org/html/rfc5646'
      operationId: requestSystemDefaultsInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemDefaults'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request default values
      tags:
        - config
  /v4/config/info/general:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:

        Returns a list of configurable general settings.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of configurable general settings is returned.


        ### Further Information:

        None.


        ### Configurable general settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `sharePasswordSmsEnabled` | Determines whether sending of share
        passwords via SMS is allowed. | `true or false` |

        | `cryptoEnabled` | Determines whether client-side encryption is
        enabled.<br>Can only be enabled once; disabling is **NOT** possible. |
        `true or false` |

        | `emailNotificationButtonEnabled` | Determines whether email
        notification button is enabled. | `true or false` |

        | `eulaEnabled` | Determines whether EULA is enabled.<br>Each user has
        to confirm the EULA at first login. | `true or false` |

        | `useS3Storage` | Defines if S3 is used as storage backend.<br>Can only
        be enabled once; disabling is **NOT** possible. | `true or false` |

        | `s3TagsEnabled` | Determines whether S3 tags are enabled | `true or
        false` |

        | `homeRoomsActive` | Determines whether each AD user has a personal
        home room | `true or false` |

        | `homeRoomParentId` | Defines a node under which all personal home
        rooms are located. **NULL** if `homeRoomsActive` is `false` | `Long` |


        </details>


        ### Deprecated general settings:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | <del>`mediaServerEnabled`</del> | Determines whether media server is
        enabled.<br>Returns boolean value dependent on conjunction of
        `mediaServerConfigEnabled` AND `mediaServerEnabled` | `true or false` |

        | <del>`weakPasswordEnabled`</del> | Determines whether weak password is
        allowed.<br>Use `GET /system/config/policies/passwords` API to get
        configured password policies. | `true or false` |


        </details>
      operationId: requestGeneralSettingsInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GeneralSettingsInfo'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request general settings
      tags:
        - config
  /v4/config/info/infrastructure:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        Returns a list of read-only infrastructure properties.  


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of infrastructure properties is returned.


        ### Further Information:

        Source: `core-service.properties`


        ### Read-only infrastructure properties:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `smsConfigEnabled` | Determines whether sending of share passwords via
        SMS is **system-wide** enabled. | `true or false` |

        | `mediaServerConfigEnabled` | Determines whether media server is
        **system-wide** enabled. | `true or false` |

        | `s3DefaultRegion` | Suggested S3 region | `Region name` |

        | `s3EnforceDirectUpload` | Enforce direct upload to S3 | `true or
        false` |

        | `isDracoonCloud` | Determines if the **DRACOON Core** is deployed in
        the cloud environment | `true or false` |

        | `tenantUuid` | Current tenant UUID | `UUID` |


        </details>
      operationId: requestInfrastructurePropertiesInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InfrastructureProperties'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request infrastructure properties
      tags:
        - config
  /v4/config/info/notifications/channels:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:

        Retrieve a list of configured notification channels.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of notification channels is returned.


        ### Further Information:

        None.
      operationId: requestNotificationChannelsInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationChannelList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of notification channels
      tags:
        - config
  /v4/config/info/policies/algorithms:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:

        Retrieve a list of available algorithms used for encryption.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of available algorithms is returned.


        ### Further Information:

        None.
      operationId: requestAlgorithms
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AlgorithmVersionInfoList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request algorithms
      tags:
        - config
  /v4/config/info/policies/passwords:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.14.0</h3>


        ### Description:  

        Retrieve a list of configured password policies for all password
        types:  

        * `login`

        * `shares`

        * `encryption`


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of configured password policies is returned.


        ### Further Information:

        None.


        ### Available password policies:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Value | Password Type |

        | :--- | :--- | :--- | :--- |

        | `mustContainCharacters` | Characters which a password must
        contain:<br><ul><li>`alpha` - at least one alphabetical character
        (`uppercase` **OR** `lowercase`)<pre>a b c d e f g h i j k l m n o p q r
        s t u v w x y z<br>A B C D E F G H I J K L M N O P Q R S T U V W X Y
        Z</pre></li><li>`uppercase` - at least one uppercase character<pre>A B C
        D E F G H I J K L M N O P Q R S T U V W X Y Z</pre></li><li>`lowercase`
        - at least one lowercase character<pre>a b c d e f g h i j k l m n o p q
        r s t u v w x y z</pre></li><li>`numeric` - at least one numeric
        character<pre>0 1 2 3 4 5 6 7 8 9</pre></li><li>`special` - at least one
        special character (letters and digits excluded)<pre>! " # $ % ( ) * + ,
        - . / : ; = ? @ [ \ ] ^ _ { &#124; } ~</pre></li><li>`none` - none of
        the above</li></ul> |
        <ul><li>`alpha`</li><li>`uppercase`</li><li>`lowercase`</li><li>`numeric`</li><li>`special`</li><li>`none`</li></ul>
        | <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfCharacteristicsToEnforce` | Number of characteristics to
        enforce.<br>e.g. from `["uppercase", "lowercase", "numeric",
        "special"]`<br>all 4 character sets can be enforced; but also only 2 of
        them | `Integer between 0 and 4` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `minLength` | Minimum number of characters a password must contain. |
        `Integer between 1 and 1024` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectDictionaryWords` | Determines whether a password must **NOT**
        contain word(s) from a dictionary.<br>In `core-service.properties` a
        path to directory with dictionary files (`*.txt`) can be defined<br>cf.
        `policies.passwords.dictionary.directory`.<br><br>If this rule gets
        enabled `policies.passwords.dictionary.directory` must be defined and
        contain dictionary files.<br>Otherwise, the rule will not have any
        effect on password validation process. | `true or false` |
        <ul><li>`login`</li><li>`shares`</li></ul> |

        | `rejectUserInfo` | Determines whether a password must **NOT** contain
        user info.<br>Affects user's **first name**, **last name**, **email**
        and **user name**. | `true or false` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectKeyboardPatterns` | Determines whether a password must **NOT**
        contain keyboard patterns.<br>e.g. `qwertz`, `asdf` (min. 4 character
        pattern) | `true or false` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfArchivedPasswords` | Number of passwords to archive.<br>Value
        `0` means that password history is disabled. | `Integer between 0 and
        10` | <ul><li>`login`</li></ul> |

        | `passwordExpiration.enabled` | Determines whether password expiration
        is enabled. | `true or false` | <ul><li>`login`</li></ul> |

        | `maxPasswordAge` | Maximum allowed password age (in **days**) |
        `positive Integer` | <ul><li>`login`</li></ul> |

        | `userLockout.enabled` | Determines whether user lockout is enabled. |
        `true or false` | <ul><li>`login`</li></ul> |

        | `maxNumberOfLoginFailures` | Maximum allowed number of failed login
        attempts. | `positive Integer` | <ul><li>`login`</li></ul> |

        | `lockoutPeriod` | Amount of **minutes** a user has to wait to make
        another login attempt<br>after `maxNumberOfLoginFailures` has been
        exceeded. | `positive Integer` | <ul><li>`login`</li></ul> |


        </details>
      operationId: requestPasswordPoliciesConfigInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPoliciesConfig'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request password policies
      tags:
        - config
  /v4/config/info/s3_tags:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:

        Retrieve all configured S3 tags.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of configured S3 tags is returned.


        ### Further Information:

        An empty list is returned if no S3 tags are found / configured.
      operationId: requestS3TagsInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3TagList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of configured S3 tags
      tags:
        - config
  /v4/config/settings:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.6.0</h3>


        ### Description:  

        Returns a list of configurable system settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> required.


        ### Postcondition:

        List of configurable settings is returned.


        ### Further Information:

        Check for every settings key new corresponding API and key below.


        If `eula_active` is true, but **NOT** accepted yet, or password **MUST**
        be changed, only the following two values are returned:

        * `allow_system_global_weak_password`

        * `eula_active`


        ### Configurable settings

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `branding_server_branding_id` | The branding UUID, which corresponds
        to _BRANDING-QUALIFIER_ in the new branding server.<br>cf. `GET
        /system/config/settings/branding` `BrandingConfig.brandingQualifier` |
        `String` |

        | `branding_portal_url` | Access URL to to the Branding Portal<br>Only
        visible for _Config Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/branding` `BrandingConfig.brandingProviderUrl` |
        `String` |

        | `dblog` | Write logs to local database.<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/eventlog` `EventlogConfig.enabled` | `true or
        false` |

        | `default_downloadshare_expiration_period` | Default expiration period
        for Download Shares in days<br>cf. `GET
        /system/config/settings/defaults`
        `SystemDefaults.downloadShareDefaultExpirationPeriod` | `Integer between
        0 and 9999` |

        | `default_file_upload_expiration_date` | Default expiration period for
        all uploaded files in days<br>cf. `GET /system/config/settings/defaults`
        `SystemDefaults.fileDefaultExpirationPeriod` | `Integer between 0 and
        9999` |

        | `default_language` | Define which language should be default.<br>cf.
        `GET /system/config/settings/defaults` `SystemDefaults.languageDefault`
        | cf. `GET /public/system/info` - `SystemInfo.languageDefault` |

        | `default_uploadshare_expiration_period` | Default expiration period
        for Upload Shares in days<br>cf. `GET /system/config/settings/defaults`
        `SystemDefaults.uploadShareDefaultExpirationPeriod` | `Integer between 0
        and 9999` |

        | `enable_client_side_crypto` | Activation status of client-side
        encryption<br>Can only be enabled once; disabling is **NOT**
        possible.<br>cf. `GET /system/config/settings/general`
        `GeneralSettings.cryptoEnabled` | `true or false`<br>default: `false` |

        | `eula_active` | Each user has to confirm the EULA at first
        login.<br>cf. `GET /system/config/settings/general`
        `GeneralSettings.eulaEnabled` | `true or false` |

        | `eventlog_retention_period` | Retention period (in days) of event log
        entries<br>After that period, all entries are deleted.<br>cf. `GET
        /system/config/settings/eventlog` `EventlogConfig.retentionPeriod` |
        `Integer between 0 and 9999`<br>If set to `0`: no logs are
        deleted<br>Recommended value: `7` |

        | `ip_address_logging` | Determines whether a user's IP address is
        logged.<br>Only visible for _Config Manager_ of Provider
        Customer.<br>cf. `GET /system/config/settings/eventlog`
        `EventlogConfig.logIpEnabled`<br>cf. `GET
        /system/config/settings/syslog` `SyslogConfig.logIpEnabled` | `true or
        false` |

        | `mailserver` | Email server to send emails.<br>Only visible for
        _Config Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/mail_server` `MailServerConfig.host` | `DNS name
        or IPv4 of an email server` |

        | `mailserver_authentication_necessary` | Set to `true` if the email
        server requires authentication.<br>Only visible for _Config Manager_ of
        Provider Customer.<br>cf. `GET /system/config/settings/mail_server`
        `MailServerConfig.authenticationEnabled` | `true or false` |

        | `mailserver_password` | **Password is no longer returned.**<br>Check
        `mailserver_password_set` to determine whether password is set. |  |

        | `mailserver_password_set` | Indicates if a password is set for the
        mailserver (because `mailserver_password` is always returned
        empty).<br>Only visible for _Config Manager_ of Provider
        Customer.<br>cf. `GET /system/config/settings/mail_server`
        `MailServerConfig.passwordDefined` | `true or false` |

        | `mailserver_port` | Email server port<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/mail_server` `MailServerConfig.port` | `Valid
        port number` |

        | `mailserver_username` | User ame for email server<br>Only visible for
        _Config Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/mail_server` `MailServerConfig.username` |
        `Username for authentication` |

        | `mailserver_use_ssl` | Email server requires SSL connection?<br>Only
        visible for _Config Manager_ of Provider Customer.<br>Requires
        `mailserver_use_starttls` to be `false`<br>cf. `GET
        /system/config/settings/mail_server` `MailServerConfig.username` | `true
        or false` |

        | `mailserver_use_starttls` | Email server requires StartTLS
        connection?<br>Only visible for _Config Manager_ of Provider
        Customer.<br>Requires `mailserver_use_ssl` to be `false`<br>cf. `GET
        /system/config/settings/mail_server` `MailServerConfig.starttlsEnabled`
        | `true or false` |

        | `syslog` | Write logs to a syslog interface.<br>Only visible for
        _Config Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/syslog` `SyslogConfig.enabled` | `true or false`
        |

        | `syslog_host` | Syslog server (IP or FQDN)<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/syslog` `SyslogConfig.host` | `DNS name or IPv4
        of a syslog server` |

        | `syslog_port` | Syslog server port<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/syslog` `SyslogConfig.port` | `Valid port
        number` |

        | `syslog_protocol` | Protocol to connect to syslog server.<br>Only
        visible for _Config Manager_ of Provider Customer.<br>cf. `GET
        /system/config/settings/syslog` `SyslogConfig.protocol` | `TCP or UDP` |

        | `enable_email_notification_button` | Enable mail notification
        button.<br>cf. `GET /system/config/settings/general`
        `GeneralSettings.emailNotificationButtonEnabled` | `true or false` |

        | `allow_share_password_sms` | Allow sending of share passwords via
        SMS.<br>cf. `GET /system/config/settings/general`
        `GeneralSettings.sharePasswordSmsEnabled` | `true or false` |

        | `globally_allow_share_password_sms` | Allow sending of share passwords
        via SMS **system-wide** (read-only).<br>cf. `GET
        /system/config/settings/infrastructure`
        `InfrastructureProperties.smsConfigEnabled` | `true or false` |

        | `use_s3_storage` | Defines if S3 is used as storage backend.<br>Can
        only be enabled once; disabling is **NOT** possible.<br>cf. `GET
        /system/config/settings/general` `GeneralSettings.useS3Storage` | `true
        or false` |

        | `s3_default_region` |Suggested S3 region (read-only)<br>cf. `GET
        /system/config/settings/infrastructure`
        `InfrastructureProperties.s3DefaultRegion` | `Region name` |


        </details>


        ### Deprecated settings

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | <del>`allow_system_global_weak_password`</del> | Determines whether
        weak password (cf. _Password Policy_ below) is allowed.<br>cf. `GET
        /system/config/settings/general`
        `GeneralSettings.weakPasswordEnabled`<br>Use `GET
        /system/config/policies/passwords` API to get configured password
        policies. | `true or false` |

        | <del>`branding_server_customer`</del> | The UUID of the branding
        server customer, which corresponds to customer key in the branding
        server. | `String` |

        | <del>`branding_server_url`</del> | Access URL to to the Branding
        Server.<br>Only visible for _Config Manager_ of Provider Customer. |
        `String` |

        | <del>`email_from`</del> | Sender of system-generated emails<br>Only
        visible for _Config Manager_ of Provider Customer.<br>**Moved to
        branding** | `Valid email address` |

        | <del>`email_to_sales`</del> | Contact email address for customers to
        request more user licenses or data volume.<br>**Moved to branding** |
        `Valid email address` |

        | <del>`email_to_support`</del> | Support email address for
        users<br>**Moved to branding** | `Valid email address` |

        | <del>`file_size_js`</del> | Maximum file size (in bytes) for downloads
        of encrypted files with JavaScript.<br>Bigger files will require a
        JavaApplet. | `Integer`<br>Recommended value: `10485760` (=`10MB`) |

        | <del>`system_name`</del> | System name<br>**Moved to branding** use
        `product.title` | `Display name of the DRACOON` |


        </details>
      operationId: requestSystemSettings
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigOptionList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request system settings
      tags:
        - config
    put:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.6.0</h3>


        ### Description:

        Update configurable settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        One or more global settings gets changed.


        ### Further Information:

        This API is deprecated and will be removed in the future.  

        Check for every settings key new corresponding API and key below.


        ### Configurable settings:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `branding_server_branding_id` | The branding UUID, which corresponds
        to _BRANDING-QUALIFIER_ in the new branding server.<br>cf. `PUT
        /system/config/settings/branding` `BrandingConfig.brandingQualifier` |
        `String` |

        | `branding_portal_url` | Access URL to to the Branding Portal<br>Only
        visible for _Config Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/branding` `BrandingConfig.brandingProviderUrl` |
        `String` |

        | `dblog` | Write logs to local database.<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/eventlog` `EventlogConfig.enabled` | `true or
        false` |

        | `default_downloadshare_expiration_period` | Default expiration period
        for Download Shares in days<br>cf. `PUT
        /system/config/settings/defaults`
        `SystemDefaults.downloadShareDefaultExpirationPeriod` | `Integer between
        0 and 9999`<br>Set `0` to disable. |

        | `default_file_upload_expiration_date` | Default expiration period for
        all uploaded files in days<br>cf. `PUT /system/config/settings/defaults`
        `SystemDefaults.fileDefaultExpirationPeriod` | `Integer between 0 and
        9999`<br>Set `0` to disable. |

        | `default_language` | Define which language should be default.<br>cf.
        `PUT /system/config/settings/defaults` `SystemDefaults.languageDefault`
        | cf. `GET /public/system/info` - `SystemInfo.languageDefault` |

        | `default_uploadshare_expiration_period` | Default expiration period
        for Upload Shares in days<br>cf. `PUT /system/config/settings/defaults`
        `SystemDefaults.uploadShareDefaultExpirationPeriod` | `Integer between 0
        and 9999`<br>Set `0` to disable. |

        | `enable_client_side_crypto` | Activation status of client-side
        encryption<br>Can only be enabled once; disabling is **NOT**
        possible.<br>cf. `PUT /system/config/settings/general`
        `GeneralSettings.cryptoEnabled` | `true or false`<br>default: `false` |

        | `eula_active` | Each user has to confirm the EULA at first
        login.<br>cf. `PUT /system/config/settings/general`
        `GeneralSettings.eulaEnabled` | `true or false` |

        | `eventlog_retention_period` | Retention period (in days) of event log
        entries<br>After that period, all entries are deleted.<br>cf. `PUT
        /system/config/settings/eventlog` `EventlogConfig.retentionPeriod` |
        `Integer between 0 and 9999`<br>If set to `0`: no logs are
        deleted<br>Recommended value: `7` |

        | `ip_address_logging` | Determines whether a user's IP address is
        logged.<br>Only visible for _Config Manager_ of Provider
        Customer.<br>cf. `PUT /system/config/settings/eventlog`
        `EventlogConfig.logIpEnabled`<br>cf. `PUT
        /system/config/settings/syslog` `SyslogConfig.logIpEnabled` | `true or
        false` |

        | `mailserver` | Email server to send emails.<br>Only visible for
        _Config Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/mail_server` `MailServerConfig.host` | `DNS name
        or IPv4 of an email server` |

        | `mailserver_authentication_necessary` | Set to `true` if the email
        server requires authentication.<br>Only visible for _Config Manager_ of
        Provider Customer.<br>cf. `PUT /system/config/settings/mail_server`
        `MailServerConfig.authenticationEnabled` | `true or false` |

        | `mailserver_password` | Password for email server<br>cf. `PUT
        /system/config/settings/mail_server` `MailServerConfig.password` |
        `Password for authentication` |

        | `mailserver_port` | Email server port<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/mail_server` `MailServerConfig.port` | `Valid
        port number` |

        | `mailserver_username` | Username for email server<br>Only visible for
        _Config Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/mail_server` `MailServerConfig.username` |
        `Username for authentication` |

        | `mailserver_use_ssl` | Email server requires SSL connection?<br>Only
        visible for _Config Manager_ of Provider Customer.<br>Requires
        `mailserver_use_starttls` to be `false`<br>cf. `PUT
        /system/config/settings/mail_server` `MailServerConfig.username` | `true
        or false` |

        | `mailserver_use_starttls` | Email server requires StartTLS
        connection?<br>Only visible for _Config Manager_ of Provider
        Customer.<br>Requires `mailserver_use_ssl` to be `false`<br>cf. `PUT
        /system/config/settings/mail_server` `MailServerConfig.starttlsEnabled`
        | `true or false` |

        | `syslog` | Write logs to a syslog interface.<br>Only visible for
        _Config Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/syslog` `SyslogConfig.enabled` | `true or false`
        |

        | `syslog_host` | Syslog server (IP or FQDN)<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/syslog` `SyslogConfig.host` | `DNS name or IPv4
        of a syslog server` |

        | `syslog_port` | Syslog server port<br>Only visible for _Config
        Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/syslog` `SyslogConfig.port` | `Valid port
        number` |

        | `syslog_protocol` | Protocol to connect to syslog server.<br>Only
        visible for _Config Manager_ of Provider Customer.<br>cf. `PUT
        /system/config/settings/syslog` `SyslogConfig.protocol` | `TCP or UDP` |

        | `enable_email_notification_button` | Enable mail notification
        button.<br>cf. `PUT /system/config/settings/general`
        `GeneralSettings.emailNotificationButtonEnabled` | `true or false` |

        | `allow_share_password_sms` | Allow sending of share passwords via
        SMS.<br>cf. `PUT /system/config/settings/general`
        `GeneralSettings.sharePasswordSmsEnabled` | `true or false` |


        </details>


        ### Deprecated settings:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | <del>`allow_system_global_weak_password`</del> | Determines whether
        weak password (cf. _Password Policy_ below) is allowed.<br>cf. `PUT
        /system/config/settings/general`
        `GeneralSettings.weakPasswordEnabled`<br>Use `PUT
        /system/config/policies/passwords` API to change configured password
        policies. | `true or false` |

        | <del>`branding_server_customer`</del> | The UUID of the branding
        server customer, which corresponds to customer key in the branding
        server. | `String` |

        | <del>`branding_server_url`</del> | Access URL to to the Branding
        Server.<br>Only visible for _Config Manager_ of Provider Customer. |
        `String` |

        | <del>`email_from`</del> | Sender of system-generated emails<br>Only
        visible for _Config Manager_ of Provider Customer.<br>**Moved to
        branding** | `Valid email address` |

        | <del>`email_to_sales`</del> | Contact email address for customers to
        request more user licenses or data volume.<br>**Moved to branding** |
        `Valid email address` |

        | <del>`email_to_support`</del> | Support email address for
        users<br>**Moved to branding** | `Valid email address` |

        | <del>`file_size_js`</del> | Maximum file size (in bytes) for downloads
        of encrypted files with JavaScript.<br>Bigger files will require a
        JavaApplet. | `Integer`<br>Recommended value: `10485760` (=`10MB`) |

        | <del>`system_name`</del> | System name<br>**Moved to branding** use
        `product.title` | `Display name of the DRACOON` |


        </details>
      operationId: updateSystemSettings
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigOptionList'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update system settings
      tags:
        - config
  '/v4/downloads/avatar/{user_id}/{uuid}':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Download avatar for given user ID and UUID.


        ### Precondition:

        Valid UUID.


        ### Postcondition:

        Stream is returned.


        ### Further Information:

        None.
      operationId: downloadAvatar
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: UUID of the avatar
          in: path
          name: uuid
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Download avatar
      tags:
        - downloads
  '/v4/downloads/zip/{token}':
    get:
      description: |-
        ### Description:
        Download multiple files in a ZIP archive.

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Create a download token with `POST /nodes/zip` API.
      operationId: downloadZipArchiveViaToken
      parameters:
        - description: Download token
          in: path
          name: token
          required: true
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Download ZIP archive
      tags:
        - downloads
  '/v4/downloads/{token}':
    get:
      description: |-
        ### Description:
        Download a file.

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Range requests are supported.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: downloadFileViaToken
      parameters:
        - description: Download token
          in: path
          name: token
          required: true
          type: string
        - description: |-
            Range 

            e.g. `bytes=0-999`
          in: header
          name: Range
          required: false
          type: string
        - description: >-
            Always return `application/octet-stream` instead of specific
            mimetype
          in: query
          name: generic_mimetype
          required: false
          type: boolean
        - description: 'Use Content-Disposition: `inline` instead of `attachment`'
          in: query
          name: inline
          required: false
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '416':
          description: Range Not Satisfiable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Download file
      tags:
        - downloads
    head:
      description: |-
        ### Description:
        Download a file.

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Range requests are supported.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: downloadFileViaToken_1
      parameters:
        - description: Download token
          in: path
          name: token
          required: true
          type: string
        - description: |-
            Range 

            e.g. `bytes=0-999`
          in: header
          name: Range
          required: false
          type: string
        - description: >-
            Always return `application/octet-stream` instead of specific
            mimetype
          in: query
          name: generic_mimetype
          required: false
          type: boolean
        - description: 'Use Content-Disposition: `inline` instead of `attachment`'
          in: query
          name: inline
          required: false
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '416':
          description: Range Not Satisfiable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Download file
      tags:
        - downloads
  /v4/eventlog/audits/nodes:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description: 

        Retrieve a list of all nodes of type room, and the room assignment users
        with permissions.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read audit
        log</span> required.


        ### Postcondition:

        List of rooms and their assigned users is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Except for `userName`, `userFirstName` and  `userLastName` - these are
        connected via logical disjunction (**OR**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `userName:cn:searchString_1|userFirstName:cn:searchString_2|nodeId:eq:2`  

        Filter by user login containing `searchString_1` **OR** first name
        containing `searchString_2` **AND** node ID equals `2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `nodeId` | Node ID filter | `eq` | Node ID equals value. | `positive
        Integer` |

        | `nodeName` | Node name filter | `cn, eq` | Node name contains / equals
        value. | `search String` |

        | `nodeParentId` | Node parent ID filter | `eq` | Parent ID equals
        value. | `positive Integer`<br>Parent ID `0` is the root node. |

        | `userId` | User ID filter | `eq` | User ID equals value. | `positive
        Integer` |

        | `userName` | Username (login) filter | `cn, eq` | Username contains /
        equals value. | `search String` |

        | `userFirstName` | User first name filter | `cn, eq` | User first name
        contains / equals value. | `search String` |

        | `userLastName` | User last name filter | `cn, eq` | User last name
        contains / equals value. | `search String` |

        | `permissionsManage` | Filter the users that do (not) have `manage`
        permissions in this room | `eq` |  | `true or false` |

        | `nodeIsEncrypted` | Encrypted node filter | `eq` |  | `true or false`
        |

        | `nodeHasActivitiesLog` | Activities log filter | `eq` |  | `true or
        false` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`nodeHasRecycleBin`</del> | Recycle bin filter<br>**Filter has no
        effect!** | `eq` |  | `true or false` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `nodeName:asc`  

        Sort by `nodeName` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `nodeId` | Node ID |

        | `nodeName` | Node name |

        | `nodeParentId` | Node parent ID |

        | `nodeSize` | Node size |

        | `nodeQuota` | Node quota |


        </details>
      operationId: requestAuditNodeUserData
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AuditNodeResponse'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request node assigned users with permissions
      tags:
        - eventlog
  /v4/eventlog/events:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description: 

        Retrieve eventlog (audit log) events.


        ### Precondition:

        Role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Log
        Auditor</span> required.


        ### Postcondition:

        List of audit log events is returned.


        ### Further Information:

        Output is limited to **500** entries.  

        For more results please use filter criteria and paging (`offset` +
        `limit`). 


        Allowed `Accept-Header`:

        * `Accept: application/json`

        * `Accept: text/csv`  


        ---


        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `time:desc`  

        Sort by `time` descending (default sort option).


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `time` | Event timestamp |


        </details>
      operationId: requestLogEventsAsJson
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: |-
            Filter events from given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_start
          required: false
          type: string
        - description: |-
            Filter events until given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_end
          required: false
          type: string
        - description: |-
            Operation ID 

            cf. `GET /eventlog/operations`
          format: int32
          in: query
          name: type
          required: false
          type: integer
        - description: User ID
          format: int64
          in: query
          name: user_id
          required: false
          type: integer
        - description: |-
            Operation status:

            * `0` - Success

            * `2` - Error
          enum:
            - '0'
            - '2'
          in: query
          name: status
          required: false
        - description: User client
          in: query
          name: user_client
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogEventList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request system events
      tags:
        - eventlog
  /v4/eventlog/operations:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description: 

        Retrieve eventlog (audit log) operation IDs and the associated log
        operation description.


        ### Precondition:

        Role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Log
        Auditor</span> required.


        ### Postcondition:

        List of available log operations is returned.


        ### Further Information:

        None.
      operationId: requestLogOperations
      parameters:
        - description: Show only deprecated operations
          in: query
          name: is_deprecated
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogOperationList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request allowed Log Operations
      tags:
        - eventlog
  /v4/groups:
    get:
      description: >-
        ### Description:  

        Returns a list of user groups.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        groups</span> required.


        ### Postcondition: 

        List of user groups is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:cn:searchString`  

        Filter by group name containing `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Group name filter | `cn` | Group name contains value. |
        `search String` |

        | `hasRole` | (**`NEW`**) Group role filter<br>For more information
        about roles check **`GET /roles`** API | `eq` | Group role equals value.
        | <ul><li>`CONFIG_MANAGER` - Manages global
        configuration</li><li>`USER_MANAGER` - Manages
        users</li><li>`GROUP_MANAGER` - Manages user
        groups</li><li>`ROOM_MANAGER` - Manages top level
        rooms</li><li>`LOG_AUDITOR` - Reads audit
        logs</li><li>`NONMEMBER_VIEWER` - Views users and groups when having
        room _"manage"_ permission</li></ul> |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:asc|expireAt:desc`  

        Sort by `name` ascending **AND** by `expireAt` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Group name |

        | `createdAt` | Creation date |

        | `expireAt` | Expiration date |

        | `cntUsers` | Amount of users |


        </details>
      operationId: requestGroups
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of user groups
      tags:
        - groups
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Create a new user group.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        groups</span> required.


        ### Postcondition: 

        A new user group is created.


        ### Further Information:

        * If a group should **NOT** expire, leave `expireAt` empty.

        * Group names are limited to **150** characters

        * **All** characters are allowed.
      operationId: createGroup
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Group'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new user group
      tags:
        - groups
  '/v4/groups/{group_id}':
    delete:
      description: >-
        ### Description:

        Delete a user group.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; delete
        groups</span> required.


        ### Postcondition: 

        User group is deleted.


        ### Further Information:

        None.
      operationId: removeGroup
      parameters:
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user group
      tags:
        - groups
    get:
      description: >-
        ### Description:  

        Retrieve detailed information about a user group.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        groups</span> required.


        ### Postcondition: 

        User group is returned.


        ### Further Information:

        None.
      operationId: requestGroup
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user group
      tags:
        - groups
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Update user group's metadata .


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        groups</span> required.


        ### Postcondition: 

        User group's metadata is changed.


        ### Further Information:

        * If a group should **NOT** expire, leave `expireAt` empty.

        * Group names are limited to **150** characters

        * **All** characters are allowed.
      operationId: updateGroup
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGroupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user group's metadata
      tags:
        - groups
  '/v4/groups/{group_id}/last_admin_rooms':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:  

        Retrieve a list of all rooms where the group is defined as last admin
        group.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        groups</span> required.


        ### Postcondition: 

        List of rooms is returned. 


        ### Further Information:

        An empty list is returned if no rooms were found where the group is
        defined as last admin group.
      operationId: requestLastAdminRoomsGroups
      parameters:
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LastAdminGroupRoomList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request rooms where the group is defined as last admin group
      tags:
        - groups
  '/v4/groups/{group_id}/roles':
    get:
      description: >-
        ### Description:  

        Retrieve a list of all roles granted to a group.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        groups</span> required.


        ### Postcondition: 

        List of granted roles is returned.


        ### Further Information:

        None.
      operationId: requestGroupRoles
      parameters:
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of roles assigned to the group
      tags:
        - groups
  '/v4/groups/{group_id}/rooms':
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.10.0</h3>


        ### Description:  

        Retrieves a list of rooms granted to the group and / or that can be
        granted.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        groups</span> required.


        ### Postcondition: 

        List of rooms is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isGranted:eq:false|name:cn:searchString`  

        Get all rooms where the group is **NOT** granted **AND** whose name is
        like `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Room name filter | `cn` | Room name contains value. | `search
        String` |

        | `isGranted` | Filter rooms which the group is (not) granted | `eq` | 
        | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default: `true`
        |

        | `effectivePerm` | Filter rooms with DIRECT or DIRECT **AND** EFFECTIVE
        permissions<ul><li>`false`: DIRECT permissions</li><li>`true`:  DIRECT
        **AND** EFFECTIVE permissions</li></ul>DIRECT means: e.g. room
        administrator grants `read` permissions to group of users **directly**
        on desired room.<br>EFFECTIVE means: e.g. group of users gets `read`
        permissions on desired room through **inheritance**. | `eq` |  | `true
        or false`<br>default: `true` |


        </details>
      operationId: requestGroupRooms
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoomTreeDataList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request rooms granted to the group or / and rooms that can be granted
      tags:
        - groups
  '/v4/groups/{group_id}/users':
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Remove group members.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        groups</span> required.


        ### Postcondition: 

        Provided users are removed from the user group.


        ### Further Information:

        Batch function.  

        The provided users are removed from the user group. Maximum number of
        users to remove in one request is 200.
      operationId: removeGroupMembers
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangeGroupMembersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove group members
      tags:
        - groups
    get:
      description: >-
        ### Description:  

        Retrieve a list of group member users or / and users who can become a
        member.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        groups</span> required.


        ### Postcondition: 

        List of users is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isMember:eq:false|user:cn:searchString`  

        Get all users that are **NOT** in this group **AND** whose (`firstName`
        **OR** `lastName` **OR** `email` **OR** `username`) is like
        `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `user` | User filter | `cn` | User contains value (`firstName` **OR**
        `lastName` **OR** `email` **OR** `username`). | `search String` |

        | `isMember` | Filter group members | `eq` |  |
        <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default: `true` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`displayName`</del> | User display name filter (use `user`
        filter) | `cn` | User display name contains value (`firstName` **OR**
        `lastName` **OR** `email`). | `search String` |


        </details>
      operationId: requestGroupMembers
      parameters:
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupUserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request group member users or / and users who can become a member
      tags:
        - groups
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Add members to a group.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        groups</span> required.


        ### Postcondition: 

        New members are added to the group.


        ### Further Information:

        Batch function.  

        The newly provided members will be added to the existing ones.
      operationId: addGroupMembers
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Group ID
          format: int64
          in: path
          name: group_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangeGroupMembersRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add group members
      tags:
        - groups
  /v4/nodes:
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:

        Delete nodes (room, folder or file).


        ### Precondition:

        Authenticated user with <span style='padding: 3px; background-color:
        #F6F7F8; border: 1px solid #000; border-radius: 5px; display:
        inline;'>&#128275; delete</span> permissions on supplied nodes (for
        folders or files) or on superordinated node (for rooms).


        ### Postcondition:

        Nodes are deleted.


        ### Further Information:

        Nodes **MUST** be in same parent.
      operationId: removeNodes
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteNodesRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove nodes
      tags:
        - nodes
    get:
      description: >-
        ### Description:  

        Provides a hierarchical list of file system nodes (rooms, folders or
        files) of a given parent that are accessible by the current user.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of nodes is returned.


        ### Further Information:

        `EncryptionInfo` is **NOT** provided.


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `type:eq:room:folder|perm:eq:read`  

        Get nodes where type equals (`room` **OR** `folder`) **AND** user has
        `read` permissions.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `type` | Node type filter | `eq` | Node type equals value.<br>Multiple
        values are allowed and will be connected via logical disjunction
        (**OR**).<br>e.g. `type:eq:room:folder` |
        <ul><li>`room`</li><li>`folder`</li><li>`file`</li></ul> |

        | `perm` | Permission filter | `eq` | Permission equals
        value.<br>Multiple values are allowed and will be connected via logical
        disjunction (**OR**).<br>e.g. `perm:eq:read:create:delete` |
        <ul><li>`manage`</li><li>`read`</li><li>`change`</li><li>`create`</li><li>`delete`</li><li>`manageDownloadShare`</li><li>`manageUploadShare`</li><li>`canReadRecycleBin`</li><li>`canRestoreRecycleBin`</li><li>`canDeleteRecycleBin`</li></ul>
        |

        | `childPerm` | Same as `perm`, but less restrictive (applies to child
        nodes only).<br>Child nodes of the parent node which do not meet the
        filter condition<br>are **NOT** returned. | `eq` | cf. `perm` | cf.
        `perm` |

        | `name` | Node name filter | `cn, eq` | Node name contains / equals
        value. | `search String` |

        | `encrypted` | Node encryption status filter | `eq` |  | `true or
        false` |

        | `branchVersion` | Node branch version filter | `ge, le` | Branch
        version is greater / less equals than value.<br>Multiple operator values
        are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `branchVersion:ge:1423280937404`&#124;`branchVersion:le:1523280937404` |
        `version number` |

        | `timestampCreation` | Creation timestamp filter | `ge, le` | Creation
        timestamp is greater / less equals than value.<br>Multiple operator
        values are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `timestampCreation:ge:2016-12-31T23:00:00.123`&#124;<br>`timestampCreation:le:2018-01-01T11:00:00.540`
        | `Date (yyyy-MM-dd)` |

        | `timestampModification` | Modification timestamp filter | `ge, le` |
        Modification timestamp is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `timestampModification:ge:2016-12-31T23:00:00.123`&#124;<br>`timestampModification:le:2018-01-01T11:00:00.540`
        | `Date (yyyy-MM-dd)` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.  

        Nodes are sorted by type first, then by sent sort string.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:desc|fileType:asc`  

        Sort by `name` descending **AND** `fileType` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Node name |

        | `createdAt` | Creation date |

        | `createdBy` | Creator first name, last name |

        | `updatedAt` | Last modification date |

        | `updatedBy` | Last modifier first name, last name |

        | `fileType` | File type (extension) |

        | `classification` | Classification ID:<ul><li>1 - public</li><li>2 -
        internal</li><li>3 - confidential</li><li>4 - strictly
        confidential</li></ul> |

        | `size` | Node size |

        | `cntDeletedVersions` | Number of deleted versions of this file /
        folder (**NOT** recursive; for files and folders only) |

        | `timestampCreation` | Creation timestamp |

        | `timestampModification` | Modification timestamp |


        </details>


        ### Deprecated sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | <del>`cntAdmins`</del> | Number of admins (for rooms only) |

        | <del>`cntUsers`</del> | Number of users (for rooms only) |

        | <del>`cntChildren`</del> | Number of direct children (**NOT**
        recursive; for rooms and folders only) |


        </details>
      operationId: requestNodes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - deprecated: true
          description: >-
            * `0` - top level nodes only


            * `n` (any positive number) - include `n` levels starting from the
            current node
          format: int32
          in: query
          name: depth_level
          required: false
          type: integer
        - description: |-
            Parent node ID.

            Only rooms and folders can be parents.

            Parent ID `0` or empty is the root node.
          format: int64
          in: query
          name: parent_id
          required: false
          type: integer
        - description: |-
            Show all rooms for management perspective.

            Only possible for _Rooms Managers_.

            For all other users, it will be ignored.
          in: query
          name: room_manager
          required: false
          type: boolean
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeList'
        '400':
          description: |-
            Bad Request
            * [-80024] Invalid range parameters
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of nodes
      tags:
        - nodes
  '/v4/nodes/comments/{comment_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:

        Delete an existing comment for a specific node.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions on the node and is the creator of the comment
        **OR** <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Room
        Administrator</span> in auth parent room.


        ### Postcondition:

        Comment is deleted.


        ### Further Information:

        None.
      operationId: removeNodeComment
      parameters:
        - description: Comment ID
          format: int64
          in: path
          name: comment_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove node comment
      tags:
        - nodes
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:

        Edit the text of an existing comment for a specific node.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions on the node and is the creator of the comment.


        ### Postcondition:

        Comments text gets changed.


        ### Further Information:

        Maximum allowed text length: **65535** characters.
      operationId: updateNodeComment
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Comment ID
          format: int64
          in: path
          name: comment_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangeNodeCommentRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Edit node comment
      tags:
        - nodes
  /v4/nodes/deleted_nodes:
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:

        Permanently remove a list of nodes from the recycle bin.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; delete
        recycle bin</span> permissions in parent room.


        ### Postcondition:

        All provided nodes are removed.


        ### Further Information:

        The removal of deleted nodes from the recycle bin is irreversible.
      operationId: removeDeletedNodes
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDeletedNodesRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove nodes from recycle bin
      tags:
        - nodes
  /v4/nodes/deleted_nodes/actions/restore:
    post:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Restore a list of deleted nodes.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        create</span> permissions in parent room and <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; restore recycle bin</span> permissions.


        ### Postcondition:

        The selected files are moved from the recycle bin to the chosen
        productive container.


        ### Further Information:

        If no parent ID is provided, the node is restored to its previous
        location.  

        The default resolution strategy is `autorename` that adds numbers to the
        file name until the conflict is solved.  

        If an existing file is overwritten, it is moved to the recycle bin
        instead of the restored one.


        Download share id (if exists) gets changed if:

        - node with the same name exists in the target container

        - `resolutionStrategy` is `overwrite`

        - `keepShareLinks` is `true`
      operationId: restoreNodes
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RestoreDeletedNodesRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Restore deleted nodes
      tags:
        - nodes
  '/v4/nodes/deleted_nodes/{deleted_node_id}':
    get:
      description: >-
        ### Description:  

        Get metadata of a deleted node.


        ### Precondition:

        User can access parent room and has <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; read recycle bin</span> permissions.


        ### Postcondition:

        Requested deleted node is returned.


        ### Further Information:

        None.
      operationId: requestDeletedNode
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Deleted node ID
          format: int64
          in: path
          name: deleted_node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeletedNode'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request deleted node
      tags:
        - nodes
  /v4/nodes/favorites:
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:  

        Marks or unmarks a list of nodes (room, folder or file) as favorite.


        ### Precondition:

        Authenticated user is allowed to <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128065; see</span> the node (i.e. `isBrowsable =
        true`).


        ### Postcondition:

        Nodes gets marked as favorite.


        ### Further Information:

        Maximum number of nodes is 200.
      operationId: updateFavorites
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFavoritesBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: 'Mark or unmark a list of nodes (room, folder or file) as favorite'
      tags:
        - nodes
  /v4/nodes/files:
    put:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:  

        Updates a list of file’s metadata.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        change</span> permissions in parent room.


        ### Postcondition:

        File's metadata is changed.


        ### Further Information:

        Maximum number of shares is 200
      operationId: updateFiles
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFilesBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates a list of  file’s metadata
      tags:
        - nodes
  /v4/nodes/files/keys:
    post:
      consumes:
        - application/json
      description: >
        ### Description:  

        Sets symmetric file keys for several users and files.


        ### Precondition:

        User has file keys for the files.  

        Only settable by users that own one of the following permissions: <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; read</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage download
        share</span>, <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        change config</span>


        ### Postcondition:

        Stores new file keys for other users.


        ### Further Information:

        Only users with copies of the file key (encrypted with their public
        keys) can access a certain file.  

        This endpoint is used for the distribution of file keys amongst an
        authorized user base.  

        User can set file key for himself.  

        The users who already have a file key are ignored and keep the
        distributed file key
      operationId: setUserFileKeys
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserFileKeySetBatchRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set file keys for a list of users and files
      tags:
        - nodes
  /v4/nodes/files/uploads:
    post:
      consumes:
        - application/json
      description: >
        ### Description:

        This endpoint creates a new upload channel which is the first step in
        any file upload workflow.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        create</span> permissions in the parent container (room or folder).


        ### Postcondition:

        A new upload channel for a file is created.  

        Its ID and an upload token are returned.


        ### Further Information:

        The upload ID is used for uploads with `X-Sds-Auth-Token` header, the
        upload token can be used for uploads without authentication header.


        Please provide the size of the intended upload so that the quota can be
        checked in advanced and no data is transferred unnecessarily.


        Notes are limited to **255** characters.


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: createFileUploadChannel
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFileUploadRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreateFileUploadResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new file upload channel
      tags:
        - nodes
  '/v4/nodes/files/uploads/{upload_id}':
    delete:
      description: >-
        ### Description:

        Cancel a (S3) file upload and destroy the upload channel.


        ### Precondition:

        An upload channel has been created and user has to be the creator of the
        upload channel.


        ### Postcondition:

        The upload channel is removed and all temporary uploaded data is purged.


        ### Further Information:

        It is recommended to notify the API about cancelled uploads if possible.
      operationId: cancelFileUpload
      parameters:
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Cancel file upload
      tags:
        - nodes
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.15.0</h3>


        ### Description:

        Request status of a S3 file upload.


        ### Precondition:

        An upload channel has been created and user has to be the creator of the
        upload channel.


        ### Postcondition:

        Status of S3 multipart upload request is returned.


        ### Further Information:

        None.


        ### Possible errors:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Http Status | Error Code | Description |

        | :--- | :--- | :--- |

        | `400 Bad Request` | `-80000` | Mandatory fields cannot be empty |

        | `400 Bad Request` | `-80001` | Invalid positive number |

        | `400 Bad Request` | `-80002` | Invalid number |

        | `400 Bad Request` | `-40001` | (Target) room is not encrypted |

        | `400 Bad Request` | `-40755` | Bad file name |

        | `400 Bad Request` | `-40763` | File key must be set for an upload into
        encrypted room |

        | `400 Bad Request` | `-50506` | Exceeds the number of files for this
        Upload Share |

        | `403 Forbidden` |  | Access denied |

        | `404 Not Found` | `-20501` | Upload not found |

        | `404 Not Found` | `-40000` | Container not found |

        | `404 Not Found` | `-41000` | Node not found |

        | `404 Not Found` | `-70501` | User not found |

        | `409 Conflict` | `-40010` | Container cannot be overwritten |

        | `409 Conflict` |  | File cannot be overwritten |

        | `500 Internal Server Error` |  | System Error |

        | `502 Bad Gateway` |  | S3 Error |

        | `502 Insufficient Storage` | `-50504` | Exceeds the quota for this
        Upload Share |

        | `502 Insufficient Storage` | `-40200` | Exceeds the free node quota in
        room |

        | `502 Insufficient Storage` | `-90200` | Exceeds the free customer
        quota |

        | `502 Insufficient Storage` | `-90201` | Exceeds the free customer
        physical disk space |


        </details>
      operationId: requestUploadStatusFiles
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3FileUploadStatus'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request status of S3 file upload
      tags:
        - nodes
    post:
      consumes:
        - multipart/form-data
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.9.0</h3>


        ### Use `uploads` API


        ### Description:  

        Uploads a file or parts of it in an active upload channel.


        ### Precondition:

        An upload channel has been created.


        ### Postcondition:

        A file or parts of it are uploaded to a temporary location.


        ### Further Information:

        This endpoints supports chunked upload.  


        Following `Content-Types` are supported by this API:

        * `multipart/form-data`

        * provided `Content-Type`   


        For both file upload types set the correct `Content-Type` header and
        body.  


        ### Examples:  


        * `multipart/form-data`

        ```

        POST /api/v4/nodes/files/uploads/{upload_id} HTTP/1.1


        Header:

        ...

        Content-Type: multipart/form-data;
        boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

        ...


        Body:

        ------WebKitFormBoundary7MA4YWxkTrZu0gW

        Content-Disposition: form-data; name="file"; filename="file.txt"

        Content-Type: text/plain


        Content of file.txt

        ------WebKitFormBoundary7MA4YWxkTrZu0gW--

        ```


        * any other `Content-Type`  

        ```

        POST /api/v4/nodes/files/uploads/{upload_id}  HTTP/1.1


        Header:

        ...

        Content-Type: { ... }

        ...


        Body:

        raw content

        ```
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: uploadFileAsMultipart
      parameters:
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: |-
            Content-Range 

            e.g. `bytes 0-999/3980`
          in: header
          name: Content-Range
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - format: binary
          in: formData
          name: file
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ChunkUploadResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Upload file
      tags:
        - nodes
    put:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.9.0</h3>


        ### Use `uploads` API


        ### Description:

        Finishes an upload and closes the corresponding upload channel.


        ### Precondition:

        An upload channel has been created and data has been transmitted.


        ### Postcondition:

        The upload is finished and the temporary file is moved to the productive
        environment.


        ### Further Information:

        The provided file name might be changed in accordance with the
        resolution strategy:  

        * **autorename**: changes the file name and adds a number to avoid
        conflicts.

        * **overwrite**: deletes any old file with the same file name.

        * **fail**: returns an error; in this case, another `PUT` request with a
        different file name may be sent.


        Please ensure that all chunks have been transferred correctly before
        finishing the upload.  

        Download share id (if exists) gets changed if:

        - node with the same name exists in the target container

        - `resolutionStrategy` is `overwrite`

        - `keepShareLinks` is `true`


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: completeFileUpload
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompleteUploadRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Node'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Complete file upload
      tags:
        - nodes
  '/v4/nodes/files/uploads/{upload_id}/s3':
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.15.0</h3>


        ### Description:

        Finishes a S3 file upload and closes the corresponding upload channel.


        ### Precondition:

        An upload channel has been created, data has been transmitted and user
        has to be the creator of the upload channel


        ### Postcondition:

        Upload channel is closed. S3 multipart upload request is completed.


        ### Further Information:

        Download share id (if exists) gets changed if:

        - node with the same name exists in the target container

        - `resolutionStrategy` is `overwrite`

        - `keepShareLinks` is `true`
      operationId: completeS3FileUpload
      parameters:
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompleteS3FileUploadRequest'
      produces:
        - application/json
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Complete S3 file upload
      tags:
        - nodes
  '/v4/nodes/files/uploads/{upload_id}/s3_urls':
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.15.0</h3>


        ### Description:

        Generate presigned URLs for S3 file upload.


        ### Precondition:

        An upload channel has been created and user has to be the creator of the
        upload channel.


        ### Postcondition:

        List of presigned URLs is returned.


        ### Further Information:

        The size for each part must be >= 5 MB, except for the last part.  

        The part number of the first part in S3 is 1 (not 0).  

        Use HTTP method `PUT` for uploading bytes via presigned URL.
      operationId: generatePresignedUrlsFiles
      parameters:
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GeneratePresignedUrlsRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PresignedUrlList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Generate presigned URLs for S3 file upload
      tags:
        - nodes
  '/v4/nodes/files/{file_id}':
    put:
      consumes:
        - application/json
      description: >+
        ### Description:

        Updates a list of file’s metadata.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        change</span> permissions in parent room.


        ### Postcondition:

        File's metadata is changed.


      operationId: updateFile
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFileRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates a file’s metadata
      tags:
        - nodes
  '/v4/nodes/files/{file_id}/data_room_file_key':
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.24.0</h3>


        ### Description:  

        Returns the file key for the room emergency password / rescue key of a
        certain file (if available).


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in parent room.


        ### Postcondition:

        File key is returned.


        ### Further Information:

        None.
      operationId: requestRoomRescueKey
      parameters:
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FileKey'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request room rescue key
      tags:
        - nodes
  '/v4/nodes/files/{file_id}/data_space_file_key':
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.24.0</h3>


        ### Description:  

        Returns the file key for the system emergency password / rescue key of a
        certain file (if available).


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in parent room.


        ### Postcondition:

        File key is returned.


        ### Further Information:

        None.
      operationId: requestSystemRescueKey
      parameters:
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FileKey'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request system rescue key
      tags:
        - nodes
  '/v4/nodes/files/{file_id}/downloads':
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Use `downloads` API


        ### Description:

        Download a file.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in parent room.


        ### Postcondition:

        Stream is returned.


        ### Further Information:

        Range requests are supported for details.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: downloadFile
      parameters:
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: |-
            Range 

            e.g. `bytes=0-999/3980`
          in: header
          name: Range
          required: false
          type: string
        - description: >-
            Always return `application/octet-stream` instead of specific
            mimetype
          in: query
          name: generic_mimetype
          required: false
          type: boolean
        - description: 'Use Content-Disposition: `inline` instead of `attachment`'
          in: query
          name: inline
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '416':
          description: Range Not Satisfiable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Download file
      tags:
        - nodes
    head:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Use `downloads` API


        ### Description:

        Download a file.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in parent room.


        ### Postcondition:

        Stream is returned.


        ### Further Information:

        Range requests are supported for details.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: downloadFile_1
      parameters:
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: |-
            Range 

            e.g. `bytes=0-999/3980`
          in: header
          name: Range
          required: false
          type: string
        - description: >-
            Always return `application/octet-stream` instead of specific
            mimetype
          in: query
          name: generic_mimetype
          required: false
          type: boolean
        - description: 'Use Content-Disposition: `inline` instead of `attachment`'
          in: query
          name: inline
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '416':
          description: Range Not Satisfiable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Download file
      tags:
        - nodes
    post:
      description: >-
        ### Description:

        Create a download URL to retrieve a file without `X-Sds-Auth-Token`
        Header.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in parent room.


        ### Postcondition:

        Download token is generated and returned.


        ### Further Information:

        The token is necessary to access `downloads` ressources.
      operationId: generateDownloadUrl
      parameters:
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DownloadTokenGenerateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Generate download URL
      tags:
        - nodes
  '/v4/nodes/files/{file_id}/user_file_key':
    get:
      description: >-
        ### Description:  

        Returns the file key for the current user (if available).


        ### Precondition:

        User with one of the following permissions in parent room: <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; read</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage download
        share</span>


        ### Postcondition:

        File key is returned.


        ### Further Information:

        The symmetric file key is encrypted with the user's public key.  

        File keys are generated with the workflow _"Generate file keys"_ that
        starts at `GET /nodes/missingFileKeys`.
      operationId: requestUserFileKey
      parameters:
        - description: File ID
          format: int64
          in: path
          name: file_id
          required: true
          type: integer
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FileKey'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user's file key
      tags:
        - nodes
  /v4/nodes/folders:
    post:
      consumes:
        - application/json
      description: >
        ### Description:

        Create a new folder.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        create</span> permissions in current room.


        ### Postcondition:

        New folder is created.


        ### Further Information:

        Folders **CANNOT** be created on top level (without parent element).  

        Notes are limited to **255** characters.


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: createFolder
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateFolderRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new folder
      tags:
        - nodes
  '/v4/nodes/folders/{folder_id}':
    put:
      consumes:
        - application/json
      description: >
        ### Description:  

        Updates folder’s metadata.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        change</span> permissions in parent room.


        ### Postcondition:

        Folder's metadata is changed.


        ### Further Information:

        Notes are limited to **255** characters.


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: updateFolder
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Folder ID
          format: int64
          in: path
          name: folder_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFolderRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates folder’s metadata
      tags:
        - nodes
  /v4/nodes/missingFileKeys:
    get:
      description: >
        ### Description:  

        Requests a list of missing file keys that may be generated by the
        current user.  


        ### Precondition:

        User has a key pair.  

        Only returns users that owns one of the following permissions: <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; read</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage download
        share</span>


        ### Postcondition:

        None.


        ### Further Information:

        Clients **SHOULD** regularly request missing file keys to provide access
        to files for other users.  

        The returned list is ordered by priority (emergency passwords / rescue
        keys are returned first).

        There is an enforced limit of **100** items per request.

        A total value greater than limit signals that there are more entries but
        does not necessarily reflect the precise

        number of total items.
      operationId: requestMissingFileKeys
      parameters:
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Room ID
          format: int64
          in: query
          name: room_id
          required: false
          type: integer
        - description: File ID
          format: int64
          in: query
          name: file_id
          required: false
          type: integer
        - description: User ID
          format: int64
          in: query
          name: user_id
          required: false
          type: integer
        - description: Determines which key should be used (NEW)
          enum:
            - room_rescue_key
            - system_rescue_key
            - previous_user_key
            - previous_room_rescue_key
            - previous_system_rescue_key
          in: query
          name: use_key
          required: false
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MissingKeysResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request files without user's file key
      tags:
        - nodes
  /v4/nodes/rooms:
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Creates a new room at the provided parent node.  

        Creation of top level rooms provided.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        manage</span> permissions in the parent room.


        ### Postcondition:

        A new room is created.


        ### Further Information:  

        Rooms may only have other rooms as parent.  

        Rooms on top level do **NOT** have any parent.  

        Rooms may have rooms as children on n hierarchy levels.  

        If permission inheritance is disabled, there **MUST** be at least one
        admin user / group (with neither the group nor the user having an
        expiration date).


        Notes are limited to **255** characters.


        Provided (or default) classification is taken from room when file gets
        uploaded without any classification.


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: createRoom
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateRoomRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new room
      tags:
        - nodes
  /v4/nodes/rooms/pending:
    get:
      description: >-
        ### Description:  

        Requests a list of user-room assignments by groups that have **NOT**
        been approved yet  

        These can have the state:

        * **WAITING**  

        * **DENIED**  

        * **ACCEPTED**  


        **ACCEPTED** assignments are already removed from the list.


        ### Precondition:

        None.


        ### Postcondition:

        List of user-room assignments is returned.


        ### Further Information:

        Room administrators **SHOULD** regularly request pending assingments to
        provide access to rooms for other users.


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `state:eq:WAITING`  

        Filter assignments by state `WAITING`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `userId` | User ID filter | `eq` | User ID equals value. | `positive
        Integer` |

        | `groupId` | Group ID filter | `eq` | Group ID equals value. |
        `positive Integer` |

        | `roomId` | Room ID filter | `eq` | Room ID equals value. | `positive
        Integer` |

        | `state` | Assignment state | `eq` | Assignment state equals value. |
        `WAITING or DENIED` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `userId:desc|state:asc`  

        Sort by `userId` descending **AND** `state` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `userId` | User ID |

        | `groupId` | Group ID |

        | `roomId` | Room ID |

        | `state` | State |


        </details>
      operationId: requestPendingAssignments
      parameters:
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PendingAssignmentList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user-room assignments per group
      tags:
        - nodes
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Handles a list of user-room assignments by groups that have **NOT** been
        approved yet  

        **WAITING** or **DENIED** assignments can be **ACCEPTED**.


        ### Precondition:

        None.


        ### Postcondition:

        User-room assignment is approved and the user gets access to the group.


        ### Further Information:

        Room administrators should **SHOULD** handle pending assignments to
        provide access to rooms for other users.
      operationId: changePendingAssignments
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PendingAssignmentsRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Handle user-room assignments per group
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}':
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Updates room’s metadata.


        ### Precondition:

        User is a <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128100; Room
        Administrator</span> at superordinated level.


        ### Postcondition:

        Room's metadata is changed.


        ### Further Information:

        Notes are limited to **255** characters.


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: updateRoom
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRoomRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Updates room’s metadata
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/activities_log':
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Description:

        Retrieve syslog (audit log) events related to a room.


        ### Precondition:

        Requires <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions on that room.


        ### Postcondition:

        List of events is returned.


        ### Further Information:

        Output may be limited to a certain number of entries.  

        Please use filter criteria and paging.


        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `time:desc`  

        Sort by `time` descending (default sort option).


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `time` | Event timestamp |


        </details>
      operationId: requestRoomActivitiesLogAsJsonOld
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: |-
            Filter events from given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_start
          required: false
          type: string
        - description: |-
            Filter events until given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_end
          required: false
          type: string
        - description: |-
            Operation ID 

            cf. `GET /eventlog/operations`
          format: int32
          in: query
          name: type
          required: false
          type: integer
        - description: User ID
          format: int64
          in: query
          name: user_id
          required: false
          type: integer
        - description: |-
            Operation status:

            * `0` - Success

            * `2` - Error
          format: int32
          in: query
          name: status
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyslogEventList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request events of a room
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/config':
    put:
      consumes:
        - application/json
      description: >-
        ### Description:

        Configure a room.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        Room's configuration is changed.


        ### Further Information:

        Provided (or default) classification is taken from room when file gets
        uploaded without any classification.  


        To set `adminIds` or `adminGroupIds` the `inheritPermissions` value has
        to be `false`. Otherwise use:

        * `PUT /nodes/rooms/{room_id}/groups`

        * `PUT /nodes/rooms/{room_id}/users `  


        APIs.
      operationId: configureRoom
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ConfigRoomRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Configure room
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/encrypt':
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Activates the client-side encryption for a room.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        Encryption of room is activated.


        ### Further Information:

        Only empty rooms at the top level may be encrypted.  

        This endpoint may also be used to disable encryption of an empty room.
      operationId: encryptRoom
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EncryptRoomRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Encrypt room
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/events':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description:

        Retrieve syslog (audit log) events related to a room.


        ### Precondition:

        Requires <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions on that room.


        ### Postcondition:

        List of events is returned.


        ### Further Information:

        Output may be limited to a certain number of entries.  

        Please use filter criteria and paging.


        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `time:desc`  

        Sort by `time` descending (default sort option).


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `time` | Event timestamp |


        </details>
      operationId: requestRoomActivitiesLogAsJson
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: |-
            Filter events from given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_start
          required: false
          type: string
        - description: |-
            Filter events until given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_end
          required: false
          type: string
        - description: |-
            Operation ID 

            cf. `GET /eventlog/operations`
          format: int32
          in: query
          name: type
          required: false
          type: integer
        - description: User ID
          format: int64
          in: query
          name: user_id
          required: false
          type: integer
        - description: |-
            Operation status:

            * `0` - Success

            * `2` - Error
          format: int32
          in: query
          name: status
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogEventList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request events of a room
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/groups':
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Revoke granted groups from room.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        Group's permissions are revoked.


        ### Further Information:

        Batch function.  
      operationId: revokeRoomGroups
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RoomGroupsDeleteBatchRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revoke granted group(s) from room
      tags:
        - nodes
    get:
      description: >-
        ### Description:  

        Retrieve a list of groups that are and / or can be granted to the room.


        ### Precondition:

        Any permissions on target room.


        ### Postcondition:

        List of groups is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isGranted:eq:false|name:cn:searchString`  

        Get all groups that are **NOT** granted to this room **AND** whose name
        is like `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Group name filter | `cn` | Group name contains value. |
        `search String` |

        | `groupId` | Group ID filter | `eq` | Group ID equals value. |
        `positive Integer` |

        | `isGranted` | Filter the groups that have (no) access to this
        room.<br>**This filter is only available for room
        administrators.**<br>**Other users can only look for groups in their
        rooms, so this filter is `true` and **CANNOT** be overridden.** | `eq`
        |  | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default:
        `true` |

        | `permissionsManage` | Filter the groups that do (not) have `manage`
        permissions in this room. | `eq` |  | `true or false` |

        | `effectivePerm` | Filter groups with DIRECT or DIRECT **AND**
        EFFECTIVE permissions<ul><li>`false`: DIRECT permissions</li><li>`true`:
        DIRECT **AND** EFFECTIVE permissions</li></ul>DIRECT means: e.g. room
        administrator grants `read` permissions to group of users **directly**
        on desired room.<br>EFFECTIVE means: e.g. group of users gets `read`
        permissions on desired room through **inheritance**. | `eq` |  | `true
        or false`<br>default: `false` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:desc`  

        Sort by `name` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Group name |


        </details>
      operationId: requestRoomGroups
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoomGroupList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request room granted group(s) or / and group(s) that can be granted
      tags:
        - nodes
    put:
      consumes:
        - application/json
      description: >
        ### Description:

        All existing group permissions will be overwritten.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>. To add new members, the user needs the right
        <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid
        #000; border-radius: 5px; display: inline;'>&#128275; non-members
        add</span>, which is included in any role.


        ### Postcondition:

        Group's permissions are changed.


        ### Further Information:

        Batch function.  
      operationId: updateRoomGroups
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RoomGroupsAddBatchRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add or change room granted group(s)
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/keypair':
    delete:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Delete room rescue key pair.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Key pair is removed (cf. further information below).


        ### Further Information:

        Please set a new room rescue key pair first and re-encrypt file keys
        with it.  

        If no version is set, deleted key pair with lowest preference value.  

        Although, `version` **SHOULD** be set.
      operationId: removeRoomRescueKeyPair
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove rooms's rescue key pair
      tags:
        - nodes
    get:
      description: >-
        ### Description:  

        Retrieve the room rescue key pair.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in that room.


        ### Postcondition:

        Key pair is returned.


        ### Further Information:

        None.
      operationId: requestRoomRescueKeyPair
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request room rescue key
      tags:
        - nodes
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Set room rescue key pair.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        Key pair is set.


        ### Further Information:

        Room rescue key pair can be used to upgrade algorithm.
      operationId: setRoomRescueKeyPair
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set room's rescue key pair
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/keypairs':
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Retrieve all room rescue key pairs to allow migrating
        room-rescue-key-encrypted file keys.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in that room.


        ### Postcondition:

        List of key pairs is returned.


        ### Further Information:

        In the case of an algorithm migration to a room rescue key pair, one
        should create the new key pair before deleting the old one. This allows
        re-encrypting file keys with the new key pair, using the old one.


        This API allows to retrieve both key pairs, in contrast to `GET
        /nodes/rooms/{room_id}/keypair`, which only delivers the preferred one.
      operationId: requestRoomRescueKeyPairs
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
          schema:
            items:
              $ref: '#/definitions/UserKeyPairContainer'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request all room rescue key pairs
      tags:
        - nodes
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Create room rescue key pair and preserve copy of old private key.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        Room rescue key pair is created.  

        Copy of old private key is preserved.


        ### Further Information:

        You can submit your old private key, encrypted with your current
        password.  

        This allows migrating file keys encrypted with your old key pair to the
        new one.
      operationId: createAndPreserveRoomRescueKeyPair
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateKeyPairRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create key pair and preserve copy of old private key
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/s3_tags':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Retrieve a list of S3 tags assigned to a room.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        List of assigned S3 tags is returned.


        ### Further Information:

        None.
      operationId: requestRoomS3Tags
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3TagList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of all assigned S3 tags to the room
      tags:
        - nodes
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Set S3 tags to a room.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        Provided S3 tags are assigned to a room.


        ### Further Information:

        Every request overrides current S3 tags.  

        Mandatory S3 tag IDs **MUST** be sent.
      operationId: setRoomS3Tags
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/S3TagIds'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/S3TagList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set S3 tags for a room
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/users':
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Revoke granted users from room.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        User's permissions are revoked.


        ### Further Information:

        Batch function.  
      operationId: revokeRoomUsers
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RoomUsersDeleteBatchRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revoke granted user(s) from room
      tags:
        - nodes
    get:
      description: >-
        ### Description:  

        Retrieve a list of users that are and / or can be granted to the room.


        ### Precondition:

        Any permissions on target room.


        ### Postcondition:

        None.


        ### Further Information:

        List of users is returned.


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        > `permissionsManage:eq:true|user:cn:searchString`  

        Get all users that have `manage` permissions to this room **AND** whose
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`) is like
        `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `user` | User filter | `cn` | User contains value (`firstName` **OR**
        `lastName` **OR** `email` **OR** `username`). | `search String` |

        | `userId` | User ID filter | `eq` | User ID equals value. | `positive
        Integer` |

        | `isGranted` | Filter the users that have (no) access to this
        room.<br>**This filter is only available for room
        administrators.**<br>**Other users can only look for users in their
        rooms, so this filter is `true` and **CANNOT** be overridden.** | `eq`
        |  | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default:
        `true` |

        | `permissionsManage` | Filter the users that do (not) have `manage`
        permissions in this room. | `eq` |  | `true or false` |

        | `effectivePerm` | Filter users with DIRECT or DIRECT **AND** EFFECTIVE
        permissions<ul><li>`false`: DIRECT permissions</li><li>`true`: DIRECT
        **AND** EFFECTIVE permissions</li><li>`any`: DIRECT **AND** EFFECTIVE
        **AND** OVER GROUP permissions</li></ul>DIRECT means: e.g. room
        administrator grants `read` permissions to group of users **directly**
        on desired room.<br>EFFECTIVE means: e.g. group of users gets `read`
        permissions on desired room through **inheritance**.<br>OVER GROUP
        means: e.g. user gets `read` permissions on desired room through **group
        membership**. | `eq` |  |
        <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default: `false` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`displayName`</del> | User display name filter (use `user`
        filter) | `cn` | User display name contains value (`firstName` **OR**
        `lastName` **OR** `email`). | `search String` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `user:desc`  

        Sort by `user` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | **`user`** | User - sort by `firstName`, `lastName`, `username`,
        `email` (in this order) |


        </details>
      operationId: requestRoomUsers
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoomUserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request room granted user(s) or / and user(s) that can be granted
      tags:
        - nodes
    put:
      consumes:
        - application/json
      description: >-
        ### Description:

        All existing user permissions will be overwritten.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>. To add new members, the user needs the right
        <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid
        #000; border-radius: 5px; display: inline;'>&#128275; non-members
        add</span>, which is included in any role.


        ### Postcondition:

        User's permissions are changed.


        ### Further Information:

        Batch function.
      operationId: updateRoomUsers
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RoomUsersAddBatchRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add or change room granted user(s)
      tags:
        - nodes
  '/v4/nodes/rooms/{room_id}/webhooks':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a list of webhooks for the room scope with their assignment status.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        List of webhooks is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isAssigned:eq:true`  

        Get a list of assigned webhooks to the room.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | **`isAssigned`** | Assigned/unassigned webhooks filter | `eq` |  |
        `true or false` |


        </details>
      operationId: requestListOfWebhooksForRoom
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoomWebhookList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: >-
        Request list of webhooks that are assigned or can be assigned to this
        room
      tags:
        - nodes
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Handle room webhook assignments.


        ### Precondition:

        User needs to be a <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128100;
        Room Administrator</span>.


        ### Postcondition:

        List of webhooks is returned.


        ### Further Information:

        None.


        ### Available event types:


        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Scope |

        | :--- | :--- | :--- |

        | **`downloadshare.created`** | Triggered when a new download share is
        created in affected room | Node Webhook |

        | **`downloadshare.deleted`** | Triggered when a download share is
        deleted in affected room | Node Webhook |

        | **`downloadshare.used`** | Triggered when a download share is utilized
        in affected room | Node Webhook |

        | **`uploadshare.created`** | Triggered when a new upload share is
        created in affected room | Node Webhook |

        | **`uploadshare.deleted`** | Triggered when a upload share is deleted
        in affected room | Node Webhook |

        | **`uploadshare.used`** | Triggered when a new file is uploaded via the
        upload share in affected room | Node Webhook |

        | **`file.created`** | Triggered when a new file is uploaded in affected
        room | Node Webhook |

        | **`folder.created`** | Triggered when a new folder is created in
        affected room | Node Webhook |

        | **`room.created`** | Triggered when a new room is created (in affected
        room) | Node Webhook |

        | **`file.deleted`** | Triggered when a file is deleted in affected room
        | Node Webhook |

        | **`folder.deleted`** | Triggered when a folder is deleted in affected
        room | Node Webhook |

        | **`room.deleted`** | Triggered when a room is deleted in affected room
        | Node Webhook |


        </details>
      operationId: handleRoomWebhookAssignments
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Room ID
          format: int64
          in: path
          name: room_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRoomWebhookRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoomWebhookList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Assign or unassign webhooks to room
      tags:
        - nodes
  /v4/nodes/search:
    get:
      description: >-
        ### Description:  

        Provides a flat list of file system nodes (rooms, folders or files) of a
        given parent that are accessible by the current user.


        ### Precondition:

        Authenticated user is allowed to <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128065; see</span> nodes (i.e. `isBrowsable =
        true`).


        ### Postcondition:

        List of nodes is returned.


        ### Further Information:  

        Output is limited to **500** entries.  

        For more results please use filter criteria and paging (`offset` +
        `limit`).  

        `EncryptionInfo` is **NOT** provided.  

        Wildcard character is the asterisk character: `*`


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `type:eq:file|createdAt:ge:2015-01-01`  

        Get nodes where type equals `file` **AND** file creation date is **>=**
        `2015-01-01`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `type` | Node type filter | `eq` | Node type equals value.<br>Multiple
        values are allowed and will be connected via logical disjunction
        (**OR**).<br>e.g. `type:eq:room:folder` |
        <ul><li>`room`</li><li>`folder`</li><li>`file`</li></ul> |

        | `fileType` | File type filter (file extension) | `cn, eq` | File type
        contains / equals value. | `search String` |

        | `classification` | Classification filter | `eq` | Classification
        equals value. | <ul><li>`1` - public</li><li>`2` - internal</li><li>`3`
        - confidential</li><li>`4` - strictly confidential</li></ul> |

        | `createdBy` | Creator login filter | `cn, eq` | Creator login contains
        / equals value (`firstName` **OR** `lastName` **OR** `email` **OR**
        `username`). | `search String` |

        | `createdById` | Creator ID filter | `eq` | Creator ID equals value. |
        `positive Integer  or -1 for external user` |

        | `createdAt` | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `updatedBy` | Last modifier login filter | `cn, eq` | Last modifier
        login contains / equals value (`firstName` **OR** `lastName` **OR**
        `email` **OR** `username`). | `search String` |

        | `updatedById` | Last modifier ID filter | `eq` | Modifier ID equals
        value. | `positive Integer or -1 for external user` |

        | `updatedAt` | Last modification date filter | `ge, le` | Last
        modification date is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `updatedAt:ge:2016-12-31`&#124;`updatedAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `expireAt` | Expiration date filter | `ge, le` | Expiration date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `expireAt:ge:2016-12-31`&#124;`expireAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `size` | Node size filter | `ge, le` | Node size is greater / less
        equals than value.<br>Multiple operator values are allowed and will be
        connected via logical conjunction (**AND**).<br>e.g.
        `size:ge:5`&#124;`size:le:10` | `size in bytes` |

        | `isFavorite` | Favorite filter | `eq` |  | `true or false` |

        | `branchVersion` | Node branch version filter | `ge, le` | Branch
        version is greater / less equals than value.<br>Multiple operator values
        are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `branchVersion:ge:1423280937404`&#124;`branchVersion:le:1523280937404` |
        `version number` |

        | `parentPath` | Parent path | `cn, eq` | Parent path contains / equals 
        value. | `search String` |

        | `timestampCreation` | Creation timestamp filter | `ge, le` | Creation
        timestamp is greater / less equals than value.<br>Multiple operator
        values are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `timestampCreation:ge:2016-12-31T23:00:00.123`&#124;<br>`timestampCreation:le:2018-01-01T11:00:00.540`
        | `Date (yyyy-MM-dd)` |

        | `timestampModification` | Modification timestamp filter | `ge, le` |
        Modification timestamp is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `timestampModification:ge:2016-12-31T23:00:00.123`&#124;<br>`timestampModification:le:2018-01-01T11:00:00.540`
        | `Date (yyyy-MM-dd)` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:desc|size:asc`  

        Sort by `name` descending **AND** `size` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Node name |

        | `createdAt` | Creation date |

        | `createdBy` | Creator first name, last name |

        | `updatedAt` | Last modification date |

        | `updatedBy` | Last modifier first name, last name |

        | `fileType` | File type (extension) |

        | `classification` | Classification ID:<ul><li>1 - public</li><li>2 -
        internal</li><li>3 - confidential</li><li>4 - strictly
        confidential</li></ul> |

        | `size` | Node size |

        | `cntDeletedVersions` | Number of deleted versions of this file /
        folder (**NOT** recursive; for files and folders only) |

        | `type` | Node type (room, folder, file) |

        | `parentPath` | Parent path |

        | `timestampCreation` | Creation timestamp |

        | `timestampModification` | Modification timestamp |


        </details>


        ### Deprecated sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | <del>`cntAdmins`</del> | Number of admins (for rooms only) |

        | <del>`cntUsers`</del> | Number of users (for rooms only) |

        | <del>`cntChildren`</del> | Number of direct children (**NOT**
        recursive; for rooms and folders only) |


        </details>
      operationId: searchNodes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Search string
          in: query
          name: search_string
          required: true
          type: string
        - description: >-
            * `0` - top level nodes only (default)


            * `-1` - full tree


            * `n` (any positive number) - include `n` levels starting from the
            current node
          format: int32
          in: query
          name: depth_level
          required: false
          type: integer
        - description: |-
            Parent node ID.

            Only rooms and folders can be parents.

            Parent ID `0` or empty is the root node.
          format: int64
          in: query
          name: parent_id
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Search nodes
      tags:
        - nodes
  /v4/nodes/zip:
    post:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Create a download URL to retrieve several files in one ZIP archive.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in parent room.


        ### Postcondition:

        Download URL is generated and returned.


        ### Further Information:

        The token is necessary to access `downloads` resources.  

        ZIP download is only available for files and folders.
      operationId: generateDownloadUrlForZipArchive
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ZipDownloadRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DownloadTokenGenerateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Generate download URL for ZIP download
      tags:
        - nodes
  /v4/nodes/zip/download:
    post:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Download multiple files in a ZIP archive.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in auth parent room.


        ### Postcondition:

        Stream is returned.


        ### Further Information:

        None.
      operationId: downloadZipArchive
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ZipDownloadRequest'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Download files / folders as ZIP archive
      tags:
        - nodes
  '/v4/nodes/{node_id}':
    delete:
      description: >-
        ### Description:

        Delete node (room, folder or file).


        ### Precondition:

        Authenticated user with <span style='padding: 3px; background-color:
        #F6F7F8; border: 1px solid #000; border-radius: 5px; display:
        inline;'>&#128275; delete</span> permissions on supplied nodes (for
        folders or files) or on superordinated node (for rooms).


        ### Postcondition:

        Node gets deleted.


        ### Further Information:

        None.
      operationId: removeNode
      parameters:
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove node
      tags:
        - nodes
    get:
      description: >-
        ### Description:  

        Get node (room, folder or file).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions in auth parent room.


        ### Postcondition:

        Requested node is returned.


        ### Further Information:

        None.
      operationId: requestNode
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request node
      tags:
        - nodes
  '/v4/nodes/{node_id}/comments':
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:

        Get comments for a specific node.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions on the node.


        ### Postcondition:

        List with comments (sorted by `createdAt` timestamp) is returned.


        ### Further Information:

        An empty list is returned if no comments were found.  

        Output is limited to **500** entries.  

        For more results please use filter criteria and paging (`offset` +
        `limit`). 
      operationId: requestNodeComments
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: 'Hide deleted comments (default: false)'
          in: query
          name: hide_deleted
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of node comments
      tags:
        - nodes
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:

        Create a comment for a specific node.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        read</span> permissions on the node.


        ### Postcondition:

        Comment is created.


        ### Further Information:

        Maximum allowed text length: **65535** characters.
      operationId: createNodeComment
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateNodeCommentRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create node comment
      tags:
        - nodes
  '/v4/nodes/{node_id}/copy_to':
    post:
      consumes:
        - application/json
      description: >
        ### Description:

        Copies nodes (folder, file) to another parent.


        ### Precondition:

        Authenticated user with <span style='padding: 3px; background-color:
        #F6F7F8; border: 1px solid #000; border-radius: 5px; display:
        inline;'>&#128275; read</span> permissions in the source parent and
        <span style='padding: 3px; background-color: #F6F7F8; border: 1px solid
        #000; border-radius: 5px; display: inline;'>&#128275; create</span>
        permissions in the target parent node.


        ### Postcondition:

        Nodes are copied to target parent.


        ### Further Information:

        Nodes **MUST** be in same source parent.  

        **Rooms **CANNOT** be copied.**


        Download share id (if exists) gets changed if:

        - node with the same name exists in the target container

        - `resolutionStrategy` is `overwrite`

        - `keepShareLinks` is `true`


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: copyNodes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Target parent node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CopyNodesRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Node'
        '204':
          description: No Content
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Copy node(s)
      tags:
        - nodes
  '/v4/nodes/{node_id}/deleted_nodes':
    delete:
      description: >-
        ### Description:  

        Empty a recycle bin.


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; delete
        recycle bin</span> permissions in parent room.


        ### Postcondition:

        All files in the recycle bin are permanently removed.


        ### Further Information:

        Actually removes the previously deleted files from the system.  

        **This action is irreversible.**
      operationId: emptyDeletedNodes
      parameters:
        - description: Room ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Empty recycle bin
      tags:
        - nodes
    get:
      description: >-
        ### Description:  

        Retrieve a list of deleted nodes in a recycle bin.


        ### Precondition:

        User can access parent room and has <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; read recycle bin</span> permissions.


        ### Postcondition:

        List of deleted nodes is returned.


        ### Further Information:

        Only room IDs are accepted as parent ID since only rooms may have a
        recycle bin.


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `type:eq:file:folder|name:cn:searchString_1|parentPath:cn:searchString_2`  

        Get deleted nodes where type equals (`file` **OR** `folder`) **AND**
        deleted node name containing `searchString_1` **AND** deleted node
        parent path containing `searchString 2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `type` | Node type filter | `eq` | Node type equals
        value(s).<br>Multiple values are allowed and will be connected via
        logical disjunction (**OR**).<br>e.g. `type:eq:folder:file` |
        <ul><li>`folder`</li><li>`file`</li></ul> |

        | `name` | Node name filter | `cn` | Node name contains value. | `search
        String` |

        | `parentPath` | Parent path filter | `cn` | Parent path contains value.
        | `search String` |

        | `timestampCreation` | Creation timestamp filter | `ge, le` | Creation
        timestamp is greater / less equals than value.<br>Multiple operator
        values are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `timestampCreation:ge:2016-12-31`&#124;<br>`timestampCreation:le:2018-01-01`
        | `Date (yyyy-MM-dd)` |

        | `timestampModification` | Modification timestamp filter | `ge, le` |
        Modification timestamp is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `timestampModification:ge:2016-12-31T23:00:00.123`&#124;<br>`timestampModification:le:2018-01-01T11:00:00.540`
        | `Date (yyyy-MM-dd)` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.  

        Nodes are sorted by type first, then by sent sort string.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:desc|timestampCreation:asc`  

        Sort by `name` descending **AND** `timestampCreation` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Node name |

        | `cntVersions` | Number of deleted versions of this file |

        | `firstDeletedAt` | First deleted version |

        | `lastDeletedAt` | Last deleted version |

        | `parentPath` | Parent path of deleted node |

        | `timestampCreation` | Creation timestamp |

        | `timestampModification` | Modification timestamp |


        </details>
      operationId: requestDeletedNodesSummary
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Parent ID (can only be a room ID)
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeletedNodeSummaryList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of deleted nodes
      tags:
        - nodes
  '/v4/nodes/{node_id}/deleted_nodes/versions':
    get:
      description: >-
        ### Description:  

        Retrieve all deleted versions of a node.


        ### Precondition:

        User can access parent room and has <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; read recycle bin</span> permissions.


        ### Postcondition:

        List of deleted versions of a node is returned.


        ### Further Information:

        The node is identified by three parameters:

        * parent ID

        * name

        * type (file, folder).


        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `expireAt:desc|size:asc`  

        Sort by `expireAt` descending **AND** `size` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `expireAt` | Expiration date |

        | `accessedAt` | Last access date |

        | `size` | Node size |

        | `classification` | Classification ID:<ul><li>1 - public</li><li>2 -
        internal</li><li>3 - confidential</li><li>4 - strictly
        confidential</li></ul> |

        | `createdAt` | Creation date |

        | `createdBy` | Creator first name, last name |

        | `updatedAt` | Last modification date |

        | `updatedBy` | Last modifier first name, last name |

        | `deletedAt` | Deleted date |

        | `deletedBy` | Deleter first name, last name |


        </details>
      operationId: requestDeletedNodeVersions
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Parent ID (room or folder ID)
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Node type
          in: query
          name: type
          required: true
          type: string
        - description: Node name
          in: query
          name: name
          required: true
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DeletedNodeVersionsList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request deleted versions of nodes
      tags:
        - nodes
  '/v4/nodes/{node_id}/favorite':
    delete:
      description: >-
        ### Description:

        Unmarks a node (room, folder or file) as favorite.


        ### Precondition:

        Authenticated user is allowed to <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128065; see</span> the node (i.e. `isBrowsable =
        true`).


        ### Postcondition:

        A node gets unmarked as favorite.


        ### Further Information:

        None.
      operationId: removeFavorite
      parameters:
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: 'Unmark a node (room, folder or file) as favorite'
      tags:
        - nodes
    post:
      description: >-
        ### Description:  

        Marks a node (room, folder or file) as favorite.


        ### Precondition:

        Authenticated user is allowed to <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128065; see</span> the node (i.e. `isBrowsable =
        true`).


        ### Postcondition:

        A node gets marked as favorite.


        ### Further Information:

        None.
      operationId: addFavorite
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: 'Mark a node (room, folder or file) as favorite'
      tags:
        - nodes
  '/v4/nodes/{node_id}/move_to':
    post:
      consumes:
        - application/json
      description: >
        ### Description:  

        Moves nodes (folder, file) to another parent.


        ### Precondition:

        Authenticated user with <span style='padding: 3px; background-color:
        #F6F7F8; border: 1px solid #000; border-radius: 5px; display:
        inline;'>&#128275; read</span> and <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; delete</span> permissions in the source
        parent and <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        create</span> permissions in the target parent node.


        ### Postcondition:

        Nodes are moved to target parent.


        ### Further Information:

        Nodes **MUST** be in same source parent.  

        **Rooms **CANNOT** be moved.**


        Download share id (if exists) gets changed if:

        - node with the same name exists in the target container

        - `resolutionStrategy` is `overwrite`

        - `keepShareLinks` is `true`


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: moveNodes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Target parent node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MoveNodesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '204':
          description: No Content
          schema:
            type: string
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Move node(s)
      tags:
        - nodes
  '/v4/nodes/{node_id}/parents':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:  

        Requests a list of node ancestors, sorted from root node to the node's
        direct parent node.


        ### Precondition:

        User is allowed to browse through the node tree until the requested
        node.


        ### Postcondition:

        List of parent nodes is returned.


        ### Further Information:

        None.
      operationId: requestNodeParents
      parameters:
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeParentList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of parent nodes
      tags:
        - nodes
  /v4/provisioning/customers:
    get:
      description: >-
        ### Description:  

        Receive a list of customers.


        ### Precondition:

        Authentication with `X-Sds-Service-Token` required.


        ### Postcondition:

        List of customers is returned.


        ### Further Information:

        This list returns a maximum of **1000** entries.  


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `trialDaysLeft:le:10|userMax:le:100`  

        Get all customers with `10` trial days left **AND** user maximum **<=**
        `100`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `id` | Customer ID filter | `eq` | Customer ID equals value. |
        `positive Integer` |

        | `companyName` | Company name filter | `cn` | Company name contains
        value. | `search String` |

        | `customerContractType` | Customer contract type filter | `eq` |
        Customer contract type equals value. |
        <ul><li>`demo`</li><li>`free`</li><li>`pay`</li></ul> |

        | `trialDaysLeft` | Left trial days filter | `ge, le` | Left trial days
        are greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `trialDaysLeft:ge:5`&#124;`trialDaysLeft:le:10` |

        | `providerCustomerId` | Provider Customer ID filter | `cn, eq` |
        Provider Customer ID contains / equals value. | `search String` |

        | `quotaMax` | Maximum quota filter | `ge, le` | Maximum quota is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `quotaMax:ge:1024`&#124;`quotaMax:le:1073741824` | `positive Integer` |

        | `quotaUsed` | Used quota filter | `ge, le` | Used quota is greater /
        less equals than value.<br>Multiple operator values are allowed and will
        be connected via logical conjunction (**AND**).<br>e.g.
        `quotaUsed:ge:1024`&#124;`quotaUsed:le:1073741824` | `positive Integer`
        |

        | `userMax` | User maximum filter | `ge, le` | User maxiumum is greater
        / less equals than value.<br>Multiple operator values are allowed and
        will be connected via logical conjunction (**AND**).<br>e.g.
        `userMax:ge:10`&#124;`userMax:le:100` | `positive Integer` |

        | `userUsed` | Number of registered users filter | `ge, le` | Number of
        registered users is is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g. `userUsed:ge:10`&#124;`userUsed:le:100` |
        `positive Integer` |

        | `isLocked` | Lock status filter | `eq` |  | `true or false` |

        | `createdAt` | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `updatedAt` | Last modification date filter | `ge, le` | Last
        modification date is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `updatedAt:ge:2016-12-31`&#124;`updatedAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `lastLoginAt` | Last login date filter | `ge, le` | Last login date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `lastLoginAt:ge:2016-12-31`&#124;`lastLoginAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `userLogin` | User login filter | `eq` | User login name equals
        value.<br>Search user all logins e.g. `basic`, `active_directory`,
        `radius`. | `search String` |

        | `attributeKey` | Customer attribute key filter | `eq`, `nex` |
        Customer attribute key equals value / Customer attribute does **NOT**
        exist at customer | `search String` |

        | `attributeValue` | Customer attribute value filter | `eq` | Customer
        attribute value equals value. | `search String` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`activationCode`</del> | Activation code filter | `cn, eq` |
        Activation code contains / equals value. | `search String` |

        | <del>`lockStatus`</del> | Lock status filter | `eq` |  | <ul><li>`0` -
        unlocked</li><li>`1` - locked</li></ul> |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `companyName:desc|userUsed:asc`  

        Sort by `companyName` descending **AND** `userUsed` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `companyName` | Company name |

        | `customerContractType` | Customer contract type |

        | `trialDaysLeft` | Number of remaining trial days (demo customers) |

        | `providerCustomerId` | Provider Customer ID |

        | `quotaMax` | Maximum quota |

        | `quotaUsed` | Currently used quota |

        | `userMax` | Maximum user number |

        | `userUsed` | Number of registered users |

        | `isLocked` | Lock status of customer |

        | `createdAt` | Creation date |

        | `updatedAt` | Last modification date |

        | `lastLoginAt` | Last login date of any user of this customer |


        </details>


        ### Deprecated sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | <del>`lockStatus`</del> | Lock status of customer |


        </details>
      operationId: requestCustomers
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Include custom customer attributes.
          in: query
          name: include_attributes
          required: false
          type: boolean
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request list of customers
      tags:
        - provisioning
    post:
      consumes:
        - application/json
      description: >
        ### Description:

        Create a new customer.


        ### Precondition:

        Authentication with `X-Sds-Service-Token` required.  


        ### Postcondition:

        A new customer is created.


        ### Further Information:

        If no company name is set, first letter of the first name separated by
        dot following by last name of the first administrator is used (e.g.
        `J.Doe`).  

        Max quota has to be at least `1 MB` (= `1.048.576 B`).


        If `basic` authentication is enabled, the first administrator will get
        `basic` authentication by default.  

        To create a first administrator without `basic` authentication it
        **MUST** be disabled explicitly.  


        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]


        ### Authentication Method Options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Option Key | Option Value |

        | :--- | :--- | :--- |

        | `basic` / `sql` | `username` | Unique user identifier |

        | `active_directory` | `ad_config_id` (optional) | Active Directory
        configuration ID |

        |  | `username` | Active Directory username according to authentication
        setting `userFilter` |

        | `radius` | `username` | RADIUS username |

        | `openid` | `openid_config_id` (optional) | OpenID Connect
        configuration ID |

        |  | `username` | OpenID Connect username according to authentication
        setting `mappingClaim` |


        </details>
      operationId: createCustomer
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewCustomerRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/NewCustomerResponse'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Create customer
      tags:
        - provisioning
  '/v4/provisioning/customers/{customer_id}':
    delete:
      description: |-
        ### Description:
        Delete a customer.

        ### Precondition:
        Authentication with `X-Sds-Service-Token` required.

        ### Postcondition:
        Customer is deleted.

        ### Further Information:
        None.
      operationId: removeCustomer
      parameters:
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Remove customer
      tags:
        - provisioning
    get:
      description: |-
        ### Description:  
        Receive details of a selected customer.

        ### Precondition:
        Authentication with `X-Sds-Service-Token` required.

        ### Postcondition:
        Customer details are returned.

        ### Further Information:
        None.
      operationId: requestCustomer
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Include custom customer attributes.
          in: query
          name: include_attributes
          required: false
          type: boolean
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Get customer
      tags:
        - provisioning
    put:
      consumes:
        - application/json
      description: |-
        ### Description:  
        Change selected attributes of a customer.

        ### Precondition:
        Authentication with `X-Sds-Service-Token` required.

        ### Postcondition:
        Selected attributes of customer are updated.

        ### Further Information:
        None.
      operationId: updateCustomer
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCustomerRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UpdateCustomerResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          description: Payment Required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Update customer
      tags:
        - provisioning
  '/v4/provisioning/customers/{customer_id}/customerAttributes':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.4.0</h3>


        ### Description:  

        Retrieve a list of customer attributes.


        ### Precondition:

        Authentication with `X-Sds-Service-Token` required.  

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read all
        customers</span> required.


        ### Postcondition:

        List of attributes is returned.


        ### Further Information:


        ### Filtering:

        Filters are case insensitive.  

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `key:cn:searchString_1|value:cn:searchString_2`  

        Filter by attribute key contains `searchString_1` **AND** attribute
        value contains `searchString_2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `key` | Customer attribute key filter | `cn, eq, sw` | Attribute key
        contains / equals / starts with value. | `search String` |

        | `value` | Customer attribute value filter | `cn, eq, sw` | Attribute
        value contains / equals / starts with value. | `search String` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `key:asc|value:desc`  

        Sort by `key` ascending **AND** by `value` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `key` | Customer attribute key |

        | `value` | Customer attribute value |


        </details>
      operationId: requestCustomerAttributes
      parameters:
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AttributesResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request customer attributes
      tags:
        - provisioning
    post:
      consumes:
        - application/json
      deprecated: true
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.28.0</h3>


        ### Description:  

        Set custom customer attributes.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> required.


        ### Postcondition:

        Custom customer attributes gets set.


        ### Further Information:

        Batch function.  

        All existing customer attributes will be deleted.  


        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**.
      operationId: setCustomerAttributes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAttributes'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Set customer attributes
      tags:
        - provisioning
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.4.0</h3>


        ### Description:  

        Add or edit custom customer attributes.

        <br/><br/><span style="font-weight: bold; color: red;"> &#128679;
        **Warning: Please note that the response with HTTP status code 200 (OK)
        is deprecated and will be replaced with HTTP status code 204 (No
        content)!**</span><br/>


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> required.


        ### Postcondition:

        Custom customer attributes get added or edited.


        ### Further Information:

        Batch function.  

        If an entry exists before, it will be overwritten.  


        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**.
      operationId: updateCustomerAttributes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerAttributes'
      produces:
        - application/json
      responses:
        '200':
          description: 'OK **(DEPRECATED: WILL BE REPLACED BY 204: "No content")**'
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Add or edit customer attributes
      tags:
        - provisioning
  '/v4/provisioning/customers/{customer_id}/customerAttributes/{key}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.4.0</h3>


        ### Description:

        Delete a custom customer attribute.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> required.


        ### Postcondition:

        Custom customer attribute gets deleted.


        ### Further Information:

        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**.
      operationId: removeCustomerAttribute
      parameters:
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Key
          in: path
          name: key
          required: true
          type: string
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Remove customer attribute
      tags:
        - provisioning
  '/v4/provisioning/customers/{customer_id}/users':
    get:
      description: >-
        ### Description:  

        Receive a list of users associated with a certain customer.


        ### Precondition:

        Authentication with `X-Sds-Service-Token` required.


        ### Postcondition:

        List of customer users is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Except for `login`, `firstName` and  `lastName` - these are connected
        via logical disjunction (**OR**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `login:cn:searchString_1|firstName:cn:searchString_2|lockStatus:eq:2`  

        Filter users by login contains `searchString_1` **OR** firstName
        contains `searchString_2` **AND** those who are **NOT** locked.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `email` | Email filter | `eq`, `cn` | Email contains value. | `search
        String` |

        | `userName` | User name filter | `eq`, `cn` | UserName contains value.
        | `search String` |

        | `firstName` | User first name filter | `cn` | User first name contains
        value. | `search String` |

        | `lastName` | User last name filter | `cn` | User last name contains
        value. | `search String` |

        | `isLocked` | User lock status filter | `eq` |  | `true or false` |

        | `effectiveRoles` | Filter users with DIRECT or DIRECT **AND**
        EFFECTIVE roles<ul><li>`false`: DIRECT roles</li><li>`true`: DIRECT
        **AND** EFFECTIVE roles</li></ul>DIRECT means: e.g. user gets role
        **directly** granted from someone with _grant permission_
        right.<br>EFFECTIVE means: e.g. user gets role through **group
        membership**. | `eq` |  | `true or false`<br>default: `false` |

        | `createdAt` | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `phone` | Phone filter | `eq` | Phone equals value. | `search String`
        |

        | `isEncryptionEnabled` | Encryption status filter<ul><li>client-side
        encryption</li><li>private key possession</li></ul> | `eq` |  | `true or
        false` |

        | `hasRole` | (**`NEW`**) User role filter<br>Depends on
        **effectiveRoles**.<br>For more information about roles check **`GET
        /roles`** API | `eq` | User role equals value. |
        <ul><li>`CONFIG_MANAGER` - Manages global
        configuration</li><li>`USER_MANAGER` - Manages
        users</li><li>`GROUP_MANAGER` - Manages user
        groups</li><li>`ROOM_MANAGER` - Manages top level
        rooms</li><li>`LOG_AUDITOR` - Reads audit
        logs</li><li>`NONMEMBER_VIEWER` - Views users and groups when having
        room _"manage"_ permission</li></ul> |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`lockStatus`</del> | User lock status filter | `eq` | User lock
        status equals value. | <ul><li>`0` - Locked</li><li>`1` - Web access
        allowed</li><li>`2` - Web and mobile access allowed</li></ul> |

        | <del>`login`</del> |  User login filter | `cn` | User login contains
        value. | `search String` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `firstName:asc|lastLoginSuccessAt:desc`  

        Sort by `firstName` ascending **AND** by `lastLoginSuccessAt`
        descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `userName` | User name |

        | `email` | User email |

        | `firstName` | User first name |

        | `lastName` | User last name |

        | `isLocked` | User lock status |

        | `lastLoginSuccessAt` | Last successful login date |

        | `expireAt` | Expiration date |

        | `createdAt` | Creation date |


        </details>


        ### Deprecated sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | <del>`gender`</del> | Gender |

        | <del>`lockStatus`</del> | User lock status |

        | <del>`login`</del> | User login |


        </details>
      operationId: requestCustomerUsers
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Customer ID
          format: int64
          in: path
          name: customer_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Include custom user attributes.
          in: query
          name: include_attributes
          required: false
          type: boolean
        - description: Include roles
          in: query
          name: include_roles
          required: false
          type: boolean
        - description: Include hasManageableRooms (deprecated)
          in: query
          name: include_manageable_rooms
          required: false
          type: boolean
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request list of customer users
      tags:
        - provisioning
  /v4/provisioning/webhooks:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a list of webhooks for the tenant scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        List of webhooks is returned.


        ### Further Information:  

        Output is limited to **500** entries.  

        For more results please use filter criteria and paging (`offset` +
        `limit`).  

        `EncryptionInfo` is **NOT** provided.  

        Wildcard character is the asterisk character: **`*`**


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:cn:goo|createdAt:ge:2015-01-01`  

        Get webhooks where name contains `goo` **AND** webhook creation date is
        **>=** `2015-01-01`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | **`id`** | Webhook id filter | `eq` | Webhook id equals
        value.<br>Multiple values are allowed and will be connected via logical
        disjunction (**OR**). |`positive number`|

        | **`name`** | Webhook type name| `cn, eq` | Webhook name contains /
        equals value. | `search String` |

        | **`isEnabled`** | Webhook isEnabled filter | `eq` |  | `true or false`
        |

        | **`createdAt`** | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | **`updatedAt`** | Last modification date filter | `ge, le` | Last
        modification date is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `updatedAt:ge:2016-12-31`&#124;`updatedAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | **`expiration`** | Expiration date filter | `ge, le, eq` | Expiration
        date is greater / less equals than value.<br>Multiple operator values
        are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `expiration:ge:2016-12-31`&#124;`expiration:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | **`lastFailStatus`** | Failure status filter | `eq` | Last HTTP status
        code. Set when a webhook is auto-disabled due to repeated delivery
        failures |`positive number`|


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:desc|isEnabled:asc`  

        Sort by `name` descending and `isEnabled` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | **`id`** | Webhook id |

        | **`name`** | Webhook name |

        | **`isEnabled`** | Webhook isEnabled |

        | **`createdAt`** | Creation date |

        | **`updatedAt`** | Last modification date |

        | **`expiration`** | Expiration date |


        </details>
      operationId: requestListOfTenantWebhooks
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WebhookList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request list of tenant webhooks
      tags:
        - provisioning
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Create a new webhook for the tenant scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        Webhook is created for given event types.


        ### Further Information:

        URL must begin with the `HTTPS` scheme.

        Webhook names are limited to 150 characters.


        ### Available event types:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Scope |

        | :--- | :--- | :--- |

        | **`customer.created`** | Triggered when a new customer is created |
        Tenant Webhook |

        | **`customer.deleted`** | Triggered when a user is deleted | Tenant
        Webhook |

        | **`webhook.expiring`** | Triggered 30/20/10/1 days before a webhook
        expires |  Tenant Webhook |


        </details>
      operationId: createTenantWebhook
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateWebhookRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Create tenant webhook
      tags:
        - provisioning
  /v4/provisioning/webhooks/event_types:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a list of available event types.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        List of available event types is returned.


        ### Further Information:

        None.
      operationId: requestListOfEventTypesForTenant
      parameters:
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventTypeList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request list of event types
      tags:
        - provisioning
  '/v4/provisioning/webhooks/{webhook_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Delete a webhook for the tenant scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        Webhook is deleted.


        ### Further Information:

        None.
      operationId: removeTenantWebhook
      parameters:
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Remove tenant webhook
      tags:
        - provisioning
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a specific webhook for the tenant scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        Webhook is returned.


        ### Further Information:

        None.
      operationId: requestTenantWebhook
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request tenant webhook
      tags:
        - provisioning
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Update an existing webhook for the tenant scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        Webhook is updated.


        ### Further Information:

        URL must begin with the `HTTPS` scheme.

        Webhook names are limited to 150 characters.


        ### Available event types:


        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Scope |

        | :--- | :--- | :--- |

        | **`customer.created`** | Triggered when a new customer is created |
        Tenant Webhook |

        | **`customer.deleted`** | Triggered when a user is deleted | Tenant
        Webhook |

        | **`webhook.expiring`** | Triggered 30/20/10/1 days before a webhook
        expires |  Tenant Webhook |


        </details>
      operationId: updateTenantWebhook
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateWebhookRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Update tenant webhook
      tags:
        - provisioning
  '/v4/provisioning/webhooks/{webhook_id}/reset_lifetime':
    post:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Reset the lifetime of a webhook for the tenant scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        webhook</span> required.


        ### Postcondition:

        Lifetime of the webhook is reset.


        ### Further Information:

        None.
      operationId: resetTenantWebhookLifetime
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Service Authentication token
          in: header
          name: X-Sds-Service-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Reset tenant webhook lifetime
      tags:
        - provisioning
  '/v4/public/shares/downloads/{access_key}':
    get:
      description: |-
        ### Description:  
        Retrieve the public information of a Download Share.

        ### Precondition:
        None.

        ### Postcondition:
        Download Share information is returned.

        ### Further Information:
        None.
      operationId: requestPublicDownloadShareInfo
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PublicDownloadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request public Download Share information
      tags:
        - public
    post:
      consumes:
        - application/json
      description: |-
        ### Description:
        Generate a download URL to retrieve a shared file.

        ### Precondition:
        None.

        ### Postcondition:
        Download URL and token are generated and returned.

        ### Further Information:
        Use `downloadUrl` the download `token` is deprecated.
      operationId: generateDownloadUrlPublic
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PublicDownloadTokenGenerateRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PublicDownloadTokenGenerateResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Generate download URL
      tags:
        - public
  '/v4/public/shares/downloads/{access_key}/{token}':
    get:
      description: |-
        ### Description:  
        Download a file (or zip archive if target is a folder or room).

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Range requests are supported.  
        Range requests are illegal for zip archive download.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: downloadFileViaTokenPublic
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Download token
          in: path
          name: token
          required: true
          type: string
        - description: |-
            Range 

            e.g. `bytes=0-999`
          in: header
          name: Range
          required: false
          type: string
        - description: >-
            Always return `application/octet-stream` instead of specific
            mimetype
          in: query
          name: generic_mimetype
          required: false
          type: boolean
        - description: 'Use Content-Disposition: `inline` instead of `attachment`'
          in: query
          name: inline
          required: false
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '416':
          description: Range Not Satisfiable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Download file with token
      tags:
        - public
    head:
      description: |-
        ### Description:  
        Download a file (or zip archive if target is a folder or room).

        ### Precondition:
        Valid download token.

        ### Postcondition:
        Stream is returned.

        ### Further Information:
        Range requests are supported.  
        Range requests are illegal for zip archive download.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: downloadFileViaTokenPublic_1
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Download token
          in: path
          name: token
          required: true
          type: string
        - description: |-
            Range 

            e.g. `bytes=0-999`
          in: header
          name: Range
          required: false
          type: string
        - description: >-
            Always return `application/octet-stream` instead of specific
            mimetype
          in: query
          name: generic_mimetype
          required: false
          type: boolean
        - description: 'Use Content-Disposition: `inline` instead of `attachment`'
          in: query
          name: inline
          required: false
          type: boolean
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '416':
          description: Range Not Satisfiable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Download file with token
      tags:
        - public
  '/v4/public/shares/uploads/{access_key}':
    get:
      description: >
        ### Description:  

        Provides information about the desired Upload Share.


        ### Precondition:

        Only `userUserPublicKeyList` is returned to the users who owns one of
        the following permissions: <span style='padding: 3px; background-color:
        #F6F7F8; border: 1px solid #000; border-radius: 5px; display:
        inline;'>&#128275; manage</span>, <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; read</span>, <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128275; manage download share</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage upload
        share</span>


        ### Postcondition:

        None.


        ### Further Information:

        If no password is set, the returned information is reduced to the
        following attributes (if available):


        * `name`

        * `maxSlots`

        * `createdAt`

        * `isProtected`

        * `isEncrypted`

        * `showUploadedFiles`

        * `userUserPublicKeyList` (if parent is end-to-end encrypted)


        Only if the password is transmitted as `X-Sds-Share-Password` header,
        all values are returned.
      operationId: requestPublicUploadShareInfo
      parameters:
        - description: >-
            Upload share password. Should be base64-encoded.


            Plain X-Sds-Share-Passwords are *deprecated* and will be removed in
            the future
          in: header
          name: X-Sds-Share-Password
          type: string
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PublicUploadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request public Upload Share information
      tags:
        - public
    post:
      consumes:
        - application/json
      description: >
        ### Description:  

        Create a new upload channel.


        ### Precondition:

        None.


        ### Postcondition:

        Upload channel is created and corresponding upload URL, token & upload
        ID are returned.


        ### Further Information:

        Use `uploadUrl` the upload `token` is deprecated.  


        Please provide the size of the intended upload so that the quota can be
        checked in advanced and no data is transferred unnecessarily.


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: createShareUploadChannel
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateShareUploadChannelRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CreateShareUploadChannelResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Create new file upload channel
      tags:
        - public
  '/v4/public/shares/uploads/{access_key}/{upload_id}':
    delete:
      description: |-
        ### Description:
        Abort (chunked) upload via Upload Share.

        ### Precondition:
        Valid Upload ID.

        ### Postcondition:
        Aborts upload and invalidates upload ID / token.

        ### Further Information:
        None.
      operationId: cancelFileUploadViaShare
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Cancel file upload
      tags:
        - public
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.15.0</h3>


        ### Description:

        Request status of a S3 file upload.


        ### Precondition:

        An upload channel has been created and the user has <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; create</span>
        permissions in the parent container (room or folder).


        ### Postcondition:

        Status of S3 multipart upload request is returned.


        ### Further Information:

        None.


        ### Possible errors:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Http Status | Error Code | Description |

        | :--- | :--- | :--- |

        | `400 Bad Request` | `-80000` | Mandatory fields cannot be empty |

        | `400 Bad Request` | `-80001` | Invalid positive number |

        | `400 Bad Request` | `-80002` | Invalid number |

        | `400 Bad Request` | `-40001` | (Target) room is not encrypted |

        | `400 Bad Request` | `-40755` | Bad file name |

        | `400 Bad Request` | `-40763` | File key must be set for an upload into
        encrypted room |

        | `400 Bad Request` | `-50506` | Exceeds the number of files for this
        Upload Share |

        | `403 Forbidden` |  | Access denied |

        | `404 Not Found` | `-20501` | Upload not found |

        | `404 Not Found` | `-40000` | Container not found |

        | `404 Not Found` | `-41000` | Node not found |

        | `404 Not Found` | `-70501` | User not found |

        | `409 Conflict` | `-40010` | Container cannot be overwritten |

        | `409 Conflict` |  | File cannot be overwritten |

        | `500 Internal Server Error` |  | System Error |

        | `502 Bad Gateway` |  | S3 Error |

        | `502 Insufficient Storage` | `-50504` | Exceeds the quota for this
        Upload Share |

        | `502 Insufficient Storage` | `-40200` | Exceeds the free node quota in
        room |

        | `502 Insufficient Storage` | `-90200` | Exceeds the free customer
        quota |

        | `502 Insufficient Storage` | `-90201` | Exceeds the free customer
        physical disk space |


        </details>
      operationId: requestUploadStatusPublic
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3ShareUploadStatus'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request status of S3 file upload
      tags:
        - public
    post:
      consumes:
        - multipart/form-data
      description: >-
        ### Description:  

        Chunked upload of files via Upload Share.


        ### Precondition:

        Valid upload ID.


        ### Postcondition:

        Chunk of file is uploaded.


        ### Further Information:

        Chunked uploads (range requests) are supported.


        Following `Content-Types` are supported by this API:

        * `multipart/form-data`

        * provided `Content-Type`  


        For both file upload types set the correct `Content-Type` header and
        body.  


        ### Examples:  


        * `multipart/form-data`

        ```

        POST /api/v4/public/shares/uploads/{access_key}{upload_id} HTTP/1.1


        Header:

        ...

        Content-Type: multipart/form-data;
        boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

        ...


        Body:

        ------WebKitFormBoundary7MA4YWxkTrZu0gW

        Content-Disposition: form-data; name="file"; filename="file.txt"

        Content-Type: text/plain


        Content of file.txt

        ------WebKitFormBoundary7MA4YWxkTrZu0gW--

        ```


        * any other `Content-Type`  

        ```

        POST /api/v4/public/shares/uploads/{access_key}{upload_id} HTTP/1.1


        Header:

        ...

        Content-Type: { ... }

        ...


        Body:

        raw content

        ```
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: uploadFileAsMultipartPublic_1
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: |-
            Content-Range 

            e.g. `bytes 0-999/3980`
          in: header
          name: Content-Range
          required: false
          type: string
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - format: binary
          in: formData
          name: file
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: default response
          schema:
            $ref: '#/definitions/ChunkUploadResponse'
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ChunkUploadResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Upload file
      tags:
        - public
    put:
      consumes:
        - application/json
      description: >
        ### Description:

        Finalize (chunked) upload via Upload Share.


        ### Precondition:

        Valid upload ID.  

        Only returns users that owns one of the following permissions: <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; read</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage download
        share</span>, <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        manage upload share</span>


        ### Postcondition:

        Finalizes upload.


        ### Further Information:

        Chunked uploads (range requests) are supported.  


        Please ensure that all chunks have been transferred correctly before
        finishing the upload.  

        If file hash has been created in time a `201 Created` will be responded
        and hash will be part of response, otherwise it will be a `202 Accepted`
        without it.
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: completeFileUploadViaShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - description: Mandatory for encrypted shares
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserFileKeyList'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PublicUploadedFileData'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/PublicUploadedFileData'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Complete file upload
      tags:
        - public
  '/v4/public/shares/uploads/{access_key}/{upload_id}/s3':
    put:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.15.0</h3>


        ### Description:

        Finishes a S3 file upload and closes the corresponding upload channel.


        ### Precondition:

        Valid upload ID.  

        Only returns users that owns one of the following permissions: <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; read</span>, <span
        style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000;
        border-radius: 5px; display: inline;'>&#128275; manage download
        share</span>, <span style='padding: 3px; background-color: #F6F7F8;
        border: 1px solid #000; border-radius: 5px; display: inline;'>&#128275;
        manage upload share</span>


        ### Postcondition:

        Upload channel is closed. S3 multipart upload request is completed.


        ### Further Information:

        None.
      operationId: completeS3FileUploadViaShare
      parameters:
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompleteS3ShareUploadRequest'
      produces:
        - application/json
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Complete S3 file upload
      tags:
        - public
  '/v4/public/shares/uploads/{access_key}/{upload_id}/s3_urls':
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.15.0</h3>


        ### Description:

        Generate presigned URLs for S3 file upload.


        ### Precondition:

        Valid upload ID


        ### Postcondition:

        List of presigned URLs is returned.


        ### Further Information:

        The size for each part must be >= 5 MB, except for the last part.  

        The part number of the first part in S3 is 1 (not 0).  

        Use HTTP method `PUT` for uploading bytes via presigned URL.
      operationId: generatePresignedUrlsPublic
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Access key
          in: path
          name: access_key
          required: true
          type: string
        - description: Upload channel ID
          in: path
          name: upload_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GeneratePresignedUrlsRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PresignedUrlList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Generate presigned URLs for S3 file upload
      tags:
        - public
  /v4/public/software/third_party_dependencies:
    get:
      description: >+
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Provides information about used third-party software dependencies.


        ### Precondition:

        None.


        ### Postcondition:

        List of the third-party software dependencies used by **DRACOON Core**
        (referred to as _"Server"_) is returned.


        ### Further Information:

        None.

      operationId: requestThirdPartyDependencies
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/ThirdPartyDependenciesData'
            type: array
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request third-party software dependencies
      tags:
        - public
  /v4/public/software/version:
    get:
      description: |-
        ### Description:  
        Public software version information.

        ### Precondition:
        None.

        ### Postcondition:
        Sofware version information is returned.

        ### Further Information:
        The version of DRACOON Server consists of two components:
        * **API**
        * **Core** (referred to as _"Server"_)

        which are versioned individually.
      operationId: requestSoftwareVersion
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SoftwareVersionData'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request software version information
      tags:
        - public
  /v4/public/system/info:
    get:
      description: >-
        ### Description:  

        Provides information about system.


        ### Precondition:

        None.


        ### Postcondition:

        System information is returned.


        ### Further Information:

        Authentication methods are sorted by **priority** attribute.  

        Smaller values have higher priority.  

        Authentication method with highest priority is considered as default.


        ### System information:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `languageDefault` | Defines which language should be default. | `ISO
        639-1 code` |

        | `hideLoginInputFields` | Defines if login fields should be hidden. |
        `true or false` |

        | `s3Hosts` | List of available S3 hosts. | `String array` |

        | `s3EnforceDirectUpload` | Determines whether S3 direct upload is
        enforced or not. | `true or false` |

        | `useS3Storage` | Determines whether S3 Storage enabled and used. |
        `true or false` |


        </details>


        ### Authentication methods:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Description |

        | :--- | :--- |

        | `basic` | **Basic** authentication globally allowed.<br>This option
        **MUST** be activated to allow users to log in with their credentials
        stored in the database.<br>Formerly known as `sql`. |

        | `active_directory` | **Active Directory** authentication globally
        allowed.<br>This option **MUST** be activated to allow users to log in
        with their Active Directory credentials. |

        | `radius` | **RADIUS** authentication globally allowed.<br>This option
        **MUST** be activated to allow users to log in with their RADIUS
        username, their PIN and a token password. |

        | `openid` | **OpenID Connect** authentication globally allowed.This
        option **MUST** be activated to allow users to log in with their OpenID
        Connect identity. |

        | `hideLoginInputFields` | Determines whether input fields for login
        should be enabled | `true or false` |


        </details>
      externalDocs:
        description: Tags for Identifying Languages
        url: 'https://tools.ietf.org/html/rfc5646'
      operationId: requestSystemInfo
      parameters:
        - description: Show only enabled authentication methods
          in: query
          name: is_enabled
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemInfo'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request system information
      tags:
        - public
  /v4/public/system/info/auth/ad:
    get:
      description: |-
        ### Description:  
        Provides information about Active Directory authentication options.

        ### Precondition:
        None.

        ### Postcondition:
        Active Directory authentication options information is returned.

        ### Further Information:
        None.
      operationId: requestActiveDirectoryAuthInfo
      parameters:
        - description: Show only global available items
          in: query
          name: is_global_available
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActiveDirectoryAuthInfo'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request Active Directory authentication information
      tags:
        - public
  /v4/public/system/info/auth/openid:
    get:
      description: |-
        ### Description:  
        Provides information about OpenID Connect authentication options.

        ### Precondition:
        None.

        ### Postcondition:
        OpenID Connect authentication options information is returned.

        ### Further Information:
        None.
      operationId: requestOpenIdAuthInfo
      parameters:
        - description: Show only global available items
          in: query
          name: is_global_available
          required: false
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenIdAuthInfo'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request OpenID Connect provider authentication information
      tags:
        - public
  /v4/public/time:
    get:
      description: |-
        ### Description:  
        Retrieve the actual server time.

        ### Precondition:
        None.

        ### Postcondition:
        Server time is returned.

        ### Further Information:
        None.
      operationId: requestSystemTime
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SdsServerTime'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request system time
      tags:
        - public
  /v4/resources/user/notifications/scopes:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:

        Retrieve a list of subscription scopes.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of scopes is returned.


        ### Further Information:

        None.
      operationId: requestSubscriptionScopes
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationScopeList'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request list of subscription scopes
      tags:
        - resources
  '/v4/resources/users/{user_id}/avatar/{uuid}':
    get:
      description: |-
        ### Description:
        Get user avatar.

        ### Precondition:
        Valid user ID and avatar UUID

        ### Postcondition:
        Avatar is returned.

        ### Further Information:
        None.
      operationId: requestUserAvatar
      parameters:
        - description: UUID of the avatar
          in: path
          name: uuid
          required: true
          type: string
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Avatar'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Request user avatar
      tags:
        - resources
  /v4/roles:
    get:
      description: >-
        ### Description:  

        Retrieve a list of all roles with assigned rights.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        List of roles with assigned rights is returned.


        ### Further Information:

        None.
      operationId: requestRoles
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request all roles with assigned rights
      tags:
        - roles
  '/v4/roles/{role_id}/groups':
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Revoke granted group(s) from a role.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; grant
        permission on desired role</span> required.  

        For each role, at least one non-expiring user **MUST** remain who may
        grant the role.


        ### Postcondition:

        One or more groups will be removed from a role.


        ### Further Information:

        None.
      operationId: revokeRoleGroups
      parameters:
        - description: Role ID
          format: int32
          in: path
          name: role_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - description: Group IDs
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GroupIds'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleGroupList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revoke granted role from group(s)
      tags:
        - roles
    get:
      description: >-
        ### Description:  

        Get all groups with a specific role.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        groups</span> required.


        ### Postcondition:

        List of to the role assigned groups is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isMember:eq:false|name:cn:searchString`  

        Get all groups that are **NOT** a member of that role **AND** whose name
        contains `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `isMember` | Filter the groups which are (not) member of that role |
        `eq` |  | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default:
        `true` |

        | `name` | Group name filter | `cn` | Group name contains value. |
        `search String` |


        </details>
      operationId: requestRoleGroups
      parameters:
        - description: Role ID
          format: int32
          in: path
          name: role_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleGroupList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request groups with specific role
      tags:
        - roles
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Assign group(s) to a role.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; grant
        permission on desired role</span> required.


        ### Postcondition:

        One or more groups will be added to a role.


        ### Further Information:

        None.
      operationId: addRoleGroups
      parameters:
        - description: Role ID
          format: int32
          in: path
          name: role_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - description: Group IDs
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GroupIds'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleGroupList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Assign group(s) to the role
      tags:
        - roles
  '/v4/roles/{role_id}/users':
    delete:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Revoke granted user(s) from a role.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; grant
        permission on desired role</span> required.  

        For each role, at least one non-expiring user **MUST** remain who may
        grant the role.


        ### Postcondition:

        One or more users will be removed from a role.


        ### Further Information:

        None.
      operationId: revokeRoleUsers
      parameters:
        - description: Role ID
          format: int32
          in: path
          name: role_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - description: User IDs
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserIds'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleUserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Revoke granted role from user(s)
      tags:
        - roles
    get:
      description: >-
        ### Description:  

        Get all users with a specific role.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        List of users is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isMember:eq:false|user:cn:searchString`  

        Get all users that are **NOT** member of that role **AND** whose
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`) is like
        `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `user` | User filter | `cn` | User contains value (`firstName` **OR**
        `lastName` **OR** `email` **OR** `username`). | `search String` |

        | `isMember` | Filter the users which are (not) member of that role |
        `eq` |  | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default:
        `true` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`displayName`</del> | User display name filter (use `user`
        filter) | `cn` | User display name contains value (`firstName` **OR**
        `lastName` **OR** `email`). | `search String` |


        </details>
      operationId: requestRoleUsers
      parameters:
        - description: Role ID
          format: int32
          in: path
          name: role_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleUserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request users with specific role
      tags:
        - roles
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Assign user(s) to a role.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; grant
        permission on desired role</span> required.


        ### Postcondition:

        One or more users will be added to a role.


        ### Further Information:

        None.
      operationId: addRoleUsers
      parameters:
        - description: Role ID
          format: int32
          in: path
          name: role_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - description: User IDs
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserIds'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleUserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Assign user(s) to the role
      tags:
        - roles
  /v4/settings:
    get:
      description: >-
        ### Description:  

        Retrieve customer related settings. 


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        config</span> required.


        ### Postcondition:

        List of available settings is returned.


        ### Further Information:

        None.


        ### Configurable customer settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `homeRoomParentName` | Name of the container in which all user's home
        rooms are located.<br>`null` if `homeRoomsActive` is `false`. | `String`
        |

        | `homeRoomQuota` | Refers to the quota of each single user's home
        room.<br>`0` represents no quota.<br>`null` if `homeRoomsActive` is
        `false`. | `positive Long` |

        | `homeRoomsActive` | If set to `true`, every user with an Active
        Directory account gets a personal homeroom.<br>Once activated, this
        **CANNOT** be deactivated. | `true or false` |



        </details>
      operationId: requestSettings
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerSettingsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request customer settings
      tags:
        - settings
    put:
      consumes:
        - application/json
      description: >
        ### Description:  

        Set customer related settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> required.


        ### Postcondition:

        Provided settings are updated.


        ### Further Information:

        None.


        ### Configurable customer settings

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `homeRoomParentName` | Name of the container in which all user's home
        rooms are located.<br>`null` if `homeRoomsActive` is `false`. | `String`
        |

        | `homeRoomQuota` | Refers to the quota of each single user's home
        room.<br>`0` represents no quota.<br>`null` if `homeRoomsActive` is
        `false`. | `positive Long` |

        | `homeRoomsActive` | If set to `true`, every user with an Active
        Directory account gets a personal homeroom.<br>Once activated, this
        **CANNOT** be deactivated. | `true or false` |


        </details>


        ### Node naming convention:

        * Node (room, folder, file) names are limited to **150** characters.

        * Illegal names:  

        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5',
        'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5',
        'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`

        * Illegal characters in names:  

        `'\\', '<','>', ':', '\"', '|', '?', '*', '/', leading '-', trailing '.'
        `
      operationId: setSettings
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CustomerSettingsRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerSettingsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set customer settings
      tags:
        - settings
  /v4/settings/keypair:
    delete:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Remove the system rescue key pair.


        ### Precondition:

        * Authenticated user

        * Existence of own key pair


        ### Postcondition:

        Key pair is removed (cf. further information below).


        ### Further Information:

        Please set a new system rescue key pair first and re-encrypt file keys
        with it.  

        If no version is set, deleted key pair with lowest preference value.  

        Although, `version` **SHOULD** be set.
      operationId: removeSystemRescueKeyPair
      parameters:
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove system rescue key pair
      tags:
        - settings
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Retrieve the system rescue key pair.


        ### Precondition:

        * Authenticated user

        * Existence of own key pair


        ### Postcondition:

        Key pair is returned.


        ### Further Information:

        If more than one key pair exists the one with highest preference value
        is returned.
      operationId: requestSystemRescueKeyPair
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request system rescue key pair
      tags:
        - settings
    post:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Set the system rescue key pair and activate client-side encryption for
        according customer.


        ### Precondition:

        Role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> required.


        ### Postcondition:

        System rescue key pair is set and client-side encryption is enabled.


        ### Further Information:

        Sets the ability for this customer to encrypt rooms.  

        Once enabled on customer level, it **CANNOT** be unset.  

        On activation, a customer rescue key pair **MUST** be set.
      operationId: setSystemRescueKeyPair
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Activate client-side encryption for customer
      tags:
        - settings
  /v4/settings/keypairs:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Retrieve all system rescue key pairs to allow migrating
        system-rescue-key-encrypted file keys.


        ### Precondition:

        * Authenticated user

        * Existence of own key pair


        ### Postcondition:

        List of key pairs is returned.


        ### Further Information:

        In the case of an algorithm migration of a system rescue key, one should
        create the new key pair before deleting the old one.  

        This allows re-encrypting file keys with the new key pair, using the old
        one.  


        This API allows to retrieve both key pairs, in contrast to `GET
        /settings/keypair`, which only delivers the preferred one.
      operationId: requestAllSystemRescueKeyPairs
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserKeyPairContainer'
            type: array
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request all system rescue key pairs
      tags:
        - settings
    post:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Create system rescue key pair and preserve copy of old private key.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> required.


        ### Postcondition:

        System rescue key pair is created.  

        Copy of old private key is preserved.


        ### Further Information:

        You can submit your old private key, encrypted with your current
        password.  

        This allows migrating file keys encrypted with your old key pair to the
        new one.
      operationId: createAndPreserveKeyPair
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateKeyPairRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create system rescue key pair and preserve copy of old private key
      tags:
        - settings
  /v4/settings/notifications/channels:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Retrieve a list of configured notification channels.


        ### Precondition:

        Right _"change config"_ required.


        ### Postcondition:

        List of notification channels is returned.


        ### Further Information:

        None.
      operationId: requestNotificationChannels
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationChannelList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of notification channels
      tags:
        - settings
    put:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Toggle configured notification channels.


        ### Precondition:

        Right _"change config"_ required.


        ### Postcondition:

        Channel status is switched.


        ### Further Information:

        None.
      operationId: toggleNotificationChannels
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NotificationChannelActivationRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationChannelList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Toggle notification channels
      tags:
        - settings
  /v4/settings/webhooks:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a list of webhooks for the customer scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        List of webhooks is returned.


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:cn:goo|createdAt:ge:2015-01-01`  

        Get webhooks where name contains `goo` **AND** webhook creation date is
        **>=** `2015-01-01`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | **`id`** | Webhook id filter | `eq` | Webhook id equals
        value.<br>Multiple values are allowed and will be connected via logical
        disjunction (**OR**). |`positive number`|

        | **`name`** | Webhook type name| `cn, eq` | Webhook name contains /
        equals value. | `search String` |

        | **`isEnabled`** | Webhook isEnabled filter | `eq` |  | `true or false`
        |

        | **`createdAt`** | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | **`updatedAt`** | Last modification date filter | `ge, le` | Last
        modification date is greater / less equals than value.<br>Multiple
        operator values are allowed and will be connected via logical
        conjunction (**AND**).<br>e.g.
        `updatedAt:ge:2016-12-31`&#124;`updatedAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | **`expiration`** | Expiration date filter | `ge, le, eq` | Expiration
        date is greater / less equals than value.<br>Multiple operator values
        are allowed and will be connected via logical conjunction
        (**AND**).<br>e.g.
        `expiration:ge:2016-12-31`&#124;`expiration:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | **`lastFailStatus`** | Failure status filter | `eq` | Last HTTP status
        code. Set when a webhook is auto-disabled due to repeated delivery
        failures |`positive number`|


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:desc|isEnabled:asc`  

        Sort by `name` descending and `isEnabled` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | **`id`** | Webhook id |

        | **`name`** | Webhook name |

        | **`isEnabled`** | Webhook isEnabled |

        | **`createdAt`** | Creation date |

        | **`updatedAt`** | Last modification date |

        | **`expiration`** | Expiration date |


        </details>
      operationId: requestListOfWebhooks
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/WebhookList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of webhooks
      tags:
        - settings
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Create a new webhook for the customer scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        Webhook is created for given event types.


        ### Further Information:

        URL must begin with the `HTTPS` scheme.  

        Webhook names are limited to 150 characters.


        ### Available event types:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Scope |

        | :--- | :--- | :--- |

        | **`user.created`** | Triggered when a new user is created | Customer
        Admin Webhook |

        | **`user.deleted`** | Triggered when a user is deleted | Customer Admin
        Webhook |

        | **`user.locked`** | Triggered when a user gets locked | Customer Admin
        Webhook |

        |  |  |  |

        | **`webhook.expiring`** | Triggered 30/20/10/1 days before a webhook
        expires |  Customer Admin Webhook |

        |  |  |  |

        | **`downloadshare.created`** | Triggered when a new download share is
        created in affected room | Node Webhook |

        | **`downloadshare.deleted`** | Triggered when a download share is
        deleted in affected room | Node Webhook |

        | **`downloadshare.used`** | Triggered when a download share is utilized
        in affected room | Node Webhook |

        | **`uploadshare.created`** | Triggered when a new upload share is
        created in affected room | Node Webhook |

        | **`uploadshare.deleted`** | Triggered when a upload share is deleted
        in affected room | Node Webhook |

        | **`uploadshare.used`** | Triggered when a new file is uploaded via the
        upload share in affected room | Node Webhook |

        | **`file.created`** | Triggered when a new file is uploaded in affected
        room | Node Webhook |

        | **`folder.created`** | Triggered when a new folder is created in
        affected room | Node Webhook |

        | **`room.created`** | Triggered when a new room is created (in affected
        room) | Node Webhook |

        | **`file.deleted`** | Triggered when a file is deleted in affected room
        | Node Webhook |

        | **`folder.deleted`** | Triggered when a folder is deleted in affected
        room | Node Webhook |

        | **`room.deleted`** | Triggered when a room is deleted in affected room
        | Node Webhook |


        </details>
      operationId: createWebhook
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateWebhookRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create webhook
      tags:
        - settings
  /v4/settings/webhooks/event_types:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a list of available (for <span style='padding: 3px;
        background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px;
        display: inline;'>&#128100; Config Manager</span>) event types.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        List of available event types is returned.


        ### Further Information:

        None.
      operationId: requestListOfEventTypesForConfigManager
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventTypeList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of event types
      tags:
        - settings
  '/v4/settings/webhooks/{webhook_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Delete a webhook for the customer scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        Webhook is deleted.


        ### Further Information:

        None.
      operationId: removeWebhook
      parameters:
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove webhook
      tags:
        - settings
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Get a specific webhook for the customer scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        Webhook is returned.


        ### Further Information:

        None.
      operationId: requestWebhook
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request webhook
      tags:
        - settings
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Update an existing webhook for the customer scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        Webhook is updated.


        ### Further Information:

        URL must begin with the `HTTPS` scheme.

        Webhook names are limited to 150 characters.

        Webhook event types can not be changed from Customer Admin Webhook types
        to Node Webhook types and vice versa  


        ### Available event types:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Scope |

        | :--- | :--- | :--- |

        | **`user.created`** | Triggered when a new user is created | Customer
        Admin Webhook |

        | **`user.deleted`** | Triggered when a user is deleted | Customer Admin
        Webhook |

        | **`user.locked`** | Triggered when a user gets locked | Customer Admin
        Webhook |

        |  |  |  |

        | **`webhook.expiring`** | Triggered 30/20/10/1 days before a webhook
        expires |  Customer Admin Webhook |

        |  |  |  |

        | **`downloadshare.created`** | Triggered when a new download share is
        created in affected room | Node Webhook |

        | **`downloadshare.deleted`** | Triggered when a download share is
        deleted in affected room | Node Webhook |

        | **`downloadshare.used`** | Triggered when a download share is utilized
        in affected room | Node Webhook |

        | **`uploadshare.created`** | Triggered when a new upload share is
        created in affected room | Node Webhook |

        | **`uploadshare.deleted`** | Triggered when a upload share is deleted
        in affected room | Node Webhook |

        | **`uploadshare.used`** | Triggered when a new file is uploaded via the
        upload share in affected room | Node Webhook |

        | **`file.created`** | Triggered when a new file is uploaded in affected
        room | Node Webhook |

        | **`folder.created`** | Triggered when a new folder is created in
        affected room | Node Webhook |

        | **`room.created`** | Triggered when a new room is created (in affected
        room) | Node Webhook |

        | **`file.deleted`** | Triggered when a file is deleted in affected room
        | Node Webhook |

        | **`folder.deleted`** | Triggered when a folder is deleted in affected
        room | Node Webhook |

        | **`room.deleted`** | Triggered when a room is deleted in affected room
        | Node Webhook |


        </details>
      operationId: updateWebhook
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateWebhookRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update webhook
      tags:
        - settings
  '/v4/settings/webhooks/{webhook_id}/reset_lifetime':
    post:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.19.0</h3>


        ### Description:  

        Reset the lifetime of a webhook for the customer scope.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        Lifetime of the webhook is reset.


        ### Further Information:

        None.
      operationId: resetWebhookLifetime
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Webhook ID
          format: int64
          in: path
          name: webhook_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset webhook lifetime
      tags:
        - settings
  /v4/shares/downloads:
    delete:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.21.0</h3>


        ### Functional Description:

        Delete multiple Download Shares.


        ### Precondition:

        User with _"manage download share"_ permissions on target nodes.


        ### Postcondition:

        Download Shares are deleted.


        ### Further Information:

        Only the Download Shares are removed; the referenced files or containers
        persists.
      operationId: deleteDownloadShares
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDownloadSharesRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove Download Shares
      tags:
        - shares
    get:
      description: >-
        ### Description:  

        Retrieve a list of Download Shares.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of available Download Shares is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical (**AND**). createdBy and
        updatedBy searches several user-related attributes.


        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:cn:searchString_1|createdBy:cn:searchString_2`

        Filter by file name contains `searchString_1` **AND** creator info
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`)
        contains `searchString_2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Alias or node name filter | `cn` | Alias or node name
        contains value. | `search String` |

        | `createdAt` | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `createdBy` | Creator info filter | `cn, eq` | Creator info
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`)
        contains value. | `search String` |

        | `createdById` | Creator ID filter | `eq` | Creator ID equals value. |
        `positive Integer` |

        | `accessKey` | Share access key filter | `cn` | Share access key
        contains values. | `search String` |

        | `nodeId` | Source node ID | `eq` | Source node (room, folder, file) ID
        equals value. | `positive Integer` |

        | `updatedBy` | Modifier info filter | `cn, eq` | Modifier info
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`)
        contains value. | `search String` |

        | `updatedById` | Modifier ID filter | `eq` | Modifier ID equals value.
        | `positive Integer` |


        </details>

        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`userId`</del>  | Creator user ID | `eq` | Creator user ID equals
        value. Use `createdById` instead | `positive Integer` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:asc|expireAt:desc`  

        Sort by `name` ascending **AND** by `expireAt` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Alias or node name |

        | `notifyCreator` | Notify creator on every download |

        | `expireAt` | Expiration date |

        | `createdAt` | Creation date |

        | `createdBy` | Creator first name, last name |


        </details>


        ### Deprecated sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | <del>`classification`</del> | Classification ID:<ul><li>1 -
        public</li><li>2 - internal</li><li>3 - confidential</li><li>4 -
        strictly confidential</li></ul> |


        </details>
      operationId: requestDownloadShares
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DownloadShareList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of Download Shares
      tags:
        - shares
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Create a new Download Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Share is created.


        ### Further Information:


        If the target node is a room: subordinary rooms are excluded from a
        Download Share.


        * `name` is limited to **150** characters.

        * `notes` are limited to **255** characters.

        * `password` is limited to **1024** characters.


        Use `POST /shares/downloads/{share_id}/email` API for sending emails.  


        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]
      operationId: createDownloadShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateDownloadShareRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/DownloadShare'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new Download Share
      tags:
        - shares
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:

        Update a list of existing Download Shares.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Shares are successfully updated.


        ### Further Information:

        Maximum number of shares is 200
      operationId: updateDownloadShares
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDownloadSharesBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: No Content
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a list of Download Shares
      tags:
        - shares
  '/v4/shares/downloads/{share_id}':
    delete:
      description: >-
        ### Description:

        Delete a Download Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Share is deleted.


        ### Further Information:

        Only the Download Share is removed; the referenced file or container
        persists.
      operationId: removeDownloadShare
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove Download Share
      tags:
        - shares
    get:
      description: >-
        ### Description:  

        Retrieve detailed information about one Download Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Share is returned


        ### Further Information:

        None.
      operationId: requestDownloadShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DownloadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request Download Share
      tags:
        - shares
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Update an existing Download Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Share is successfully updated.


        ### Further Information:

        * `name` is limited to **150** characters.

        * `notes` are limited to **255** characters.

        * `password` is limited to **1024** characters.


        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]
      operationId: updateDownloadShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDownloadShareRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DownloadShare'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Download Share
      tags:
        - shares
  '/v4/shares/downloads/{share_id}/email':
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Send an email to specific recipients for existing Download Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Share link successfully sent.


        ### Further Information:

        None.
      operationId: sendDownloadShareLinkViaEmail
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DownloadShareLinkEmail'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Send an existing Download Share link via email
      tags:
        - shares
  '/v4/shares/downloads/{share_id}/qr':
    get:
      description: >-
        ### Description:  

        Retrieve detailed information about one Download Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        download share</span> permissions on target node.


        ### Postcondition:

        Download Share is returned


        ### Further Information:

        None.
      operationId: requestDownloadShareQr
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DownloadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request Download Share via QR Code
      tags:
        - shares
  /v4/shares/uploads:
    delete:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.21.0</h3>


        ### Functional Description:

        Delete multiple Upload Shares (aka Upload Accounts).


        ### Precondition:

        User has _"manage upload share"_ permissions on target containers.


        ### Postcondition:

        Upload Shares are deleted.


        ### Further Information:

        Only the Upload Shares are removed; already uploaded files and the
        target container persist.
      operationId: deleteUploadShares
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUploadSharesRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove Upload Shares
      tags:
        - shares
    get:
      description: >-
        ### Description:  

        Retrieve a list of Upload Shares (aka File Requests).


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of available Upload Shares is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical (**AND**). createdBy and
        updatedBy searches several user-related attributes.

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:cn:searchString_1|createdBy:cn:searchString_2`  

        Filter by alias name contains `searchString_1` **AND** creator info
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`)
        contains `searchString_2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Alias name filter | `cn` | Alias name contains value. |
        `search String` |

        | `createdAt` | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `createdBy` | Creator info filter | `cn, eq` | Creator info
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`)
        contains value. | `search String` |

        | `createdById` | Creator ID filter | `eq` | Creator ID equals value. |
        `positive Integer` |

        | `accessKey` | Share access key filter | `cn` | Share access key
        contains values. | `search String` |

        | `userId` | Creator user ID | `eq` | Creator user ID equals value. |
        `positive Integer` |

        | `targetId` | Target node ID | `eq` | Target node (room, folder) ID
        equals value. | `positive Integer` |

        | `updatedBy` | Modifier info filter | `cn, eq` | Modifier info
        (`firstName` **OR** `lastName` **OR** `email` **OR** `username`)
        contains value. | `search String` |

        | `updatedById` | Modifier ID filter | `eq` | Modifier ID equals value.
        | `positive Integer` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`targetId`</del> | Target node ID | `cn` | Target node (room,
        folder) ID equals value. | `positive Integer` |

        | <del>`userId` </del>| Creator user ID | `eq` | Creator user ID equals
        value. Use `createdById` instead. | `positive Integer` |


        </details>


        ---


        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `name:asc|expireAt:desc`  

        Sort by `name` ascending **AND** by `expireAt` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `name` | Alias name |

        | `notifyCreator` | Notify creator on every upload |

        | `expireAt` | Expiration date |

        | `createdAt` | Creation date |

        | `createdBy` | Creator first name, last name |


        </details>
      operationId: requestUploadShares
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadShareList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of Upload Shares
      tags:
        - shares
    post:
      consumes:
        - application/json
      description: >
        ### Description:

        Create a new Upload Share (aka File Request).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Share is created.


        ### Further Information:


        * `name` is limited to **150** characters.

        * `notes` are limited to **255** characters.

        * `password` is limited to **1024** characters.


        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]  


        Use `POST /shares/uploads/{share_id}/email` API for sending emails.
      operationId: createUploadShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUploadShareRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UploadShare'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new Upload Share
      tags:
        - shares
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:

        Update a list of existing Upload Shares (aka File Request).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Shares successfully updated.


        ### Further Information:

        Maximum number of shares is 200
      operationId: updateUploadShares
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUploadSharesBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update List of Upload Shares
      tags:
        - shares
  '/v4/shares/uploads/{share_id}':
    delete:
      description: >-
        ### Description:

        Delete an Upload Share (aka File Request).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Share is deleted.


        ### Further Information:

        Only the Upload Share is removed; already uploaded files and the target
        container persist.
      operationId: removeUploadShare
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove Upload Share
      tags:
        - shares
    get:
      description: >-
        ### Description:  

        Retrieve detailed information about one Upload Share (aka File Request).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Share is returned.


        ### Further Information:

        None.
      operationId: requestUploadShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request Upload Share
      tags:
        - shares
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Update existing Upload Share (aka File Request).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Share successfully updated.


        ### Further Information:


        * `name` is limited to **150** characters.

        * `notes` are limited to **255** characters.

        * `password` is limited to **1024** characters.


        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]
      operationId: updateUploadShare
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUploadShareRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadShare'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Upload Share
      tags:
        - shares
  '/v4/shares/uploads/{share_id}/email':
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Send an email to specific recipients for existing Upload Share.


        ### Precondition:

        User with <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Share link successfully sent.


        ### Further Information:

        None.
      operationId: sendUploadShareLinkViaEmail
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UploadShareLinkEmail'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Send an existing Upload Share link via email
      tags:
        - shares
  '/v4/shares/uploads/{share_id}/qr':
    get:
      description: >-
        ### Description:  

        Retrieve detailed information about one Upload Share (aka File Request).


        ### Precondition:

        User has <span style='padding: 3px; background-color: #F6F7F8; border:
        1px solid #000; border-radius: 5px; display: inline;'>&#128275; manage
        upload share</span> permissions on target container.


        ### Postcondition:

        Upload Share is returned.


        ### Further Information:

        None.
      operationId: requestUploadShareQr
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UploadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request Upload Share via QR Code
      tags:
        - shares
  /v4/syslog/audits/nodes:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Description: 

        Retrieve a list of all nodes of type room, and the room assignment users
        with permissions.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read audit
        log</span> required.


        ### Postcondition:

        List of rooms and their assigned users is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Except for `userName`, `userFirstName` and  `userLastName` - these are
        connected via logical disjunction (**OR**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `userName:cn:searchString_1|userFirstName:cn:searchString_2|nodeId:eq:2`  

        Filter by user login containing `searchString_1` **OR** first name
        containing `searchString_2` **AND** node ID equals `2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `nodeId` | Node ID filter | `eq` | Node ID equals value. | `positive
        Integer` |

        | `nodeName` | Node name filter | `cn, eq` | Node name contains / equals
        value. | `search String` |

        | `nodeParentId` | Node parent ID filter | `eq` | Parent ID equals
        value. | `positive Integer`<br>Parent ID `0` is the root node. |

        | `userId` | User ID filter | `eq` | User ID equals value. | `positive
        Integer` |

        | `userName` | Username (login) filter | `cn, eq` | Username contains /
        equals value. | `search String` |

        | `userFirstName` | User first name filter | `cn, eq` | User first name
        contains / equals value. | `search String` |

        | `userLastName` | User last name filter | `cn, eq` | User last name
        contains / equals value. | `search String` |

        | `permissionsManage` | Filter the users that do (not) have `manage`
        permissions in this room | `eq` |  | `true or false` |

        | `nodeIsEncrypted` | Encrypted node filter | `eq` |  | `true or false`
        |

        | `nodeHasActivitiesLog` | Activities log filter | `eq` |  | `true or
        false` |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`nodeHasRecycleBin`</del> | Recycle bin filter<br>**Filter has no
        effect!** | `eq` |  | `true or false` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `nodeName:asc`  

        Sort by `nodeName` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `nodeId` | Node ID |

        | `nodeName` | Node name |

        | `nodeParentId` | Node parent ID |

        | `nodeSize` | Node size |

        | `nodeQuota` | Node quota |


        </details>
      operationId: requestAuditNodeUserDataSyslog
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/AuditNodeResponse'
            type: array
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request nodes assigned users with permissions
      tags:
        - syslog
  /v4/syslog/events:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Description: 

        Retrieve eventlog (audit log) events.


        ### Precondition:

        Role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Log
        Auditor</span> required.


        ### Postcondition:

        List of audit log events is returned.


        ### Further Information:

        Output is limited to **500** entries.  

        For more results please use filter criteria and paging (`offset` +
        `limit`). 


        Allowed `Accept-Header`:

        * `Accept: application/json`

        * `Accept: text/csv`  


        ---


        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `time:desc`  

        Sort by `time` descending (default sort option).


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `time` | Event timestamp |


        </details>
      operationId: requestSyslogEvents
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: |-
            Filter events from given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_start
          required: false
          type: string
        - description: |-
            Filter events until given date 

            e.g. `2015-12-31T23:59:00`
          in: query
          name: date_end
          required: false
          type: string
        - description: |-
            Operation ID 

            cf. `GET /eventlog/operations`
          format: int32
          in: query
          name: type
          required: false
          type: integer
        - description: User ID
          format: int64
          in: query
          name: user_id
          required: false
          type: integer
        - description: |-
            Operation status:

            * `0` - Success

            * `2` - Error
          enum:
            - '0'
            - '2'
          in: query
          name: status
          required: false
        - description: User client
          in: query
          name: user_client
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyslogEventList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request system events
      tags:
        - syslog
  /v4/syslog/operations:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.3.0</h3>


        ### Description: 

        Retrieve eventlog (audit log) operation IDs and the associated log
        operation description.


        ### Precondition:

        Role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Log
        Auditor</span> required.


        ### Postcondition:

        List of available log operations is returned.


        ### Further Information:

        None.
      operationId: requestLogOperationsSyslog
      parameters:
        - description: Show only deprecated operations
          in: query
          name: is_deprecated
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LogOperationList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request allowed log operations
      tags:
        - syslog
  /v4/system/config/actions/test/ad:
    post:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Test Active Directory configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Active Directory configuration is returned if successful.


        ### Further Information:

        DRACOON tries to establish a connection with the provided information.
      operationId: testAdConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TestActiveDirectoryConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TestActiveDirectoryConfigResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Test Active Directory configuration
      tags:
        - system-auth-config
  /v4/system/config/actions/test/radius:
    post:
      description: >-
        ### Description:  

        Test RADIUS configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        RADIUS configuration is returned if successful.


        ### Further Information:

        DRACOON tries to establish a connection with the provided information.
      operationId: testRadiusConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Test RADIUS server availability
      tags:
        - system-auth-config
  /v4/system/config/auth/ads:
    get:
      description: >-
        ### Description:  

        Retrieve a list of configured Active Directories.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        List of Active Directory configurations is returned.


        ### Further Information:

        None.
      operationId: requestAdConfigs
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActiveDirectoryConfigList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of Active Directory configurations
      tags:
        - system-auth-config
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Create a new Active Directory configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        New Active Directory configuration created.


        ### Further Information:

        None.
      operationId: createAdConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateActiveDirectoryConfigRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ActiveDirectoryConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Active Directory configuration
      tags:
        - system-auth-config
  '/v4/system/config/auth/ads/{ad_id}':
    delete:
      description: >-
        ### Description:

        Delete an existing Active Directory configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Active Directory configuration is removed.


        ### Further Information:

        None.
      operationId: removeAdConfig
      parameters:
        - description: Active Directory ID
          format: int32
          in: path
          name: ad_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove Active Directory configuration
      tags:
        - system-auth-config
    get:
      description: >-
        ### Description:  

        Retrieve the configuration of an Active Directory.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Active Directory configuration is returned.


        ### Further Information:

        None.
      operationId: requestAdConfig
      parameters:
        - description: Active Directory ID
          format: int32
          in: path
          name: ad_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActiveDirectoryConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request Active Directory configuration
      tags:
        - system-auth-config
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Update an existing Active Directory configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Active Directory configuration updated.


        ### Further Information:

        None.
      operationId: updateAdConfig
      parameters:
        - description: Active Directory ID
          format: int32
          in: path
          name: ad_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateActiveDirectoryConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ActiveDirectoryConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update Active Directory configuration
      tags:
        - system-auth-config
  /v4/system/config/auth/openid/idps:
    get:
      description: >-
        ### Description:  

        Retrieve a list of configured OpenID Connect IDPs.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        List of OpenID Connect IDP configurations is returned.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: requestOpenIdIdpConfigs
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OpenIdIdpConfig'
            type: array
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of OpenID Connect IDP configurations
      tags:
        - system-auth-config
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Create new OpenID Connect IDP configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        New OpenID Connect IDP configuration is created.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: createOpenIdIdpConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateOpenIdIdpConfigRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OpenIdIdpConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create OpenID Connect IDP configuration
      tags:
        - system-auth-config
  '/v4/system/config/auth/openid/idps/{idp_id}':
    delete:
      description: >-
        ### Description:

        Delete an existing OpenID Connect IDP configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        OpenID Connect IDP configuration is removed.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: removeOpenIdIdpConfig
      parameters:
        - description: OpenID Connect IDP configuration ID
          format: int32
          in: path
          name: idp_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove OpenID Connect IDP configuration
      tags:
        - system-auth-config
    get:
      description: >-
        ### Description:  

        Retrieve an OpenID Connect IDP configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        OpenID Connect IDP configuration is returned.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: requestOpenIdIdpConfig
      parameters:
        - description: OpenID Connect IDP configuration ID
          format: int32
          in: path
          name: idp_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenIdIdpConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request OpenID Connect IDP configuration
      tags:
        - system-auth-config
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Update an existing OpenID Connect IDP configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        OpenID Connect IDP configuration is updated.


        ### Further Information:

        None.
      externalDocs:
        description: OpenID Specifications
        url: 'http://openid.net/developers/specs'
      operationId: updateOpenIdIdpConfig
      parameters:
        - description: OpenID Connect IDP configuration ID
          format: int32
          in: path
          name: idp_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOpenIdIdpConfigRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenIdIdpConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update OpenID Connect IDP configuration
      tags:
        - system-auth-config
  /v4/system/config/auth/radius:
    delete:
      description: >-
        ### Description:  

        Delete existing RADIUS configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        RADIUS configuration is deleted.


        ### Further Information:

        None.
      operationId: removeRadiusConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove RADIUS configuration
      tags:
        - system-auth-config
    get:
      description: >-
        ### Description:  

        Retrieve a RADIUS configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        RADIUS configuration is returned.


        ### Further Information:

        None.
      operationId: requestRadiusConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RadiusConfig'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request RADIUS configuration
      tags:
        - system-auth-config
    post:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Create new RADIUS configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        New RADIUS configuration is created.


        ### Further Information:

        None.
      operationId: createRadiusConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RadiusConfigCreateRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/RadiusConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create RADIUS configuration
      tags:
        - system-auth-config
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Update existing RADIUS configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        RADIUS configuration is updated.


        ### Further Information:

        None.
      operationId: updateRadiusConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RadiusConfigUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RadiusConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update RADIUS configuration
      tags:
        - system-auth-config
  /v4/system/config/oauth/clients:
    get:
      description: >-
        ### Description:  

        Retrieve a list of configured OAuth clients.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        List of OAuth clients is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isStandard:eq:true`  

        Get standard OAuth clients.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `isStandard` | Standard client filter | `eq` |  | `true or false` |

        | `isExternal` | External client filter | `eq` |  | `true or false` |

        | `isEnabled` | Enabled/disabled clients filter | `eq` |  | `true or
        false` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `clientName:desc|isStandard:asc`  

        Sort by `clientName` descending **AND** `isStandard` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `clientName` | Client name |

        | `isStandard` | Is a standard client |

        | `isExternal` | Is a external client |

        | `isEnabled` | Is a enabled client |


        </details>
      operationId: requestOAuthClients
      parameters:
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OAuthClient'
            type: array
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of OAuth clients
      tags:
        - system-auth-config
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Create a new OAuth client.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        New OAuth client created.


        ### Further Information:  

        Client secret **MUST** have:  

        * at least 12 characters, at most 32 characters  

        * only lower case characters, upper case characters and digits  

        * at least 1 lower case character, 1 upper case character and 1 digit  


        The client secret is optional and will be generated if it is left
        empty.  


        Valid grant types are:  

        * `authorization_code`  

        * `implicit`  

        * `password`  

        * `client_credentials`  

        * `refresh_token`  


        Grant type `client_credentials` is currently **NOT** permitted!


        Allowed characters for client ID are: `[a-zA-Z0-9_-]`


        If grant types `authorization_code` or `implicit` are used, a

        redirect URI **MUST** be provided!


        Default access token validity: **8 hours**  

        Default refresh token validity: **30 days**

        Default approval validity: **½ year**
      operationId: createOAuthClient
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateOAuthClientRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OAuthClient'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create OAuth client
      tags:
        - system-auth-config
  '/v4/system/config/oauth/clients/{client_id}':
    delete:
      description: >-
        ### Description:

        Delete an existing OAuth client.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        OAuth client is removed.


        ### Further Information:

        None.
      operationId: removeOAuthClient
      parameters:
        - description: OAuth client ID
          in: path
          name: client_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove OAuth client
      tags:
        - system-auth-config
    get:
      description: >-
        ### Description:  

        Retrieve the configuration of an OAuth client.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        OAuth client is returned.


        ### Further Information:

        None.
      operationId: requestOAuthClient
      parameters:
        - description: OAuth client ID
          in: path
          name: client_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OAuthClient'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request OAuth client
      tags:
        - system-auth-config
    put:
      consumes:
        - application/json
      description: >
        ### Description:  

        Update an existing OAuth client.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        OAuth client updated.


        ### Further Information:  

        Client secret **MUST** have:  

        * at least 12 characters, at most 32 characters  

        * only lower case characters, upper case characters and digits  

        * at least 1 lower case character, 1 upper case character and 1 digit  


        The client secret is optional and will be generated if it is left
        empty.  


        Valid grant types are:  

        * `authorization_code`  

        * `implicit`  

        * `password`  

        * `client_credentials`  

        * `refresh_token`  


        Grant type `client_credentials` is currently **NOT** permitted!


        If grant types `authorization_code` or `implicit` are used, a

        redirect URI **MUST** be provided!
      operationId: updateOAuthClient
      parameters:
        - description: OAuth client ID
          in: path
          name: client_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOAuthClientRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OAuthClient'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update OAuth client
      tags:
        - system-auth-config
  /v4/system/config/policies/passwords:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.14.0</h3>


        ### Description:  

        Retrieve a list of configured password policies for all password
        types:  

        * `login`

        * `shares`

        * `encryption`


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        List of configured password policies is returned.


        ### Further Information:

        None.


        ### Available password policies:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Value | Password Type |

        | :--- | :--- | :--- | :--- |

        | `mustContainCharacters` | Characters which a password must
        contain:<br><ul><li>`alpha` - at least one alphabetical character
        (`uppercase` **OR** `lowercase`)<pre>a b c d e f g h i j k l m n o p q r
        s t u v w x y z<br>A B C D E F G H I J K L M N O P Q R S T U V W X Y
        Z</pre></li><li>`uppercase` - at least one uppercase character<pre>A B C
        D E F G H I J K L M N O P Q R S T U V W X Y Z</pre></li><li>`lowercase`
        - at least one lowercase character<pre>a b c d e f g h i j k l m n o p q
        r s t u v w x y z</pre></li><li>`numeric` - at least one numeric
        character<pre>0 1 2 3 4 5 6 7 8 9</pre></li><li>`special` - at least one
        special character (letters and digits excluded)<pre>! " # $ % ( ) * + ,
        - . / : ; = ? @ [ \ ] ^ _ { &#124; } ~</pre></li><li>`none` - none of
        the above</li></ul> |
        <ul><li>`alpha`</li><li>`uppercase`</li><li>`lowercase`</li><li>`numeric`</li><li>`special`</li><li>`none`</li></ul>
        | <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfCharacteristicsToEnforce` | Number of characteristics to
        enforce.<br>e.g. from `["uppercase", "lowercase", "numeric",
        "special"]`<br>all 4 character sets can be enforced; but also only 2 of
        them | `Integer between 0 and 4` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `minLength` | Minimum number of characters a password must contain. |
        `Integer between 1 and 1024` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectDictionaryWords` | Determines whether a password must **NOT**
        contain word(s) from a dictionary.<br>In `core-service.properties` a
        path to directory with dictionary files (`*.txt`) can be defined<br>cf.
        `policies.passwords.dictionary.directory`.<br><br>If this rule gets
        enabled `policies.passwords.dictionary.directory` must be defined and
        contain dictionary files.<br>Otherwise, the rule will not have any
        effect on password validation process. | `true or false` |
        <ul><li>`login`</li><li>`shares`</li></ul> |

        | `rejectUserInfo` | Determines whether a password must **NOT** contain
        user info.<br>Affects user's **first name**, **last name**, **email**
        and **user name**. | `true or false` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectKeyboardPatterns` | Determines whether a password must **NOT**
        contain keyboard patterns.<br>e.g. `qwertz`, `asdf` (min. 4 character
        pattern) | `true or false` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfArchivedPasswords` | Number of passwords to archive.<br>Value
        `0` means that password history is disabled. | `Integer between 0 and
        10` | <ul><li>`login`</li></ul> |

        | `passwordExpiration.enabled` | Determines whether password expiration
        is enabled. | `true or false` | <ul><li>`login`</li></ul> |

        | `maxPasswordAge` | Maximum allowed password age (in **days**) |
        `positive Integer` | <ul><li>`login`</li></ul> |

        | `userLockout.enabled` | Determines whether user lockout is enabled. |
        `true or false` | <ul><li>`login`</li></ul> |

        | `maxNumberOfLoginFailures` | Maximum allowed number of failed login
        attempts. | `positive Integer` | <ul><li>`login`</li></ul> |

        | `lockoutPeriod` | Amount of **minutes** a user has to wait to make
        another login attempt<br>after `maxNumberOfLoginFailures` has been
        exceeded. | `positive Integer` | <ul><li>`login`</li></ul> |


        </details>
      operationId: requestPasswordPoliciesConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPoliciesConfig'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request password policies
      tags:
        - system-policies-config
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.14.0</h3>


        ### Description:  

        Change current password policies for any password types:  

        * `login`

        * `shares`

        * `encryption`


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Password policies get changed.


        ### Further Information:

        None.


        ### Available password policies:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Value | Recommended Value | Password Type |

        | :--- | :--- | :--- | :--- | :--- |

        | `mustContainCharacters` | Characters which a password must
        contain:<br><ul><li>`alpha` - at least one alphabetical character
        (`uppercase` **OR** `lowercase`)<pre>a b c d e f g h i j k l m n o p q r
        s t u v w x y z<br>A B C D E F G H I J K L M N O P Q R S T U V W X Y
        Z</pre></li><li>`uppercase` - at least one uppercase character<pre>A B C
        D E F G H I J K L M N O P Q R S T U V W X Y Z</pre></li><li>`lowercase`
        - at least one lowercase character<pre>a b c d e f g h i j k l m n o p q
        r s t u v w x y z</pre></li><li>`numeric` - at least one numeric
        character<pre>0 1 2 3 4 5 6 7 8 9</pre></li><li>`special` - at least one
        special character (letters and digits excluded)<pre>! " # $ % ( ) * + ,
        - . / : ; = ? @ [ \ ] ^ _ { &#124; } ~</pre></li><li>`none` - none of
        the above</li><li>`all` - combination of `uppercase`, `lowercase`,
        `numeric` and `special`</li></ul> |
        <ul><li>`alpha`</li><li>`uppercase`</li><li>`lowercase`</li><li>`numeric`</li><li>`special`</li><li>`none`</li><li>`all`</li></ul>
        | <ul><li>`uppercase`</li><li>`lowercase`</li><li>`numeric`</li></ul>  |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfCharacteristicsToEnforce` | Number of characteristics to
        enforce.<br>e.g. from `["uppercase", "lowercase", "numeric",
        "special"]`<br>all 4 character sets can be enforced; but also only 2 of
        them | `Integer between 0 and 4`<br><br>default:<ul><li>`none` -
        `0`</li><li>`all` - `4`</li><li>otherwise - amount of distinct
        values<br>cf. `mustContainCharacters` matrix</li></ul> | `3` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `minLength` | Minimum number of characters a password must contain. |
        `Integer between 1 and 1024` | <ul><li>`login`: `12`</li><li>`shares`:
        `12`</li><li>`encryption`: `14`</li></ul> |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectDictionaryWords` | Determines whether a password must **NOT**
        contain word(s) from a dictionary.<br>In `core-service.properties` a
        path to directory with dictionary files (`*.txt`) can be defined<br>cf.
        `policies.passwords.dictionary.directory`.<br><br>If this rule gets
        enabled `policies.passwords.dictionary.directory` must be defined and
        contain dictionary files.<br>Otherwise, the rule will not have any
        effect on password validation process. | `true or false` | `true` |
        <ul><li>`login`</li><li>`shares`</li></ul> |

        | `rejectUserInfo` | Determines whether a password must **NOT** contain
        user info.<br>Affects user's **first name**, **last name**, **email**
        and **user name**. | `true or false` | `true` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectKeyboardPatterns` | Determines whether a password must **NOT**
        contain keyboard patterns.<br>e.g. `qwertz`, `asdf` (min. 4 character
        pattern) | `true or false` | `true` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfArchivedPasswords` | Number of passwords to archive. |
        `Integer between 0 and 10`<br>Set `0` to disable password history. | `3`
        | <ul><li>`login`</li></ul> |

        | `passwordExpiration.enabled` | Determines whether password expiration
        is enabled.<br>Password expiration policy can only be enabled in context
        with `enforceLoginPasswordChange`. | `true or false` | `false` |
        <ul><li>`login`</li></ul> |

        | `maxPasswordAge` | Maximum allowed password age (in **days**) |
        `positive Integer` |  | <ul><li>`login`</li></ul> |

        | `userLockout.enabled` | Determines whether user lockout is enabled. |
        `true or false` | `true` | <ul><li>`login`</li></ul> |

        | `maxNumberOfLoginFailures` | Maximum allowed number of failed login
        attempts. | `positive Integer` | `5` | <ul><li>`login`</li></ul> |

        | `lockoutPeriod` | Amount of **minutes** a user has to wait to make
        another login attempt<br>after `maxNumberOfLoginFailures` has been
        exceeded. | `positive Integer` | `10` | <ul><li>`login`</li></ul> |


        </details>


        ### Deprecated password policies:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Value | Recommended Value | Password Type |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`enforceLoginPasswordChange`</del> | Determines whether a login
        password change should be enforced for all users.<br>Only takes effect,
        if login password policies get stricter.<br>Use `POST
        /system/config/policies/passwords/enforce_change` API to enforce a login
        password change. | `true or false`<br>default: `false` |  |
        <ul><li>`login`</li></ul> |


        </details>


        ### `mustContainCharacters` matrix:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        |  | `alpha` | `uppercase` | `lowercase` | `numeric` | `special` | `all`
        | `none` |

        | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |

        | `alpha` | `alpha` | `uppercase` | `lowercase` | `alpha`<br>`numeric` |
        `alpha`<br>`special` | `all` | `none` |

        | `uppercase` | `uppercase` | `uppercase` | `uppercase`<br>`lowercase` |
        `uppercase`<br>`numeric` | `uppercase`<br>`special` | `all` | `none` |

        | `lowercase` | `lowercase` | `uppercase`<br>`lowercase` | `lowercase` |
        `lowercase`<br>`numeric` | `lowercase`<br>`special` | `all` | `none` |

        | `numeric` | `alpha`<br>`numeric` | `uppercase`<br>`numeric` |
        `lowercase`<br>`numeric` | `numeric` | `numeric`<br>`special` | `all` |
        `none` |

        | `special` | `alpha`<br>`special` | `uppercase`<br>`special` |
        `lowercase`<br>`special` | `numeric`<br>`special` | `special` | `all` |
        `none` |

        | `all` | `all` | `all` | `all` | `all` | `all` | `all` | `none` |

        | `none` | `none` | `none` |  `none` | `none` | `none` | `none` | `none`
        |


        </details>
      operationId: changePasswordPoliciesConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePasswordPoliciesConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPoliciesConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Change password policies
      tags:
        - system-policies-config
  /v4/system/config/policies/passwords/enforce_change:
    post:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Enforce login password change for all users.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Login password change is enforced.

        Every user has to change their login password at next login.


        ### Further Information:

        None.
      operationId: enforceLoginPasswordChange
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Enforce login password change for all users
      tags:
        - system-policies-config
  '/v4/system/config/policies/passwords/{password_type}':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.14.0</h3>


        ### Description:  

        Retrieve a list of configured password policies for a certain password
        type:  

        * `login`

        * `shares`

        * `encryption`


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        List of configured password policies is returned.


        ### Further Information:

        None.


        ### Available password policies:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Name | Description | Value | Password Type |

        | :--- | :--- | :--- | :--- |

        | `mustContainCharacters` | Characters which a password must
        contain:<br><ul><li>`alpha` - at least one alphabetical character
        (`uppercase` **OR** `lowercase`)<pre>a b c d e f g h i j k l m n o p q r
        s t u v w x y z<br>A B C D E F G H I J K L M N O P Q R S T U V W X Y
        Z</pre></li><li>`uppercase` - at least one uppercase character<pre>A B C
        D E F G H I J K L M N O P Q R S T U V W X Y Z</pre></li><li>`lowercase`
        - at least one lowercase character<pre>a b c d e f g h i j k l m n o p q
        r s t u v w x y z</pre></li><li>`numeric` - at least one numeric
        character<pre>0 1 2 3 4 5 6 7 8 9</pre></li><li>`special` - at least one
        special character (letters and digits excluded)<pre>! " # $ % ( ) * + ,
        - . / : ; = ? @ [ \ ] ^ _ { &#124; } ~</pre></li><li>`none` - none of
        the above</li></ul> |
        <ul><li>`alpha`</li><li>`uppercase`</li><li>`lowercase`</li><li>`numeric`</li><li>`special`</li><li>`none`</li></ul>
        | <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfCharacteristicsToEnforce` | Number of characteristics to
        enforce.<br>e.g. from `["uppercase", "lowercase", "numeric",
        "special"]`<br>all 4 character sets can be enforced; but also only 2 of
        them | `Integer between 0 and 4` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `minLength` | Minimum number of characters a password must contain. |
        `Integer between 1 and 1024` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectDictionaryWords` | Determines whether a password must **NOT**
        contain word(s) from a dictionary.<br>In `core-service.properties` a
        path to directory with dictionary files (`*.txt`) can be defined<br>cf.
        `policies.passwords.dictionary.directory`.<br><br>If this rule gets
        enabled `policies.passwords.dictionary.directory` must be defined and
        contain dictionary files.<br>Otherwise, the rule will not have any
        effect on password validation process. | `true or false` |
        <ul><li>`login`</li><li>`shares`</li></ul> |

        | `rejectUserInfo` | Determines whether a password must **NOT** contain
        user info.<br>Affects user's **first name**, **last name**, **email**
        and **user name**. | `true or false` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `rejectKeyboardPatterns` | Determines whether a password must **NOT**
        contain keyboard patterns.<br>e.g. `qwertz`, `asdf` (min. 4 character
        pattern) | `true or false` |
        <ul><li>`login`</li><li>`shares`</li><li>`encryption`</li></ul> |

        | `numberOfArchivedPasswords` | Number of passwords to archive.<br>Value
        `0` means that password history is disabled. | `Integer between 0 and
        10` | <ul><li>`login`</li></ul> |

        | `passwordExpiration.enabled` | Determines whether password expiration
        is enabled. | `true or false` | <ul><li>`login`</li></ul> |

        | `maxPasswordAge` | Maximum allowed password age (in **days**) |
        `positive Integer` | <ul><li>`login`</li></ul> |

        | `userLockout.enabled` | Determines whether user lockout is enabled. |
        `true or false` | <ul><li>`login`</li></ul> |

        | `maxNumberOfLoginFailures` | Maximum allowed number of failed login
        attempts. | `positive Integer` | <ul><li>`login`</li></ul> |

        | `lockoutPeriod` | Amount of **minutes** a user has to wait to make
        another login attempt<br>after `maxNumberOfLoginFailures` has been
        exceeded. | `positive Integer` | <ul><li>`login`</li></ul> |


        </details>
      operationId: requestPasswordPoliciesForPasswordType
      parameters:
        - description: Password type
          enum:
            - login
            - encryption
            - shares
          in: path
          name: password_type
          required: true
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PasswordPoliciesConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request password policies for a certain password type
      tags:
        - system-policies-config
  /v4/system/config/settings/auth:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON authentication configuration entry point.  


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Returns a list of configurable authentication methods.


        ### Further Information:

        Authentication methods are sorted by priority attribute.  

        Smaller values have higher priority.  

        Authentication method with highest priority is considered as default.  

        Priority **MUST** be a positive value.


        ### Configurable authentication settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Description |

        | :--- | :--- |

        | `basic` | **Basic** authentication globally allowed.<br>This option
        **MUST** be activated to allow users to log in with their credentials
        stored in the database.<br>Formerly known as `sql`. |

        | `active_directory` | **Active Directory** authentication globally
        allowed.<br>This option **MUST** be activated to allow users to log in
        with their Active Directory credentials. |

        | `radius` | **RADIUS** authentication globally allowed.<br>This option
        **MUST** be activated to allow users to log in with their RADIUS
        username, their PIN and a token password. |

        | `openid` | **OpenID Connect** authentication globally allowed.This
        option **MUST** be activated to allow users to log in with their OpenID
        Connect identity. |


        </details>
      operationId: requestAuthConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthConfig'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request authentication settings
      tags:
        - system-settings-config
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON authentication configuration entry point.  

        Change configurable authentication settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        One or more authentication methods gets changed.


        ### Further Information:

        Authentication methods are sorted by priority attribute.  

        Smaller values have higher priority.  

        Authentication method with highest priority is considered as default.  

        Priority **MUST** be a positive value.


        ### Configurable authentication settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Description |

        | :--- | :--- |

        | `basic` | **Basic** authentication globally allowed.<br>This option
        **MUST** be activated to allow users to log in with their credentials
        stored in the database.<br>Formerly known as `sql`. |

        | `active_directory` | **Active Directory** authentication globally
        allowed.<br>This option **MUST** be activated to allow users to log in
        with their Active Directory credentials. |

        | `radius` | **RADIUS** authentication globally allowed.<br>This option
        **MUST** be activated to allow users to log in with their RADIUS
        username, their PIN and a token password. |

        | `openid` | **OpenID Connect** authentication globally allowed.This
        option **MUST** be activated to allow users to log in with their OpenID
        Connect identity. |


        </details>
      operationId: updateAuthConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuthConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update authentication settings
      tags:
        - system-settings-config
  /v4/system/config/settings/defaults:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON system defaults configuration entry point.  


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Returns a list of configurable system default values.


        ### Further Information:

        None.


        ### Configurable default values

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `languageDefault` | Defines which language should be default. | `ISO
        639-1 code` |

        | `downloadShareDefaultExpirationPeriod` | Default expiration period for
        Download Shares in _days_. | `Integer between 0 and 9999` |

        | `uploadShareDefaultExpirationPeriod` | Default expiration period for
        Upload Shares in _days_. | `Integer between 0 and 9999` |

        | `fileDefaultExpirationPeriod` | Default expiration period for all
        uploaded files in _days_. | `Integer between 0 and 9999` |

        | `nonmemberViewerDefault` | Defines if new users get the role _Non
        Member Viewer_ by default | `true or false` |


        </details>
      externalDocs:
        description: Tags for Identifying Languages
        url: 'https://tools.ietf.org/html/rfc5646'
      operationId: requestSystemDefaults
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemDefaults'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request system defaults
      tags:
        - system-settings-config
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON system defaults configuration entry point.  

        Change configurable system default values.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        One or more system default values gets changed.


        ### Further Information:

        None.


        ### Configurable default values

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `languageDefault` | Defines which language should be default. | `ISO
        639-1 code` |

        | `downloadShareDefaultExpirationPeriod` | Default expiration period for
        Download Shares in _days_. | `Integer between 0 and 9999`<br>Set `0` to
        disable. |

        | `uploadShareDefaultExpirationPeriod` | Default expiration period for
        Upload Shares in _days_. | `Integer between 0 and 9999`<br>Set `0` to
        disable. |

        | `fileDefaultExpirationPeriod` | Default expiration period for all
        uploaded files in _days_. | `Integer between 0 and 9999`<br>Set `0` to
        disable. |

        | `nonmemberViewerDefault` | Defines if new users get the role _Non
        Member Viewer_ by default | `true or false` |


        </details>
      externalDocs:
        description: Tags for Identifying Languages
        url: 'https://tools.ietf.org/html/rfc5646'
      operationId: updateSystemDefaults
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSystemDefaults'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemDefaults'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update system defaults
      tags:
        - system-settings-config
  /v4/system/config/settings/eventlog:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON eventlog configuration entry point.  


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Returns a list of configurable eventlog settings.


        ### Further Information:

        None.


        ### Configurable eventlog settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `enabled` | Determines whether eventlog is enabled. | `true or false`
        |

        | `retentionPeriod` | Retention period (in _days_) of eventlog
        entries.<br>After that period, all entries are deleted. | `Integer
        between 0 and 9999`<br>If set to `0`: no logs are deleted |

        | `logIpEnabled` | Determines whether user’s IP address is logged. |
        `true or false` |


        </details>
      operationId: requestEventlogConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventlogConfig'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request eventlog settings
      tags:
        - system-settings-config
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON eventlog configuration entry point.  

        Change configurable eventlog settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        One or more eventlog settings gets changed.


        ### Further Information:

        None.


        ### Configurable eventlog settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `enabled` | Determines whether eventlog is enabled. | `true or false`
        |

        | `retentionPeriod` | Retention period (in _days_) of eventlog
        entries.<br>After that period, all entries are deleted. | `Integer
        between 0 and 9999`<br>If set to `0`: no logs are deleted<br>Recommended
        value: 7 |

        | `logIpEnabled` | Determines whether user’s IP address is logged. |
        `true or false` |


        </details>
      operationId: updateEventlogConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEventlogConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventlogConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update eventlog settings
      tags:
        - system-settings-config
  /v4/system/config/settings/general:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON general settings configuration entry point.  


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Returns a list of configurable general settings.


        ### Further Information:


        ### Auth token restrictions:


        A restriction is a lower bound for a token timeout and defines a
        duration after which a token is invalidated when it wasn't used.  

        The access/refresh token validity duration of the client is the upper
        bound. A token is invalidated - in any case - when it has passed.  


        Auth token restrictions are enabled by default.


        * Default access token validity: **2 hours**  

        * Default refresh token validity: **30 days**


        ### Configurable general settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `sharePasswordSmsEnabled` | Determines whether sending of share
        passwords via SMS is allowed. | `true or false` |

        | `cryptoEnabled` | Determines whether client-side encryption is
        enabled.<br>Can only be enabled once; disabling is **NOT** possible. |
        `true or false` |

        | `emailNotificationButtonEnabled` | Determines whether email
        notification button is enabled. | `true or false` |

        | `eulaEnabled` | Determines whether EULA is enabled.<br>Each user has
        to confirm the EULA at first login. | `true or false` |

        | `useS3Storage` | Defines if S3 is used as storage backend.<br>Can only
        be enabled once; disabling is **NOT** possible. | `true or false` |

        | `s3TagsEnabled` | Determines whether S3 tags are enabled | `true or
        false` |

        | `hideLoginInputFields` | Determines whether input fields for login
        should be enabled | `true or false` |

        | `authTokenRestrictions` | Determines auth token restrictions. (e.g.
        restricted access token validity) | `object` |


        </details>


        ### Deprecated configurable general settings:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | <del>`mediaServerEnabled`</del> | Determines whether media server is
        enabled.<br>Returns boolean value dependent on conjunction of
        `mediaServerConfigEnabled` AND `mediaServerEnabled` | `true or false` |

        | <del>`weakPasswordEnabled`</del> | Determines whether weak password is
        allowed.<br>Use `GET /system/config/policies/passwords` API to get
        configured password policies. | `true or false` |


        </details>
      operationId: requestGeneralSettings
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GeneralSettings'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request general settings
      tags:
        - system-settings-config
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON general settings configuration entry point.  

        Change configurable general settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        One or more general settings gets changed.


        ### Further Information:

        Auth token restrictions are enabled by default.
            
        * Default access token validity: **2 hours**  

        * Default refresh token validity: **30 days**


        ### Configurable general settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `sharePasswordSmsEnabled` | Determines whether sending of share
        passwords via SMS is allowed. | `true or false` |

        | `cryptoEnabled` | Determines whether client-side encryption is
        enabled.<br>Can only be enabled once; disabling is **NOT** possible. |
        `true or false` |

        | `emailNotificationButtonEnabled` | Determines whether email
        notification button is enabled. | `true or false` |

        | `eulaEnabled` | Determines whether EULA is enabled.<br>Each user has
        to confirm the EULA at first login. | `true or false` |

        | `s3TagsEnabled` | Determines whether S3 tags are enabled | `true or
        false` |

        | `hideLoginInputFields` | Determines whether input fields for login
        should be enabled | `true or false` |

        | `authTokenRestrictions` | Determines auth token restrictions. (e.g.
        restricted access token validity) | `object` |


        </details>


        ### Deprecated configurable general settings:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | <del>`mediaServerEnabled`</del> | Determines whether media server is
        enabled.<br>**CANNOT** be enabled if media server configuration is
        disabled in `core-service.properties`.<br>Check
        `mediaServerConfigEnabled` with `GET
        /system/config/settings/infrastructure`. | `true or false` |

        | <del>`weakPasswordEnabled`</del> | Determines whether weak password is
        allowed.<br>Use `PUT /system/config/policies/passwords` API to change
        configured password policies. | `true or false` |


        </details>
      operationId: updateGeneralSettings
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGeneralSettings'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GeneralSettings'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update general settings
      tags:
        - system-settings-config
  /v4/system/config/settings/infrastructure:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON infrastructure properties entry point.  


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Returns a list of read-only infrastructure properties.


        ### Further Information:

        Source: `core-service.properties`


        ### Read-only infrastructure properties:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `smsConfigEnabled` | Determines whether sending of share passwords via
        SMS is **system-wide** enabled. | `true or false` |

        | `mediaServerConfigEnabled` | Determines whether media server is
        **system-wide** enabled. | `true or false` |

        | `s3DefaultRegion` | Suggested S3 region | `Region name` |

        | `s3EnforceDirectUpload` | Enforce direct upload to S3 | `true or
        false` |

        | `dracoonCloud` | Determines if the **DRACOON Core** is deployed in the
        cloud environment | `true or false` |

        | `tenantUuid` | Current tenant UUID | `UUID` |


        </details>
      operationId: requestInfrastructureProperties
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InfrastructureProperties'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request infrastructure properties
      tags:
        - system-settings-config
  /v4/system/config/settings/syslog:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON syslog configuration entry point.  


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        Returns a list of configurable syslog settings.


        ### Further Information:

        None.


        ### Configurable syslog settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `enabled` | Determines whether syslog is enabled. | `true or false` |

        | `host` | Syslog server (IP or FQDN) | `DNS name or IPv4 of a syslog
        server` |

        | `port` | Syslog server port | `Valid port number` |

        | `protocol` | Protocol to connect to syslog server | `TCP or UDP` |

        | `logIpEnabled` | Determines whether user’s IP address is logged. |
        `true or false` |


        </details>
      operationId: requestSyslogConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyslogConfig'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request syslog settings
      tags:
        - system-settings-config
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.6.0</h3>


        ### Description:  

        DRACOON syslog configuration entry point.  

        Change configurable syslog settings.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        One or more syslog settings gets changed.


        ### Further Information:

        None.


        ### Configurable syslog settings:

        <details open style="padding: 10px; background-color: #F6F7F8; border:
        1px solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Setting | Description | Value |

        | :--- | :--- | :--- |

        | `enabled` | Set `true` to enable syslog. | `true or false` |

        | `host` | Syslog server (IP or FQDN) | `DNS name or IPv4 of a syslog
        server` |

        | `port` | Syslog server port | `Valid port number` |

        | `protocol` | Protocol to connect to syslog server | `TCP or UDP` |

        | `logIpEnabled` | Determines whether user’s IP address is logged. |
        `true or false` |


        </details>
      operationId: updateSyslogConfig
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSyslogConfig'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SyslogConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update syslog settings
      tags:
        - system-settings-config
  /v4/system/config/storage/s3:
    get:
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description:  

        Retrieve S3 configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        S3 configuration is returned.


        ### Further Information:

        None.


        ### Virtual hosted style access


        Example: https://<span style="color:red;">bucket-name</span>.s3.<span
        style="color:red;">region</span>.amazonaws.com/<span
        style="color:red;">key-name</span>
      operationId: request3Config
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3Config'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request S3 storage configuration
      tags:
        - system-storage-config
    post:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description:  

        Create new S3 configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        New S3 configuration is created.


        ### Further Information:

        Forbidden characters in bucket names: [`.`]  

        `bucketName` and `endpointUrl` are deprecated, use `bucketUrl` instead.


        ### Virtual hosted style access


        Example: https://<span style="color:red;">bucket-name</span>.s3.<span
        style="color:red;">region</span>.amazonaws.com/<span
        style="color:red;">key-name</span>
      operationId: createS3Config
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/S3ConfigCreateRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/S3Config'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create S3 storage configuration
      tags:
        - system-storage-config
    put:
      consumes:
        - application/json
      description: >
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.3.0</h3>


        ### Description:  

        Update existing S3 configuration.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        S3 configuration is updated.


        ### Further Information:

        Forbidden characters in bucket names: [`.`]  

        `bucketName` and `endpointUrl` are deprecated, use `bucketUrl` instead.


        ### Virtual hosted style access


        Example: https://<span style="color:red;">bucket-name</span>.s3.<span
        style="color:red;">region</span>.amazonaws.com/<span
        style="color:red;">key-name</span>
      operationId: updateS3Config
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/S3ConfigUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3Config'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update S3 storage configuration
      tags:
        - system-storage-config
  /v4/system/config/storage/s3/tags:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Retrieve all configured S3 tags.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        S3 tags are returned.


        ### Further Information:

        An empty list is returned if no S3 tags are found / configured.
      operationId: requestS3TagList
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3TagList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of configured S3 tags
      tags:
        - system-storage-config
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Create new S3 tag.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        New S3 tag is created.


        ### Further Information:

        * Maximum key length: **128** characters.  

        * Maximum value length: **256** characters.  

        * Both S3 tag key and value are **case-sensitive** strings.  

        * Maximum of **20 mandatory S3 tags** is allowed.
      operationId: createS3Tag
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/S3TagCreateRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/S3Tag'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create S3 tag
      tags:
        - system-storage-config
  '/v4/system/config/storage/s3/tags/{id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Delete S3 tag.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        global config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        S3 tag gets deleted.


        ### Further Information:

        None.
      operationId: removeS3Tag
      parameters:
        - description: S3 tag ID
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove S3 tag
      tags:
        - system-storage-config
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.9.0</h3>


        ### Description:  

        Retrieve single S3 tag.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read global
        config</span> and

        role <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128100; Config
        Manager</span> of the Provider Customer required.


        ### Postcondition:

        S3 tag is returned.


        ### Further Information:

        None.
      operationId: requestS3Tag
      parameters:
        - description: S3 tag ID
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/S3Tag'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request S3 tag
      tags:
        - system-storage-config
  '/v4/uploads/{token}':
    delete:
      description: >-
        ### Description:

        Cancel file upload.


        ### Precondition:

        Valid upload token.


        ### Postcondition:

        Upload canceled, token invalidated and all already transfered chunks
        removed.


        ### Further Information:

        It is recommended to notify the API about cancelled uploads if possible.
      operationId: cancelFileUploadByToken
      parameters:
        - description: Upload token
          in: path
          name: token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Cancel file upload
      tags:
        - uploads
    post:
      consumes:
        - multipart/form-data
      description: >
        ### Description:  

        Upload a (chunk of a) file.


        ### Precondition:

        Valid upload token.


        ### Postcondition:

        Chunk uploaded.


        ### Further Information:

        Range requests are supported.  


        Following `Content-Types` are supported by this API:

        * `multipart/form-data`

        * provided `Content-Type`


        For both file upload types set the correct `Content-Type` header and
        body.  


        ### Examples:  


        * `multipart/form-data`

        ```

        POST /api/v4/uploads/{token} HTTP/1.1


        Header:

        ...

        Content-Type: multipart/form-data;
        boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

        ...


        Body:

        ------WebKitFormBoundary7MA4YWxkTrZu0gW

        Content-Disposition: form-data; name="file"; filename="file.txt"

        Content-Type: text/plain


        Content of file.txt

        ------WebKitFormBoundary7MA4YWxkTrZu0gW--

        ```


        * any other `Content-Type` 

        ```

        POST /api/v4/uploads/{token} HTTP/1.1


        Header:

        ...

        Content-Type: { ... }

        ...


        Body:

        raw content

        ```
      externalDocs:
        description: Range Requests
        url: 'https://tools.ietf.org/html/rfc7233'
      operationId: uploadFileByTokenAsBinary_1
      parameters:
        - description: Upload token
          in: path
          name: token
          required: true
          type: string
        - description: |-
            Content-Range 

            e.g. `bytes 0-999/3980`
          in: header
          name: Content-Range
          required: false
          type: string
        - format: binary
          in: formData
          name: file
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ChunkUploadResponse'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema: {}
        '403':
          description: Forbidden
          schema: {}
        '404':
          description: Not Found
          schema: {}
        '406':
          description: Not Acceptable
          schema: {}
        '507':
          description: Insufficient Storage
          schema: {}
      security: []
      summary: Upload file
      tags:
        - uploads
    put:
      consumes:
        - application/json
      description: >-
        ### Description:

        Finish uploading a file.


        ### Precondition:

        Valid upload token.


        ### Postcondition:

        File created.


        ### Further Information:

        The provided file name might be changed in accordance with the
        resolution strategy:


        * **autorename**: changes the file name and adds a number to avoid
        conflicts.

        * **overwrite**: deletes any old file with the same file name.

        * **fail**: returns an error; in this case, another `PUT` request with a
        different file name may be sent.


        Please ensure that all chunks have been transferred correctly before
        finishing the upload.


        Download share id (if exists) gets changed if:

        - node with the same name exists in the target container

        - `resolutionStrategy` is `overwrite`

        - `keepShareLinks` is `true`
      operationId: completeFileUploadByToken
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Upload token
          in: path
          name: token
          required: true
          type: string
        - description: |-
            The body must be empty if public upload token is used.

            The `resolutionStrategy` in that case will be always `autorename`
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompleteUploadRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Node'
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/Node'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '507':
          description: Insufficient Storage
          schema:
            $ref: '#/definitions/ErrorResponse'
      security: []
      summary: Complete file upload
      tags:
        - uploads
  /v4/user/account:
    get:
      description: >-
        ### Description:  

        Retrieves all information regarding the current user's account.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        User information is returned.


        ### Further Information:

        Setting the query parameter `more_info` to `true`, causes the API to
        return more details e.g. the user's groups.  


        `customer` (`CustomerData`) attribute in `UserAccount` response model is
        deprecated. Please use response from `GET /user/account/customer`
        instead.
      operationId: requestUserInfo
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: |-
            Get more info for this user

            e.g. list of user groups
          in: query
          name: more_info
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAccount'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user account information
      tags:
        - user
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Update current user's account.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        User's account is updated.


        ### Further Information:

        * All input fields are limited to **150** characters.  

        * **All** characters are allowed.  


        `customer` (`CustomerData`) attribute in `UserAccount` response model is
        deprecated. Please use response from `GET /user/account/customer`
        instead.
      operationId: updateUserAccount
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserAccountRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAccount'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user account
      tags:
        - user
  /v4/user/account/avatar:
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:  

        Reset (custom) avatar to default avatar.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        * User's avatar gets deleted.  

        * Default avatar is set.


        ### Further Information:

        None.
      operationId: resetAvatar
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Avatar'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Reset avatar
      tags:
        - user
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Get the avatar.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Avatar is returned.


        ### Further Information:

        None.
      operationId: requestAvatar
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Avatar'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request avatar
      tags:
        - user
    post:
      consumes:
        - multipart/form-data
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.11.0</h3>


        ### Description:

        Change the avatar.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Avatar is changed.


        ### Further Information:

        * Media type **MUST** be `jpeg` or `png`

        * File size **MUST** bei less than `5 MB`

        * Dimensions **MUST** be `256x256 px`
      operationId: uploadAvatarAsMultipart
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - format: binary
          in: formData
          name: file
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Avatar'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Change avatar
      tags:
        - user
  /v4/user/account/customer:
    get:
      description: |-
        ### Description:  
        Use this API to get: 
        * customer name
        * used / free space
        * used / available
        * user account info

        of the according customer.

        ### Precondition:
        Authenticated user.

        ### Postcondition:
        Customer information is returned.

        ### Further Information:
        None.
      operationId: requestCustomerInfo
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerData'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request customer information for user
      tags:
        - user
    put:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.24.0</h3>


        ### Use `POST /settings/keypair` API


        ### Description:  

        Activate client-side encryption for according customer.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        config</span> required.


        ### Postcondition:

        Client-side encryption is enabled.


        ### Further Information:

        Sets the ability for this customer to encrypt rooms.  

        Once enabled on customer level, it **CANNOT** be unset.  

        On activation, a customer rescue key pair **MUST** be set.
      operationId: enableCustomerEncryption
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EnableCustomerEncryptionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerData'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Activate client-side encryption for customer
      tags:
        - user
  /v4/user/account/customer/keypair:
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.24.0</h3>


        ### Use `GET /settings/keypair` API


        ### Description:  

        Retrieve the customer rescue key pair.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Key pair is returned.


        ### Further Information:

        The private key is password-based encrypted with `AES256` / `PBKDF2`.
      operationId: requestCustomerKeyPair
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request customer's key pair
      tags:
        - user
  /v4/user/account/keypair:
    delete:
      description: >-
        ### Description:  

        Delete user key pair.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Key pair is deleted.


        ### Further Information:

        If parameter `version` is not set and two key versions exist, this API
        deletes version A.      

        If two keys with the same version are set, this API deletes the older
        one.


        This will also remove all file keys that were encrypted with the user
        public key.

        If the user had exclusive access to some files, those are removed as
        well since decrypting them became impossible.
      operationId: removeUserKeyPair
      parameters:
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user's key pair
      tags:
        - user
    get:
      description: |-
        ### Description:  
        Retrieve the user key pair.

        ### Precondition:
        Authenticated user.

        ### Postcondition:
        Key pair is returned. 

        ### Further Information:
        The private key is password-based encrypted with `AES256` / `PBKDF2`.
      operationId: requestUserKeyPair
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Version (NEW)
          in: query
          name: version
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user's key pair
      tags:
        - user
    post:
      consumes:
        - application/json
      description: |-
        ### Description:  
        Set the user key pair.

        ### Precondition:
        Authenticated user.

        ### Postcondition:
        Key pair is set.

        ### Further Information:
        Overwriting an existing key pair is **NOT** possible.  
        Please delete the existing key pair first.  
        The private key is password-based encrypted with `AES256` / `PBKDF2`.
      operationId: setUserKeyPair
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserKeyPairContainer'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set user's key pair
      tags:
        - user
  /v4/user/account/keypairs:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Retrieve all user key pairs to allow re-encrypting file keys without
        need for a second distributor.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of key pairs is returned. 


        ### Further Information:

        None.
      operationId: requestUserKeyPairs
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserKeyPairContainer'
            type: array
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request all user key pairs
      tags:
        - user
    post:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Create user key pair and preserve copy of old private key.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Key pair is created.  

        Copy of old private key is preserved.


        ### Further Information:

        You can submit your old private key, encrypted with your current
        password.  

        This allows migrating file keys encrypted with your old key pair to the
        new one.
      operationId: createAndPreserveUserKeyPair
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateKeyPairRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create key pair and preserve copy of old private key
      tags:
        - user
  /v4/user/account/password:
    put:
      consumes:
        - application/json
      description: |-
        ### Description:
        Change the user's password.

        ### Precondition:
        Authenticated user.

        ### Postcondition:
        User's password is changed.

        ### Further Information:
        The password **MUST** comply to configured password policies.  

        Forbidden characters in passwords: [`&`, `'`, `<`, `>`]
      operationId: changeUserPassword
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangeUserPasswordRequest'
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Change user's password
      tags:
        - user
  /v4/user/logout:
    post:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.12.0</h3>


        ### Description:  

        Log out a user.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        * User is logged out  

        * Authentication token gets invalidated.


        ### Further Information:

        None.
      operationId: logout
      parameters:
        - description: Invalidate all tokens
          in: query
          name: everywhere
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Invalidate authentication token
      tags:
        - user
  /v4/user/notifications/config:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Retrieve a list of notification configurations for current user. 


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of available notification configurations is returned.


        ### Further Information:

        None.
      operationId: requestListOfNotificationConfigs
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationConfigList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of notification configurations
      tags:
        - user
  '/v4/user/notifications/config/{id}':
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Update notification configuration for current user. 


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        Notification configuration is updated.


        ### Further Information:

        Leave `channelIds` empty to disable notifications.
      operationId: updateNotificationConfig
      parameters:
        - description: Unique identifier for a notification configuration
          format: int64
          in: path
          name: id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NotificationConfigChangeRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationConfig'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update notification configuration
      tags:
        - user
  /v4/user/oauth/approvals:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.22.0</h3>


        ### Functional Description:  

        Retrieve information about all OAuth client approvals.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        None.


        ### Further Information:

        None.


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `clientName:desc`  

        Sort by `clientName` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `clientName` | Client name |


        </details>
      operationId: requestOAuthApprovals
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OAuthApproval'
            type: array
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of OAuth client approvals
      tags:
        - user
  '/v4/user/oauth/approvals/{client_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.22.0</h3>


        ### Functional Description:

        Delete an OAuth client approval.


        ### Precondition:

        Authenticated user and valid client ID


        ### Postcondition:

        OAuth Client approval is revoked.


        ### Further Information:

        None.
      operationId: removeOAuthApproval
      parameters:
        - description: OAuth client ID
          in: path
          name: client_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove OAuth client approval
      tags:
        - user
  /v4/user/oauth/authorizations:
    get:
      description: >-
        ### Description:  

        Retrieve information about all OAuth client authorizations.


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of OAuth client authorizations is returned.


        ### Further Information:


        ### Filtering:

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isStandard:eq:true`  

        Get standard OAuth clients.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `isStandard` | Standard client filter | `eq` |  | `true or false` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `clientName:desc`  

        Sort by `clientName` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `clientName` | Client name |


        </details>
      operationId: requestOAuthAuthorizations
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OAuthAuthorization'
            type: array
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request list of OAuth client authorizations
      tags:
        - user
  '/v4/user/oauth/authorizations/{client_id}':
    delete:
      description: |-
        ### Description:
        Delete all authorizations of a client.

        ### Precondition:
        Authenticated user and valid client ID

        ### Postcondition:
        All authorizations for the client are revoked.

        ### Further Information:
        None.
      operationId: removeOAuthAuthorizations
      parameters:
        - description: OAuth client ID
          in: path
          name: client_id
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove all OAuth authorizations of a client
      tags:
        - user
  '/v4/user/oauth/authorizations/{client_id}/{authorization_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.12.0</h3>


        ### Description:

        Delete an authorization.


        ### Precondition:

        Authenticated user and valid client ID, authorization ID


        ### Postcondition:

        Authorization is revoked.


        ### Further Information:

        None.
      operationId: removeOAuthAuthorization
      parameters:
        - description: OAuth client ID
          in: path
          name: client_id
          required: true
          type: string
        - description: OAuth authorization ID
          format: int64
          in: path
          name: authorization_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove a OAuth authorization
      tags:
        - user
  /v4/user/ping:
    get:
      description: |-
        ### Description:
        Test connection to DRACOON Server (while authenticated).

        ### Precondition:
        Authenticated user.

        ### Postcondition:
        `200 OK` with principal information is returned if successful.

        ### Further Information:
        None.
      operationId: pingUser
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: (authenticated) Ping
      tags:
        - user
  /v4/user/profileAttributes:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.7.0</h3>


        ### Description:  

        Retrieve a list of user profile attributes.


        ### Precondition:

        None.


        ### Postcondition:

        List of attributes is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `key:cn:searchString_1|value:cn:searchString_2`  

        Filter by attribute key contains `searchString_1` **AND** attribute
        value contains `searchString_2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `key` | User profile attribute key filter | `cn, eq, sw` | Attribute
        key contains / equals / starts with value. | `search String` |

        | `value` | User profile attribute value filter | `cn, eq, sw` |
        Attribute value contains / equals / starts with value. | `search String`
        |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `key:asc|value:desc`  

        Sort by `key` ascending **AND** by `value` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `key` | User profile attribute key |

        | `value` | User profile attribute value |


        </details>
      operationId: requestProfileAttributes
      parameters:
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AttributesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user profile attributes
      tags:
        - user
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.12.0</h3>


        ### Description:  

        Set custom user profile attributes.


        ### Precondition:

        None.


        ### Postcondition:

        Custom user profile attributes are set.


        ### Further Information:

        Batch function.  

        All existing user profile attributes will be deleted.  


        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**  

        * Maximum key length is **255**  

        * Maximum value length is **4096**
      operationId: setProfileAttributes
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProfileAttributesRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ProfileAttributes'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set user profile attributes
      tags:
        - user
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.7.0</h3>


        ### Description:  

        Add or edit custom user profile attributes.

        <br/><br/><span style="font-weight: bold; color: red;"> &#128679;
        **Warning: Please note that the response with HTTP status code 200 (OK)
        is deprecated and will be replaced with HTTP status code 204 (No
        content)!**</span><br/>


        ### Precondition:

        None.


        ### Postcondition:

        Custom user profile attributes are added or edited.


        ### Further Information:

        Batch function.  

        If an entry existed before, it will be overwritten.  

        Range submodel is never returned.


        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**  

        * Maximum key length is **255**  

        * Maximum value length is **4096**
      operationId: updateProfileAttributes
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProfileAttributesRequest'
      produces:
        - application/json
      responses:
        '200':
          description: 'OK **(DEPRECATED: WILL BE REPLACED BY 204: "No content")**'
          schema:
            $ref: '#/definitions/ProfileAttributes'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add or edit user profile attributes
      tags:
        - user
  '/v4/user/profileAttributes/{key}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.7.0</h3>


        ### Description:  

        Delete custom user profile attribute.


        ### Precondition:

        None.


        ### Postcondition:

        Custom user profile attribute is deleted.


        ### Further Information:

        Allowed characters for keys are: `[a-zA-Z0-9_-]`
      operationId: removeProfileAttribute
      parameters:
        - description: Key
          in: path
          name: key
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user profile attribute
      tags:
        - user
  /v4/user/subscriptions/download_shares:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Retrieve a list of subscribed Download Shares for current user. 


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of subscribed Download Shares is returned.


        ### Further Information:

        None.


        ### Filtering

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `authParentId:eq:#`  

        Get download shares where `authParentId` equals `#`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | **`downloadShareId`** | Download Share ID filter | `eq` | Download
        Share ID equals value. | `long value` |

        | **`authParentId`** | Auth parent ID filter | `eq` | Auth parent ID
        equals value. | `long value` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `downloadShareId:desc|authParentId:asc`  

        Sort by `downloadShareId` descending **AND** `authParentId` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | **`downloadShareId`** | Download Share ID |

        | **`authParentId`** | Auth parent ID |


        </details>
      operationId: listDownloadShareSubscriptions
      parameters:
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubscribedDownloadShareList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Download Share subscriptions
      tags:
        - user
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:  

        Subscribe/Unsubscribe download shares for notifications.


        ### Precondition:

        User with _"manage download share"_ permissions on target node.




        ### Postcondition:

        Download shares are subscribed or unsubscribed.

        Notifications for these download shares will be triggered in the future.


        ### Further Information:

        Maximum number of subscriptions is 200.
      operationId: subscribeDownloadShares
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriptionsBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Subscribe or Unsubscribe a List of Download Shares for notifications
      tags:
        - user
  '/v4/user/subscriptions/download_shares/{share_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Unsubscribe Download Share from notifications.


        ### Precondition:

        User with _"manage download share"_ permissions on target node.


        ### Postcondition:

        Download Share is unsubscribed.  

        Notifications for this Download Share are disabled.


        ### Further Information:

        None.
      operationId: unsubscribeDownloadShare
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Unsubscribe Download Share from notifications
      tags:
        - user
    post:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Subscribe Download Share for notifications.


        ### Precondition:

        User with _"manage download share"_ permissions on target node.


        ### Postcondition:

        Download Share is subscribed.  

        Notifications for this Download Share will be triggered in the future.


        ### Further Information:

        None.
      operationId: subscribeDownloadShare
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SubscribedDownloadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Subscribe Download Share for notifications
      tags:
        - user
  /v4/user/subscriptions/nodes:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Retrieve a list of subscribed nodes for current user. 


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of subscribed nodes is returned.


        ### Further Information:

        None.


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `authParentId:eq:#`  

        Get nodes where `authParentId` equals `#`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | **`nodeId`** | Node ID filter | `eq` | Node ID equals value. | `long
        value` |

        | **`authParentId`** | Auth parent ID filter | `eq` | Auth parent ID
        equals value. | `long value` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `nodeId:desc|authParentId:asc`  

        Sort by `nodeId` descending **AND** `authParentId` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | **`nodeId`** | Node ID |

        | **`authParentId`** | Auth parent ID |


        </details>
      operationId: listNodeSubscriptions
      parameters:
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubscribedNodeList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List node subscriptions
      tags:
        - user
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:  

        Subscribe/Unsubscribe nodes for notifications.


        ### Precondition:

        User has _"read"_ permissions in auth parent room.


        ### Postcondition:

        Nodes are subscribed or unsubscribed.

        Notifications for these nodes will be triggered in the future.


        ### Further Information:

        Maximum number of subscriptions is 200.
      operationId: updateNodeSubscriptions
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriptionsBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Subscribe or Unsubscribe a List of nodes for notifications
      tags:
        - user
  '/v4/user/subscriptions/nodes/{node_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:  

        Unsubscribe node from notifications.


        ### Precondition:

        User has _"read"_ permissions in auth parent room.


        ### Postcondition:

        Node is unsubscribed.  

        Notifications for this node are disabled.


        ### Further Information:

        None.
      operationId: unsubscribeNode
      parameters:
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Unsubscribe node from notifications
      tags:
        - user
    post:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.20.0</h3>


        ### Description:

        Subscribe node for notifications.


        ### Precondition:

        User has _"read"_ permissions in auth parent room.


        ### Postcondition:

        Node is subscribed.

        Notifications for this node will be triggered in the future.


        ### Further Information:

        None.
      operationId: subscribeNode
      parameters:
        - description: Node ID
          format: int64
          in: path
          name: node_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SubscribedNode'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Subscribe node for notifications
      tags:
        - user
  /v4/user/subscriptions/upload_shares:
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Retrieve a list of subscribed Upload Shares for current user. 


        ### Precondition:

        Authenticated user.


        ### Postcondition:

        List of subscribed Upload Shares is returned.


        ### Further Information:

        None.


        ### Filtering

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `targetNodeId:eq:#`  

        Get upload shares where `targetNodeId` equals `#`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | **`uploadShareId`** | Upload Share ID filter | `eq` | Upload Share ID
        equals value. | `long value` |

        | **`targetNodeId`** | Target node ID filter | `eq` | Target node ID
        equals value. | `long value` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort criteria are possible.  

        Fields are connected via logical conjunction **AND**.


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `uploadShareId:desc|targetNodeId:asc`  

        Sort by `uploadShareId` descending **AND** `targetNodeId` ascending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | **`uploadShareId`** | Upload Share ID |

        | **`targetNodeId`** | Target node ID |


        </details>
      operationId: listUploadShareSubscriptions
      parameters:
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SubscribedUploadShareList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Upload Share subscriptions
      tags:
        - user
    put:
      consumes:
        - application/json
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.25.0</h3>


        ### Description:  

        Subscribe/Unsubscribe upload shares for notifications.


        ### Precondition:

        User with _"manage upload share"_ permissions on target node.




        ### Postcondition:

        Upload shares are subscribed or unsubscribed.

        Notifications for these upload shares will be triggered in the future.


        ### Further Information:

        Maximum number of subscriptions is 200.
      operationId: subscribeUploadShares
      parameters:
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSubscriptionsBulkRequest'
      produces:
        - application/octet-stream
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Subscribe or Unsubscribe a List of Upload Shares for notifications
      tags:
        - user
  '/v4/user/subscriptions/upload_shares/{share_id}':
    delete:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Unsubscribe Upload Share from notifications.


        ### Precondition:

        User with _"manage upload share"_ permissions on target node.


        ### Postcondition:

        Upload Share is unsubscribed.  

        Notifications for this Upload Share are disabled.


        ### Further Information:

        None.
      operationId: unsubscribeUploadShare
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Unsubscribe Upload Share from notifications
      tags:
        - user
    post:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.24.0</h3>


        ### Description:  

        Subscribe Upload Share for notifications.


        ### Precondition:

        User with _"manage upload share"_ permissions on target node.


        ### Postcondition:

        Upload Share is subscribed.  

        Notifications for this Upload Share will be triggered in the future.


        ### Further Information:

        None.
      operationId: subscribeUploadShare
      parameters:
        - description: Share ID
          format: int64
          in: path
          name: share_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SubscribedUploadShare'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Subscribe Upload Share for notifications
      tags:
        - user
  /v4/users:
    get:
      description: >-
        ### Description:  

        Returns a list of DRACOON users.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        List of users is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Except for `login`, `firstName` and  `lastName` - these are connected
        via logical disjunction (**OR**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `login:cn:searchString_1|firstName:cn:searchString_2|lockStatus:eq:2`  

        Filter users by login contains `searchString_1` **OR** firstName
        contains `searchString_2` **AND** those who are **NOT** locked.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `email` | Email filter | `eq`, `cn` | Email contains value. | `search
        String` |

        | `userName` | User name filter | `eq`, `cn` | UserName contains value.
        | `search String` |

        | `firstName` | User first name filter | `cn` | User first name contains
        value. | `search String` |

        | `lastName` | User last name filter | `cn` | User last name contains
        value. | `search String` |

        | `isLocked` | User lock status filter | `eq` |  | `true or false` |

        | `effectiveRoles` | Filter users with DIRECT or DIRECT **AND**
        EFFECTIVE roles<ul><li>`false`: DIRECT roles</li><li>`true`: DIRECT
        **AND** EFFECTIVE roles</li></ul>DIRECT means: e.g. user gets role
        **directly** granted from someone with _grant permission_
        right.<br>EFFECTIVE means: e.g. user gets role through **group
        membership**. | `eq` |  | `true or false`<br>default: `false` |

        | `createdAt` | Creation date filter | `ge, le` | Creation date is
        greater / less equals than value.<br>Multiple operator values are
        allowed and will be connected via logical conjunction (**AND**).<br>e.g.
        `createdAt:ge:2016-12-31`&#124;`createdAt:le:2018-01-01` | `Date
        (yyyy-MM-dd)` |

        | `phone` | Phone filter | `eq` | Phone equals value. | `search String`
        |

        | `isEncryptionEnabled` | Encryption status filter<ul><li>client-side
        encryption</li><li>private key possession</li></ul> | `eq` |  | `true or
        false` |

        | `hasRole` | User role filter<br>Depends on **effectiveRoles**.<br>For
        more Roles information please call `GET /roles API` | `eq` | User role 
        equals value. | <ul><li>`CONFIG_MANAGER` - Manage global
        configs</li><li>`USER_MANAGER` - Manage Users</li><li>`GROUP_MANAGER` -
        Manage User-Groups</li><li>`ROOM_MANAGER` - Manage top level Data
        Rooms</li><li>`LOG_AUDITOR` - Read logs</li><li>`NONMEMBER_VIEWER` -
        View users and groups when having room manage permission</li></ul> |


        </details>


        ### Deprecated filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | <del>`lockStatus`</del> | User lock status filter | `eq` | User lock
        status equals value. | <ul><li>`0` - Locked</li><li>`1` - Web access
        allowed</li><li>`2` - Web and mobile access allowed</li></ul> |

        | <del>`login`</del> | User login filter | `cn` | User login contains
        value. | `search String` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `firstName:asc|lastLoginSuccessAt:desc`  

        Sort by `firstName` ascending **AND** by `lastLoginSuccessAt`
        descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `userName` | User name |

        | `email` | User email |

        | `firstName` | User first name |

        | `lastName` | User last name |

        | `isLocked` | User lock status |

        | `lastLoginSuccessAt` | Last successful login date |

        | `expireAt` | Expiration date |

        | `createdAt` | Creation date |


        </details>


        ### Deprecated sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | <del>`gender`</del> | Gender |

        | <del>`lockStatus`</del> | User lock status |

        | <del>`login`</del> | User login |


        </details>
      operationId: requestUsers
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Include custom user attributes.
          in: query
          name: include_attributes
          required: false
          type: boolean
        - description: Include roles
          in: query
          name: include_roles
          required: false
          type: boolean
        - description: Include hasManageableRooms (deprecated)
          in: query
          name: include_manageable_rooms
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request users
      tags:
        - users
    post:
      consumes:
        - application/json
      description: >-
        ### Description:

        Create a new user.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        users</span> required.


        ### Postcondition:

        New user is created.


        ### Further Information:

        * If a user should **NOT** expire, leave `expireAt` empty.

        * All input fields are limited to **150** characters

        * Forbidden characters in passwords: [`&`, `'`, `<`, `>`]


        ### Authentication Method Options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Option Key | Option Value |

        | :--- | :--- | :--- |

        | `basic` / `sql` | `username` | Unique user identifier |

        | `active_directory` | `ad_config_id` (optional) | Active Directory
        configuration ID |

        |  | `username` | Active Directory username according to authentication
        setting `userFilter` |

        | `radius` | `username` | RADIUS username |

        | `openid` | `openid_config_id` (optional) | OpenID Connect
        configuration ID |

        |  | `username` | OpenID Connect username according to authentication
        setting `mappingClaim` |


        </details>
      operationId: createUser
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserData'
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create new user
      tags:
        - users
  '/v4/users/{user_id}':
    delete:
      description: >-
        ### Description:

        Delete a user.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; delete
        users</span> required.


        ### Postcondition:

        User is deleted.


        ### Further Information:

        User **CANNOT** be deleted if he is a last room administrator of any
        room.
      operationId: removeUser
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove user
      tags:
        - users
    get:
      description: >-
        ### Description:  

        Retrieve detailed information about a single user.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        User information is returned.


        ### Further Information:

        None.


        ### Authentication Method Options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Option Key | Option Value |

        | :--- | :--- | :--- |

        | `basic` / `sql` | `username` | Unique user identifier |

        | `active_directory` | `ad_config_id` (optional) | Active Directory
        configuration ID |

        |  | `username` | Active Directory username according to authentication
        setting `userFilter` |

        | `radius` | `username` | RADIUS username |

        | `openid` | `openid_config_id` (optional) | OpenID Connect
        configuration ID |

        |  | `username` | OpenID Connect username according to authentication
        setting `mappingClaim` |


        </details>
      operationId: requestUser
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: >-
            Filter users with DIRECT or DIRECT **AND** EFFECTIVE roles.


            * `false`: DIRECT roles


            * `true`: DIRECT **AND** EFFECTIVE roles


            DIRECT means: e.g. user gets role **directly** granted from someone
            with _grant permission_ right.


            EFFECTIVE means: e.g. user gets role through **group membership**.
          in: query
          name: effective_roles
          required: false
          type: boolean
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserData'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user
      tags:
        - users
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Update user's metadata.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        users</span> required.


        ### Postcondition:

        User's metadata is updated.


        ### Further Information:

        * If a user should **NOT** expire, leave `expireAt` empty.

        * All input fields are limited to **150** characters

        * **All** characters are allowed.


        ### Authentication Method Options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | Authentication Method | Option Key | Option Value |

        | :--- | :--- | :--- |

        | `basic` / `sql` | `username` | Unique user identifier |

        | `active_directory` | `ad_config_id` (optional) | Active Directory
        configuration ID |

        |  | `username` | Active Directory username according to authentication
        setting `userFilter` |

        | `radius` | `username` | RADIUS username |

        | `openid` | `openid_config_id` (optional) | OpenID Connect
        configuration ID |

        |  | `username` | OpenID Connect username according to authentication
        setting `mappingClaim` |


        </details>
      operationId: updateUser
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserData'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update user's metadata
      tags:
        - users
  '/v4/users/{user_id}/groups':
    get:
      description: >-
        ### Description:  

        Retrieves a list of groups a user is member of and / or can become a
        member.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        List of groups is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isMember:eq:false|name:cn:searchString`  

        Get all groups that the user is **NOT** member of **AND** whose name is
        like `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Group name filter | `cn` | Group name contains value. |
        `search String` |

        | `isMember` | Filter the groups which the user is (not) member of |
        `eq` |  | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default:
        `true` |


        </details>
      operationId: requestUserGroups
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroupList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request groups that user is a member of or / and can become a member
      tags:
        - users
  '/v4/users/{user_id}/last_admin_rooms':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.10.0</h3>


        ### Description:  

        Retrieve a list of all rooms where the user is last admin (except
        homeroom and its subordinary rooms).


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        users</span> required.


        ### Postcondition:

        List of rooms is returned. 


        ### Further Information:

        An empty list is returned if no rooms were found where the user is last
        admin.
      operationId: requestLastAdminRoomsUsers
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LastAdminUserRoomList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request rooms where the user is last admin
      tags:
        - users
  '/v4/users/{user_id}/roles':
    get:
      description: >-
        ### Description:  

        Retrieve a list of all roles granted to a user.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        List of granted roles is returned.


        ### Further Information:

        None.
      operationId: requestUserRoles
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoleList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request user's granted roles
      tags:
        - users
  '/v4/users/{user_id}/rooms':
    get:
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.10.0</h3>


        ### Description:  

        Retrieves a list of rooms granted to the user and / or that can be
        granted.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; read
        users</span> required.


        ### Postcondition:

        List of rooms is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `isGranted:eq:true|isLastAdmin:eq:true|name:cn:searchString`  

        Get all rooms that the user is granted **AND** is last admin **AND**
        whose name is like `searchString`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `name` | Room name filter | `cn` | Room name contains value. | `search
        String` |

        | `isGranted` | Filter the rooms which the user is (not) granted. | `eq`
        |  | <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default:
        `true` |

        | `isLastAdmin` | Filter the rooms which the user is last room
        administrator.<br>Only in connection with `isGranted:eq:true` filter
        possible. | `eq` |  | `true` |

        | `effectivePerm` | Filter rooms with DIRECT or DIRECT **AND** EFFECTIVE
        permissions<ul><li>`false`: DIRECT permissions</li><li>`true`: DIRECT
        **AND** EFFECTIVE permissions</li><li>`any`: DIRECT **AND** EFFECTIVE
        **AND** OVER GROUP permissions</li></ul>DIRECT means: e.g. room
        administrator grants `read` permissions to group of users **directly**
        on desired room.<br>EFFECTIVE means: e.g. group of users gets `read`
        permissions on desired room through **inheritance**.<br>OVER GROUP
        means: e.g. user gets `read` permissions on desired room through **group
        membership**. | `eq` |  |
        <ul><li>`true`</li><li>`false`</li><li>`any`</li></ul>default: `false` |


        </details>
      operationId: requestUsersRooms
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoomTreeDataList'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request rooms granted to the user or / and rooms that can be granted
      tags:
        - users
  '/v4/users/{user_id}/userAttributes':
    get:
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128640; Since
        v4.12.0</h3>


        ### Description:  

        Retrieve a list of user attributes.


        ### Precondition:

        None.


        ### Postcondition:

        List of attributes is returned.


        ### Further Information:


        ### Filtering:

        All filter fields are connected via logical conjunction (**AND**)  

        Filter string syntax: `FIELD_NAME:OPERATOR:VALUE[:VALUE...]`  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `key:cn:searchString_1|value:cn:searchString_2`  

        Filter by attribute key contains `searchString_1` **AND** attribute
        value contains `searchString_2`.


        </details>


        ### Filtering options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Filter Description | `OPERATOR` | Operator Description
        | `VALUE` |

        | :--- | :--- | :--- | :--- | :--- |

        | `key` | User attribute key filter | `cn, eq, sw` | Attribute key
        contains / equals / starts with value. | `search String` |

        | `value` | User attribute value filter | `cn, eq, sw` | Attribute value
        contains / equals / starts with value. | `search String` |


        </details>


        ---


        ### Sorting:

        Sort string syntax: `FIELD_NAME:ORDER`  

        `ORDER` can be `asc` or `desc`.  

        Multiple sort fields are supported.  


        <details style="padding-left: 10px">

        <summary style="cursor: pointer; outline:
        none"><strong>Example</strong></summary>


        `key:asc|value:desc`  

        Sort by `key` ascending **AND** by `value` descending.


        </details>


        ### Sorting options:

        <details style="padding: 10px; background-color: #F6F7F8; border: 1px
        solid #AAA; border-radius: 5px;">

        <summary style="cursor: pointer; outline:
        none"><strong>Expand</strong></summary>


        | `FIELD_NAME` | Description |

        | :--- | :--- |

        | `key` | User attribute key |

        | `value` | User attribute value |


        </details>
      operationId: requestUserAttributes
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Range offset
          format: int32
          in: query
          name: offset
          required: false
          type: integer
        - description: |-
            Range limit.

            Maximum 500.

             For more results please use paging (`offset` + `limit`).
          format: int32
          in: query
          name: limit
          required: false
          type: integer
        - description: Filter string
          in: query
          name: filter
          required: false
          type: string
        - description: Sort string
          in: query
          name: sort
          required: false
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AttributesResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Request custom user attributes
      tags:
        - users
    post:
      consumes:
        - application/json
      deprecated: true
      description: >-
        <h3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid
        #AAA; border-radius: 5px; display: table-cell;'>&#128679; Deprecated
        since v4.28.0</h3>


        ### Description:  

        Set custom user attributes.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        users</span> required.


        ### Postcondition:

        Custom user attributes are set.


        ### Further Information:

        Batch function.  

        All existing user attributes will be deleted.  


        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**.
      operationId: setUserAttributes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserAttributes'
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserData'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Set custom user attributes
      tags:
        - users
    put:
      consumes:
        - application/json
      description: >-
        ### Description:  

        Add or edit custom user attributes.

        <br/><br/><span style="font-weight: bold; color: red;"> &#128679;
        **Warning: Please note that the response with HTTP status code 200 (OK)
        is deprecated and will be replaced with HTTP status code 204 (No
        content)!**</span><br/>


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        users</span> required.


        ### Postcondition:

        Custom user attributes gets added or edited.


        ### Further Information:

        Batch function.  

        If an entry exists before, it will be overwritten.  


        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**.
      operationId: updateUserAttributes
      parameters:
        - description: >-
            Date time format (cf. [RFC
            3339](https://www.ietf.org/rfc/rfc3339.txt) &
            [leettime.de](http://leettime.de/))
          enum:
            - UTC
            - LOCAL
            - OFFSET
            - EPOCH
            - LEET
          in: header
          name: X-Sds-Date-Format
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UserAttributes'
      produces:
        - application/json
      responses:
        '200':
          description: 'OK **(DEPRECATED: WILL BE REPLACED BY 204: "No content")**'
          schema:
            $ref: '#/definitions/UserData'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Add or edit custom user attributes
      tags:
        - users
  '/v4/users/{user_id}/userAttributes/{key}':
    delete:
      description: >-
        ### Description:

        Delete custom user attribute.


        ### Precondition:

        Right <span style='padding: 3px; background-color: #F6F7F8; border: 1px
        solid #000; border-radius: 5px; display: inline;'>&#128275; change
        users</span> required.


        ### Postcondition:

        Custom user attribute is deleted.


        ### Further Information:

        * Allowed characters for keys are: `[a-zA-Z0-9_-]`  

        * Characters are **case-insensitive**.
      operationId: removeUserAttribute
      parameters:
        - description: User ID
          format: int64
          in: path
          name: user_id
          required: true
          type: integer
        - description: Key
          in: path
          name: key
          required: true
          type: string
        - description: Authentication token
          in: header
          name: X-Sds-Auth-Token
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '412':
          description: Precondition Failed
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Remove custom user attribute
      tags:
        - users
security:
  - oauth2: []
securityDefinitions:
  oauth2:
    authorizationUrl: /oauth/authorize
    flow: accessCode
    scopes:
      all: every operation is allowed
    tokenUrl: /oauth/token
    type: oauth2
swagger: '2.0'
tags:
  - description: System events log
    name: syslog
  - description: File download without authentication headers
    name: downloads
  - description: 'Public API (upload / download shares, software information)'
    name: public
  - description: Role user management
    name: roles
  - description: 'System settings (mail server, logging, branding, default values etc.)'
    name: system-settings-config
  - description: System settings (authentication methods)
    name: system-auth-config
  - description: User groups
    name: groups
  - description: 'File system objects (rooms, folders, files)'
    name: nodes
  - description: File upload without authentication headers
    name: uploads
  - description: Configuration
    name: config
  - description: System events log
    name: eventlog
  - description: User operations
    name: user
  - description: Client resources
    name: resources
  - description: Customer settings
    name: settings
  - description: Authentication
    name: auth
  - description: System settings (storage)
    name: system-storage-config
  - description: Provisioning
    name: provisioning
  - description: System settings (policies)
    name: system-policies-config
  - description: User management
    name: users
  - description: Upload and Download Shares
    name: shares
x-components: {}

