basePath: /
definitions:
  address:
    description: Slave address (primary or secondary)
    example: '48'
    format: string
    maxLength: 16
    minLength: 1
    type: string
  baudrate:
    description: >-
      Baudrate to use for the communication - valid values 300, 600, 1200, 2400,
      4800, 9600
    enum:
      - 300
      - 600
      - 1200
      - 2400
      - 4800
      - 9600
    example: 2400
    format: int32
    type: integer
  device:
    description: >-
      The device the M-Bus is connected to - /dev/ is prepended to {device} by
      M-Bus HTTPD
    example: ttyAMA0
    type: string
  hat:
    description: Raspberry Pi Hat Information
    example:
      addr: 30
      enabled: true
      index: 1
    properties:
      product:
        description: Product
        example: M-Bus Master
        type: string
      productId:
        description: Product ID
        example: 1
        type: string
      productVer:
        description: Product Version
        example: 2
        type: string
      uuid:
        description: Hat UUID
        example: 148fa981-a33b-a07a-a13f-a2405d08e0fe
        type: string
      vendor:
        description: Hat Vendor
        example: packom.net
        type: string
  maxframes:
    description: Max frames to listen for
    example: 16
    format: int32
    maximum: 250
    minimum: 1
    type: integer
  mbusData:
    description: M-Bus device data as an XML document
    example: <?xml version="1.0" encoding="UTF-8"?>...
    type: string
  slaves:
    description: Output of libmbus scan command
    example: Found a M-Bus device at address 1
    type: string
  textError:
    description: Some error text
    example: 'Device /dev/{device} does not exist'
    type: string
  yaml:
    description: A YAML file
    example: A YAML file
    type: string
host: mbus.local
info:
  title: M-Bus HTTPD API
  version: 0.3.5
  x-apisguru-categories:
    - iot
  x-origin:
    - format: openapi
      url: >-
        https://raw.githubusercontent.com/packom/mbus-api/master/api/openapi.yaml
      version: '3.0'
  x-providerName: mbus.local
paths:
  /mbus/api:
    get:
      description: Returns this API specification
      operationId: mbus_api
      parameters: []
      produces:
        - text/x-yaml
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/yaml'
        '404':
          description: Not found
          examples:
            text/plain: File not found
          schema:
            $ref: '#/definitions/textError'
  '/mbus/get/{device}/{baudrate}/{address}':
    post:
      description: 'Gets data from the slave identified by {address}'
      operationId: get
      parameters:
        - description: >-
            The serial device to scan - /dev/ is pre-pended to {device} by M-Bus
            HTTPD before scanning
          in: path
          name: device
          required: true
          type: string
          x-example: ttyAMA0
        - description: Baudrate to communicate with M-Bus devices
          enum:
            - 300
            - 600
            - 1200
            - 2400
            - 4800
            - 9600
          format: int32
          in: path
          name: baudrate
          required: true
          type: integer
          x-example: 2400
        - description: The slave device to get data from
          format: string
          in: path
          maxLength: 16
          minLength: 1
          name: address
          required: true
          type: string
          x-example: 48
      produces:
        - application/xml
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mbusData'
        '400':
          description: Bad request
          examples:
            text/plain: 'Baudrate {baudrate} is invalid'
          schema:
            $ref: '#/definitions/textError'
        '404':
          description: >-
            Not found (or M-Bus HTTPD is unauthorized to access it, or to change
            baud rate to that specified, etc)
          examples:
            text/plain: 'Slave {address} not responding'
          schema:
            $ref: '#/definitions/textError'
  '/mbus/getMulti/{device}/{baudrate}/{address}/{maxframes}':
    post:
      description: >-
        Gets data from the slave identified by {address}, and supports multiple
        responses from the slave
      operationId: getMulti
      parameters:
        - description: >-
            The serial device to scan - /dev/ is pre-pended to {device} by M-Bus
            HTTPD before scanning
          in: path
          name: device
          required: true
          type: string
          x-example: ttyAMA0
        - description: Baudrate to communicate with M-Bus devices
          enum:
            - 300
            - 600
            - 1200
            - 2400
            - 4800
            - 9600
          format: int32
          in: path
          name: baudrate
          required: true
          type: integer
          x-example: 2400
        - description: The slave device to get data from
          format: string
          in: path
          maxLength: 16
          minLength: 1
          name: address
          required: true
          type: string
          x-example: 48
        - description: The slave device to get data from
          format: int32
          in: path
          maximum: 250
          minimum: 1
          name: maxframes
          required: true
          type: integer
          x-example: 16
      produces:
        - application/xml
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mbusData'
        '400':
          description: Bad request
          examples:
            text/plain: 'Baudrate {baudrate} is invalid'
          schema:
            $ref: '#/definitions/textError'
        '404':
          description: >-
            Not found (or M-Bus HTTPD is unauthorized to access it, or to change
            baud rate to that specified, etc)
          examples:
            text/plain: 'Slave {address} not responding'
          schema:
            $ref: '#/definitions/textError'
  /mbus/hat:
    get:
      description: Gets Raspberry Pi Hat information
      operationId: hat
      parameters: []
      produces:
        - application/json
        - text/plain
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/hat'
        '404':
          description: Not found
          examples:
            text/plain: Hat information not found
          schema:
            $ref: '#/definitions/textError'
  /mbus/hat/off:
    post:
      description: Turns off power to the M-Bus
      operationId: hatOff
      parameters: []
      produces:
        - text/plain
      responses:
        '200':
          description: OK
        '404':
          description: Not found
          examples:
            text/plain: M-Bus Master Hat not installed
          schema:
            $ref: '#/definitions/textError'
  /mbus/hat/on:
    post:
      description: Turns on power to the M-Bus
      operationId: hatOn
      parameters: []
      produces:
        - text/plain
      responses:
        '200':
          description: OK
        '404':
          description: Not found
          examples:
            text/plain: M-Bus Master Hat not installed
          schema:
            $ref: '#/definitions/textError'
  '/mbus/scan/{device}/{baudrate}':
    post:
      description: Scan the specified device for slaves
      operationId: scan
      parameters:
        - description: >-
            The serial device to scan - /dev/ is pre-pended to {device} by M-Bus
            HTTPD before scanning
          in: path
          name: device
          required: true
          type: string
          x-example: ttyAMA0
        - description: Baudrate to communicate with M-Bus devices
          enum:
            - 300
            - 600
            - 1200
            - 2400
            - 4800
            - 9600
          format: int32
          in: path
          name: baudrate
          required: true
          type: integer
          x-example: 2400
      produces:
        - text/plain
      responses:
        '200':
          description: OK
          examples:
            text/plain: Found a M-Bus device at address 1
          schema:
            $ref: '#/definitions/slaves'
        '400':
          description: Bad request
          examples:
            text/plain: 'Baudrate {baudrate} is invalid'
          schema:
            $ref: '#/definitions/textError'
        '404':
          description: >-
            Not found (e.g. device not found, or M-Bus HTTPD is unauthorized to
            access it, or to change baud rate to that specified, device not
            responding etc)
          examples:
            text/plain: 'Device /dev/{device} does not exist'
          schema:
            $ref: '#/definitions/textError'
schemes:
  - http
swagger: '2.0'
x-components: {}

